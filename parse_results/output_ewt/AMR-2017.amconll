#raw:They are setting the road blocks at the exact same positions they were during the war last year, which indicates they are the same people .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.061676025390625
#k-supertags:6
1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
2	are	_	be	VBP	O	_	person	_	0	IGNORE	True
3	setting	_	set	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
4	the	_	the	DT	O	_	and	_	0	IGNORE	True
5	road	_	road	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	blocks	_	block	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	True
7	at	_	at	IN	O	_	thing	_	0	IGNORE	True
8	the	_	the	DT	O	_	thing	_	0	IGNORE	True
9	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	True
11	positions	_	position	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	True
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
14	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	True
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
16	war	_	war	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
17	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
18	year,	_	year,	NNS	O	_	$LEMMA$	_	0	IGNORE	True
19	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	True
20	indicates	_	indicate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	MOD_s	True
21	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
22	are	_	be	VBP	O	_	person	_	0	IGNORE	True
23	the	_	the	DT	O	_	person	_	0	IGNORE	True
24	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	True
25	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	20	APP_o	True
26	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:As a child in the 50's I had a lot of glandular problems and they treated it with radiation therapy (primitive at best!) and stopped when a lesion on my neck started enlarging--they said it was not CA but stopped the treatments... .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:1.6384916305541992
#k-supertags:6
1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	True
2	a	_	a	DT	O	_	1	_	0	IGNORE	True
3	child	_	child	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
4	in	_	in	IN	O	_	i	_	0	IGNORE	True
5	the_50's	_name_	50'	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	True
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	23	APP_s	True
7	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	23	APP_op1	True
8	a	_	a	DT	O	_	1	_	0	IGNORE	True
9	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
10	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
11	glandular	_	glandular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
12	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	23	MOD_op1	True
14	they	_	they	PRP	O	_	$LEMMA$	_	23	IGNORE	True
15	treated	_	treat	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	23	APP_op2	True
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	with	_	with	IN	O	_	-	_	0	IGNORE	True
18	radiation	_	radiation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
19	therapy	_	therapy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	True
20	(primitive	_	(primitive	.	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o2	True
21	at	_	at	IN	O	_	i	_	0	IGNORE	True
22	best!)	_	best!)	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(o(), s())	23	MOD_s	True
23	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op1(s()), op2(s()), op3(s()))	0	ROOT	True
24	stopped	_	stop	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op3	True
25	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	True
26	a	_	a	DT	O	_	thing	_	0	IGNORE	True
27	lesion	_	lesion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
28	on	_	on	IN	O	_	cause-01	_	0	IGNORE	True
29	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
30	neck	_	neck	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
31	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	True
32	enlarging--they	_	enlarging--they	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	33	APP_s	True
33	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	38	APP_s	True
34	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
35	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
36	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	True
37	CA	_name_	CA	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_o	True
38	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	22	APP_o	True
39	stopped	_	stop	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_o	True
40	the	_	the	DT	O	_	and	_	0	IGNORE	True
41	treatments...	_	treatments...	XX	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$	(mod())	33	MOD_mod	True
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:By the time it was over, Bush had served nearly two years .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.009827852249145508
#k-supertags:6
1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	True
2	the	_	the	DT	O	_	he	_	0	IGNORE	True
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	True
5	was	_	be	VBD	O	_	person	_	0	IGNORE	True
6	over,	_	over,	NNP	O	_	-	_	0	IGNORE	True
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	True
8	had	_	have	VBD	O	_	1	_	0	IGNORE	True
9	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
10	nearly_two_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	True
11	.	_	.	.	O	_	date-interval	_	0	IGNORE	True

#raw:Both have shared this country for the last 14 centuries and there is no possible way that one can live without the other .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.10848832130432129
#k-supertags:6
1	Both	both	both	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
2	have	_	have	VBP	O	(d<root> / --LEX--)	person	()	8	APP_op3	True
3	shared	_	share	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	APP_op1	True
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
6	for	_	for	IN	O	_	and	_	0	IGNORE	True
7	the_last_14_centuries	_name_	century	NNS	O	(p2<root> / person  :name (n / --LEX--)  :beneficiary-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op1(), op2(), op3())	0	ROOT	True
9	there	_	there	EX	O	_	cause-01	_	0	IGNORE	True
10	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	True
11	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	True
12	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	True
13	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	8	APP_op2	True
14	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
15	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	True
16	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_mod	True
17	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_s	True
18	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	True
19	the	_	the	DT	O	_	person	_	0	IGNORE	True
20	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
21	.	_	.	.	O	_	person	_	0	IGNORE	True

#raw:I doubt he will be extradited to Venezuela, which is the only way that question could be answered with a Yes .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.024698495864868164
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	doubt	_	doubt	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
4	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	True
5	be	_	be	VB	O	_	person	_	0	IGNORE	True
6	extradited	_	extradite	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	2	APP_o	True
7	to	_	to	IN	O	_	person	_	0	IGNORE	True
8	Venezuela,	_name_	Venezuela,	NFP	O	_	_NAME_	_	0	IGNORE	True
9	which	_	which	WDT	O	_	i	_	0	IGNORE	True
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
11	the	_	the	DT	O	_	thing	_	0	IGNORE	True
12	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_o	True
14	that	_	that	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	True
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_mod	True
17	be	_	be	VB	O	_	thing	_	0	IGNORE	True
18	answered	_	answer	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	16	APP_s	True
19	with	_	with	IN	O	_	-	_	0	IGNORE	True
20	a	_	a	DT	O	_	thing	_	0	IGNORE	True
21	Yes	yes	yes	UH	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
22	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:Now that's a post I can relate to .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.010761737823486328
#k-supertags:6
1	Now	now	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
2	that's	_	that's	IN	O	_	say-01	_	0	IGNORE	True
3	a	_	a	DT	O	_	expressive	_	0	IGNORE	True
4	post	_	post	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	0	ROOT	True
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	True
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	True
7	relate	_	relate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	4	MOD_o	True
8	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
9	.	_	.	.	O	_	i	_	0	IGNORE	True

#raw:Correspondents who flocked in to cover the tsunami found they also had another story - the miserable security situation surrounding the Indian navy's Far Eastern Naval Command, now being established along with India's "blue water navy" .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1667494773864746
#k-supertags:6
1	Correspondents	correspondents	correspondent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	True
3	flocked	_	flock	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	True
4	in	_	in	RP	O	_	cause-01	_	0	IGNORE	True
5	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	True
6	cover	_	cover	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-03	(mod(), o(), s())	3	MOD_mod	True
7	the	_	the	DT	O	_	person	_	0	IGNORE	True
8	tsunami	_	tsunami	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	True
9	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
10	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(o(), s())	9	MOD_s	True
11	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	9	APP_o	True
13	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
14	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	True
15	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	True
16	the	_	the	DT	O	_	and	_	0	IGNORE	True
17	miserable	_	miserable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
18	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
19	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
20	surrounding	_	surround	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	True
21	the	_	the	DT	O	_	name	_	0	IGNORE	True
22	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	23	MOD_mod	True
23	navy's	_	navy's	.	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	9	MOD_mod	True
24	Far_Eastern_Naval_Command,	_name_	Command,	NFP	O	_	name	_	0	IGNORE	True
25	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
26	being	_	be	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	9	MOD_s	True
27	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	True
28	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	True
29	with	_	with	IN	O	_	-	_	0	IGNORE	True
30	India's	_name_	India's	NNP	O	_	_NAME_	_	0	IGNORE	True
31	"blue	_	"blue	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	32	MOD_mod	True
32	water	_	water	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	True
33	navy"	_	navy"	ADD	O	_	and	_	0	IGNORE	True
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:‘’It was the first time that Bush totally focused on the Taliban threat rather than Al Qaeda with the Pakistanis,’’ says a Western diplomat .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.17821383476257324
#k-supertags:6
1	‘’It	_name_	‘’It	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	True
2	was	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-temporally-at-91	(mod())	20	MOD_mod	True
3	the	_	the	DT	O	_	he	_	0	IGNORE	True
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	1	MOD_mod	True
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
6	that	_	that	WDT	O	_	name	_	0	IGNORE	True
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	True
8	totally	_	totally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	total	(mod())	9	MOD_mod	True
9	focused	_	focus	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	20	APP_o	True
10	on	_	on	IN	O	_	name	_	0	IGNORE	True
11	the	_	the	DT	O	_	name	_	0	IGNORE	True
12	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	13	APP_s	True
13	threat	_	threat	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$en-01	(s())	9	APP_o	True
14	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(o(), s())	9	MOD_s	True
15	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	True
16	Al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	14	APP_o	True
17	with	_	with	IN	O	_	-	_	0	IGNORE	True
18	the	_	the	DT	O	_	person	_	0	IGNORE	True
19	Pakistanis,’’	pakistanis,’’	Pakistanis,’’	NNP	O	(n2<root> / --LEX--  :name-of (c2 / country  :mod-of (i<mod>)))	_NAME_	(mod())	9	MOD_mod	True
20	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
21	a	_	a	DT	O	_	1	_	0	IGNORE	True
22	Western	western	western	JJ	O	(n2<root> / --LEX--  :name-of (w2 / world-region  :mod-of (w<mod>)))	_NAME_	(mod())	23	MOD_mod	True
23	diplomat	_	diplomat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
24	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:His explosive temper probably provoked the disastrous siege of Fallujah last spring, killing 600 Iraqis, most of them women and children, in revenge for the deaths of 4 civilian mercenaries, one of them a South African .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.17297697067260742
#k-supertags:6
1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
2	explosive	_	explosive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	temper	_	temper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
4	probably	_	probably	RB	O	(r<root> / --LEX--  :domain (q<dom>))	probable	(dom())	0	ROOT	True
5	provoked	_	provoke	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	4	APP_dom	True
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
7	disastrous	_	disastrous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	siege	_	siege	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	True
9	of	_	of	IN	O	_	-1	_	0	IGNORE	True
10	Fallujah	_name_	Fallujah	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	8	APP_s	True
11	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
12	spring,	_	spring,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(o(), s())	4	MOD_s	True
13	killing	_	kill	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	True
14	600	_	600	CD	O	(d<root> / --LEX--)	_NUMBER_	()	13	APP_s	True
15	Iraqis,	iraqis,	iraqis,	CD	O	_	include-91	_	0	IGNORE	True
16	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	28	MOD_s	True
18	them	_	they	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	4	MOD_mod	True
19	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	True
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	4	MOD_op1	True
21	children,	_	children,	NNP	O	_	person	_	0	IGNORE	True
22	in	_	in	IN	O	_	cause-01	_	0	IGNORE	True
23	revenge	_	revenge	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	5	MOD_mod	True
24	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
25	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
26	deaths	_	death	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	die-01	(s())	23	APP_s	True
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
28	4	_	4	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	29	MOD_mod	True
29	civilian	_	civilian	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	True
30	mercenaries,	_	mercenaries,	NNS	O	_	include-91	_	0	IGNORE	True
31	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	4	MOD_mod	True
32	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	12	MOD_o	True
33	them	_	they	PRP	O	_	person	_	0	IGNORE	True
34	a_South_African	_name_	African	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	28	MOD_mod	True
35	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:GOODWYN: The candidate Mr. Bush was working for, Red Blount, had gotten rich in Alabama in the construction business .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.016007661819458008
#k-supertags:6
1	GOODWYN:	_name_	goodwyn:	ADD	O	_	have-org-role-91	_	0	IGNORE	True
2	The	the	the	DT	O	_	have-org-role-91	_	0	IGNORE	True
3	candidate	_	candidate	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	MOD_s	True
4	Mr.	mr.	Mr.	NNP	O	_	have-org-role-91	_	0	IGNORE	True
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	True
6	was	_	be	VBD	O	_	person	_	0	IGNORE	True
7	working	_	work	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	3	MOD_o	True
8	for,	_	for,	NN	O	_	have-org-role-91	_	0	IGNORE	True
9	Red_Blount,	_name_	Blount,	NNS	O	_	_NAME_	_	0	IGNORE	True
10	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	True
11	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(o(), s())	0	ROOT	True
12	rich	_	rich	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	True
13	in	_	in	IN	O	_	cause-01	_	0	IGNORE	True
14	Alabama	_name_	Alabama	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	12	MOD_mod	True
15	in	_	in	IN	O	_	i	_	0	IGNORE	True
16	the	_	the	DT	O	(d<root> / --LEX--)	person	()	11	APP_s	True
17	construction	_	construction	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	construct-01	(mod())	18	MOD_mod	True
18	business	_	business	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Then, of course, there is the evidence the jury did not hear about in the Robinson case.. .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.022090435028076172
#k-supertags:6
1	Then,	then,	Then,	NNP	O	_	expressive	_	0	IGNORE	True
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
3	course,	_	course,	NNP	O	_	and	_	0	IGNORE	True
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	True
5	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
6	the	_	the	DT	O	_	person	_	0	IGNORE	True
7	evidence	_	evidence	NN	O	(t<root> / thing  :ARG0-of (a / --LEX--))	$LEMMA$-01	()	0	ROOT	True
8	the	_	the	DT	O	_	person	_	0	IGNORE	True
9	jury	_	jury	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
10	did	_	do	VBD	O	_	person	_	0	IGNORE	True
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	True
12	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	7	MOD_o	True
13	about	_	about	RP	O	_	name	_	0	IGNORE	True
14	in	_	in	IN	O	_	i	_	0	IGNORE	True
15	the	_	the	DT	O	_	person	_	0	IGNORE	True
16	Robinson	_name_	Robinson	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	True
17	case..	_	case..	NN	O	_	$LEMMA$	_	0	IGNORE	True
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:A country deserves the leaders it has, my friends.. .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.02440357208251953
#k-supertags:6
1	A	a	a	DT	O	_	person	_	0	IGNORE	True
2	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
3	deserves	_	deserve	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
4	the	_	the	DT	O	_	person	_	0	IGNORE	True
5	leaders	_	leader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	3	APP_o	True
6	it	_	it	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	3	MOD_s	True
7	has,	_	has,	VBD	O	_	i	_	0	IGNORE	True
8	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	9	APP_s	True
9	friends..	_	friends..	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	i	(o(), s())	5	MOD_o	True
10	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Though ''decided'' is probably not the right word, since from the day they were born, these girls and boys were not taught to think for themselves but to blindly follow their leaders .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0787816047668457
#k-supertags:6
1	Though	though	though	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	have-concession-91	(s())	0	ROOT	True
2	''decided''	_	''decided''	CD	O	_	have-concession-91	_	0	IGNORE	True
3	is	_	be	VBZ	O	_	have-concession-91	_	0	IGNORE	True
4	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	9	MOD_mod	True
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	True
6	the	_	the	DT	O	_	-	_	0	IGNORE	True
7	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	4	MOD_s	True
8	word,	_	word,	NNS	O	_	have-concession-91	_	0	IGNORE	True
9	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	10	APP_op1	True
10	from	_	from	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	1	MOD_mod	True
11	the_day	_name_	day	NN	O	(e<root> / event  :name (n / --LEX--))	$LEMMA$	()	9	APP_s	True
12	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	True
13	were	_	be	VBD	O	_	person	_	0	IGNORE	True
14	born,	_	born,	NNP	O	_	-	_	0	IGNORE	True
15	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	17	MOD_mod	True
16	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	True
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	21	APP_o	True
18	boys	_	boy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	True
19	were	_	be	VBD	O	_	person	_	0	IGNORE	True
20	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	True
21	taught	_	teach	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	9	APP_o	True
22	to	_	to	TO	O	_	thing	_	0	IGNORE	True
23	think	_	think	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	True
24	for	_	for	IN	O	_	by-oneself	_	0	IGNORE	True
25	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	True
26	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	21	APP_s	True
27	to	_	to	TO	O	_	except-01	_	0	IGNORE	True
28	blindly	_	blindly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	blind	(mod())	29	MOD_mod	True
29	follow	_	follow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	APP_o	True
30	their	_	they	PRP$	O	_	person	_	0	IGNORE	True
31	leaders	_	leader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	29	APP_s	True
32	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:The answer is likely D: all of the above, due to this being a complex reality we live in .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03284859657287598
#k-supertags:6
1	The	the	the	DT	O	_	say-01	_	0	IGNORE	True
2	answer	_	answer	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	True
3	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	True
4	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
5	D:	d:	d:	NN	O	_	-	_	0	IGNORE	True
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
8	the	_	the	DT	O	_	thing	_	0	IGNORE	True
9	above,	_	above,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(o(), s())	4	MOD_o	True
10	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	4	MOD_o	True
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
12	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_dom	True
13	being	_	be	VBG	O	_	person	_	0	IGNORE	True
14	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	True
15	complex	_	complex	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	reality	_	reality	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_s	True
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
18	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	16	MOD_o	True
19	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:But the norms of politics and diplomacy are childish, in comparison with the level of incitement and total absolute deliberate fabrications, which have reached new heights in the region we are talking about .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07673931121826172
#k-supertags:6
1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	True
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
3	norms	_	norm	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_s	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	politics	_	politic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	True
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	3	APP_s	True
7	diplomacy	_	diplomacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	True
8	are	_	be	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(o(), s())	1	APP_o	True
9	childish,	_	childish,	NNS	O	_	and	_	0	IGNORE	True
10	in	_	in	IN	O	_	cause-01	_	0	IGNORE	True
11	comparison	_	comparison	NN	O	_	$LEMMA$-01	_	0	IGNORE	True
12	with	_	with	IN	O	_	-	_	0	IGNORE	True
13	the	_	the	DT	O	_	and	_	0	IGNORE	True
14	level	_	level	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	APP_o	True
15	of	_	of	IN	O	_	and	_	0	IGNORE	True
16	incitement	_	incitement	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	True
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	14	APP_mod	True
18	total	_	total	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
19	absolute	_	absolute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
20	deliberate	_	deliberate	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	True
21	fabrications,	_	fabrications,	NNS	O	_	interrogative	_	0	IGNORE	True
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	True
23	have	_	have	VBP	O	_	person	_	0	IGNORE	True
24	reached	_	reach	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	17	MOD_s	True
25	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	True
26	heights	_	height	NNS	O	(d<root> / --LEX--)	high-02	()	24	APP_o	True
27	in	_	in	IN	O	_	i	_	0	IGNORE	True
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
29	region	_	region	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
30	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	True
31	are	_	be	VBP	O	_	person	_	0	IGNORE	True
32	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	29	MOD_o	True
33	about	_	about	IN	O	_	-	_	0	IGNORE	True
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:In the same way that no country has a law against cannibals eating its prime minister, because such an act is unthinkable, international law does not address killers shooting from hospitals, mosques and ambulances, while being protected by their Government or society .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.4531416893005371
#k-supertags:6
1	In	in	in	IN	O	_	resemble-01	_	0	IGNORE	True
2	the	_	the	DT	O	_	person	_	0	IGNORE	True
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	True
4	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
5	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	True
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	True
7	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
8	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	4	MOD_s	True
9	a	_	a	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
10	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
11	against	_	against	IN	O	_	-	_	0	IGNORE	True
12	cannibals	_	cannibal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
13	eating	_	eat	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), o(), s())	10	MOD_mod	True
14	its	_	its	PRP$	O	_	it	_	0	IGNORE	True
15	prime	_	prime	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
16	minister,	_	minister,	NNP	O	_	$LEMMA$	_	0	IGNORE	True
17	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	8	MOD_o	True
18	such	_	such	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
19	an	_	an	DT	O	_	person	_	0	IGNORE	True
20	act	_	act	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	27	APP_o2	True
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
22	unthinkable,	_	unthinkable,	JJ	O	_	-	_	0	IGNORE	True
23	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
24	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	True
25	does	_	do	VBZ	O	_	person	_	0	IGNORE	True
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	True
27	address	_	address	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o(), o2(), s())	0	ROOT	True
28	killers	_	killer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	29	APP_s	True
29	shooting	_	shoot	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	shoot-02	(s())	27	APP_o	True
30	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	True
31	hospitals,	_	hospitals,	NNS	O	_	have-org-role-91	_	0	IGNORE	True
32	mosques	_	mosque	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	True
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	29	MOD_op1	True
34	ambulances,	_	ambulances,	NNS	O	_	and	_	0	IGNORE	True
35	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	True
36	being	_	be	VBG	O	_	person	_	0	IGNORE	True
37	protected	_	protect	VBN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	True
38	by	_	by	IN	O	_	person	_	0	IGNORE	True
39	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
40	Government	government	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	41	APP_op1	True
41	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	37	APP_s	True
42	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_op2	True
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:On the other hand, a certain transition democracy, as in Jordan, may be a better temporary solution, paving the way for the real thing, perhaps in the same way that an immediate sudden democracy did not work in Russia and would not have worked in China .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0553746223449707
#k-supertags:6
1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
3	other	_	other	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
4	hand,	_	hand,	NNS	O	_	and	_	0	IGNORE	True
5	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	True
6	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
7	transition	_	transition	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	True
8	democracy,	_	democracy,	NNP	O	_	mean-01	_	0	IGNORE	True
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
10	in	_	in	IN	O	_	resemble-01	_	0	IGNORE	True
11	Jordan,	_name_	jordan,	CD	O	_	_NAME_	_	0	IGNORE	True
12	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	True
13	be	_	be	VB	O	_	person	_	0	IGNORE	True
14	a	_	a	DT	O	_	thing	_	0	IGNORE	True
15	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	16	MOD_s	True
16	temporary	_	temporary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
17	solution,	_	solution,	NNS	O	_	and	_	0	IGNORE	True
18	paving	_	pave	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	True
19	the	_	the	DT	O	_	thing	_	0	IGNORE	True
20	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
21	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	True
22	the	_	the	DT	O	_	thing	_	0	IGNORE	True
23	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	20	MOD_s	True
24	thing,	_	thing,	NNPS	O	_	thing	_	0	IGNORE	True
25	perhaps	_	perhaps	RB	O	_	possible-01	_	0	IGNORE	True
26	in	_	in	IN	O	_	resemble-01	_	0	IGNORE	True
27	the	_	the	DT	O	_	thing	_	0	IGNORE	True
28	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	True
29	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	3	APP_s	True
30	that	_	that	WDT	O	_	resemble-01	_	0	IGNORE	True
31	an	_	an	DT	O	_	1	_	0	IGNORE	True
32	immediate	_	immediate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	True
33	sudden	_	sudden	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	True
34	democracy	_	democracy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	True
35	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	True
36	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	True
37	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	40	APP_op1	True
38	in	_	in	IN	O	_	cause-01	_	0	IGNORE	True
39	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	37	MOD_mod	True
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	29	APP_mod	True
41	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	True
42	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	44	MOD_mod	True
43	have	_	have	VB	O	_	thing	_	0	IGNORE	True
44	worked	_	work	VBN	O	(d<root> / --LEX--)	$LEMMA$-09	()	40	APP_op2	True
45	in	_	in	IN	O	_	i	_	0	IGNORE	True
46	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	44	MOD_mod	True
47	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:According to Director of Central Intelligence George Tenet, al Qaeda’s ability to conduct an anthrax attack is one of the most immediate threats the United States is likely to face. "
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03138089179992676
#k-supertags:6
1	According	according	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	say-01	(s())	0	ROOT	True
2	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
3	Director	director	Director	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	6	MOD_s	True
4	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	True
5	Central_Intelligence_George_Tenet,	_name_	Tenet,	NNP	O	_	_NAME_	_	0	IGNORE	True
6	al	_	al	NNP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_s	True
7	Qaeda’s	qaeda’s	Qaeda’s	NNP	O	_	-	_	0	IGNORE	True
8	ability	_	ability	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	capable-01	(o(s()))	16	APP_s	True
9	to	_	to	TO	O	_	name	_	0	IGNORE	True
10	conduct	_	conduct	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	APP_o	True
11	an	_	an	DT	O	_	1	_	0	IGNORE	True
12	anthrax	_	anthrax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_s	True
13	attack	_	attack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	True
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
15	one	_	one	CD	O	_	1	_	0	IGNORE	True
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	1	APP_s	True
17	the	_	the	DT	O	_	include-91	_	0	IGNORE	True
18	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
19	immediate	_	immediate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
20	threats	_	threat	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$en-01	(s())	16	APP_o	True
21	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_s	True
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
23	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	True
24	to	_	to	TO	O	_	thing	_	0	IGNORE	True
25	face.	_	face.	VB	O	_	$LEMMA$-01	_	0	IGNORE	True
26	"	_	"	''	O	_	$LEMMA$-01	_	0	IGNORE	True

#raw:That was the last Ismat heard from her .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07137513160705566
#k-supertags:6
1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	True
2	was	_	be	VBD	O	_	person	_	0	IGNORE	True
3	the	_	the	DT	O	_	-1	_	0	IGNORE	True
4	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
5	Ismat	_name_	Ismat	NNP	O	(d<root> / --LEX--)	_NAME_	()	6	APP_s	True
6	heard	_	hear	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
7	from	_	from	IN	O	_	thing	_	0	IGNORE	True
8	her	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	True
9	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:The media coverage has been seriously confused on the issue of motive and the reason Senators Daschle and Leahy would have been targeted -- tending to simplistically view them as "liberals. "
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08890390396118164
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	media	_	medium	NNS	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
3	coverage	_	coverage	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cover-03	(s())	7	APP_s	True
4	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	True
5	been	_	be	VBN	O	_	cause-01	_	0	IGNORE	True
6	seriously	_	seriously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	serious-02	(s())	7	MOD_s	True
7	confused	_	confused	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	on	_	on	IN	O	_	and	_	0	IGNORE	True
9	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
10	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	13	APP_op1	True
11	of	_	of	IN	O	_	thing	_	0	IGNORE	True
12	motive	_	motive	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	7	APP_o	True
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
15	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	13	APP_op2	True
16	Senators	senators	Senators	NNPS	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$REPL$	(s())	18	MOD_s	True
17	Daschle	_name_	Daschle	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_op1	True
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	23	APP_s	True
19	Leahy	_name_	Leahy	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_op2	True
20	would	_	would	MD	O	_	have-org-role-91	_	0	IGNORE	True
21	have	_	have	VB	O	_	person	_	0	IGNORE	True
22	been	_	be	VBN	O	_	person	_	0	IGNORE	True
23	targeted	_	target	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	True
24	--	_	--	:	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	7	MOD_s	True
25	tending	_	tend	VBG	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	24	MOD_s	True
26	to	_	to	TO	O	_	thing	_	0	IGNORE	True
27	simplistically	_	simplistically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	public-02	(mod())	28	MOD_mod	True
28	view	_	view	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	25	APP_o	True
29	them	_	they	PRP	O	_	person	_	0	IGNORE	True
30	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
31	"liberals.	_	"liberals.	XX	O	_	_NAME_	_	0	IGNORE	True
32	"	_	"	''	O	_	-	_	0	IGNORE	True

#raw:The anthrax letters were sent on the date of the Camp David Accord and then the date Anwar Sadat was assassinated as if to underscore the point to anyone paying attention .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03798317909240723
#k-supertags:6
1	The	the	the	DT	O	_	nucleus	_	0	IGNORE	True
2	anthrax	_	anthrax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	letters	_	letter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
4	were	_	be	VBD	O	_	person	_	0	IGNORE	True
5	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
6	on	_	on	IN	O	_	thing	_	0	IGNORE	True
7	the	_	the	DT	O	_	thing	_	0	IGNORE	True
8	date	_	date	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
9	of	_	of	IN	O	_	name	_	0	IGNORE	True
10	the_Camp_David_Accord	_name_	Accord	NNP	O	(n3<root> / --LEX--  :name-of (e / event  :time-of (l<mod>)))	_NAME_	(mod())	8	MOD_mod	True
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	5	MOD_op1	True
12	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
13	the	_	the	DT	O	_	date-entity	_	0	IGNORE	True
14	date	_	date	NN	O	_	$LEMMA$	_	0	IGNORE	True
15	Anwar_Sadat	_name_	Sadat	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_s	True
16	was	_	be	VBD	O	_	person	_	0	IGNORE	True
17	assassinated	_	assassinate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	True
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
19	if	_	if	IN	O	_	cause-01	_	0	IGNORE	True
20	to	_	to	TO	O	_	concern-02	_	0	IGNORE	True
21	underscore	_	underscore	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	17	MOD_mod	True
22	the	_	the	DT	O	_	person	_	0	IGNORE	True
23	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	True
24	to	_	to	IN	O	_	and	_	0	IGNORE	True
25	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	True
26	paying	_	pay	VBG	O	_	$LEMMA$-01	_	0	IGNORE	True
27	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	attend-02	(s())	25	MOD_s	True
28	.	_	.	.	O	_	person	_	0	IGNORE	True

#raw:Also I am still thinking about the Matisse we discussed before but as you can see, I have a lot of other artists I am interested in and it may remain on the back burner because we already have one .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.11014008522033691
#k-supertags:6
1	Also	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
3	am	_	be	VBP	O	_	person	_	0	IGNORE	True
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	APP_s	True
6	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	True
7	the	_	the	DT	O	_	and	_	0	IGNORE	True
8	Matisse	_name_	Matisse	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_o	True
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
10	discussed	_	discuss	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	MOD_o	True
11	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	possible-01	(mod(), s())	12	MOD_mod	True
16	see,	_	see,	XX	O	_	and	_	0	IGNORE	True
17	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
18	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	28	APP_op1	True
19	a	_	a	DT	O	_	thing	_	0	IGNORE	True
20	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
22	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
23	artists	_	artist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	True
24	I	i	I	PRP	O	_	person	_	0	IGNORE	True
25	am	_	be	VBP	O	_	person	_	0	IGNORE	True
26	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	23	MOD_s	True
27	in	_	in	IN	O	_	include-91	_	0	IGNORE	True
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	12	APP_o	True
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
30	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	APP_op2	True
31	remain	_	remain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_s	True
32	on	_	on	IN	O	_	cause-01	_	0	IGNORE	True
33	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
34	back	_	back	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	True
35	burner	_	burner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
36	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	31	MOD_o	True
37	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
38	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	39	MOD_mod	True
39	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	36	APP_s	True
40	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	True
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I don't believe that we are quite at the point that we can say that all business controllers worldwide have reviewed, understand and have implemented these standards .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1237034797668457
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
2	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	True
3	believe	_	believe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
4	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	True
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
6	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
7	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
8	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	the	_	the	DT	O	_	thing	_	0	IGNORE	True
10	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	True
14	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	13	APP_s	True
15	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
17	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
18	controllers	_	controller	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	23	APP_s	True
19	worldwide	_	worldwide	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
20	have	_	have	VBP	O	_	person	_	0	IGNORE	True
21	reviewed,	_	reviewed,	VBN	O	_	and	_	0	IGNORE	True
22	understand	_	understand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_op1	True
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	14	APP_o	True
24	have	_	have	VBP	O	_	person	_	0	IGNORE	True
25	implemented	_	implement	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	23	APP_op2	True
26	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	27	MOD_mod	True
27	standards	_	standard	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	True
28	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:This means that I could be away from the office for several days and miss a message entirely, because it would have expired and disappeared by the time I returned .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.09504914283752441
#k-supertags:6
1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_op1	True
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	True
6	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(o(), s())	2	MOD_s	True
7	away	_	away	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	6	APP_o	True
8	from	_	from	IN	O	_	-	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	True
11	for	_	for	IN	O	_	or	_	0	IGNORE	True
12	several_days	_name_	day	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	5	APP_s	True
14	miss	_	miss	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_op2	True
15	a	_	a	DT	O	_	1	_	0	IGNORE	True
16	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
17	entirely,	_	entirely,	.	O	_	$LEMMA$	_	0	IGNORE	True
18	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	14	MOD_o	True
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	would	_	would	MD	O	_	thing	_	0	IGNORE	True
21	have	_	have	VB	O	_	cause-01	_	0	IGNORE	True
22	expired	_	expire	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op1	True
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	18	APP_s	True
24	disappeared	_	disappear	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op2	True
25	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	2	MOD_mod	True
26	the	_	the	DT	O	_	thing	_	0	IGNORE	True
27	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
28	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
29	returned	_	return	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op1	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Please find enclosed EES's request for Volumes for PGE CityGate delvery effective 11/1/01 :
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.06452560424804688
#k-supertags:6
1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	True
2	find	_	find	VB	O	(u<root> / --LEX--  :ARG0 (y / you)  :ARG1 (s<s>))	$LEMMA$-01	(s())	0	ROOT	True
3	enclosed	_	enclose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	True
4	EES's	_name_	ees'	NNS	O	(d<root> / --LEX--)	_NAME_	()	5	APP_s	True
5	request	_	request	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	2	APP_s	True
6	for	_	for	IN	O	_	and	_	0	IGNORE	True
7	Volumes_for_PGE_CityGate	_name_	CityGate	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	True
8	delvery	_	delvery	FW	O	(p<root> / publication  :name (n / --LEX--))	_NAME_	()	5	APP_o	True
9	effective	_	effective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
10	11/1/01	_	11/1/01	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	True
11	:	_	:	:	O	_	say-01	_	0	IGNORE	True

#raw:"Calculation of Floating Amount: The Floating Amount payable by [ENA] on a Payment Date will be calculated for that Payment Date as follows :
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.027588605880737305
#k-supertags:6
1	"Calculation	"calculation	"calculation	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	precise	(s())	11	APP_s	True
2	of	_	of	IN	O	_	vice	_	0	IGNORE	True
3	Floating_Amount:_The_Floating_Amount	_name_	amount	NN	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	True
4	payable	_	payable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	represent-01	(o(), s())	1	MOD_o	True
5	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	True
6	[ENA]	_name_	[ena]	XX	O	_	thing	_	0	IGNORE	True
7	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
8	a_Payment_Date	_name_	Date	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	1	MOD_mod	True
9	will	_	will	MD	O	_	person	_	0	IGNORE	True
10	be	_	be	VB	O	_	person	_	0	IGNORE	True
11	calculated	_	calculate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
12	for	_	for	IN	O	_	thing	_	0	IGNORE	True
13	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
14	Payment	payment	Payment	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	pay-01	(mod())	15	MOD_mod	True
15	Date	date	Date	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
17	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	True
18	:	_	:	:	O	_	and	_	0	IGNORE	True

#raw:"Calculation of Floating Amount: The Floating Amount payable by [ENA] on a Payment Date will be calculated for that Payment Date as follows :
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.027752399444580078
#k-supertags:6
1	"Calculation	"calculation	"calculation	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	precise	(s())	11	APP_s	True
2	of	_	of	IN	O	_	vice	_	0	IGNORE	True
3	Floating_Amount:_The_Floating_Amount	_name_	amount	NN	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	True
4	payable	_	payable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	represent-01	(o(), s())	1	MOD_o	True
5	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	True
6	[ENA]	_name_	[ena]	XX	O	_	thing	_	0	IGNORE	True
7	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
8	a_Payment_Date	_name_	Date	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	1	MOD_mod	True
9	will	_	will	MD	O	_	person	_	0	IGNORE	True
10	be	_	be	VB	O	_	person	_	0	IGNORE	True
11	calculated	_	calculate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
12	for	_	for	IN	O	_	thing	_	0	IGNORE	True
13	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
14	Payment	payment	Payment	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	pay-01	(mod())	15	MOD_mod	True
15	Date	date	Date	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
17	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	True
18	:	_	:	:	O	_	and	_	0	IGNORE	True

#raw:As we are living in an age where intellectual capital is so valuable, it is important for every young person to obtain the very best possible education they can .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03824877738952637
#k-supertags:6
1	As	as	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	16	MOD_o	True
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
3	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(o(), s())	16	MOD_o	True
4	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_s	True
5	in	_	in	IN	O	_	i	_	0	IGNORE	True
6	an	_	an	DT	O	_	1	_	0	IGNORE	True
7	age	_	age	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
8	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	True
9	intellectual	_	intellectual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	capital	_	capital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
12	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
13	valuable,	_	valuable,	NFP	O	_	cause-01	_	0	IGNORE	True
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
15	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	True
16	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	True
17	for	_	for	IN	O	_	and	_	0	IGNORE	True
18	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
19	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
20	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	True
21	to	_	to	TO	O	_	woman	_	0	IGNORE	True
22	obtain	_	obtain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	16	APP_dom	True
23	the	_	the	DT	O	_	thing	_	0	IGNORE	True
24	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	True
25	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	27	MOD_s	True
26	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	True
27	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	22	APP_o	True
28	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
29	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	True
30	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:Plus, I work with Janet a lot so she may get some comfort from that, instead of having a lawyer she hasn't dealt with initial it .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.14756393432617188
#k-supertags:6
1	Plus,	_name_	Plus,	NNP	O	_	expressive	_	0	IGNORE	True
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
3	work	_	work	VBP	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(o(), s())	0	ROOT	True
4	with	_	with	IN	O	_	i	_	0	IGNORE	True
5	Janet	_name_	Janet	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o	True
6	a	_	a	DT	O	_	thing	_	0	IGNORE	True
7	lot	_	lot	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
8	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	3	MOD_s	True
9	she	_	she	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	3	MOD_s	True
10	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_o	True
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	True
12	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	comfort	_	comfort	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	True
14	from	_	from	IN	O	_	and	_	0	IGNORE	True
15	that,	_	that,	NNP	O	_	cause-01	_	0	IGNORE	True
16	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(o(), s())	13	MOD_s	True
17	of	_	of	IN	O	_	company	_	0	IGNORE	True
18	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	16	MOD_s	True
19	a	_	a	DT	O	_	-	_	0	IGNORE	True
20	lawyer	_	lawyer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	True
21	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
22	hasn't	_	hasn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	True
23	dealt	_	deal	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	20	MOD_s	True
24	with	_	with	IN	O	_	-	_	0	IGNORE	True
25	initial	_	initial	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	MOD_s	True
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:It's funny, because usually it's just me, Mom, Craig and Danelia, and Danelia doesn't really like roasted turkey or roast beef (not that she would say it to me!), so there is not just the same joy in cooking it would be elsewise .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.23691415786743164
#k-supertags:6
1	It's	it's	it's	PRP	O	_	contrast-01	_	0	IGNORE	True
2	funny,	_	funny,	NNS	O	_	oppose-01	_	0	IGNORE	True
3	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
4	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	22	MOD_mod	True
5	it's	_	it's	PRP	O	_	$LEMMA$	_	0	IGNORE	True
6	just	_	just	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	True
7	me,	_	me,	NN	O	_	$LEMMA$	_	0	IGNORE	True
8	Mom,_Craig	_name_	Craig	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_op2	True
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	15	APP_s	True
10	Danelia,	_name_	Danelia,	NNP	O	_	$LEMMA$	_	0	IGNORE	True
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	3	MOD_op1	True
12	Danelia	_name_	Danelia	NNP	O	_	$LEMMA$	_	0	IGNORE	True
13	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	True
14	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	15	MOD_s	True
15	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	APP_op2	True
16	roasted	_	roasted	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	roast-01	(s())	17	MOD_s	True
17	turkey	_	turkey	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	True
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	15	APP_o	True
19	roast	_	roast	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	True
20	beef	_	beef	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	True
21	(not	_	(not	-LRB-	O	_	$LEMMA$	_	0	IGNORE	True
22	that	_	that	IN	O	(d<root> / --LEX--)	mean-01	()	3	APP_s	True
23	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
24	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	True
25	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	True
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
27	to	_	to	TO	O	_	and	_	0	IGNORE	True
28	me!),	_	me!),	RB	O	_	-	_	0	IGNORE	True
29	so	_	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	3	APP_o	True
30	there	_	there	EX	O	_	cause-01	_	0	IGNORE	True
31	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	True
33	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	True
34	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
35	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	MOD_s	True
36	joy	_	joy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_s	True
37	in	_	in	IN	O	_	i	_	0	IGNORE	True
38	cooking	_	cook	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	36	APP_s	True
39	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
40	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	True
41	be	_	be	VB	O	_	person	_	0	IGNORE	True
42	elsewise	_	elsewise	VBN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	True
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:With respect to First Union National Bank, the draft we were working from was so old that they agreed to look at our current form of agreement which was sent to them on 11/8/00 for review .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.10966801643371582
#k-supertags:6
1	With	with	with	IN	O	_	-	_	0	IGNORE	True
2	respect	_	respect	NN	O	_	$LEMMA$-01	_	0	IGNORE	True
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
4	First_Union	_name_	Union	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	True
5	National	national	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
6	Bank,	_name_	Bank,	NNP	O	_	and	_	0	IGNORE	True
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
8	draft	_	draft	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	15	APP_dom	True
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
10	were	_	be	VBD	O	_	person	_	0	IGNORE	True
11	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	MOD_o	True
12	from	_	from	IN	O	_	name	_	0	IGNORE	True
13	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	15	MOD_s	True
14	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	old	_	old	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	True
16	that	_	that	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	15	MOD_s	True
17	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	15	MOD_s	True
18	agreed	_	agree	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	True
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
20	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	True
21	at	_	at	IN	O	_	thing	_	0	IGNORE	True
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
23	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
24	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
25	of	_	of	IN	O	_	thing	_	0	IGNORE	True
26	agreement	_	agreement	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	agree-01	(mod())	24	MOD_mod	True
27	which	_	which	WDT	O	_	i	_	0	IGNORE	True
28	was	_	be	VBD	O	_	person	_	0	IGNORE	True
29	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	True
30	to	_	to	IN	O	_	and	_	0	IGNORE	True
31	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
33	11/8/00	_	11/8/00	NNS	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	29	MOD_mod	True
34	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
35	review	_	review	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	True
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I'd forgotten how blown away I was by some of the songs the first time I saw it in NY .
#batch_size:32
#normalized_nn_time:0.022585779428482056
#normalized_prepare_ftd_time:0.003623083233833313
#host:98e974c0f148
#parser:ftd
#parsing_time:0.017488956451416016
#k-supertags:6
1	I'd	i'd	i'd	PRP	O	_	cause-01	_	0	IGNORE	True
2	forgotten	_	forget	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
3	how	_	how	WRB	O	(d<root> / --LEX--)	thing	()	2	APP_s	True
4	blown	_	blow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	True
5	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	True
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
7	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
8	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
11	the	_	the	DT	O	_	person	_	0	IGNORE	True
12	songs	_	song	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
13	the	_	the	DT	O	_	thing	_	0	IGNORE	True
14	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	17	MOD_mod	True
15	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
16	I	i	I	PRP	O	_	1	_	0	IGNORE	True
17	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	True
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
19	in	_	in	IN	O	_	i	_	0	IGNORE	True
20	NY	_name_	NY	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	17	MOD_mod	True
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Kori told me she saw you last night at Steak Night and introduced herself since I failed to do so the last time we went .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07004570960998535
#k-supertags:6
1	Kori	_name_	Kori	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	True
2	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o(s()), o2())	0	ROOT	True
3	me	_	I	PRP	O	_	i	_	0	IGNORE	True
4	she	_	she	PRP	O	_	person	_	0	IGNORE	True
5	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_op1	True
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
7	last_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
8	at	_	at	IN	O	_	i	_	0	IGNORE	True
9	Steak_Night	_name_	Night	NNP	O	(n3<root> / --LEX--  :name-of (f2 / facility  :location-of (w<mod>)))	_NAME_	(mod())	5	MOD_mod	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	2	APP_o	True
11	introduced	_	introduce	VBD	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-01	(s())	10	APP_op2	True
12	herself	_	herself	PRP	O	_	cause-01	_	0	IGNORE	True
13	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	11	MOD_o	True
14	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_o2	True
15	failed	_	fail	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	True
16	to	_	to	TO	O	_	thing	_	0	IGNORE	True
17	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	True
18	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	True
19	the	_	the	DT	O	_	thing	_	0	IGNORE	True
20	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
21	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
23	went	_	go	VBD	O	(d<root> / --LEX--)	$LEMMA$-02	()	15	APP_s	True
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Days away: Sept. 21 through Oct. 3 (assuming you work on the day we leave and go back to work the day after we return )
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0670311450958252
#k-supertags:6
1	Days	days	day	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	7	MOD_mod	True
2	away:	_	away:	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	date-entity	(op1(), op2())	0	ROOT	True
3	Sept._21_through_Oct._3	_name_	3	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	4	MOD_mod	True
4	(assuming	_	(assume	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_op2	True
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
6	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	APP_op1	True
7	on	_	on	IN	O	(d<root> / --LEX--)	and	()	2	APP_op1	True
8	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	day	(mod())	6	MOD_mod	True
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
10	leave	_	leave	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-15	(s())	6	APP_o	True
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	4	APP_s	True
12	go	_	go	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-back-19	(o(), s())	11	APP_op2	True
13	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	True
14	to	_	to	IN	O	_	and	_	0	IGNORE	True
15	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	True
16	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
17	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	12	MOD_mod	True
18	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
19	return	_	return	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op1	True
20	)	_	)	-RRB-	O	_	and	_	0	IGNORE	True

#raw:Perhaps Jim Armogida can assist in revising them as I am sure he is more familiar with the way Enron Corp. likes their resolutions drafted than we are .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.062055110931396484
#k-supertags:6
1	Perhaps	perhaps	perhaps	RB	O	_	possible-01	_	0	IGNORE	True
2	Jim_Armogida	_name_	Armogida	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	True
3	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	APP_o	True
4	assist	_	assist	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_s	True
5	in	_	in	IN	O	(d<root> / --LEX--)	thing	()	0	ROOT	True
6	revising	_	revise	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	True
7	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
8	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	5	MOD_o	True
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	True
10	am	_	be	VBP	O	_	person	_	0	IGNORE	True
11	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	8	APP_s	True
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
14	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	familiar	_	familiar	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$ize-01	(o(), s())	11	MOD_s	True
16	with	_	with	IN	O	_	-	_	0	IGNORE	True
17	the	_	the	DT	O	_	thing	_	0	IGNORE	True
18	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
19	Enron_Corp.	_name_	Corp.	NNP	O	(d<root> / --LEX--)	_NAME_	()	20	APP_s	True
20	likes	_	like	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	15	APP_o	True
21	their	_	they	PRP$	O	_	thing	_	0	IGNORE	True
22	resolutions	_	resolution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	True
23	drafted	_	draft	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	True
24	than	_	than	IN	O	_	and	_	0	IGNORE	True
25	we	_	we	PRP	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
26	are	_	be	VBP	O	_	person	_	0	IGNORE	True
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The post id I am looking at for Calgary is 11608 .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.015127182006835938
#k-supertags:6
1	The	the	the	DT	O	_	thing	_	0	IGNORE	True
2	post	_	post	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	id	_	id	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	True
5	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
6	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	MOD_o	True
7	at	_	at	IN	O	_	name	_	0	IGNORE	True
8	for	_	for	IN	O	_	thing	_	0	IGNORE	True
9	Calgary	_name_	Calgary	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	True
10	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	0	ROOT	True
11	11608	_name_	11608	CD	O	(m<root> / monetary-quantity  :quant (explicitanon0 / --LEX--)  :domain (s<dom>))	_NUMBER_	(dom())	10	APP_s	True
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The post id I am looking at for Calgary is 11608 .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.014472246170043945
#k-supertags:6
1	The	the	the	DT	O	_	thing	_	0	IGNORE	True
2	post	_	post	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	id	_	id	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	True
5	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
6	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	MOD_o	True
7	at	_	at	IN	O	_	name	_	0	IGNORE	True
8	for	_	for	IN	O	_	thing	_	0	IGNORE	True
9	Calgary	_name_	Calgary	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	True
10	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	0	ROOT	True
11	11608	_name_	11608	CD	O	(m<root> / monetary-quantity  :quant (explicitanon0 / --LEX--)  :domain (s<dom>))	_NUMBER_	(dom())	10	APP_s	True
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Attached for your review are draft talking points for the Cal Energy Markets conference I'm speaking at on Thursday in SF .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.034659385681152344
#k-supertags:6
1	Attached	attached	attach	VBN	O	_	$LEMMA$-01	_	0	IGNORE	True
2	for	_	for	IN	O	_	i	_	0	IGNORE	True
3	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
4	review	_	review	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	True
5	are	_	be	VBP	O	_	person	_	0	IGNORE	True
6	draft	_	draft	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	True
7	talking	_	talk	VBG	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	True
8	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	True
9	for	_	for	IN	O	_	and	_	0	IGNORE	True
10	the	_	the	DT	O	_	person	_	0	IGNORE	True
11	Cal_Energy_Markets	_name_	Markets	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	True
12	conference	_	conference	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
13	I'm	i'm	I'm	NNS	O	(d<root> / --LEX--)	_NAME_	()	14	APP_s	True
14	speaking	_	speak	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	MOD_o	True
15	at	_	at	IN	O	_	name	_	0	IGNORE	True
16	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
17	Thursday	_name_	Thursday	NNP	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	14	MOD_mod	True
18	in	_	in	IN	O	_	name	_	0	IGNORE	True
19	SF	_name_	SF	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	14	MOD_mod	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Attached is a rough draft of my talking points for a panel I'll be on at a CEM conference in SF on Thursday afternoon .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.028754234313964844
#k-supertags:6
1	Attached	attached	attached	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	5	MOD_s	True
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
3	a	_	a	DT	O	_	thing	_	0	IGNORE	True
4	rough	_	rough	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	True
5	draft	_	draft	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
6	of	_	of	IN	O	_	thing	_	0	IGNORE	True
7	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
8	talking	_	talking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	True
9	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
10	for	_	for	IN	O	_	thing	_	0	IGNORE	True
11	a	_	a	DT	O	_	1	_	0	IGNORE	True
12	panel	_	panel	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
13	I'll	i'll	I'll	NNP	O	_	thing	_	0	IGNORE	True
14	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
15	on	_	on	IN	O	_	thing	_	0	IGNORE	True
16	at	_	at	IN	O	_	thing	_	0	IGNORE	True
17	a	_	a	DT	O	_	name	_	0	IGNORE	True
18	CEM	_name_	CEM	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	True
19	conference	_	conference	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
20	in	_	in	IN	O	_	name	_	0	IGNORE	True
21	SF	_name_	SF	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	True
22	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
23	Thursday_afternoon	_name_	afternoon	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	19	MOD_mod	True
24	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:Therefore, any trade mark registration that incorporates the word ONLINE as a suffix in the way that you use it will not enable its owner to prevent others from using the word ONLINE .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0954744815826416
#k-supertags:6
1	Therefore,	therefore,	therefore,	CD	O	_	and	_	0	IGNORE	True
2	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
3	trade	_	trade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	True
4	mark	_	mark	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
5	registration	_	registration	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	register-02	(s())	23	APP_s	True
6	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	True
7	incorporates	_	incorporate	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	5	MOD_s	True
8	the	_	the	DT	O	_	person	_	0	IGNORE	True
9	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	True
10	ONLINE	online	online	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
12	a	_	a	DT	O	_	thing	_	0	IGNORE	True
13	suffix	_	suffix	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	True
14	in	_	in	IN	O	_	i	_	0	IGNORE	True
15	the	_	the	DT	O	_	thing	_	0	IGNORE	True
16	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	True
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	True
19	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	13	MOD_o	True
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
21	will	_	will	MD	O	_	person	_	0	IGNORE	True
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	True
23	enable	_	enable	VB	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(o(s_UNIFY_o2()), s())	0	ROOT	True
24	its	_	its	PRP$	O	_	have-org-role-91	_	0	IGNORE	True
25	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	23	APP_o2	True
26	to	_	to	TO	O	_	person	_	0	IGNORE	True
27	prevent	_	prevent	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	23	APP_o	True
28	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	True
29	from	_	from	IN	O	_	-	_	0	IGNORE	True
30	using	_	use	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	27	APP_o2	True
31	the	_	the	DT	O	_	person	_	0	IGNORE	True
32	word	_	word	NN	O	_	$LEMMA$	_	0	IGNORE	True
33	ONLINE	online	online	RB	O	_	$LEMMA$	_	0	IGNORE	True
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:After talking with Professors Titman, Ronn, Brown and Jemison, I was sure that the School was the right place to get the education I was looking for .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04897189140319824
#k-supertags:6
1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	11	MOD_mod	True
2	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op1	True
3	with	_	with	IN	O	_	person	_	0	IGNORE	True
4	Professors	professors	Professors	NNPS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	7	APP_op1	True
5	Titman,	titman,	Titman,	NNP	O	_	_NAME_	_	0	IGNORE	True
6	Ronn,_Brown	_name_	Brown	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_op2	True
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	2	APP_s	True
8	Jemison,	_name_	jemison,	CD	O	_	_NAME_	_	0	IGNORE	True
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	True
10	was	_	be	VBD	O	_	say-01	_	0	IGNORE	True
11	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	0	ROOT	True
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
13	the	_	the	DT	O	_	person	_	0	IGNORE	True
14	School	_name_	School	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_dom	True
15	was	_	be	VBD	O	_	person	_	0	IGNORE	True
16	the	_	the	DT	O	_	thing	_	0	IGNORE	True
17	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	True
18	place	_	place	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_o	True
19	to	_	to	TO	O	_	thing	_	0	IGNORE	True
20	get	_	get	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	True
21	the	_	the	DT	O	_	thing	_	0	IGNORE	True
22	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	20	APP_s	True
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
24	was	_	be	VBD	O	_	person	_	0	IGNORE	True
25	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	True
26	for	_	for	IN	O	_	-	_	0	IGNORE	True
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Randy, this is the issue I left you the voice mail on .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.027085065841674805
#k-supertags:6
1	Randy,	randy,	Randy,	NFP	O	_	say-01	_	0	IGNORE	True
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	True
4	the	_	the	DT	O	_	i	_	0	IGNORE	True
5	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	0	ROOT	True
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	True
7	left	_	leave	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-12	(o(), o2(), s())	5	APP_o	True
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	voice	_	voice	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	mail	_	mail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	True
12	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:In the mean time, we need to make sure that we are doing everything we can to get a handle on the situation to mitigate future costs .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03401994705200195
#k-supertags:6
1	In	in	in	IN	O	_	i	_	0	IGNORE	True
2	the	_	the	DT	O	_	he	_	0	IGNORE	True
3	mean	_	mean	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	True
4	time,	_	time,	NNP	O	_	and	_	0	IGNORE	True
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
6	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
7	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	True
8	make	_	make	VB	O	_	obligate-01	_	0	IGNORE	True
9	sure	_	sure	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	en$LEMMA$-01	(o(s()))	6	APP_s	True
10	that	_	that	IN	O	_	and	_	0	IGNORE	True
11	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
12	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	True
13	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	9	APP_o	True
14	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
15	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
16	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	True
17	to	_	to	TO	O	_	thing	_	0	IGNORE	True
18	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_o	True
19	a	_	a	DT	O	_	thing	_	0	IGNORE	True
20	handle	_	handle	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	True
21	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
22	the	_	the	DT	O	_	thing	_	0	IGNORE	True
23	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
24	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
25	mitigate	_	mitigate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	20	MOD_mod	True
26	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
27	costs	_	cost	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	True
28	.	_	.	.	O	_	monetary-quantity	_	0	IGNORE	True

#raw:However, as you will see, the questions I thought of got kinda long- but I think we need answers for all of them .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03766036033630371
#k-supertags:6
1	However,	_name_	However,	LS	O	_	expressive	_	0	IGNORE	True
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
4	will	_	will	MD	O	_	thing	_	0	IGNORE	True
5	see,	_	see,	VB	O	_	and	_	0	IGNORE	True
6	the	_	the	DT	O	_	and	_	0	IGNORE	True
7	questions	_	question	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	True
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	True
9	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	7	MOD_o	True
10	of	_	of	IN	O	_	thing	_	0	IGNORE	True
11	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(o(), s())	14	MOD_o	True
12	kinda	_	kinda	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	kind-of	(mod())	11	MOD_mod	True
13	long-	_	long-	JJ	O	_	and	_	0	IGNORE	True
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
16	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	True
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
18	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	16	APP_s	True
19	answers	_	answer	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	True
20	for	_	for	IN	O	_	and	_	0	IGNORE	True
21	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
23	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Stan may also bring the letter up orally next time he's on the phonne with Gibson or Kyle as an example of how not to handle this situation .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.3456895351409912
#k-supertags:6
1	Stan	_name_	Stan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	True
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	True
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
4	bring	_	bring	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(o(), s())	2	APP_s	True
5	the	_	the	DT	O	_	person	_	0	IGNORE	True
6	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
7	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	True
8	orally	_	orally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
9	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
11	he's	_	he's	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	possible-01	(mod(), s())	2	MOD_mod	True
12	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
13	the	_	the	DT	O	_	person	_	0	IGNORE	True
14	phonne	_	phonne	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
15	with	_	with	IN	O	_	-	_	0	IGNORE	True
16	Gibson	_name_	Gibson	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op1	True
17	or	_	or	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(mod(), op1(), op2())	11	MOD_mod	True
18	Kyle	_name_	Kyle	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op2	True
19	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
20	an	_	an	DT	O	_	thing	_	0	IGNORE	True
21	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(o(), s())	4	MOD_s	True
22	of	_	of	IN	O	_	thing	_	0	IGNORE	True
23	how	_	how	WRB	O	_	thing	_	0	IGNORE	True
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	True
25	to	_	to	TO	O	_	thing	_	0	IGNORE	True
26	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	True
27	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	True
28	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	True
29	.	_	.	.	O	_	cause-01	_	0	IGNORE	True

#raw:Because of an international medical convention ongoing in Washington at the same time as our meetings, the Grand Hyatt unfortunately is already booked .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04798102378845215
#k-supertags:6
1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
3	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	True
4	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
5	medical	_	medical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	medicine	(mod())	6	MOD_mod	True
6	convention	_	convention	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	True
7	ongoing	_	ongoe	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	True
8	in	_	in	IN	O	_	i	_	0	IGNORE	True
9	Washington	_name_	Washington	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	True
10	at	_	at	IN	O	_	thing	_	0	IGNORE	True
11	the	_	the	DT	O	_	person	_	0	IGNORE	True
12	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	True
13	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
15	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	True
16	meetings,	_	meetings,	NNP	O	_	i	_	0	IGNORE	True
17	the	_	the	DT	O	_	person	_	0	IGNORE	True
18	Grand	grand	Grand	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	19	MOD_mod	True
19	Hyatt	_name_	Hyatt	NNP	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	23	APP_s	True
20	unfortunately	_	unfortunately	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	fortunate-01	(s())	23	MOD_s	True
21	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
22	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
23	booked	_	book	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	1	APP_o	True
24	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:Your answer to a question indicated that I have several of the skills you look for .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.029497623443603516
#k-supertags:6
1	Your	your	Your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	answer	_	answer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_s	True
3	to	_	to	IN	O	_	i	_	0	IGNORE	True
4	a	_	a	DT	O	_	1	_	0	IGNORE	True
5	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_o	True
6	indicated	_	indicate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	True
9	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	6	APP_o	True
10	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
12	the	_	the	DT	O	_	he	_	0	IGNORE	True
13	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	True
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	True
15	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	13	MOD_o	True
16	for	_	for	IN	O	_	thing	_	0	IGNORE	True
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Took me a little longer to review and revise Adam's first drafts than I had thought (there's a lot going on here, as you'll see soon) .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.06127667427062988
#k-supertags:6
1	Took	took	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-10	(s())	0	ROOT	True
2	me	_	I	PRP	O	_	i	_	0	IGNORE	True
3	a	_	a	DT	O	_	1	_	0	IGNORE	True
4	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	longer	_	long	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	1	MOD_s	True
6	to	_	to	TO	O	_	time	_	0	IGNORE	True
7	review	_	review	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	1	APP_s	True
9	revise	_	revise	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op2	True
10	Adam's	adam's	adam's	JJ	O	_	_NAME_	_	0	IGNORE	True
11	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	True
12	drafts	_	draft	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	True
13	than	_	than	IN	O	_	1	_	0	IGNORE	True
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
15	had	_	have	VBD	O	_	$LEMMA$-quant-91	_	0	IGNORE	True
16	thought	_	think	VBN	O	(w<root> / --LEX--  :ARG0 (t<s>)  :compared-to-of (m<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	True
17	(there's	_	(there's	.	O	_	thing	_	0	IGNORE	True
18	a	_	a	DT	O	_	lot	_	0	IGNORE	True
19	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
20	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-15	(s())	16	APP_s	True
21	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
22	here,	_	here,	NNS	O	_	and	_	0	IGNORE	True
23	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
24	you'll	_	you'll	PRP	O	_	thing	_	0	IGNORE	True
25	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	20	MOD_o	True
26	soon)	_	soon)	NNP	O	_	-	_	0	IGNORE	True
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:the primary reason we need these things is for the scenario where a muni does a derivative deal with an open-ended downside, loses $50 million, and then claims that it was not a valid contract .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.15509819984436035
#k-supertags:6
1	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
2	primary	_	primary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
5	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
6	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	7	MOD_mod	True
7	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
9	for	_	for	IN	O	_	thing	_	0	IGNORE	True
10	the	_	the	DT	O	_	thing	_	0	IGNORE	True
11	scenario	_	scenario	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
12	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	True
13	a	_	a	DT	O	_	company	_	0	IGNORE	True
14	muni	_	muni	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
15	does	_	do	VBZ	O	_	$LEMMA$-02	_	0	IGNORE	True
16	a	_	a	DT	O	_	company	_	0	IGNORE	True
17	derivative	_	derivative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
18	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	APP_op1	True
19	with	_	with	IN	O	_	have-03	_	0	IGNORE	True
20	an	_	an	DT	O	_	monet$LEMMA$ry-qu$LEMMA$ntity	_	0	IGNORE	True
21	open-ended	_	open-ended	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-01	(s())	30	MOD_s	True
22	downside,	_	downside,	NNP	O	_	and	_	0	IGNORE	True
23	loses	_	lose	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	18	MOD_s	True
24	$50	_	$50	IN	O	(d<root> / --LEX--)	_NUMBER_	()	23	APP_o	True
25	million,	_	million,	NFP	O	_	and	_	0	IGNORE	True
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	3	APP_s	True
27	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	True
28	claims	_	claim	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op2	True
29	that	_	that	IN	O	_	contrast-01	_	0	IGNORE	True
30	it	_	it	PRP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	3	MOD_s	True
31	was	_	be	VBD	O	_	person	_	0	IGNORE	True
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	True
33	a	_	a	DT	O	_	1	_	0	IGNORE	True
34	valid	_	valid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	35	MOD_s	True
35	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	28	APP_s	True
36	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:I am having a meeting with Vicki and Janet Dietrich on Thursday to discuss our view on the ability to extend our current contracts in CA (for customers already on DA) .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.2168722152709961
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
2	am	_	be	VBP	O	_	person	_	0	IGNORE	True
3	having	_	have	VBG	O	_	$LEMMA$-06	_	0	IGNORE	True
4	a	_	a	DT	O	_	person	_	0	IGNORE	True
5	meeting	_	meeting	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	meet-03	(o(), o2(), s())	0	ROOT	True
6	with	_	with	IN	O	_	-	_	0	IGNORE	True
7	Vicki	_name_	Vicki	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op1	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	5	APP_o2	True
9	Janet_Dietrich	_name_	Dietrich	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op2	True
10	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
11	Thursday	_name_	Thursday	NNP	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	5	MOD_mod	True
12	to	_	to	TO	O	_	person	_	0	IGNORE	True
13	discuss	_	discuss	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	5	MOD_mod	True
14	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
15	view	_	view	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_o	True
16	on	_	on	IN	O	_	thing	_	0	IGNORE	True
17	the	_	the	DT	O	_	person	_	0	IGNORE	True
18	ability	_	ability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	APP_s	True
19	to	_	to	TO	O	_	thing	_	0	IGNORE	True
20	extend	_	extend	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	18	APP_s	True
21	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
22	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
23	contracts	_	contract	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
24	in	_	in	IN	O	_	i	_	0	IGNORE	True
25	CA	_name_	CA	NNP	O	(n2<root> / --LEX--  :name-of (s2 / state  :location-of (h2<mod>)))	_NAME_	(mod())	23	MOD_mod	True
26	(for	_	(for	ADD	O	_	$LEMMA$	_	0	IGNORE	True
27	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	True
28	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
29	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
30	DA)	da)	DA)	NNP	O	_	cause-01	_	0	IGNORE	True
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:In the three years I have been here, I am unaware of an ENA/ECT bad faith claim against any insurance company .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03226590156555176
#k-supertags:6
1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	True
2	the_three_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	True
4	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	True
5	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
6	here,	_	here,	NNS	O	_	-	_	0	IGNORE	True
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
8	am	_	be	VBP	O	_	oppose-01	_	0	IGNORE	True
9	unaware	_	unaware	JJ	O	(r<root> / --LEX--  :polarity (explicitanon0 / -)  :ARG0 (h<s>)  :ARG1 (p<o>))	realize-01	(o(), s())	0	ROOT	True
10	of	_	of	IN	O	_	name	_	0	IGNORE	True
11	an	_	an	DT	O	_	sl$LEMMA$sh	_	0	IGNORE	True
12	ENA/ECT	_name_	ENA/ECT	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	value-interval	(s())	15	MOD_s	True
13	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	14	MOD_s	True
14	faith	_	faith	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	claim	_	claim	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	True
16	against	_	against	IN	O	_	-	_	0	IGNORE	True
17	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
18	insurance	_	insurance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	insure-02	(s())	19	MOD_s	True
19	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Living out of synch with nature is the great disease, from that flows all the tributaries we have come to think of as sickness .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.027279376983642578
#k-supertags:6
1	Living	living	live	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_dom	True
2	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	True
3	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	True
4	synch	_	synch	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_s	True
5	with	_	with	IN	O	_	-	_	0	IGNORE	True
6	nature	_	nature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
7	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	True
8	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	he	(s())	0	ROOT	True
9	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	8	APP_s	True
10	disease,	_	disease,	NNS	O	_	and	_	0	IGNORE	True
11	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	True
12	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	True
13	flows	_	flow	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	9	MOD_s	True
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
15	the	_	the	DT	O	_	and	_	0	IGNORE	True
16	tributaries	_	tributary	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	True
18	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	True
19	come	_	come	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	21	MOD_o	True
20	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
21	think	_	think	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	16	MOD_o	True
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
23	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
24	sickness	_	sickness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o2	True
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:There is no escape from the collective ocean we all swim in .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.013595819473266602
#k-supertags:6
1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	True
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	True
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	True
4	escape	_	escape	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	True
5	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	True
6	the	_	the	DT	O	_	he	_	0	IGNORE	True
7	collective	_	collective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	ocean	_	ocean	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
10	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
11	swim	_	swim	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	MOD_o	True
12	in	_	in	RP	O	_	be-located-at-91	_	0	IGNORE	True
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	True

#raw:The name started as a joke boasting about the amount of information the search-engine would be able to search .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.014811277389526367
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	True
3	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
5	a	_	a	DT	O	_	1	_	0	IGNORE	True
6	joke	_	joke	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	True
7	boasting	_	boast	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	MOD_s	True
8	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	the	_	the	DT	O	_	thing	_	0	IGNORE	True
10	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	APP_o	True
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
12	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_mod	True
13	the	_	the	DT	O	_	thing	_	0	IGNORE	True
14	search-engine	_	search-engine	NN	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	True
15	would	_	would	MD	O	_	thing	_	0	IGNORE	True
16	be	_	be	VB	O	_	person	_	0	IGNORE	True
17	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	True
18	to	_	to	TO	O	_	thing	_	0	IGNORE	True
19	search	_	search	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	MOD_o	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Many of us have burrowed beneath the surface to find a spiritual sense of being, an understanding force at least as powerful as those we succumbed to, and many of use wouldn't escape if you opened the front door .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.11832761764526367
#k-supertags:6
1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	28	MOD_s	True
3	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
4	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	True
5	burrowed	_	burrow	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	28	APP_op1	True
6	beneath	_	beneath	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	5	APP_o	True
7	the	_	the	DT	O	_	he	_	0	IGNORE	True
8	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	True
9	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	True
10	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	5	MOD_mod	True
11	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	True
12	spiritual	_	spiritual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	True
14	of	_	of	IN	O	_	thing	_	0	IGNORE	True
15	being,	_	being,	NNS	O	_	and	_	0	IGNORE	True
16	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	True
17	understanding	_	understand	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	understand-01	(s())	18	MOD_s	True
18	force	_	force	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
19	at	_	at	RB	O	_	cause-01	_	0	IGNORE	True
20	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	22	MOD_mod	True
21	as	_	as	RB	O	_	equal	_	0	IGNORE	True
22	powerful	_	powerful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	True
23	as	_	as	IN	O	_	equal	_	0	IGNORE	True
24	those	_	those	DT	O	_	that	_	0	IGNORE	True
25	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	True
26	succumbed	_	succumb	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	True
27	to,	_	to,	NN	O	_	-	_	0	IGNORE	True
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
29	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	33	MOD_mod	True
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
31	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	True
32	wouldn't	_	wouldn't	CD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	True
33	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_op2	True
34	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	True
35	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	True
36	opened	_	open	VBD	O	(c<root> / --LEX--  :ARG0 (i<o>)  :ARG1 (y<s>)  :condition-of (w<mod>))	$LEMMA$-01	(mod(), o(), s())	33	MOD_mod	True
37	the	_	the	DT	O	_	person	_	0	IGNORE	True
38	front	_	front	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	True
39	door	_	door	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_o	True
40	.	_	.	.	O	_	person	_	0	IGNORE	True

#raw:Don't you think it's time we talked ?
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05849170684814453
#k-supertags:6
1	Don't	don't	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	True
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
3	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
4	it's	_	it's	PRP$	O	_	-	_	0	IGNORE	True
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
7	talked	_	talk	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	True
8	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	True

#raw:Can you accept that the road we are travelling points toward a grim and painful future ?
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05230832099914551
#k-supertags:6
1	Can	can	Can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	True
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
3	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	1	APP_s	True
4	that	_	that	IN	O	_	interrogative	_	0	IGNORE	True
5	the	_	the	DT	O	_	person	_	0	IGNORE	True
6	road	_	road	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
8	are	_	be	VBP	O	_	person	_	0	IGNORE	True
9	travelling	_	travel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	MOD_o	True
10	points	_	point	NNS	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
11	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	True
12	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	True
13	grim	_	grim	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	True
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	True
15	painful	_	painful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	pain-01	(s())	16	MOD_s	True
16	future	_	future	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	True
17	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	True

#raw:Abby is our beloved friend, and we are trying to raise money for her any way we can, so this prize money is important to help her continue to receive her life-saving treatments .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12466096878051758
#k-supertags:6
1	Abby	_name_	Abby	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_op1	True
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
3	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
4	beloved	_	beloved	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	love-01	(s())	1	MOD_s	True
5	friend,	_	friend,	NNS	O	_	and	_	0	IGNORE	True
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
8	are	_	be	VBP	O	_	person	_	0	IGNORE	True
9	trying	_	try	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	APP_op2	True
10	to	_	to	TO	O	_	thing	_	0	IGNORE	True
11	raise	_	raise	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	9	APP_o	True
12	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	True
13	for	_	for	IN	O	_	and	_	0	IGNORE	True
14	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
17	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
18	can,	_	can,	VBD	O	_	event	_	0	IGNORE	True
19	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	6	MOD_s	True
20	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
21	prize	_	prize	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	True
22	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_dom	True
23	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	True
24	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	19	APP_o	True
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
26	help	_	help	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	True
27	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
28	continue	_	continue	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	True
29	to	_	to	TO	O	_	person	_	0	IGNORE	True
30	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	True
31	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
32	life-saving	_	life-saving	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	save-02	(s())	33	MOD_s	True
33	treatments	_	treatment	NNS	O	(d<root> / --LEX--)	treat-03	()	30	APP_s	True
34	.	_	.	.	O	_	cause-01	_	0	IGNORE	True

#raw:"It marks the first time in recent years that China has promised to wield its veto power in the UN Security Council against a petition initiated by the United States and backed by France and Great Britain. "
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05767941474914551
#k-supertags:6
1	"It	"it	"It	``	O	(d<root> / --LEX--)	_NAME_	()	2	APP_s	True
2	marks	_	mark	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
4	first	_name_	first	JJ	O	(o<root> / ordinal-entity  :value (explicitanon0 / --LEX--)  :ord-of (d<mod>))	1	(mod())	2	MOD_mod	True
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
6	in	_	in	IN	O	_	elect-01	_	0	IGNORE	True
7	recent_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	True
8	that	_	that	IN	O	_	name	_	0	IGNORE	True
9	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_s	True
10	has	_	have	VBZ	O	_	person	_	0	IGNORE	True
11	promised	_	promise	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	True
12	to	_	to	TO	O	_	thing	_	0	IGNORE	True
13	wield	_	wield	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	11	APP_o	True
14	its	_	its	PRP$	O	_	i	_	0	IGNORE	True
15	veto	_	veto	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	True
16	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
17	in	_	in	IN	O	_	i	_	0	IGNORE	True
18	the_UN_Security_Council	_name_	Council	NNP	O	(n<root> / --LEX--  :name-of (o / organization  :mod-of (e<mod>)))	_NAME_	(mod())	13	MOD_mod	True
19	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	True
20	a	_	a	DT	O	_	1	_	0	IGNORE	True
21	petition	_	petition	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_o2	True
22	initiated	_	initiate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	21	MOD_o	True
23	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	True
24	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_s	True
25	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	True
26	backed	_	back	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	21	MOD_o	True
27	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	True
28	France	_name_	France	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	29	APP_op1	True
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	26	APP_s	True
30	Great	great	Great	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op2	True
31	Britain.	britain.	Britain.	NNP	O	_	_NAME_	_	0	IGNORE	True
32	"	_	"	''	O	_	and	_	0	IGNORE	True

#raw:The President is very eager to go ahead quickly and get this vote, because he very much wants to have Samuel Alito on the Supreme Court, to be judging the cases Bush is interested in .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0751495361328125
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	5	APP_s	True
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	eager	_	eager	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
6	to	_	to	TO	O	_	thing	_	0	IGNORE	True
7	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-06	(o(), s())	10	APP_op1	True
8	ahead	_	ahead	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	True
9	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	7	MOD_s	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	5	APP_o	True
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_op2	True
12	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	True
13	vote,	_	vote,	NNP	O	_	$LEMMA$	_	0	IGNORE	True
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	5	MOD_o	True
15	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
16	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
17	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
18	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	True
19	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	True
20	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	18	APP_s	True
21	Samuel_Alito	_name_	Alito	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_s	True
22	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
23	the_Supreme_Court,	_name_	Court,	NNP	O	_	have-org-role-91	_	0	IGNORE	True
24	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	True
25	be	_	be	VB	O	_	person	_	0	IGNORE	True
26	judging	_	judge	VBG	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	20	MOD_mod	True
27	the	_	the	DT	O	_	he	_	0	IGNORE	True
28	cases	_	case	NNS	O	(d<root> / --LEX--)	$LEMMA$-03	()	26	APP_o	True
29	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_s	True
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
31	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	interest-01	(o(), s())	28	MOD_o	True
32	in	_	in	IN	O	_	include-91	_	0	IGNORE	True
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:"There is always the possibility they could jam us up, make us look like we are not numero uno," Pike said .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03937411308288574
#k-supertags:6
1	"There	"there	"there	EX	O	_	_NAME_	_	0	IGNORE	True
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	True
3	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
4	the	_	the	DT	O	_	and	_	0	IGNORE	True
5	possibility	_	possibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	APP_o	True
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_s	True
8	jam	_	jam	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_s	True
9	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	True
10	up,	_	up,	NNS	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	$LEMMA$	(mod())	21	MOD_mod	True
11	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	10	MOD_s	True
12	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	APP_o	True
14	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	True
15	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
16	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	True
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	True
18	numero	_	numero	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
19	uno,"	_	uno,"	NNP	O	_	name	_	0	IGNORE	True
20	Pike	pike	pike	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	True
21	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
22	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:The two developments, he said, could eventually enable China's space program to mature to the point that experts could assemble and launch from Earth's orbit a spacecraft capable of circling the moon with astronauts and returning home .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12807726860046387
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	8	MOD_mod	True
3	developments,	_	developments,	NNS	O	_	and	_	0	IGNORE	True
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
5	said,	_	said,	NNP	O	_	mean-01	_	0	IGNORE	True
6	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	True
7	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	8	MOD_mod	True
8	enable	_	enable	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_s	True
9	China's	_name_	China's	NNP	O	_	_NAME_	_	0	IGNORE	True
10	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	program	_	program	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
12	to	_	to	TO	O	_	thing	_	0	IGNORE	True
13	mature	_	mature	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	8	APP_o	True
14	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
15	the	_	the	DT	O	_	he	_	0	IGNORE	True
16	point	_	point	NN	O	_	$LEMMA$	_	0	IGNORE	True
17	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
18	experts	_	expert	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$-01	()	21	APP_s	True
19	could	_	could	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	13	MOD_mod	True
20	assemble	_	assemble	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	21	APP_op1	True
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op1(o(), s()), op2(o(), s()))	19	APP_s	True
22	launch	_	launch	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	21	APP_op2	True
23	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	True
24	Earth's	_name_	Earth's	NNP	O	_	_NAME_	_	0	IGNORE	True
25	orbit	_	orbit	VB	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	True
26	a	_	a	DT	O	_	thing	_	0	IGNORE	True
27	spacecraft	_	spacecraft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	True
28	capable	_	capable	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	27	MOD_s	True
29	of	_	of	IN	O	_	person	_	0	IGNORE	True
30	circling	_	circle	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op1	True
31	the	_	the	DT	O	_	person	_	0	IGNORE	True
32	moon	_	moon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	True
33	with	_	with	IN	O	_	-	_	0	IGNORE	True
34	astronauts	_	astronaut	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	28	APP_o	True
36	returning	_	return	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-01	(s())	35	APP_op2	True
37	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	True
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Recently, I read an email that reported the horrific nightmare Civet Cats go through by sick losers who put them in sheds and heat the inside of the sheds up to 110 degrees with fires, so that they can periodically scrape the sweat off of their genitals and sell it to corrupt corporations who use it to prolong the scent of perfumes .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08769989013671875
#k-supertags:6
1	Recently,	recently,	Recently,	NFP	O	_	and	_	0	IGNORE	True
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
3	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
4	an	_	an	DT	O	_	1	_	0	IGNORE	True
5	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	True
7	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	5	MOD_s	True
8	the	_	the	DT	O	_	person	_	0	IGNORE	True
9	horrific	_	horrific	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	nightmare	_	nightmare	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	True
11	Civet_Cats	_name_	Cats	NNPS	O	(d<root> / --LEX--)	_NAME_	()	12	APP_s	True
12	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-12	(o(), s())	16	MOD_o	True
13	through	_	through	RP	O	_	name	_	0	IGNORE	True
14	by	_	by	IN	O	_	cause-01	_	0	IGNORE	True
15	sick	_	sick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	16	MOD_s	True
16	losers	_	loser	NNS	O	(d<root> / --LEX--)	lose-03	()	10	APP_poss	True
17	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	True
18	put	_	put	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	16	MOD_s	True
19	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	in	_	in	IN	O	_	i	_	0	IGNORE	True
21	sheds	_	shed	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	True
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	True
23	heat	_	heat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	16	MOD_s	True
24	the	_	the	DT	O	_	thing	_	0	IGNORE	True
25	inside	_	inside	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	True
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
27	the	_	the	DT	O	_	person	_	0	IGNORE	True
28	sheds	_	shed	NNS	O	_	$LEMMA$	_	0	IGNORE	True
29	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	True
30	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	True
31	110	_	110	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	32	MOD_mod	True
32	degrees	_	degree	NNS	O	(r<root> / --LEX--  :scale-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
33	with	_	with	IN	O	_	-	_	0	IGNORE	True
34	fires,	_	fires,	NNP	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	23	MOD_mod	True
35	so	_	so	IN	O	_	cause-01	_	0	IGNORE	True
36	that	_	that	IN	O	_	cause-01	_	0	IGNORE	True
37	they	_	they	PRP	O	_	person	_	0	IGNORE	True
38	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	23	MOD_mod	True
39	periodically	_	periodically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	repeat-01	(mod())	40	MOD_mod	True
40	scrape	_	scrape	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op1	True
41	the	_	the	DT	O	_	and	_	0	IGNORE	True
42	sweat	_	sweat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	True
43	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	True
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
45	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
46	genitals	_	genital	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	40	MOD_mod	True
47	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	38	APP_s	True
48	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op2	True
49	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
50	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
51	corrupt	_	corrupt	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	MOD_s	True
52	corporations	_	corporation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	True
53	who	_	who	WP	O	_	person	_	0	IGNORE	True
54	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	52	MOD_s	True
55	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
56	to	_	to	TO	O	_	thing	_	0	IGNORE	True
57	prolong	_	prolong	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	54	APP_o	True
58	the	_	the	DT	O	_	person	_	0	IGNORE	True
59	scent	_	scent	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	57	APP_s	True
60	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
61	perfumes	_	perfume	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	59	APP_s	True
62	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The main reason I wrote this post is to ask anyone reading this if they know of some way I can help put a stop to this Cat Holocaust .
#batch_size:32
#normalized_nn_time:0.01594260334968567
#normalized_prepare_ftd_time:0.006840087473392487
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04497385025024414
#k-supertags:6
1	The	the	the	DT	O	_	have-purpose-91	_	0	IGNORE	True
2	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
5	wrote	_	write	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
7	post	_	post	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	True
8	is	_	be	VBZ	O	_	thing	_	0	IGNORE	True
9	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	True
10	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	3	APP_s	True
11	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	True
12	reading	_	read	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	MOD_s	True
13	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	True
14	if	_	if	IN	O	_	interrogative	_	0	IGNORE	True
15	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
16	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_s	True
17	of	_	of	IN	O	_	thing	_	0	IGNORE	True
18	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
19	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
20	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
21	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	APP_o	True
22	help	_	help	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	True
23	put	_	put	VB	O	_	$LEMMA$-01	_	0	IGNORE	True
24	a	_	a	DT	O	_	event	_	0	IGNORE	True
25	stop	_	stop	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	True
26	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
27	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	True
28	Cat	cat	Cat	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	True
29	Holocaust	holocaust	Holocaust	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Well, sure enough, when I heard the cats "Meowing," I imagined the hellish moments these poor beautiful creatures of God were living, what went on in their tiny, sweet little minds, and decided that I want to do something about this torture .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0948953628540039
#k-supertags:6
1	Well,	_name_	Well,	NNP	O	_	expressive	_	0	IGNORE	True
2	sure	_	sure	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	32	APP_s	True
3	enough,	_	enough,	NNP	O	_	and	_	0	IGNORE	True
4	when	_	when	WRB	O	_	i	_	0	IGNORE	True
5	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
6	heard	_	hear	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	11	MOD_mod	True
7	the	_	the	DT	O	_	he	_	0	IGNORE	True
8	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	True
9	"Meowing,"	"meowing,"	"Meowing,"	.	O	_	and	_	0	IGNORE	True
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
11	imagined	_	imagine	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	32	APP_op1	True
12	the	_	the	DT	O	_	and	_	0	IGNORE	True
13	hellish	_	hellish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
14	moments	_	moment	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	APP_o	True
15	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	18	MOD_mod	True
16	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
17	beautiful	_	beautiful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	True
18	creatures	_	creature	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	True
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
20	God	god	God	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	True
21	were	_	be	VBD	O	_	person	_	0	IGNORE	True
22	living,	_	living,	NNPS	O	_	and	_	0	IGNORE	True
23	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	True
24	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-15	(s())	14	APP_mod	True
25	on	_	on	RP	O	_	thing	_	0	IGNORE	True
26	in	_	in	IN	O	_	i	_	0	IGNORE	True
27	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
28	tiny,	_	tiny,	CD	O	_	mean-01	_	0	IGNORE	True
29	sweet	_	sweet	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	30	MOD_s	True
30	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
31	minds,	_	minds,	NNS	O	_	$LEMMA$	_	0	IGNORE	True
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
33	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	32	APP_op2	True
34	that	_	that	IN	O	_	cause-01	_	0	IGNORE	True
35	I	i	I	PRP	O	_	1	_	0	IGNORE	True
36	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	33	APP_o	True
37	to	_	to	TO	O	_	thing	_	0	IGNORE	True
38	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	36	APP_o	True
39	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	True
40	about	_	about	IN	O	_	i	_	0	IGNORE	True
41	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	True
42	torture	_	torture	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	39	MOD_mod	True
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:In the world press, commentators predict that Katrina will make a profound change in the way the US is perceived at home and abroad, especially following the scenes of poverty and racial divisions they believe the disaster has revealed .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.16609764099121094
#k-supertags:6
1	In	in	in	IN	O	_	have-org-role-91	_	0	IGNORE	True
2	the	_	the	DT	O	_	person	_	0	IGNORE	True
3	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	True
4	press,	_	press,	NNP	O	_	and	_	0	IGNORE	True
5	commentators	_	commentator	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	6	APP_s	True
6	predict	_	predict	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
7	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	True
8	Katrina	_name_	Katrina	NNP	O	(n<root> / natural-disaster  :name (n2 / --LEX--))	_NAME_	()	13	APP_s	True
9	will	_	will	MD	O	_	-1	_	0	IGNORE	True
10	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	MOD_s	True
11	a	_	a	DT	O	_	1	_	0	IGNORE	True
12	profound	_	profound	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	change	_	change	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_o	True
14	in	_	in	IN	O	_	thing	_	0	IGNORE	True
15	the	_	the	DT	O	_	person	_	0	IGNORE	True
16	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	APP_o	True
17	the	_	the	DT	O	_	person	_	0	IGNORE	True
18	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_s	True
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
20	perceived	_	perceive	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_mod	True
21	at	_	at	IN	O	_	1	_	0	IGNORE	True
22	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	True
23	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(mod(), op1(), op2())	20	MOD_mod	True
24	abroad,	_	abroad,	NNP	O	_	and	_	0	IGNORE	True
25	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	True
26	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	27	MOD_s	True
27	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	he	(o(), s())	6	MOD_o	True
28	scenes	_	scene	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	True
29	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
30	poverty	_	poverty	NN	O	(d<root> / --LEX--)	poor	()	31	APP_op1	True
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(mod(), op1(), op2())	28	MOD_mod	True
32	racial	_	racial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	race	(mod())	33	MOD_mod	True
33	divisions	_	division	NNS	O	(d<root> / --LEX--)	divide-02	()	31	APP_op2	True
34	they	_	they	PRP	O	_	person	_	0	IGNORE	True
35	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	True
36	the	_	the	DT	O	_	person	_	0	IGNORE	True
37	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	True
38	has	_	have	VBZ	O	_	person	_	0	IGNORE	True
39	revealed	_	reveal	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	28	MOD_o	True
40	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:Has the disaster affected the way other countries view the US ?
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.028395891189575195
#k-supertags:6
1	Has	has	have	VBZ	O	_	cause-01	_	0	IGNORE	True
2	the	_	the	DT	O	_	interrogative	_	0	IGNORE	True
3	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
4	affected	_	affect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
5	the	_	the	DT	O	_	thing	_	0	IGNORE	True
6	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	APP_o	True
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
9	view	_	view	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	6	APP_mod	True
10	the	_	the	DT	O	_	thing	_	0	IGNORE	True
11	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_o	True
12	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	True

#raw:I expect that many of the displaced people (those affluent and those not) will remain in the places they were evacuated to .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03851127624511719
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	expect	_	expect	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
3	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	True
4	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
5	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	4	MOD_s	True
6	the	_	the	DT	O	_	person	_	0	IGNORE	True
7	displaced	_	displace	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	True
8	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	11	MOD_mod	True
9	(those	_	(those	-LRB-	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
10	affluent	_	affluent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
11	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	True
12	those	_	those	DT	O	_	have-org-role-91	_	0	IGNORE	True
13	not)	_	not)	NN	O	_	person	_	0	IGNORE	True
14	will	_	will	MD	O	_	person	_	0	IGNORE	True
15	remain	_	remain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	True
16	in	_	in	IN	O	_	after	_	0	IGNORE	True
17	the	_	the	DT	O	_	person	_	0	IGNORE	True
18	places	_	place	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
19	they	_	they	PRP	O	_	person	_	0	IGNORE	True
20	were	_	be	VBD	O	_	person	_	0	IGNORE	True
21	evacuated	_	evacuate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	True
22	to	_	to	IN	O	_	person	_	0	IGNORE	True
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I guess if you have a schtick that is a resounding success once, you can't help but trot it out every time your act is going sour .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0765082836151123
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	guess	_	guess	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
3	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	True
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	True
5	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), o(), s())	16	MOD_mod	True
6	a	_	a	DT	O	_	thing	_	0	IGNORE	True
7	schtick	_	schtick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	True
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
10	a	_	a	DT	O	_	thing	_	0	IGNORE	True
11	resounding	_	resounding	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	12	MOD_s	True
12	success	_	success	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	7	MOD_s	True
13	once,	_	once,	.	O	_	and	_	0	IGNORE	True
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
15	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	True
16	help	_	help	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	17	APP_o	True
17	but	_	but	CC	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	contrast-01	(o(s()))	2	MOD_s	True
18	trot	_	trot	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	True
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	True
21	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	18	MOD_mod	True
22	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
23	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
24	act	_	act	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	True
25	is	_	be	VBZ	O	_	i	_	0	IGNORE	True
26	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-08	(o(), s())	2	APP_o	True
27	sour	_	sour	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	True
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:This is the year you'll want to take stock of your career and ask yourself if you're doing the work you want to do for the rest of your life .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04899764060974121
#k-supertags:6
1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
2	is	_	be	VBZ	O	_	2	_	0	IGNORE	True
3	the_year	_name_	year	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	5	APP_s	True
4	you'll	_	you'll	PRP	O	_	mean-01	_	0	IGNORE	True
5	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
6	to	_	to	TO	O	_	person	_	0	IGNORE	True
7	take	_	take	VB	O	_	$LEMMA$-01	_	0	IGNORE	True
8	stock	_	stock	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	APP_op1	True
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
11	career	_	career	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	5	APP_o	True
13	ask	_	ask	VB	O	(a<root> / --LEX--  :ARG2 (y<s>  :ARG0-of a)  :ARG1 (q<o>))	$LEMMA$-01	(o(), s())	12	APP_op2	True
14	yourself	_	yourself	PRP	O	_	say-01	_	0	IGNORE	True
15	if	_	if	IN	O	_	interrogative	_	0	IGNORE	True
16	you're	_	you're	PRP	O	_	thing	_	0	IGNORE	True
17	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_o	True
18	the	_	the	DT	O	_	thing	_	0	IGNORE	True
19	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	True
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
21	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	True
22	to	_	to	TO	O	_	thing	_	0	IGNORE	True
23	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	True
24	for	_	for	IN	O	_	thing	_	0	IGNORE	True
25	the	_	the	DT	O	_	he	_	0	IGNORE	True
26	rest	_	rest	NN	O	(r<root> / --LEX--  :part-of (c4<poss>)  :duration-of (p2<mod>))	$LEMMA$	(mod(), poss())	23	MOD_mod	True
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
28	your	_	your	PRP$	O	_	cause-01	_	0	IGNORE	True
29	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_poss	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:This is the year you're going to be doing a lot of travel and learning about your world, as expansion is the theme .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.06343698501586914
#k-supertags:6
1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
2	is	_	be	VBZ	O	_	now	_	0	IGNORE	True
3	the_year	_name_	year	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	8	APP_s	True
4	you're	_	you're	PRP$	O	_	name	_	0	IGNORE	True
5	going	_	go	VBG	O	_	name	_	0	IGNORE	True
6	to	_	to	TO	O	_	-1	_	0	IGNORE	True
7	be	_	be	VB	O	_	person	_	0	IGNORE	True
8	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	0	ROOT	True
9	a	_	a	DT	O	_	1	_	0	IGNORE	True
10	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
11	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	True
12	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op1	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	8	APP_o	True
14	learning	_	learn	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op2	True
15	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	True
16	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
17	world,	_	world,	NNS	O	_	and	_	0	IGNORE	True
18	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	8	MOD_o	True
19	expansion	_	expansion	NN	O	(d<root> / --LEX--)	expand-01	()	22	APP_dom	True
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
21	the	_	the	DT	O	_	event	_	0	IGNORE	True
22	theme	_	theme	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	18	APP_s	True
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Your life might take on an entirely new direction you've never dreamed of .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.022960662841796875
#k-supertags:6
1	Your	your	Your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
2	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
3	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	True
4	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-on-09	(o(), s())	3	APP_s	True
5	on	_	on	RP	O	_	and	_	0	IGNORE	True
6	an	_	an	DT	O	_	thing	_	0	IGNORE	True
7	entirely	_	entirely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	entire	(mod())	8	MOD_mod	True
8	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	True
9	direction	_	direction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
10	you've	_	you've	NFP	O	_	-	_	0	IGNORE	True
11	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	12	MOD_mod	True
12	dreamed	_	dream	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	True
13	of	_	of	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	True
14	.	_	.	.	O	_	-	_	0	IGNORE	True

#raw:The mysteries of the universe continue to attract and intrigue you, as you apply your mystical awareness to the important decisions upcoming in your life, especially concerning partnerships of all kinds .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.23733830451965332
#k-supertags:6
1	The	the	the	DT	O	_	he	_	0	IGNORE	True
2	mysteries	_	mystery	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_s	True
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
4	the	_	the	DT	O	_	person	_	0	IGNORE	True
5	universe	_	universe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	True
6	continue	_	continue	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
7	to	_	to	TO	O	_	person	_	0	IGNORE	True
8	attract	_	attract	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_op1	True
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	6	APP_o	True
10	intrigue	_	intrigue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_op2	True
11	you,	_	you,	NNS	O	_	and	_	0	IGNORE	True
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
13	you	_	you	PRP	O	_	$LEMMA$	_	6	IGNORE	True
14	apply	_	apply	VBP	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-01	(mod(), o(), s())	6	MOD_mod	True
15	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
16	mystical	_	mystical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
17	awareness	_	awareness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
18	to	_	to	IN	O	_	thing	_	0	IGNORE	True
19	the	_	the	DT	O	_	thing	_	0	IGNORE	True
20	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	True
21	decisions	_	decision	NNS	O	(d<root> / --LEX--)	decide-01	()	14	APP_o	True
22	upcoming	_	upcoming	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	True
23	in	_	in	IN	O	_	thing	_	0	IGNORE	True
24	your	_	your	PRP$	O	_	thing	_	0	IGNORE	True
25	life,	_	life,	NNS	O	_	$LEMMA$	_	0	IGNORE	True
26	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	True
27	concerning	_	concern	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	MOD_o	True
28	partnerships	_	partnership	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	True
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
30	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	True
31	kinds	_	kind	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	True
32	.	_	.	.	O	_	oppose-01	_	0	IGNORE	True

#raw:1561 Last time castling was 2 separate moves .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.01512598991394043
#k-supertags:6
1	1561_Last	_name_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	True
2	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	castling	_	castle	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_dom	True
4	was	_	be	VBD	O	_	say-01	_	0	IGNORE	True
5	2	_	2	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	True
6	separate	_	separate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	True
7	moves	_	move	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-02	(dom())	0	ROOT	True
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:That was the day that GOD'S CURSE fell upon the world of Rock .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.018455028533935547
#k-supertags:6
1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	True
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	True
3	the_day	_name_	day	NN	O	(t3<root> / --LEX--  :domain (i<dom>)  :time-of (t<mod>))	$LEMMA$	(dom(), mod())	0	ROOT	True
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	True
5	GOD'S	_name_	GOD'S	NNP	O	_	_NAME_	_	0	IGNORE	True
6	CURSE	curse	curse	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	True
7	fell	_	fall	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(o(), s())	3	APP_mod	True
8	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	True
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
12	Rock	_name_	Rock	NNP	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Antichrist John Lennon wanted to compete with Jesus Christ, and so he grew a beard and started to make a bogus role of Christ together with Yoko Ono at the Amsterdam Hilton hotel proclaiming "Peace", being then when he was visited by the Canadian journalist who ridiculized and admonished him wanting to know about what Lennon meant when he wrote in the lyrics of "The ballad of John and Yoko": "the way things are going, they're going to crucify me...", The CURSE OF GOD upon John Lennon carried on with all type of miseries and distresses which made Lennon give the interview to the "Rolling Stone" magazine (today condensed in the "Lennon remembers" book) where he speaks about how bad thing were going for him blaming "whatever is up there" for it (referring to God) .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.45032787322998047
#k-supertags:6
1	Antichrist_John_Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	True
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_s	True
3	to	_	to	TO	O	_	person	_	0	IGNORE	True
4	compete	_	compete	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	APP_o	True
5	with	_	with	IN	O	_	have-03	_	0	IGNORE	True
6	Jesus_Christ,	_name_	Christ,	NNP	O	_	_NAME_	_	0	IGNORE	True
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	True
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
10	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	APP_op1	True
11	a	_	a	DT	O	_	person	_	0	IGNORE	True
12	beard	_	beard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	8	APP_o	True
14	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	True
15	to	_	to	TO	O	_	person	_	0	IGNORE	True
16	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	True
17	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	True
18	bogus	_	bogus	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
19	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
20	of	_	of	IN	O	_	person	_	0	IGNORE	True
21	Christ	_name_	Christ	NNP	O	(p<root> / person  :name (n / --LEX--)  :source-of (t<mod>))	_NAME_	(mod())	19	MOD_mod	True
22	together	_	together	RB	O	_	$LEMMA$	_	0	IGNORE	True
23	with	_	with	IN	O	_	-	_	0	IGNORE	True
24	Yoko_Ono	_name_	Ono	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	True
25	at	_	at	IN	O	_	person	_	0	IGNORE	True
26	the	_	the	DT	O	_	person	_	0	IGNORE	True
27	Amsterdam_Hilton	_name_	Hilton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	True
28	hotel	_	hotel	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	36	MOD_mod	True
29	proclaiming	_	proclaim	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	True
30	"Peace",	"peace",	"Peace",	NNP	O	_	thing	_	0	IGNORE	True
31	being	_	be	VBG	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	True
32	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	True
33	when	_	when	WRB	O	_	thing	_	0	IGNORE	True
34	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
35	was	_	be	VBD	O	_	person	_	0	IGNORE	True
36	visited	_	visit	VBN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	True
37	by	_	by	IN	O	_	include-91	_	0	IGNORE	True
38	the	_	the	DT	O	_	person	_	0	IGNORE	True
39	Canadian	_name_	canadian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	40	MOD_mod	True
40	journalist	_	journalist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	True
41	who	_	who	WP	O	_	person	_	0	IGNORE	True
42	ridiculized	_	ridiculize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	True
43	and	_	and	CC	O	_	$LEMMA$	_	8	IGNORE	True
44	admonished	_	admonish	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	True
45	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	True
46	wanting	_	want	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	40	MOD_s	True
47	to	_	to	TO	O	_	thing	_	0	IGNORE	True
48	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	46	APP_o	True
49	about	_	about	IN	O	_	thing	_	0	IGNORE	True
50	what	_	what	WP	O	_	cause-01	_	0	IGNORE	True
51	Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	74	APP_s	True
52	meant	_	mean	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	True
53	when	_	when	WRB	O	_	thing	_	0	IGNORE	True
54	he	_	he	PRP	O	_	thing	_	0	IGNORE	True
55	wrote	_	write	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	46	MOD_mod	True
56	in	_	in	IN	O	_	i	_	0	IGNORE	True
57	the	_	the	DT	O	_	person	_	0	IGNORE	True
58	lyrics	_	lyric	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	55	MOD_mod	True
59	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
60	"The	"the	"The	``	O	_	_NAME_	_	0	IGNORE	True
61	ballad	_	ballad	NN	O	(d<root> / --LEX--)	$LEMMA$	()	58	APP_poss	True
62	of	_	of	IN	O	_	person	_	0	IGNORE	True
63	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	61	MOD_mod	True
64	and	_	and	CC	O	_	$LEMMA$	_	61	IGNORE	True
65	Yoko":	_name_	yoko":	CD	O	_	$LEMMA$	_	0	IGNORE	True
66	"the	_	"the	DT	O	_	i	_	0	IGNORE	True
67	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	True
68	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	74	APP_o	True
69	are	_	be	VBP	O	_	person	_	0	IGNORE	True
70	going,	_	going,	NNP	O	_	and	_	0	IGNORE	True
71	they're	_	they're	NNP	O	_	person	_	0	IGNORE	True
72	going	_	go	VBG	O	_	accompany-01	_	0	IGNORE	True
73	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
74	crucify	_	crucify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	48	APP_o	True
75	me...",	_	me...",	.	O	_	slash	_	0	IGNORE	True
76	The_CURSE_OF_GOD_upon_John_Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	74	MOD_mod	True
77	carried	_	carry	VBD	O	(d<root> / --LEX--)	$LEMMA$-on-02	()	55	APP_o	True
78	on	_	on	RP	O	_	cause-01	_	0	IGNORE	True
79	with	_	with	IN	O	_	-	_	0	IGNORE	True
80	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	81	MOD_mod	True
81	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	84	MOD_mod	True
82	of	_	of	IN	O	_	person	_	0	IGNORE	True
83	miseries	_	misery	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op1	True
84	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(mod(), op1(), op2())	74	MOD_mod	True
85	distresses	_	distress	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op2	True
86	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	True
87	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	MOD_s	True
88	Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	True
89	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	8	MOD_s	True
90	the	_	the	DT	O	_	person	_	0	IGNORE	True
91	interview	_	interview	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	89	APP_o	True
92	to	_	to	IN	O	_	and	_	0	IGNORE	True
93	the	_	the	DT	O	_	person	_	0	IGNORE	True
94	"Rolling	"rolling	"rolling	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	96	MOD_mod	True
95	Stone"	_name_	Stone"	NNP	O	_	and	_	0	IGNORE	True
96	magazine	_	magazine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	91	APP_s	True
97	(today	_	(today	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	True
98	condensed	_	condense	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	96	MOD_s	True
99	in	_	in	IN	O	_	i	_	0	IGNORE	True
100	the	_	the	DT	O	_	person	_	0	IGNORE	True
101	"Lennon	"lennon	"lennon	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	True
102	remembers"	_	remembers"	NFP	O	_	mean-01	_	0	IGNORE	True
103	book)	_	book)	XX	O	_	and	_	0	IGNORE	True
104	where	_	where	WRB	O	_	and	_	0	IGNORE	True
105	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
106	speaks	_	speak	VBZ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	96	MOD_mod	True
107	about	_	about	IN	O	_	thing	_	0	IGNORE	True
108	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	True
109	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	112	MOD_s	True
110	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_s	True
111	were	_	be	VBD	O	_	person	_	0	IGNORE	True
112	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	115	MOD_s	True
113	for	_	for	IN	O	_	and	_	0	IGNORE	True
114	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	True
115	blaming	_	blame	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	106	APP_s	True
116	"whatever	_	"whatever	''	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_o	True
117	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
118	up	_	up	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	115	MOD_mod	True
119	there"	_	there"	CD	O	_	thing	_	0	IGNORE	True
120	for	_	for	IN	O	_	thing	_	0	IGNORE	True
121	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
122	(referring	_	(referring	ADD	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	115	MOD_mod	True
123	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
124	God)	_name_	God)	NNS	O	_	mean-01	_	0	IGNORE	True
125	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:At the same time McCartney was going out with Heather Mills, he used Linda's death for promotional ends, due to his waning popularity .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05092620849609375
#k-supertags:6
1	At	at	at	IN	O	_	thing	_	0	IGNORE	True
2	the	_	the	DT	O	_	person	_	0	IGNORE	True
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	True
4	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
5	McCartney	_name_	McCartney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	True
6	was	_	be	VBD	O	_	person	_	0	IGNORE	True
7	going	_	go	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-out-17	(mod(), s())	4	MOD_mod	True
8	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	True
9	with	_	with	IN	O	_	-	_	0	IGNORE	True
10	Heather_Mills,	_name_	mills,	ADD	O	_	and	_	0	IGNORE	True
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
12	used	_	use	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
13	Linda's	_name_	Linda's	NNP	O	_	_NAME_	_	0	IGNORE	True
14	death	_	death	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	die-01	(s())	12	APP_o	True
15	for	_	for	IN	O	_	thing	_	0	IGNORE	True
16	promotional	_	promotional	JJ	O	(d<root> / --LEX--)	market-01	()	12	APP_s	True
17	ends,	_	ends,	NNS	O	_	$LEMMA$	_	0	IGNORE	True
18	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	12	MOD_o	True
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
20	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	True
21	waning	_	wane	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	True
22	popularity	_	popularity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The early days were the days of competition between Paul and his wife and John and his wife and he knew he had to compete with ugly John for the leadership of the band in front of their wives and having Yoko Ono made him aware of his lack of virility and repressed homosexuality, he grew the beard that we see in the "Let it Be" film and started to show pictures of naked women in the same film, doing every effort he could to be seen as a man... .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:1.162886619567871
#k-supertags:6
1	The_early_days	_name_	day	NNS	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	5	APP_s	True
2	were	_	be	VBD	O	_	person	_	0	IGNORE	True
3	the_days	_name_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	competition	_	competition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	compete-02	(o(), s())	16	APP_op1	True
6	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	True
7	Paul	_name_	Paul	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op2	True
8	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	True
9	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
10	wife	_	wife	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	12	MOD_s	True
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	True
12	John	_name_	John	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	48	APP_op2	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	16	APP_op2	True
14	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	True
15	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_op3	True
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op1(), op2(), op3(), op4())	0	ROOT	True
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
18	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	16	MOD_s	True
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	had	_	have	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	18	APP_o	True
21	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
22	compete	_	compete	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_s	True
23	with	_	with	IN	O	_	-	_	0	IGNORE	True
24	ugly	_	ugly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	True
25	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	True
26	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	True
27	the	_	the	DT	O	_	and	_	0	IGNORE	True
28	leadership	_	leadership	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	lead-02	(s())	22	APP_s	True
29	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
30	the	_	the	DT	O	_	person	_	0	IGNORE	True
31	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	True
32	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	True
33	front	_	front	NN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	in-$LEMMA$-of	(mod(), op1())	22	MOD_mod	True
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
35	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
36	wives	_	wife	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	33	APP_op1	True
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	18	MOD_op1	True
38	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	64	MOD_s	True
39	Yoko_Ono	_name_	Ono	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	40	APP_s	True
40	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	64	APP_op2	True
41	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	True
42	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	realize-01	(s())	40	APP_o	True
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
44	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	True
45	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	APP_op1	True
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
47	virility	_	virility	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	True
48	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	42	APP_s	True
49	repressed	_	repress	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	True
50	homosexuality,	_	homosexuality,	.	O	_	cause-01	_	0	IGNORE	True
51	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
52	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	64	APP_op1	True
53	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
54	beard	_	beard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_s	True
55	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	True
56	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_s	True
57	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	54	MOD_o	True
58	in	_	in	IN	O	_	i	_	0	IGNORE	True
59	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
60	"Let	"let	"Let	.	O	_	$LEMMA$	_	0	IGNORE	True
61	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
62	Be"	be"	be"	CD	O	_	shit	_	0	IGNORE	True
63	film	_	film	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	57	MOD_mod	True
64	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op1(), op2(), op3())	37	APP_op2	True
65	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	64	APP_op3	True
66	to	_	to	TO	O	_	person	_	0	IGNORE	True
67	show	_	show	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	65	APP_s	True
68	pictures	_	picture	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	67	APP_s	True
69	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
70	naked	_	naked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	71	MOD_s	True
71	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	68	APP_s	True
72	in	_	in	IN	O	_	i	_	0	IGNORE	True
73	the	_	the	DT	O	_	person	_	0	IGNORE	True
74	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	71	MOD_s	True
75	film,	_	film,	NN	O	_	and	_	0	IGNORE	True
76	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_op4	True
77	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	78	MOD_mod	True
78	effort	_	effort	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	76	APP_s	True
79	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
80	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	78	MOD_s	True
81	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
82	be	_	be	VB	O	_	person	_	0	IGNORE	True
83	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	78	APP_s	True
84	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
85	a	_	a	DT	O	_	1	_	0	IGNORE	True
86	man...	_	man...	NFP	O	(d<root> / --LEX--)	_NAME_	()	83	APP_s	True
87	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:That rejection got to the point that George Harrison kicked Yoko Ono in the Apple studios during the filming of Let it Be .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07423567771911621
#k-supertags:6
1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
2	rejection	_	rejection	NN	O	(d<root> / --LEX--)	reject-01	()	3	APP_s	True
3	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-04	(o(), s())	0	ROOT	True
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
5	the	_	the	DT	O	_	person	_	0	IGNORE	True
6	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
7	that	_	that	IN	O	_	name	_	0	IGNORE	True
8	George_Harrison	_name_	Harrison	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	True
9	kicked	_	kick	VBD	O	(d<root> / --LEX--  :ARG0 (t<s>)  :ARG1 (s2<o>)  :topic-of (s<mod>))	$LEMMA$-01	(mod(), o(), s())	6	MOD_mod	True
10	Yoko_Ono	_name_	Ono	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_o	True
11	in	_	in	IN	O	_	i	_	0	IGNORE	True
12	the	_	the	DT	O	_	person	_	0	IGNORE	True
13	Apple	_name_	Apple	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	True
14	studios	_	studio	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
15	during	_	during	IN	O	_	i	_	0	IGNORE	True
16	the	_	the	DT	O	_	person	_	0	IGNORE	True
17	filming	_	filming	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	True
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
19	Let	let	let	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	True
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
21	Be	be	Be	VB	O	_	person	_	0	IGNORE	True
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Their chauvinisms got to the point that even they themselves hated each other .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.013081073760986328
#k-supertags:6
1	Their	their	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	True
2	chauvinisms	_	chauvinism	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_s	True
3	got	_	get	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-03	(o(s()))	0	ROOT	True
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
5	the	_	the	DT	O	_	he	_	0	IGNORE	True
6	point	_	point	NN	O	_	$LEMMA$	_	0	IGNORE	True
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
8	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
9	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
10	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	True
11	hated	_	hate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
12	each	_	each	DT	O	_	$LEMMA$	_	0	IGNORE	True
13	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	True
14	.	_	.	.	O	_	person	_	0	IGNORE	True

#raw:The dangers implicit in any attack upon that nation, however, seem to significantly offset whatever gains could be made in the so-called "War on Terror. "
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03377079963684082
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	dangers	_	danger	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
3	implicit	_	implicit	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(o(), s())	2	MOD_s	True
4	in	_	in	IN	O	_	thing	_	0	IGNORE	True
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	attack	_	attack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	True
7	upon	_	upon	IN	O	_	-	_	0	IGNORE	True
8	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
9	nation,	_	nation,	NNS	O	_	cause-01	_	0	IGNORE	True
10	however,	_	however,	NNP	O	_	thing	_	0	IGNORE	True
11	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
12	to	_	to	TO	O	_	affect-01	_	0	IGNORE	True
13	significantly	_	significantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	significant-02	(s())	14	MOD_s	True
14	offset	_	offset	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	APP_s	True
15	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	gains	_	gain	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	True
17	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	True
18	be	_	be	VB	O	_	person	_	0	IGNORE	True
19	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	True
20	in	_	in	IN	O	_	after	_	0	IGNORE	True
21	the	_	the	DT	O	_	so	_	0	IGNORE	True
22	so-called	_	so-calle	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	call-01	(s())	23	MOD_s	True
23	"War	"war	"war	XX	O	(w<root> / war  :name (n / --LEX--))	$LEMMA$-01	()	16	APP_s	True
24	on	_	on	IN	O	_	cause-01	_	0	IGNORE	True
25	Terror.	_name_	Terror.	NNP	O	_	_NAME_	_	0	IGNORE	True
26	"	_	"	''	O	_	-	_	0	IGNORE	True

#raw:0 - Number of times Bush mentioned global warming, clean air, clean water, pollution or environment in his 2004 State of the Union speech .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.8175573348999023
#k-supertags:6
1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	True
2	-	_	-	:	O	_	and	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	True
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	True
7	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	global	_	global	JJ	O	(d<root> / --LEX--)	globe	()	17	APP_op1	True
9	warming,	_	warming,	NNS	O	_	and	_	0	IGNORE	True
10	clean	_	clean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	14	MOD_s	True
11	air,	_	air,	NN	O	_	and	_	0	IGNORE	True
12	clean	_	clean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	MOD_s	True
13	water,	_	water,	NNP	O	_	mean-01	_	0	IGNORE	True
14	pollution	_	pollution	NN	O	(d<root> / --LEX--)	pollute-01	()	15	APP_op1	True
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	7	APP_o	True
16	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	True
17	in	_	in	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	i	(mod(), op1())	7	MOD_mod	True
18	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	True
19	2004	_name_	2004	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	24	MOD_mod	True
20	State	state	State	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
22	the	_	the	DT	O	_	person	_	0	IGNORE	True
23	Union	union	Union	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
24	speech	_	speech	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
25	.	_	.	.	O	_	cause-01	_	0	IGNORE	True

#raw:68 - Number of days after taking office that Bush decided Not to ratify the Kyoto Protocol, the international treaty to reduce greenhouse gases by roughly 5.2 per cent below 1990 levels by 2012 .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.15866732597351074
#k-supertags:6
1	68	_	68	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	days	_	day	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	6	MOD_mod	True
6	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	3	MOD_mod	True
7	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op1	True
8	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
9	that	_	that	WDT	O	_	1	_	0	IGNORE	True
10	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	True
11	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_mod	True
12	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	True
13	to	_	to	TO	O	_	person	_	0	IGNORE	True
14	ratify	_	ratify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	APP_o	True
15	the	_	the	DT	O	_	person	_	0	IGNORE	True
16	Kyoto	_name_	Kyoto	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	True
17	Protocol,	protocol,	protocol,	CD	O	_	mean-01	_	0	IGNORE	True
18	the	_	the	DT	O	_	person	_	0	IGNORE	True
19	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
20	treaty	_	treaty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	True
21	to	_	to	TO	O	_	thing	_	0	IGNORE	True
22	reduce	_	reduce	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	20	MOD_s	True
23	greenhouse	_	greenhouse	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
24	gases	_	gas	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	True
25	by	_	by	IN	O	_	date-interval	_	0	IGNORE	True
26	roughly	_	roughly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	rough-04	(mod())	22	MOD_mod	True
27	5.2	_	5.2	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	29	MOD_mod	True
28	per	_	per	IN	O	_	rate-entity-91	_	0	IGNORE	True
29	cent	_	cent	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	10	(mod())	3	MOD_mod	True
30	below	_	below	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(mod(), op1())	22	MOD_mod	True
31	1990	_name_	1990	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	32	MOD_mod	True
32	levels	_	level	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	True
33	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	22	MOD_mod	True
34	2012	_name_	2012	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	33	APP_op1	True
35	.	_	.	.	O	_	date-interval	_	0	IGNORE	True

#raw:25 - Percentage of overall worldwide carbon dioxide emissions the United States is responsible for .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05609011650085449
#k-supertags:6
1	25	_	25	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	12	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Percentage	percentage	percentage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
6	worldwide	_	worldwide	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
7	carbon	_	carbon	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	dioxide	_	dioxide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
9	emissions	_	emission	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	emit-01	(s())	12	APP_o	True
10	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_s	True
11	is	_	be	VBZ	O	_	thing	_	0	IGNORE	True
12	responsible	_	responsible	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
13	for	_	for	IN	O	_	and	_	0	IGNORE	True
14	.	_	.	.	O	_	event	_	0	IGNORE	True

#raw:5 - Number of years the Bush administration said in 2003 that global warming must be further studied before substantive action could be taken .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.4970405101776123
#k-supertags:6
1	5	_	5	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	9	MOD_mod	True
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	years	_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
6	the	_	the	DT	O	_	and	_	0	IGNORE	True
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	23	MOD_mod	True
8	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	10	MOD_s	True
9	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
10	in	_	in	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	government-organization	(mod())	9	MOD_mod	True
11	2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	9	MOD_mod	True
12	that	_	that	IN	O	_	and	_	0	IGNORE	True
13	global	_	global	JJ	O	(d<root> / --LEX--)	globe	()	14	APP_s	True
14	warming	_	warming	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	warm-01	(s())	18	APP_s	True
15	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	9	APP_o	True
16	be	_	be	VB	O	_	thing	_	0	IGNORE	True
17	further	_	further	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
18	studied	_	study	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	True
19	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	18	MOD_mod	True
20	substantive	_	substantive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	MOD_s	True
21	action	_	action	NN	O	(d<root> / --LEX--)	act-02	()	22	APP_s	True
22	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	19	APP_op1	True
23	be	_	be	VB	O	(d<root> / --LEX--)	thing	()	9	APP_s	True
24	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	True
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:$6.1m - Amount the EPA historically valued each human life when conducting economic analyses of proposed regulations .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.2514801025390625
#k-supertags:6
1	$6.1m	_	$6.1m	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Amount	amount	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	True
4	the	_	the	DT	O	_	say-01	_	0	IGNORE	True
5	EPA	_name_	EPA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	7	APP_s	True
6	historically	_	historically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	historical	(mod())	7	MOD_mod	True
7	valued	_	value	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_mod	True
8	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
9	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	True
11	when	_	when	WRB	O	_	thing	_	0	IGNORE	True
12	conducting	_	conduct	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	True
13	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	14	MOD_mod	True
14	analyses	_	analysis	NNS	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	analyze-01	(mod(), s())	7	MOD_mod	True
15	of	_	of	IN	O	_	thing	_	0	IGNORE	True
16	proposed	_	propose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	True
17	regulations	_	regulation	NNS	O	(d<root> / --LEX--)	regulate-01	()	14	APP_s	True
18	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:$3.7m - Amount the EPA valued each human life when conducting analyses of proposed regulations during the Bush administration .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:1.4477529525756836
#k-supertags:6
1	$3.7m_-_Amount	_name_	amount	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	True
2	the	_	the	DT	O	(d<root> / --LEX--)	person	()	4	APP_o2	True
3	EPA	_name_	EPA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	4	APP_s	True
4	valued	_	value	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
5	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
6	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
7	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
8	when	_	when	WRB	O	_	person	_	0	IGNORE	True
9	conducting	_	conduct	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	4	MOD_mod	True
10	analyses	_	analysis	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	analyze-01	(s())	9	APP_o	True
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
12	proposed	_	propose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	True
13	regulations	_	regulation	NNS	O	(d<root> / --LEX--)	regulate-01	()	10	APP_s	True
14	during	_	during	IN	O	_	thing	_	0	IGNORE	True
15	the	_	the	DT	O	_	person	_	0	IGNORE	True
16	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	4	MOD_mod	True
17	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	2	MOD_s	True
18	.	_	.	.	O	(n<root> / --LEX--  :time-of (p<mod>))	government-organization	(mod())	4	MOD_mod	True

#raw:6 - Number of months before 11 September that Cheney's Energy Task Force investigated Iraq's oil reserves .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08474898338317871
#k-supertags:6
1	6	_	6	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	10	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	months	_name_	month	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	6	MOD_mod	True
6	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	3	MOD_mod	True
7	11_September	_name_	September	NNP	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	6	APP_op1	True
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	Cheney's_Energy_Task_Force	_name_	Force	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	10	APP_s	True
10	investigated	_	investigate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
11	Iraq's	iraq's	iraq's	CD	O	_	_NAME_	_	0	IGNORE	True
12	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	reserves	_	reserve	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	True
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:$3.8bn - Amount in the Superfund trust fund for toxic site clean-ups in 1995, the Year "polluter pays" fees expired .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0372927188873291
#k-supertags:6
1	$3.8bn	_	$3.8bn	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Amount	amount	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	APP_s	True
4	in	_	in	IN	O	_	cause-01	_	0	IGNORE	True
5	the	_	the	DT	O	_	person	_	0	IGNORE	True
6	Superfund	_name_	Superfund	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
7	trust	_	trust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	fund	_	fund	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_mod	True
9	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
10	toxic	_	toxic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
12	clean-ups	_	clean-up	NNS	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-02	(mod(), s())	8	MOD_mod	True
13	in	_	in	IN	O	_	10	_	0	IGNORE	True
14	1995,_the_Year	_name_	Year	NNP	O	(m<root> / --LEX--  :unit-of (a<mod>))	year	(mod())	17	MOD_mod	True
15	"polluter	_	"polluter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	True
16	pays"	_	pays"	JJ	O	_	and	_	0	IGNORE	True
17	fees	_	fee	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	True
18	expired	_	expire	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:0 - Number of times Bush mentioned Osama bin Laden in his three State of the Union addresses .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.23234248161315918
#k-supertags:6
1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	True
2	-	_	-	:	O	_	and	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	True
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	True
7	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	Osama_bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_o	True
9	in	_	in	IN	O	_	and	_	0	IGNORE	True
10	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
11	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	16	MOD_mod	True
12	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
14	the	_	the	DT	O	_	person	_	0	IGNORE	True
15	Union	union	Union	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
16	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	True
17	.	_	.	.	O	_	person	_	0	IGNORE	True

#raw:73 - Number of times that Bush mentioned terrorism or terrorists in his three State of the Union addresses .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07690286636352539
#k-supertags:6
1	73	_	73	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	True
6	that	_	that	IN	O	_	1	_	0	IGNORE	True
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	True
8	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_mod	True
9	terrorism	_	terrorism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	True
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	8	APP_o	True
11	terrorists	_	terrorist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	True
12	in	_	in	IN	O	_	i	_	0	IGNORE	True
13	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
14	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	19	MOD_mod	True
15	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
17	the	_	the	DT	O	_	person	_	0	IGNORE	True
18	Union	union	Union	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
19	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:83 - Number of times Bush mentioned Saddam, Iraq, or regime (as in change) in his three State of the Union addresses .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.09944772720336914
#k-supertags:6
1	83	_	83	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	True
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	True
7	mentioned	_	mention	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
8	Saddam,	saddam,	Saddam,	NNP	O	_	mean-01	_	0	IGNORE	True
9	Iraq,	iraq,	Iraq,	NNP	O	_	mean-01	_	0	IGNORE	True
10	or	_	or	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(o(), s())	7	APP_o	True
11	regime	_	regime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	True
12	(as	_	(as	.	O	_	_NAME_	_	0	IGNORE	True
13	in	_	in	IN	O	_	i	_	0	IGNORE	True
14	change)	_	change)	NNS	O	_	and	_	0	IGNORE	True
15	in	_	in	IN	O	_	i	_	0	IGNORE	True
16	his	_	he	PRP$	O	_	and	_	0	IGNORE	True
17	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	22	MOD_mod	True
18	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
20	the	_	the	DT	O	_	person	_	0	IGNORE	True
21	Union	union	Union	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	True
22	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	7	MOD_mod	True
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:0 - Number of times Bush mentioned Saudi Arabia in his three State of the Union addresses .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.16308259963989258
#k-supertags:6
1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	True
2	-	_	-	:	O	_	and	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	True
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	True
7	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	Saudi_Arabia	_name_	Arabia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_o	True
9	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	True
10	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
11	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	16	MOD_mod	True
12	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
14	the	_	the	DT	O	_	person	_	0	IGNORE	True
15	Union	union	Union	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
16	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	True
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:$3m - Amount the White House was willing to grant the 9/11 Commission to investigate the 11 September attacks .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0329279899597168
#k-supertags:6
1	$3m	_	$3m	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	True
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	True
3	Amount	amount	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
4	the_White_House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	True
5	was	_	be	VBD	O	_	person	_	0	IGNORE	True
6	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	0	ROOT	True
7	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	True
8	grant	_	grant	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_o	True
9	the_9/11_Commission	_name_	Commission	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	8	APP_o	True
10	to	_	to	TO	O	_	government-organization	_	0	IGNORE	True
11	investigate	_	investigate	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	8	MOD_mod	True
12	the	_	the	DT	O	_	12	_	0	IGNORE	True
13	11_September	_name_	September	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	14	MOD_s	True
14	attacks	_	attack	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	True
15	.	_	.	.	O	_	oppose-01	_	0	IGNORE	True

#raw:$5m - Amount a 1996 federal commission was given to study legalised gambling .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.021641969680786133
#k-supertags:6
1	$5m	_	$5m	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	True
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	True
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	True
4	a	_	a	DT	O	_	1	_	0	IGNORE	True
5	1996	_name_	1996	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	7	MOD_mod	True
6	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	7	MOD_mod	True
7	commission	_	commission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	True
8	was	_	be	VBD	O	_	person	_	0	IGNORE	True
9	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	3	MOD_s	True
10	to	_	to	TO	O	_	thing	_	0	IGNORE	True
11	study	_	study	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	9	MOD_mod	True
12	legalised	_	legalise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	legalize-01	(s())	13	MOD_s	True
13	gambling	_	gambling	NN	O	(d<root> / --LEX--)	gamble-01	()	11	APP_o	True
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:1972 - Year that Bush walked away from his pilot duties in the Texas National Guard, Nearly two years before his six-year obligation was up .
#batch_size:32
#normalized_nn_time:0.03567972034215927
#normalized_prepare_ftd_time:0.009151481091976166
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1018073558807373
#k-supertags:6
1	1972_-_Year	_name_	year	NN	O	(n3<root> / --LEX--  :name-of (f / festival  :time-of (t<mod>)))	_NAME_	(mod())	0	ROOT	True
2	that	_	that	IN	O	_	slash	_	0	IGNORE	True
3	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	True
4	walked	_	walk	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	1	APP_mod	True
5	away	_	away	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
6	from	_	from	IN	O	_	-	_	0	IGNORE	True
7	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	True
8	pilot	_	pilot	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	True
9	duties	_	duty	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
10	in	_	in	IN	O	_	i	_	0	IGNORE	True
11	the	_	the	DT	O	_	person	_	0	IGNORE	True
12	Texas	texas	Texas	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	13	MOD_mod	True
13	National	national	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	9	MOD_mod	True
14	Guard,	guard,	Guard,	NFP	O	_	_NAME_	_	0	IGNORE	True
15	Nearly_two_years	_name_	year	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	20	MOD_mod	True
16	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	4	MOD_mod	True
17	his	_	he	PRP$	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	1	MOD_mod	True
18	six-year	_	six-year	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	year	(mod())	19	MOD_mod	True
19	obligation	_	obligation	NN	O	(d<root> / --LEX--)	obligate-01	()	21	APP_s	True
20	was	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	1	MOD_mod	True
21	up	_	up	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_op1	True
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:2.5 - Number of hours after Rumsfeld learnt that Osama bin Laden was a suspect in the 11 September attacks that he brought up reasons to "hit" Iraq .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03985738754272461
#k-supertags:6
1	2.5	_	2.5	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	(s<root> / --LEX--  :ARG0 (y<s>))	8	(s())	3	APP_mod	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	hours	_	hour	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	6	MOD_mod	True
6	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	3	MOD_mod	True
7	Rumsfeld	_name_	Rumsfeld	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	True
8	learnt	_	learn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_op1	True
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
10	Osama_bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	True
11	was	_	be	VBD	O	_	person	_	0	IGNORE	True
12	a	_	a	DT	O	_	1	_	0	IGNORE	True
13	suspect	_	suspect	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	8	APP_o	True
14	in	_	in	IN	O	_	12	_	0	IGNORE	True
15	the	_	the	DT	O	_	person	_	0	IGNORE	True
16	11_September	_name_	September	NNP	O	(d<root> / --LEX--)	_NAME_	()	17	APP_s	True
17	attacks	_	attack	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	True
18	that	_	that	IN	O	_	name	_	0	IGNORE	True
19	he	_	he	PRP	O	_	cause-01	_	0	IGNORE	True
20	brought	_	bring	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	2	APP_s	True
21	up	_	up	RP	O	_	cause-01	_	0	IGNORE	True
22	reasons	_	reason	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_s	True
23	to	_	to	IN	O	_	thing	_	0	IGNORE	True
24	"hit"	_	"hit"	XX	O	_	and	_	0	IGNORE	True
25	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_s	True
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:2000 - Year that Cheney said his policy as CEO of Halliburton oil services company was "we wouldn't do anything in Iraq" .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12711787223815918
#k-supertags:6
1	2000_-_Year	_name_	year	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	True
2	that	_	that	WDT	O	_	1	_	0	IGNORE	True
3	Cheney	_name_	Cheney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	True
4	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
5	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	True
6	policy	_	policy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	4	MOD_o	True
7	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	True
8	CEO	ceo	CEO	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	officer	(mod())	6	MOD_mod	True
9	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	True
10	Halliburton	_name_	Halliburton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	True
11	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	True
12	services	_	service	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	serve-01	(o(), s())	13	MOD_s	True
13	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
14	was	_	be	VBD	O	_	person	_	0	IGNORE	True
15	"we	_	"we	CD	O	_	$LEMMA$	_	0	IGNORE	True
16	wouldn't	_	wouldn't	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	True
17	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	4	APP_o	True
18	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	True
19	in	_	in	IN	O	_	i	_	0	IGNORE	True
20	Iraq"	iraq"	Iraq"	NNP	O	_	and	_	0	IGNORE	True
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:$120b - Amount the war and its aftermath are projected to cost for the 2004 fiscal year .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.02677607536315918
#k-supertags:6
1	$120b	_	$120b	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	True
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
5	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	True
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	12	APP_s	True
7	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
8	aftermath	_	aftermath	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	True
9	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	True
10	projected	_	project	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
11	to	_	to	TO	O	_	multiple	_	0	IGNORE	True
12	cost	_	cost	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	10	APP_s	True
13	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	True
14	the_2004_fiscal_year	_name_	year	NN	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	12	APP_o	True
15	.	_	.	.	O	_	1	_	0	IGNORE	True

#raw:$59,339 - Amount the Bush campaign reimbursed Enron for 14 trips on its corporate jet during the 2000 campaign .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0677189826965332
#k-supertags:6
1	$59,339	_	$59,339	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Amount	amount	Amount	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
4	the	_	the	DT	O	_	person	_	0	IGNORE	True
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	True
6	campaign	_	campaign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_s	True
7	reimbursed	_	reimburse	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	3	APP_s	True
8	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_o	True
9	for	_	for	IN	O	_	and	_	0	IGNORE	True
10	14	_	14	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	11	MOD_mod	True
11	trips	_	trip	NNS	O	(d<root> / --LEX--)	$LEMMA$-03	()	7	APP_o2	True
12	on	_	on	IN	O	_	i	_	0	IGNORE	True
13	its	_	its	PRP$	O	_	person	_	0	IGNORE	True
14	corporate	_	corporate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	corporation	(mod())	15	MOD_mod	True
15	jet	_	jet	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
16	during	_	during	IN	O	_	i	_	0	IGNORE	True
17	the	_	the	DT	O	_	person	_	0	IGNORE	True
18	2000	_name_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	19	MOD_mod	True
19	campaign	_	campaign	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:33 - Percentage of the $15bn Bush pledged to fight Aids in Africa that must go to abstinence-only programmes .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.09462761878967285
#k-supertags:6
1	33	_	33	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	True
6	$15bn	_	$15bn	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	True
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	True
8	pledged	_	pledge	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), o2(s()))	0	ROOT	True
9	to	_	to	TO	O	_	person	_	0	IGNORE	True
10	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	APP_o2	True
11	Aids	aids	Aids	NNP	O	(d2<root> / disease  :name (n2 / --LEX--))	_NAME_	()	10	APP_o	True
12	in	_	in	IN	O	_	i	_	0	IGNORE	True
13	Africa	_name_	Africa	NNP	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	10	MOD_mod	True
14	that	_	that	WDT	O	_	name	_	0	IGNORE	True
15	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	16	MOD_s	True
16	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-10	(o(), s())	11	MOD_s	True
17	to	_	to	IN	O	_	name	_	0	IGNORE	True
18	abstinence-only	_	abstinence-only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	True
19	programmes	_	programme	NNS	O	(d<root> / --LEX--)	program	()	16	APP_o	True
20	.	_	.	.	O	_	exchange-01	_	0	IGNORE	True

#raw:22 - Number of hours prisoners were handcuffed, shackled, and made to wear surgical masks, earmuffs, and blindfolds during their flight to Guantanamo .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.3565502166748047
#k-supertags:6
1	22	_	22	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	10	MOD_mod	True
2	-	_	-	HYPH	O	_	say-01	_	0	IGNORE	True
3	Number	number	number	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	APP_op1	True
4	of	_	of	IN	O	_	1	_	0	IGNORE	True
5	hours	_	hour	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	prisoners	_	prisoner	NNS	O	(d<root> / --LEX--)	imprison-01	()	10	APP_s	True
7	were	_	be	VBD	O	_	person	_	0	IGNORE	True
8	handcuffed,	_	handcuffed,	NNP	O	_	and	_	0	IGNORE	True
9	shackled,	_	shackled,	NNP	O	_	and	_	0	IGNORE	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
11	made	_	make	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	10	APP_op2	True
12	to	_	to	TO	O	_	woman	_	0	IGNORE	True
13	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	APP_o	True
14	surgical	_	surgical	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	True
15	masks,	_	masks,	NNS	O	_	and	_	0	IGNORE	True
16	earmuffs,	_	earmuffs,	NNS	O	_	and	_	0	IGNORE	True
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	13	APP_o	True
18	blindfolds	_	blindfold	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	True
19	during	_	during	IN	O	_	and	_	0	IGNORE	True
20	their	_	they	PRP$	O	_	person	_	0	IGNORE	True
21	flight	_	flight	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	fly-01	(mod(), s())	10	MOD_mod	True
22	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
23	Guantanamo	_name_	Guantanamo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	True
24	.	_	.	.	O	_	cause-01	_	0	IGNORE	True

#raw:90 - Percentage of Americans who approved of the way Bush was handling his job as president on 26 September 2001 .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.037828683853149414
#k-supertags:6
1	90	_	90	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	True
6	who	_	who	WP	O	_	person	_	0	IGNORE	True
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	True
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	True
12	was	_	be	VBD	O	_	person	_	0	IGNORE	True
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	True
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	True
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	True
16	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	True
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$REPL$	(mod())	15	MOD_mod	True
18	on	_	on	IN	O	_	10	_	0	IGNORE	True
19	26_September_2001	_name_	2001	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	True
20	.	_	.	.	O	_	11	_	0	IGNORE	True

#raw:67 - Percentage of Americans who approved of the way Bush was handling his job as president on 26 September 2002 .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03138303756713867
#k-supertags:6
1	67	_	67	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	True
6	who	_	who	WP	O	_	person	_	0	IGNORE	True
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	MOD_s	True
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	True
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	True
12	was	_	be	VBD	O	_	person	_	0	IGNORE	True
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	True
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	True
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	True
16	as	_	as	IN	O	(d<root> / --LEX--)	have-org-role-91	()	3	APP_mod	True
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$REPL$	(mod())	15	MOD_mod	True
18	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
19	26_September_2002	_name_	2002	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	True
20	.	_	.	.	O	_	11	_	0	IGNORE	True

#raw:54 - Percentage of Americans who approved of the way Bush was handling his job as president on 30 September, 2003 .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03316807746887207
#k-supertags:6
1	54	_	54	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	True
6	who	_	who	WP	O	_	person	_	0	IGNORE	True
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	2	MOD_s	True
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	True
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	True
12	was	_	be	VBD	O	_	person	_	0	IGNORE	True
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	True
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	True
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	True
16	as	_	as	IN	O	(d<root> / --LEX--)	have-org-role-91	()	3	APP_mod	True
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$REPL$	(mod())	15	MOD_mod	True
18	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	True
19	30	_	30	CD	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	_NUMBER_	(mod())	13	MOD_mod	True
20	September,	september,	september,	SYM	O	_	1	_	0	IGNORE	True
21	2003	_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	19	MOD_mod	True
22	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	True

#raw:50 - Percentage of Americans who approved of the way Bush was handling his job as president on 15 October 2003 .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.036081790924072266
#k-supertags:6
1	50	_	50	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	True
6	who	_	who	WP	O	_	person	_	0	IGNORE	True
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	True
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	True
12	was	_	be	VBD	O	_	person	_	0	IGNORE	True
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	True
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	True
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	True
16	as	_	as	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	have-org-role-91	(mod())	7	MOD_mod	True
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$REPL$	(mod())	15	MOD_mod	True
18	on	_	on	IN	O	_	10	_	0	IGNORE	True
19	15_October_2003	_name_	2003	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	True
20	.	_	.	.	O	_	date-interval	_	0	IGNORE	True

#raw:49 - Percentage of Americans who approved of the way Bush was handling his job as president in May 2004 .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.043363094329833984
#k-supertags:6
1	49	_	49	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	:	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	True
6	who	_	who	WP	O	_	person	_	0	IGNORE	True
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	True
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	True
12	was	_	be	VBD	O	_	person	_	0	IGNORE	True
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	True
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	True
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	True
16	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	True
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$REPL$	(mod())	15	MOD_mod	True
18	in	_	in	IN	O	_	10	_	0	IGNORE	True
19	May_2004	_name_	2004	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	2008	(mod())	13	MOD_mod	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:28 - Number of vacation days Bush took in August 2001, the month he received a 6 August Presidential Daily Briefing headed "Osama bin Laden Determined to Strike US Targets. "
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08835816383361816
#k-supertags:6
1	28	_	28	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	vacation	_	vacation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	True
6	days	_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	True
8	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	MOD_o	True
9	in	_	in	RP	O	_	after	_	0	IGNORE	True
10	August_2001,_the_month	_name_	month	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	True
11	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
12	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_mod	True
13	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	True
14	6_August	_name_	August	NNP	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	10	(mod())	17	MOD_mod	True
15	Presidential	presidential	Presidential	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	president	(mod())	17	MOD_mod	True
16	Daily	daily	Daily	NNP	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	17	MOD_mod	True
17	Briefing	briefing	Briefing	NNP	O	(d<root> / --LEX--)	brief-01	()	12	APP_o	True
18	headed	_	head	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	17	MOD_s	True
19	"Osama_bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_o	True
20	Determined	determined	determine	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	18	MOD_s	True
21	to	_	to	TO	O	_	name	_	0	IGNORE	True
22	Strike	strike	strike	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	20	APP_o	True
23	US	us	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_o	True
24	Targets.	targets.	Targets.	NNP	O	_	_NAME_	_	0	IGNORE	True
25	"	_	"	''	O	_	name	_	0	IGNORE	True

#raw:500 - Number of days Bush has spent all or part of his time away from the White House at his ranch in Crawford, Texas, his parents' retreat in Kennebunkport, Maine, or Camp David as of 1 April 2004 .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.5419204235076904
#k-supertags:6
1	500	_	500	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	True
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
5	days	_	day	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	3	MOD_mod	True
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	True
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	True
8	spent	_	spend	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o(), o2(), s())	0	ROOT	True
9	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	True
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	8	APP_o	True
11	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	True
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
13	his	_	he	PRP$	O	_	thing	_	0	IGNORE	True
14	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
15	away	_	away	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	8	APP_o2	True
16	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	True
17	the_White_House	_name_	House	NNP	O	(l2<root> / location  :name (n / --LEX--))	_NAME_	()	15	APP_op1	True
18	at	_	at	IN	O	_	relative-position	_	0	IGNORE	True
19	his	_	he	PRP$	O	_	mean-01	_	0	IGNORE	True
20	ranch	_	ranch	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
21	in	_	in	IN	O	_	i	_	0	IGNORE	True
22	Crawford,	crawford,	crawford,	CD	O	_	mean-01	_	0	IGNORE	True
23	Texas,	texas,	texas,	CD	O	_	and	_	0	IGNORE	True
24	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	True
25	parents'	_	parents'	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	mean-01	(mod())	26	MOD_mod	True
26	retreat	_	retreat	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_op1	True
27	in	_	in	IN	O	_	i	_	0	IGNORE	True
28	Kennebunkport,	kennebunkport,	kennebunkport,	CD	O	_	mean-01	_	0	IGNORE	True
29	Maine,	_name_	maine,	CD	O	_	_NAME_	_	0	IGNORE	True
30	or	_	or	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(mod(), op1(), op2())	8	MOD_mod	True
31	Camp_David	_name_	David	NNP	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	30	APP_op2	True
32	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	True
33	of	_	of	IN	O	_	3	_	0	IGNORE	True
34	1_April_2004	_name_	2004	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	30	MOD_mod	True
35	.	_	.	.	O	_	between	_	0	IGNORE	True

#raw:You shouldn't ask this question it's intimidating, if i tell you what people knows about Philippines you will blush, thank god many thinks i'm japanese just because of the way i keep myself, the way i talk and treat people, and the way i dress, so if you don't want nasty, insulting answers especially from those undesirable migrants like puttagenius, caloy, gro science, and irene .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.330005407333374
#k-supertags:6
1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
2	shouldn't	_	shouldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	True
3	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	19	APP_s	True
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	question	_	question	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	3	APP_o	True
6	it's	_	it's	PRP	O	_	thing	_	0	IGNORE	True
7	intimidating,	_	intimidating,	NNP	O	_	and	_	0	IGNORE	True
8	if	_	if	IN	O	_	cause-01	_	0	IGNORE	True
9	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	20	APP_s	True
10	tell	_	tell	VBP	O	(a<root> / --LEX--  :ARG2 (u<o2>)  :ARG1 (t2<o>)  :ARG0 (t<s>)  :condition-of (c<mod>))	$LEMMA$-01	(mod(), o(), o2(), s())	20	MOD_mod	True
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
12	what	_	what	WP	O	_	and	_	0	IGNORE	True
13	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	14	APP_s	True
14	knows	_	know	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_o	True
15	about	_	about	IN	O	_	thing	_	0	IGNORE	True
16	Philippines	_name_	Philippines	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_o	True
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
18	will	_	will	MD	O	_	thing	_	0	IGNORE	True
19	blush,	_	blush,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(o(), s())	0	ROOT	True
20	thank	_	thank	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	19	APP_o	True
21	god	_	god	UH	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_o	True
22	many	_	many	JJ	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	23	APP_s	True
23	thinks	_	think	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o2	True
24	i'm	_	i'm	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(o(), s())	19	MOD_s	True
25	japanese	_name_	japanese	NNS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	True
26	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
27	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	23	MOD_o	True
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
29	the	_	the	DT	O	_	person	_	0	IGNORE	True
30	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	27	APP_s	True
31	i	_	i	PRP	O	_	$REPL$	_	0	IGNORE	True
32	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	APP_mod	True
33	myself,	_	myself,	NNS	O	_	thing	_	0	IGNORE	True
34	the	_	the	DT	O	_	thing	_	0	IGNORE	True
35	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
36	i	_	i	PRP	O	_	$REPL$	_	0	IGNORE	True
37	talk	_	talk	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_op1	True
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	32	APP_s	True
39	treat	_	treat	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_op2	True
40	people,	_	people,	NNP	O	_	and	_	0	IGNORE	True
41	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	32	MOD_op1	True
42	the	_	the	DT	O	_	regardless-91	_	0	IGNORE	True
43	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_op2	True
44	i	_	i	PRP	O	_	thing	_	0	IGNORE	True
45	dress,	_	dress,	VBZ	O	_	-	_	0	IGNORE	True
46	so	_	so	IN	O	_	cause-01	_	0	IGNORE	True
47	if	_	if	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	19	MOD_s	True
48	you	_	you	PRP	O	_	$LEMMA$	_	19	IGNORE	True
49	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	50	MOD_mod	True
50	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_o	True
51	nasty,	_	nasty,	NNS	O	_	-	_	0	IGNORE	True
52	insulting	_	insult	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	insult-01	(s())	53	MOD_s	True
53	answers	_	answer	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	50	APP_s	True
54	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	58	MOD_mod	True
55	from	_	from	IN	O	_	oppose-01	_	0	IGNORE	True
56	those	_	those	DT	O	_	that	_	0	IGNORE	True
57	undesirable	_	undesirable	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	desire-01	(s())	58	MOD_s	True
58	migrants	_	migrant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_s	True
59	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	True
60	puttagenius,	_	puttagenius,	NNP	O	_	$LEMMA$	_	0	IGNORE	True
61	caloy,	_	caloy,	NNP	O	_	expressive	_	0	IGNORE	True
62	gro	_	gro	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_op1	True
63	science,	_	science,	NNP	O	_	mean-01	_	0	IGNORE	True
64	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(mod(), op1(), op2())	58	MOD_mod	True
65	irene	_	irene	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	64	APP_op2	True
66	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:when i watched werewolf in london ( great film) that was the only time i saw the yorkshire moors .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.058843135833740234
#k-supertags:6
1	when	_	when	WRB	O	_	i	_	0	IGNORE	True
2	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	True
3	watched	_	watch	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	16	MOD_mod	True
4	werewolf	_	werewolf	NN	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	True
5	in	_	in	IN	O	_	i	_	0	IGNORE	True
6	london	_name_	london	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	True
7	(	_	(	-LRB-	O	_	and	_	0	IGNORE	True
8	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
9	film)	_	film)	NNS	O	_	mean-01	_	0	IGNORE	True
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	True
11	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	True
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
13	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
14	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
15	i	_	i	PRP	O	_	1	_	0	IGNORE	True
16	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
17	the	_	the	DT	O	_	name	_	0	IGNORE	True
18	yorkshire	_	yorkshire	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	True
19	moors	_	moor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	True
20	.	_	.	.	O	(b<root> / --LEX--  :location-of (h<mod>))	multi-sentence	(mod())	16	MOD_mod	True

#raw:The people abandoned their farms and religious sites and the ground they stood on became moorland .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04388141632080078
#k-supertags:6
1	The	the	the	DT	O	_	$LEMMA$y	_	0	IGNORE	True
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_s	True
3	abandoned	_	abandon	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	9	APP_op1	True
4	their	_	they	PRP$	O	_	person	_	0	IGNORE	True
5	farms	_	farm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	True
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :poss (p<poss>)  :op2 (m<op2>))	$LEMMA$	(op1(), op2(), poss())	3	APP_o	True
7	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	sites	_	site	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	True
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
10	the	_	the	DT	O	_	he	_	0	IGNORE	True
11	ground	_	ground	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	True
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	stood	_	stand	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	True
14	on	_	on	IN	O	_	contrast-01	_	0	IGNORE	True
15	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	9	APP_op2	True
16	moorland	_	moorland	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	True
17	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:So I have a VERY long list of people I want to make Xmas gifts for and one of them is my best friend .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.2134711742401123
#k-supertags:6
1	So	so	so	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	17	MOD_s	True
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	17	APP_op1	True
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	True
5	VERY	very	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	True
7	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
9	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	7	MOD_mod	True
10	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	True
11	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	True
12	to	_	to	TO	O	_	person	_	0	IGNORE	True
13	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	9	MOD_s	True
14	Xmas	xmas	Xmas	NNP	O	(n3<root> / --LEX--  :name-of (f / festival  :time-of (t<mod>)))	_NAME_	(mod())	15	MOD_mod	True
15	gifts	_	gift	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
16	for	_	for	IN	O	_	thing	_	0	IGNORE	True
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op1(), op2(), op3())	0	ROOT	True
18	one	_	one	CD	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	17	APP_op3	True
19	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	17	MOD_s	True
20	them	_	they	PRP	O	_	person	_	0	IGNORE	True
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
22	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
23	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	24	MOD_s	True
24	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	17	APP_op2	True
25	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	True

#raw:its for a craft project.....i want to use it the way u would use icing... .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.31865644454956055
#k-supertags:6
1	its	_	its	PRP$	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	it	(o(), s())	6	MOD_o	True
2	for	_	for	IN	O	_	infer-01	_	0	IGNORE	True
3	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	True
4	craft	_	craft	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
5	project.....i	_	project.....i	CD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	True
6	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
7	to	_	to	TO	O	_	thing	_	0	IGNORE	True
8	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_o	True
9	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
10	the	_	the	DT	O	_	thing	_	0	IGNORE	True
11	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
12	u	_	u	PRP	O	(d<root> / --LEX--)	thing	()	14	APP_s	True
13	would	_	would	MD	O	_	thing	_	0	IGNORE	True
14	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	MOD_o	True
15	icing...	_	icing...	XX	O	_	_NAME_	_	0	IGNORE	True
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:took a bit of searching to discover that POP is probably PoP - plaster of Paris and yes plaster of Paris will slow way down if it is not exposed to air - in fact, if you are building up plaster ("the way you would icing") to do sculpting, which is rather uncommon, you keep the set plaster damp in order to add more unset plaster or you have to wet the area where you will be adding plaster "mud "
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.9850072860717773
#k-supertags:6
1	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(o(), s())	17	MOD_s	True
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	True
3	bit	_	bit	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
5	searching	_	search	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_o	True
6	to	_	to	TO	O	_	thing	_	0	IGNORE	True
7	discover	_	discover	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	1	MOD_mod	True
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	POP	_name_	pop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_dom	True
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
11	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	14	MOD_mod	True
12	PoP	pop	pop	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	True
13	-	_	-	NN	O	_	$LEMMA$	_	0	IGNORE	True
14	plaster	_	plaster	NN	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	17	APP_op1	True
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
16	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	True
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op1(), op2(), op3(), op4())	0	ROOT	True
18	yes	_	yes	UH	O	_	$LEMMA$	_	0	IGNORE	True
19	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	True
20	of	_	of	IN	O	_	thing	_	0	IGNORE	True
21	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	True
22	will	_	will	MD	O	_	thing	_	0	IGNORE	True
23	slow	_	slow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-down-03	(s())	17	APP_op2	True
24	way	_	way	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
25	down	_	down	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
26	if	_	if	IN	O	_	cause-01	_	0	IGNORE	True
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
28	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
29	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	30	MOD_mod	True
30	exposed	_	expose	VBN	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	True
31	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
32	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	True
33	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
34	in	_	in	NN	O	_	multi-sentence	_	0	IGNORE	True
35	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	True
36	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(o(), s())	17	MOD_o	True
37	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op3	True
38	are	_	be	VBP	O	_	person	_	0	IGNORE	True
39	building	_	build	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-up-05	(mod(), s())	36	MOD_mod	True
40	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	True
41	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	True
42	("the	_	("the	UH	O	_	see-01	_	0	IGNORE	True
43	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
44	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op4	True
45	would	_	would	MD	O	_	be-located-at-91	_	0	IGNORE	True
46	icing")	_	icing")	VB	O	_	shit	_	0	IGNORE	True
47	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
48	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	True
49	sculpting,	_	sculpting,	NNP	O	_	and	_	0	IGNORE	True
50	which	_	which	WDT	O	_	i	_	0	IGNORE	True
51	is	_	be	VBZ	O	_	i	_	0	IGNORE	True
52	rather	_	rather	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	59	MOD_mod	True
53	uncommon,	_	uncommon,	NFP	O	_	contrast-01	_	0	IGNORE	True
54	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
55	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(o(), s())	67	APP_op1	True
56	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
57	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	58	MOD_s	True
58	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	True
59	damp	_	damp	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_o	True
60	in	_	in	IN	O	_	cause-01	_	0	IGNORE	True
61	order	_	order	NN	O	_	cause-01	_	0	IGNORE	True
62	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
63	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), o(), s())	55	MOD_mod	True
64	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	66	MOD_mod	True
65	unset	_	unset	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	66	MOD_s	True
66	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_s	True
67	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	36	APP_s	True
68	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
69	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	67	APP_op2	True
70	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
71	wet	_	wet	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	APP_s	True
72	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
73	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	71	APP_s	True
74	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	True
75	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
76	will	_	will	MD	O	_	thing	_	0	IGNORE	True
77	be	_	be	VB	O	_	person	_	0	IGNORE	True
78	adding	_	add	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	73	APP_mod	True
79	plaster	_	plaster	NN	O	_	$LEMMA$	_	0	IGNORE	True
80	"mud	_	"mud	NNP	O	_	$LEMMA$	_	0	IGNORE	True
81	"	_	"	''	O	_	expressive	_	0	IGNORE	True

#raw:Cheapest surgeons work out of some small clinic and do not have the skills you are looking for. .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05021548271179199
#k-supertags:6
1	Cheapest	_name_	cheap	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	cheap-02	(s())	2	MOD_s	True
2	surgeons	_	surgeon	NNS	O	(d<root> / --LEX--)	surgery-01	()	9	APP_s	True
3	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	9	APP_op1	True
4	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	True
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
6	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
7	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	clinic	_	clinic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
10	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	True
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	True
12	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	9	APP_op2	True
13	the	_	the	DT	O	_	person	_	0	IGNORE	True
14	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	True
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	True
16	are	_	be	VBP	O	_	person	_	0	IGNORE	True
17	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	MOD_o	True
18	for.	_	for.	JJ	O	_	and	_	0	IGNORE	True
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:It's fine - just make sure that the room the cage is in is kept warm .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.013560295104980469
#k-supertags:6
1	It's	it's	it's	PRP	O	_	contrast-01	_	0	IGNORE	True
2	fine	_	fine	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	0	ROOT	True
3	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	True
4	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
5	make	_	make	VB	O	_	contrast-01	_	0	IGNORE	True
6	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	en$LEMMA$-01	(s())	2	APP_s	True
7	that	_	that	IN	O	_	you	_	0	IGNORE	True
8	the	_	the	DT	O	_	he	_	0	IGNORE	True
9	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	APP_s	True
10	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	True
11	cage	_	cage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_mod	True
12	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
13	in	_	in	IN	O	_	i	_	0	IGNORE	True
14	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
15	kept	_	keep	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	True
16	warm	_	warm	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	True
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The phones and networks are compatible, so the only reason it wouldn't work would be if you have, say, a cheap cell phone company. .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.10320568084716797
#k-supertags:6
1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	True
2	phones	_	phone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	True
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	6	APP_s	True
4	networks	_	network	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	True
5	are	_	be	VBP	O	_	person	_	0	IGNORE	True
6	compatible,	_	compatible,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	7	APP_s	True
7	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
8	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
9	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	7	MOD_s	True
11	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
12	wouldn't	_	wouldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	True
13	work	_	work	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	10	APP_o	True
14	would	_	would	MD	O	_	cause-01	_	0	IGNORE	True
15	be	_	be	VB	O	_	person	_	0	IGNORE	True
16	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	True
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
18	have,	_	have,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	7	APP_o	True
19	say,	_	say,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	-	(o(), s())	7	MOD_o	True
20	a	_	a	DT	O	_	-	_	0	IGNORE	True
21	cheap	_	cheap	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	True
22	cell	_	cell	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
23	phone	_	phone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	True
24	company.	_	company.	NN	O	_	$LEMMA$	_	0	IGNORE	True
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Is he on his last legs or is it conceivable that he could be around for another 15 years as is claimed by some of the sources ive been looking at ?
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12688636779785156
#k-supertags:6
1	Is	is	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	True
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
3	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
4	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
5	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	legs	_	leg	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	7	APP_op1	True
7	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
8	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	True
9	it	_	it	PRP	O	_	i	_	0	IGNORE	True
10	conceivable	_	conceivable	JJ	O	(f<root> / --LEX--  :ARG1 (p<o>))	deny-01	(o(s()))	7	APP_op2	True
11	that	_	that	IN	O	_	and	_	0	IGNORE	True
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	10	APP_o	True
14	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(o(), s())	13	APP_o	True
15	around	_	around	RB	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	True
16	for	_	for	IN	O	_	and	_	0	IGNORE	True
17	another_15_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	14	MOD_mod	True
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
19	is	_	be	VBZ	O	_	thing	_	0	IGNORE	True
20	claimed	_	claim	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	MOD_o	True
21	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	True
22	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	25	MOD_mod	True
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
24	the	_	the	DT	O	_	this	_	0	IGNORE	True
25	sources	_	source	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
26	ive	_	ive	RB	O	_	$LEMMA$	_	0	IGNORE	True
27	been	_	be	VBN	O	_	person	_	0	IGNORE	True
28	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	True
29	at	_	at	IN	O	_	thing	_	0	IGNORE	True
30	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	7	MOD_mod	True

#raw:im not worried about damaging the surface my tank is on because i can prop it up off the surface anyway .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0547332763671875
#k-supertags:6
1	im	_	im	UH	O	(d<root> / --LEX--)	i	()	3	APP_s	True
2	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	True
3	worried	_	worried	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	True
4	about	_	about	IN	O	_	say-01	_	0	IGNORE	True
5	damaging	_	damage	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
6	the	_	the	DT	O	_	he	_	0	IGNORE	True
7	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
9	tank	_	tank	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	MOD_poss	True
10	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
11	on	_	on	IN	O	_	thing	_	0	IGNORE	True
12	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	3	MOD_o	True
13	i	_	i	PRP	O	_	$REPL$	_	0	IGNORE	True
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_s	True
15	prop	_	prop	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-01	(s())	14	APP_s	True
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	True
18	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	True
19	the	_	the	DT	O	_	he	_	0	IGNORE	True
20	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	True
21	anyway	_	anyway	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:When was the last time you heard about a ship sinking ?
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.06034731864929199
#k-supertags:6
1	When	when	when	WRB	O	(n<root> / --LEX--  :time-of (p<mod>))	amr-unknown	(mod())	7	MOD_mod	True
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	True
3	the	_	the	DT	O	_	amr-unknown	_	0	IGNORE	True
4	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
7	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
8	about	_	about	IN	O	_	thing	_	0	IGNORE	True
9	a	_	a	DT	O	_	thing	_	0	IGNORE	True
10	ship	_	ship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
11	sinking	_	sink	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	True
12	?	_	?	.	O	_	concern-02	_	0	IGNORE	True

#raw:Once the troops started cleaning the weapon properly (even with the dirtier powder) the Vietnam era M-16 turned out to be a good weapon for the purpose it was being used for .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.06652069091796875
#k-supertags:6
1	Once	once	once	IN	O	_	$LEMMA$	_	0	IGNORE	True
2	the	_	the	DT	O	_	person	_	0	IGNORE	True
3	troops	_	troop	NNS	O	(d<root> / --LEX--)	troop	()	4	APP_s	True
4	started	_	start	VBD	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	18	MOD_mod	True
5	cleaning	_	clean	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	4	APP_o	True
6	the	_	the	DT	O	_	and	_	0	IGNORE	True
7	weapon	_	weapon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
8	properly	_	properly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	proper	(mod())	5	MOD_mod	True
9	(even	_	(even	NNP	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
10	with	_	with	IN	O	_	have-03	_	0	IGNORE	True
11	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
12	dirtier	_	dirty	JJR	O	(m2<root> / more  :degree-of (l / --LEX--  :ARG1 (m<s>)))	light-06	(s())	14	MOD_s	True
13	powder)	_	powder)	IN	O	_	cause-01	_	0	IGNORE	True
14	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	18	MOD_mod	True
15	Vietnam	_name_	Vietnam	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	True
16	era	_	era	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
17	M-16	_name_	M-16	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	18	APP_s	True
18	turned	_	turn	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-11	(o(), s())	0	ROOT	True
19	out	_	out	RP	O	_	cause-01	_	0	IGNORE	True
20	to	_	to	TO	O	_	and	_	0	IGNORE	True
21	be	_	be	VB	O	_	person	_	0	IGNORE	True
22	a	_	a	DT	O	_	1	_	0	IGNORE	True
23	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	True
24	weapon	_	weapon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	True
25	for	_	for	IN	O	_	have-purpose-91	_	0	IGNORE	True
26	the	_	the	DT	O	_	thing	_	0	IGNORE	True
27	purpose	_	purpose	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
28	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
29	was	_	be	VBD	O	_	person	_	0	IGNORE	True
30	being	_	be	VBG	O	_	person	_	0	IGNORE	True
31	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	True
32	for	_	for	IN	O	_	thing	_	0	IGNORE	True
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Just recently discovered them last time I was down there, they're very nice) www.kaffeeeis.co.n z
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1105496883392334
#k-supertags:6
1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
2	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	3	MOD_mod	True
3	discovered	_	discover	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	True
4	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
5	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
6	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	True
8	was	_	be	VBD	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), o(), s())	13	MOD_mod	True
9	down	_	down	RB	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
10	there,	_	there,	NNP	O	_	and	_	0	IGNORE	True
11	they're	_	they're	NNP	O	_	multi-sentence	_	0	IGNORE	True
12	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	nice)	_	nice)	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	publication-91	(o(), s())	0	ROOT	True
14	www.kaffeeeis.co.n	_	www.kaffeeeis.co.n	JJ	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	True
15	z	_	z	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	True

#raw:Given the chance your cat may only have one kidney, I would think the worst case scenario would be kidney disease, which untreated can lead to possible renal failure .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0847327709197998
#k-supertags:6
1	Given	given	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	13	MOD_o	True
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
3	chance	_	chance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	APP_s	True
4	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	True
5	cat	_	cat	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_s	True
6	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_s	True
7	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	6	APP_s	True
9	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	True
10	kidney,	_	kidney,	.	O	_	$LEMMA$	_	0	IGNORE	True
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	True
12	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	True
13	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
14	the	_	the	DT	O	_	thing	_	0	IGNORE	True
15	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	16	MOD_s	True
16	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	MOD_s	True
17	scenario	_	scenario	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
18	would	_	would	MD	O	_	thing	_	0	IGNORE	True
19	be	_	be	VB	O	_	person	_	0	IGNORE	True
20	kidney	_	kidney	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
21	disease,	_	disease,	NNS	O	_	include-91	_	0	IGNORE	True
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	True
23	untreated	_	untreate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	True
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	True
25	lead	_	lead	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(o(), s())	20	MOD_s	True
26	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
27	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	True
28	renal	_	renal	JJ	O	(d<root> / --LEX--)	kidney	()	29	APP_s	True
29	failure	_	failure	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	fail-01	(s())	25	APP_o	True
30	.	_	.	.	O	_	cause-01	_	0	IGNORE	True

#raw:And between the time I began my research and the time I applied, the minimum score did change once .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.02185511589050293
#k-supertags:6
1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	True
2	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	True
3	the	_	the	DT	O	_	and	_	0	IGNORE	True
4	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	True
6	began	_	begin	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	APP_op1	True
7	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
8	research	_	research	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_o	True
9	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(mod(), op1(), op2())	1	MOD_mod	True
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
11	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
12	I	i	I	PRP	O	_	1	_	0	IGNORE	True
13	applied,	_	applied,	VBZ	O	_	-	_	0	IGNORE	True
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
15	minimum	_	minimum	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	score	_	score	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_s	True
17	did	_	do	VBD	O	_	-	_	0	IGNORE	True
18	change	_	change	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op2	True
19	once	_	once	RB	O	_	$LEMMA$	_	0	IGNORE	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Your application is still evaluated on a number of criteria, not all of them as "cast in steel" as the points .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.14430904388427734
#k-supertags:6
1	Your	your	Your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	True
2	application	_	application	NN	O	(m<root> / --LEX--  :poss (i<poss>))	apply-01	(poss())	5	APP_s	True
3	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	5	APP_o	True
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	evaluated	_	evaluate	VBN	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
6	on	_	on	IN	O	_	and	_	0	IGNORE	True
7	a	_	a	DT	O	_	1	_	0	IGNORE	True
8	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	True
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
10	criteria,	_	criteria,	NNP	O	_	and	_	0	IGNORE	True
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	True
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
13	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	5	MOD_s	True
14	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
15	as	_	as	IN	O	_	equal	_	0	IGNORE	True
16	"cast	_	"cast	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	True
17	in	_	in	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	name	(mod())	5	MOD_mod	True
18	steel"	_	steel"	NFP	O	_	and	_	0	IGNORE	True
19	as	_	as	IN	O	_	equal	_	0	IGNORE	True
20	the	_	the	DT	O	_	he	_	0	IGNORE	True
21	points	_	point	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:In the photo on the couch, the pillow she is resting on clashes with everything else in the shot .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.020385026931762695
#k-supertags:6
1	In	in	in	IN	O	_	i	_	0	IGNORE	True
2	the	_	the	DT	O	_	he	_	0	IGNORE	True
3	photo	_	photo	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
4	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	True
5	the	_	the	DT	O	_	he	_	0	IGNORE	True
6	couch,	_	couch,	NNS	O	_	$LEMMA$	_	0	IGNORE	True
7	the	_	the	DT	O	_	he	_	0	IGNORE	True
8	pillow	_	pillow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
9	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
11	resting	_	rest	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	MOD_o	True
12	on	_	on	IN	O	_	and	_	0	IGNORE	True
13	clashes	_	clash	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
14	with	_	with	IN	O	_	-	_	0	IGNORE	True
15	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
16	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
17	in	_	in	IN	O	_	i	_	0	IGNORE	True
18	the	_	the	DT	O	_	thing	_	0	IGNORE	True
19	shot	_	shot	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	True

#raw:2. Short of chartering your own ship and crew, I don't see any way you could customize your own itinerary .
#batch_size:32
#normalized_nn_time:0.019789263606071472
#normalized_prepare_ftd_time:0.007581591606140137
#host:98e974c0f148
#parser:ftd
#parsing_time:0.5128991603851318
#k-supertags:6
1	2.	_	2.	LS	O	_	expressive	_	0	IGNORE	True
2	Short	short	short	JJ	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-06	(o(s()))	12	MOD_s	True
3	of	_	of	IN	O	_	except-01	_	0	IGNORE	True
4	chartering	_	charter	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	True
5	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	True
6	own	_	own	JJ	O	_	person	_	0	IGNORE	True
7	ship	_	ship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	4	MOD_op1	True
9	crew,	_	crew,	NNS	O	_	$LEMMA$	_	0	IGNORE	True
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	True
11	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	True
12	see	_	see	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	True
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_o	True
17	customize	_	customize	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	16	APP_s	True
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
19	own	_	own	JJ	O	_	person	_	0	IGNORE	True
20	itinerary	_	itinerary	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	17	APP_o	True
21	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:I could not go to their country and demand they slaughter and sell an animal as meat the way I prefer to eat it .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1061258316040039
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	True
2	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	possible-01	(o(), s())	0	ROOT	True
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	True
4	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(o(), s())	8	APP_op1	True
5	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
6	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	True
7	country	_	country	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	2	APP_s	True
9	demand	_	demand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	APP_op2	True
10	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
11	slaughter	_	slaughter	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	APP_op1	True
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	9	APP_o	True
13	sell	_	sell	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	True
14	an	_	an	DT	O	_	thing	_	0	IGNORE	True
15	animal	_	animal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
17	meat	_	meat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	True
18	the	_	the	DT	O	_	thing	_	0	IGNORE	True
19	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
20	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
21	prefer	_	prefer	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	MOD_s	True
22	to	_	to	TO	O	_	thing	_	0	IGNORE	True
23	eat	_	eat	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	True
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Last time I got a medium rat it was a girl and my snake handled her easily .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04381203651428223
#k-supertags:6
1	Last	last	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	True
4	got	_	get	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	12	MOD_mod	True
5	a	_	a	DT	O	_	thing	_	0	IGNORE	True
6	medium	_	medium	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	True
7	rat	_	rat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
9	was	_	be	VBD	O	_	person	_	0	IGNORE	True
10	a	_	a	DT	O	_	1	_	0	IGNORE	True
11	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	True
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
13	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
14	snake	_	snake	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	True
15	handled	_	handle	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	APP_op2	True
16	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	easily	_	easily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	easy-05	(s())	15	MOD_s	True
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:He is kind of hate walking with leash, every time I put the leash on, he will try to bite it .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04454684257507324
#k-supertags:6
1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
2	is	_	be	VBZ	O	_	and	_	0	IGNORE	True
3	kind	_	kind	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	5	MOD_mod	True
4	of	_	of	RB	O	_	include-91	_	0	IGNORE	True
5	hate	_	hate	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
6	walking	_	walk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_o	True
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	True
8	leash,	_	leash,	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	True
9	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	18	MOD_mod	True
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	True
12	put	_	put	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_s	True
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
14	leash	_	leash	NN	O	_	$LEMMA$	_	0	IGNORE	True
15	on,	_	on,	NFP	O	_	and	_	0	IGNORE	True
16	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	will	_	will	MD	O	_	and	_	0	IGNORE	True
18	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	MOD_s	True
19	to	_	to	TO	O	_	and	_	0	IGNORE	True
20	bite	_	bite	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_o	True
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Is there any way can let him know how to walk with leash ?
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.017720699310302734
#k-supertags:6
1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	True
2	there	_	there	EX	O	_	interrogative	_	0	IGNORE	True
3	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
4	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
5	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	True
6	let	_	let	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	5	APP_o	True
7	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
8	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_o	True
9	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	True
10	to	_	to	TO	O	_	thing	_	0	IGNORE	True
11	walk	_	walk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	True
12	with	_	with	IN	O	_	i	_	0	IGNORE	True
13	leash	_	leash	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
14	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	True

#raw:And every time he see some one he will rush to people and jump on them, doesn't listen to me .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.21782565116882324
#k-supertags:6
1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	True
2	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	13	MOD_mod	True
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
5	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	True
6	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
7	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
9	will	_	will	MD	O	_	i	_	0	IGNORE	True
10	rush	_	rush	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	13	APP_op1	True
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
12	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_o	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	1	APP_op2	True
14	jump	_	jump	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	13	APP_op2	True
15	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
16	them,	_	them,	NNP	O	_	i	_	0	IGNORE	True
17	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	True
18	listen	_	listen	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	13	MOD_o	True
19	to	_	to	IN	O	_	i	_	0	IGNORE	True
20	me	_	I	PRP	O	_	i	_	0	IGNORE	True
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Last thing is every time I sit on a chair or something higher than him, he will try to jump on, if he can't, he will bark all the time until I let him get on, what should I do with this ?
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.30524730682373047
#k-supertags:6
1	Last	last	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
2	thing	_	thing	NN	O	_	$LEMMA$	_	0	IGNORE	True
3	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	possible-01	(o(), s())	0	ROOT	True
4	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	3	MOD_mod	True
5	time	_	time	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	3	MOD_s	True
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	18	APP_s	True
7	sit	_	sit	VBP	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-01	(mod(), o(), s())	18	MOD_mod	True
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	a	_	a	DT	O	_	person	_	0	IGNORE	True
10	chair	_	chair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	True
11	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	7	APP_s	True
12	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	True
13	higher	_	high	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	high-02	(s())	12	MOD_s	True
14	than	_	than	IN	O	_	more	_	0	IGNORE	True
15	him,	_	him,	NNS	O	_	and	_	0	IGNORE	True
16	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	True
17	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	True
18	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	True
19	to	_	to	TO	O	(d<root> / --LEX--)	and	()	3	APP_o	True
20	jump	_	jump	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	18	APP_o	True
21	on,	_	on,	RB	O	_	and	_	0	IGNORE	True
22	if	_	if	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	3	MOD_s	True
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
24	can't,	_	can't,	XX	O	_	and	_	0	IGNORE	True
25	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
26	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	True
27	bark	_	bark	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	True
28	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
29	the	_	the	DT	O	_	he	_	0	IGNORE	True
30	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
31	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	27	MOD_mod	True
32	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	True
33	let	_	let	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op1	True
34	him	_	he	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(o(), s())	3	MOD_s	True
35	get	_	get	VB	O	(d<root> / --LEX--)	$LEMMA$-05	()	33	APP_s	True
36	on,	_	on,	NFP	O	_	multi-sentence	_	0	IGNORE	True
37	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	40	APP_o	True
38	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	34	APP_o	True
39	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
40	do	_	do	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o(), o2(), s())	38	APP_s	True
41	with	_	with	IN	O	_	-	_	0	IGNORE	True
42	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o2	True
43	?	_	?	.	O	_	interrogative	_	0	IGNORE	True

#raw:That's kind of the way it goes..lol .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.00397801399230957
#k-supertags:6
1	That's	that's	that's	DT	O	_	resemble-01	_	0	IGNORE	True
2	kind	_	kind	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	5	MOD_mod	True
3	of	_	of	RB	O	_	$LEMMA$	_	0	IGNORE	True
4	the	_	the	DT	O	_	and	_	0	IGNORE	True
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	0	ROOT	True
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	True
7	goes..lol	_	goes..lol	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	5	APP_mod	True
8	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:But in the meantime, highly recommend jeans and long sleeves anytime you'll be interacting with the kittens .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1447925567626953
#k-supertags:6
1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	True
2	in	_	in	IN	O	_	i	_	0	IGNORE	True
3	the	_	the	DT	O	_	he	_	0	IGNORE	True
4	meantime,	_	meantime,	NNP	O	_	$LEMMA$	_	0	IGNORE	True
5	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	6	MOD_mod	True
6	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	1	APP_s	True
7	jeans	_	jean	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	6	APP_o	True
9	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	MOD_s	True
10	sleeves	_	sleeve	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	True
11	anytime	_	anytime	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
12	you'll	_	you'll	PRP	O	_	i	_	0	IGNORE	True
13	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
14	interacting	_	interact	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	True
15	with	_	with	IN	O	_	-	_	0	IGNORE	True
16	the	_	the	DT	O	_	person	_	0	IGNORE	True
17	kittens	_	kitten	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I recommend buying a single unlimited Europass and travelling anywhere in the EU your heart desires .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0516965389251709
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
3	buying	_	buy	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	True
4	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	True
5	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	True
6	unlimited	_	unlimited	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
7	Europass	_name_	Europass	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_s	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	2	APP_o	True
9	travelling	_	travel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_op2	True
10	anywhere	_	anywhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
11	in	_	in	IN	O	_	i	_	0	IGNORE	True
12	the	_	the	DT	O	_	person	_	0	IGNORE	True
13	EU	_name_	EU	NNP	O	(n2<root> / --LEX--  :name-of (o / organization  :location-of (s<mod>)))	_NAME_	(mod())	10	MOD_mod	True
14	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
15	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
16	desires	_	desire	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	MOD_o	True
17	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:the room you sleep in is best (seeing you so relaxed that you are sleeping will send the message that everything is OK), but others will work just as well .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.25154614448547363
#k-supertags:6
1	the	_	the	DT	O	_	he	_	0	IGNORE	True
2	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
4	sleep	_	sleep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	2	MOD_o	True
5	in	_	in	RP	O	_	i	_	0	IGNORE	True
6	is	_	be	VBZ	O	_	request-confirmation-91	_	0	IGNORE	True
7	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	24	MOD_s	True
8	(seeing	_	(seeing	NFP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	True
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
10	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	relaxed	_	relax	VBD	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	True
12	that	_	that	IN	O	_	cause-01	_	0	IGNORE	True
13	you	_	you	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	24	MOD_s	True
14	are	_	be	VBP	O	_	person	_	0	IGNORE	True
15	sleeping	_	sleep	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	True
16	will	_	will	MD	O	_	thing	_	0	IGNORE	True
17	send	_	send	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	24	MOD_s	True
18	the	_	the	DT	O	_	thing	_	0	IGNORE	True
19	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	True
20	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
21	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	True
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
23	OK),	_name_	ok),	CD	O	_	and	_	0	IGNORE	True
24	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
25	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	True
26	will	_	will	MD	O	_	thing	_	0	IGNORE	True
27	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-09	(s())	24	APP_o	True
28	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
29	as	_	as	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal	(s())	27	MOD_s	True
30	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-09	(mod())	27	MOD_mod	True
31	.	_	.	.	O	_	event	_	0	IGNORE	True

#raw:extend the time he is out each day, but for the first month, always put him in his room at night, so he feels safe to sleep .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08758687973022461
#k-supertags:6
1	extend	_	extend	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	True
2	the	_	the	DT	O	_	he	_	0	IGNORE	True
3	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	1	APP_s	True
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
5	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
6	out	_	out	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	APP_mod	True
7	each	_	each	DT	O	(r<root> / --LEX--  :ARG3 (t<s>)  :frequency-of (t2<mod>))	$LEMMA$	(mod(), s())	6	MOD_mod	True
8	day,	_	day,	NN	O	_	shit	_	0	IGNORE	True
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
10	for	_	for	IN	O	_	or	_	0	IGNORE	True
11	the	_	the	DT	O	_	he	_	0	IGNORE	True
12	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	15	MOD_mod	True
13	month,	_	month,	CD	O	_	$LEMMA$	_	0	IGNORE	True
14	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	put	_	put	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	9	APP_o	True
16	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	in	_	in	IN	O	_	i	_	0	IGNORE	True
18	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
19	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	True
20	at	_	at	IN	O	_	i	_	0	IGNORE	True
21	night,	_	night,	NNP	O	_	$LEMMA$	_	0	IGNORE	True
22	so	_	so	IN	O	_	cause-01	_	0	IGNORE	True
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
24	feels	_	feel	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	True
25	safe	_	safe	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	True
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
27	sleep	_	sleep	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	True
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I have done Yoga for riders for a while, a 20 minute routine I found on YouTube (I think its called "Yoga for horse back riding" hosted by a man) It helped with noticing slight differences in my balance and weight distribution but not really for the way I use my legs and back .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.3296623229980469
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	True
3	done	_	do	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o(), o2(), s())	0	ROOT	True
4	Yoga	yoga	Yoga	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
5	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	True
6	riders	_	rider	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
7	for	_	for	IN	O	_	or	_	0	IGNORE	True
8	a	_	a	DT	O	_	1	_	0	IGNORE	True
9	while,	_	while,	NNS	O	_	and	_	0	IGNORE	True
10	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	3	MOD_mod	True
11	20_minute	_name_	minute	NN	O	(d<root> / distance-quantity  :unit (i / --LEX--)  :mod-of (p2<mod>))	minute	(mod())	12	MOD_mod	True
12	routine	_	routine	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	3	MOD_s	True
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
14	found	_	find	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	True
15	on	_	on	IN	O	_	cause-01	_	0	IGNORE	True
16	YouTube	_name_	YouTube	NNP	O	(p<root> / publication  :name (n / --LEX--)  :medium-of (u<mod>))	_NAME_	(mod())	14	MOD_mod	True
17	(I	(i	(I	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
18	think	_	think	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	MOD_s	True
19	its	_	its	PRP$	O	_	i	_	0	IGNORE	True
20	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	18	APP_o	True
21	"Yoga	"yoga	"Yoga	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	True
22	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
23	horse	_	horse	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
24	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
25	riding"	_	riding"	NNS	O	_	and	_	0	IGNORE	True
26	hosted	_	host	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	MOD_o	True
27	by	_	by	IN	O	_	and	_	0	IGNORE	True
28	a	_	a	DT	O	_	1	_	0	IGNORE	True
29	man)	_	man)	NN	O	_	$LEMMA$	_	0	IGNORE	True
30	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	True
31	helped	_	help	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	42	APP_s	True
32	with	_	with	IN	O	_	cause-01	_	0	IGNORE	True
33	noticing	_	notice	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	True
34	slight	_	slight	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	True
35	differences	_	difference	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	33	APP_s	True
36	in	_	in	IN	O	_	i	_	0	IGNORE	True
37	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
38	balance	_	balance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op1	True
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	35	APP_s	True
40	weight	_	weight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	True
41	distribution	_	distribution	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	distribute-01	(s())	39	APP_op2	True
42	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	3	APP_o2	True
43	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	42	MOD_mod	True
44	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	47	MOD_s	True
45	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
46	the	_	the	DT	O	_	thing	_	0	IGNORE	True
47	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	42	APP_o	True
48	I	i	I	PRP	O	_	1	_	0	IGNORE	True
49	use	_	use	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_mod	True
50	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
51	legs	_	leg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op1	True
52	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	49	APP_s	True
53	back	_	back	RB	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op2	True
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:You should ABSOLUTELY call your veterinarian back immediately to clarify anything you have questions about .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.44533348083496094
#k-supertags:6
1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	True
3	ABSOLUTELY	absolutely	absolutely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	absolute	(mod())	4	MOD_mod	True
4	call	_	call	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	2	APP_s	True
5	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
6	veterinarian	_	veterinarian	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	4	APP_o	True
7	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
8	immediately	_	immediately	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	immediate	(mod())	4	MOD_mod	True
9	to	_	to	TO	O	_	thing	_	0	IGNORE	True
10	clarify	_	clarify	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-10	(mod(), o(), s())	4	MOD_mod	True
11	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	True
12	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	True
14	questions	_	question	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	True
15	about	_	about	IN	O	_	and	_	0	IGNORE	True
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Unfair for the girl as boys don't have that kind of handicap, but that's the way our own rules work .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07947230339050293
#k-supertags:6
1	Unfair	unfair	unfair	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	fair-01	(s())	13	APP_s	True
2	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
4	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	True
5	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	1	MOD_o	True
6	boys	_	boy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	True
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	5	APP_s	True
9	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
11	of	_	of	RB	O	_	cause-01	_	0	IGNORE	True
12	handicap,	_	handicap,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
14	that's	_	that's	PRP	O	_	person	_	0	IGNORE	True
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
16	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	APP_o	True
17	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	True
18	own	_	own	JJ	O	_	cause-01	_	0	IGNORE	True
19	rules	_	rule	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	20	APP_s	True
20	work	_	work	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	16	APP_mod	True
21	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:Your answer doesn't do anything but remind me that I'm going to be $25,000 in debt by the time I'm 22 .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.17532682418823242
#k-supertags:6
1	Your	your	Your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	answer	_	answer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_s	True
3	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	True
4	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	6	MOD_s	True
5	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
7	remind	_	remind	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	True
8	me	_	I	PRP	O	_	i	_	0	IGNORE	True
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
10	I'm	i'm	I'm	NNS	O	_	i	_	0	IGNORE	True
11	going	_	go	VBG	O	_	say-01	_	0	IGNORE	True
12	to	_	to	TO	O	_	and	_	0	IGNORE	True
13	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
14	$25,000	_	$25,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	16	MOD_mod	True
15	in	_	in	IN	O	_	i	_	0	IGNORE	True
16	debt	_	debt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
17	by	_	by	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
19	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
20	I'm	i'm	I'm	NNPS	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	dollar	(mod(), o(), s())	6	MOD_mod	True
21	22	_	22	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	20	APP_s	True
22	.	_	.	.	O	_	year	_	0	IGNORE	True

#raw:I've also considered becoming a teacher, but it's not a job I'm cut out for .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.017632246017456055
#k-supertags:6
1	I've	i've	I've	NNP	O	_	name	_	0	IGNORE	True
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	considered	_	consider	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	APP_s	True
4	becoming	_	become	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	True
5	a	_	a	DT	O	_	you	_	0	IGNORE	True
6	teacher,	_	teacher,	CD	O	_	shit	_	0	IGNORE	True
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
8	it's	_	it's	PRP$	O	_	person	_	0	IGNORE	True
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	True
10	a	_	a	DT	O	_	thing	_	0	IGNORE	True
11	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
12	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	True
13	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-06	(s())	7	APP_o	True
14	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	True
15	for	_	for	IN	O	_	name	_	0	IGNORE	True
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:And all that time you're overseas you'll be racking up interest .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.025833845138549805
#k-supertags:6
1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	True
2	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
3	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
4	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
5	you're	_	you're	PRP$	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
6	overseas	_	overseas	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
7	you'll	_	you'll	PRP	O	_	name	_	0	IGNORE	True
8	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
9	racking	_	rack	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	1	APP_op2	True
10	up	_	up	RP	O	_	-	_	0	IGNORE	True
11	interest	_	interest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	True
12	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:i have tried EVERYTHING i can to get him to eat but he refuses .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04636359214782715
#k-supertags:6
1	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	True
3	tried	_	try	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	APP_s	True
4	EVERYTHING	everything	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
5	i	_	i	PRP	O	_	do-02	_	0	IGNORE	True
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	MOD_s	True
7	to	_	to	TO	O	_	thing	_	0	IGNORE	True
8	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-04	(mod(), o(), s())	3	MOD_mod	True
9	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
10	to	_	to	TO	O	_	thing	_	0	IGNORE	True
11	eat	_	eat	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	True
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
13	he	_	he	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
14	refuses	_	refuse	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	True
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:the first night i brought her home i did the sniffing under the door thing and left it at that .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.2521979808807373
#k-supertags:6
1	the	_	the	DT	O	_	he	_	0	IGNORE	True
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	5	MOD_mod	True
3	night	_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
4	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	True
5	brought	_	bring	VBD	O	(a<root> / --LEX--  :ARG2 (u<o2>)  :ARG1 (t2<o>)  :ARG0 (t<s>)  :condition-of (c<mod>))	$LEMMA$-01	(mod(), o(), o2(), s())	16	MOD_mod	True
6	her	_	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
7	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	True
8	i	_	i	PRP	O	_	$REPL$	_	0	IGNORE	True
9	did	_	do	VBD	O	_	$LEMMA$-02	_	0	IGNORE	True
10	the	_	the	DT	O	_	he	_	0	IGNORE	True
11	sniffing	_	sniffing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	16	APP_op1	True
12	under	_	under	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(mod(), op1())	11	MOD_mod	True
13	the	_	the	DT	O	_	he	_	0	IGNORE	True
14	door	_	door	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
15	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	True
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
17	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-14	(s())	16	APP_op2	True
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
19	at	_	at	IN	O	_	cause-01	_	0	IGNORE	True
20	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	True
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The people rejected their attempt to topple the government, and for all intents and purposes the US military (and the ARVN) handed Johnson the victory he had ordered them to achieve within the time-frame he ordered it .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.24124407768249512
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_s	True
3	rejected	_	reject	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_op1	True
4	their	_	they	PRP$	O	_	person	_	0	IGNORE	True
5	attempt	_	attempt	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_o	True
6	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	True
7	topple	_	topple	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	5	APP_o	True
8	the	_	the	DT	O	_	he	_	0	IGNORE	True
9	government,	_	government,	NNS	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
11	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	True
12	all	_	all	DT	O	_	$LEMMA$	_	0	IGNORE	True
13	intents	_	intent	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(mod(), op1(), op2())	10	MOD_mod	True
15	purposes	_	purpose	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	True
16	the	_	the	DT	O	_	person	_	0	IGNORE	True
17	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	True
18	military	_	military	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	True
19	(and	_	(and	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
20	the	_	the	DT	O	_	person	_	0	IGNORE	True
21	ARVN)	arvn)	arvn)	NN	O	_	$LEMMA$	_	0	IGNORE	True
22	handed	_	hand	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	10	APP_op2	True
23	Johnson	_name_	Johnson	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_o2	True
24	the	_	the	DT	O	_	person	_	0	IGNORE	True
25	victory	_	victory	NN	O	(d<root> / --LEX--)	win-01	()	22	APP_o	True
26	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
27	had	_	have	VBD	O	_	person	_	0	IGNORE	True
28	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	True
29	them	_	they	PRP	O	_	person	_	0	IGNORE	True
30	to	_	to	TO	O	_	thing	_	0	IGNORE	True
31	achieve	_	achieve	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	True
32	within	_	within	IN	O	_	conform-01	_	0	IGNORE	True
33	the	_	the	DT	O	_	event	_	0	IGNORE	True
34	time-frame	_	time-frame	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	True
35	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
36	ordered	_	order	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	True
37	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
38	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:if there are shady areas he can move to (for example a 3x5x4 tank with light on one side) then you can leave it on a full 12-14 hours, if its a small tank and he can't escape the light then 4-6 at most at a time though quite possibly 4-6 hours at a time twice a day .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:1.8831017017364502
#k-supertags:6
1	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(o(), s())	0	ROOT	True
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	True
3	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
4	shady	_	shady	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_o	True
8	move	_	move	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	7	APP_s	True
9	to	_	to	IN	O	_	name	_	0	IGNORE	True
10	(for	_	(for	VBN	O	_	or	_	0	IGNORE	True
11	example	_	example	NN	O	_	exemplify-01	_	0	IGNORE	True
12	a	_	a	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	1	MOD_mod	True
13	3x5x4	_name_	3x5x4	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	True
14	tank	_	tank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
15	with	_	with	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-03	(o(), s())	1	MOD_s	True
16	light	_	light	NN	O	(i<root> / --LEX--  :prep-with-of (l<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
17	on	_	on	IN	O	_	product	_	0	IGNORE	True
18	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	16	MOD_mod	True
19	side)	_	side)	NNS	O	_	and	_	0	IGNORE	True
20	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	True
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	True
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_s	True
23	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-15	(s())	22	APP_s	True
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
25	on	_	on	IN	O	_	and	_	0	IGNORE	True
26	a	_	a	DT	O	_	1	_	0	IGNORE	True
27	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
28	12-14	_	12-14	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	17	(mod())	29	MOD_mod	True
29	hours,	_	hours,	NNS	O	(m<root> / --LEX--  :unit-of (a<mod>))	$LEMMA$	(mod())	1	MOD_mod	True
30	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	True
31	its	_	its	PRP$	O	_	it	_	0	IGNORE	True
32	a	_	a	DT	O	_	1	_	0	IGNORE	True
33	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	True
34	tank	_	tank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op1	True
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(mod(), op1(), op2())	22	MOD_mod	True
36	he	_	he	PRP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	1	MOD_mod	True
37	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	True
38	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	True
39	the	_	the	DT	O	_	person	_	0	IGNORE	True
40	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	True
41	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	True
42	4-6	_	4-6	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	43	MOD_mod	True
43	at	_	at	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	foot	(mod())	1	MOD_mod	True
44	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	42	MOD_mod	True
45	at	_	at	IN	O	_	mean-01	_	0	IGNORE	True
46	a	_	a	DT	O	_	1	_	0	IGNORE	True
47	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	42	MOD_mod	True
48	though	_	though	IN	O	_	contrast-01	_	0	IGNORE	True
49	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	50	MOD_mod	True
50	possibly	_	possibly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	36	MOD_s	True
51	4-6_hours	_name_	hour	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	cost-01	(mod())	42	MOD_mod	True
52	at	_	at	IN	O	_	1	_	0	IGNORE	True
53	a	_	a	DT	O	_	1	_	0	IGNORE	True
54	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
55	twice	_	twice	PDT	O	_	$LEMMA$	_	0	IGNORE	True
56	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	1	MOD_mod	True
57	day	_	day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :ARG2-of (r / rate-entity-91  :frequency-of (c<mod>)))	$LEMMA$	(mod())	42	MOD_mod	True
58	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:One thing you can be sure of about Irish weather is how little you can be sure of .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03333258628845215
#k-supertags:6
1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	True
2	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	True
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	True
5	be	_	be	VB	O	_	person	_	0	IGNORE	True
6	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	4	APP_s	True
7	of	_	of	IN	O	_	name	_	0	IGNORE	True
8	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	4	MOD_mod	True
9	Irish	_name_	irish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	country	(mod())	10	MOD_mod	True
10	weather	_	weather	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
12	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	True
13	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	True
16	be	_	be	VB	O	_	thing	_	0	IGNORE	True
17	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	True
18	of	_	of	IN	O	_	thing	_	0	IGNORE	True
19	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:There are a couple ways one could spawn lineatus - mop spawning & water incubating them for two weeks, picking eggs from a mop & putting them in a tray of treated, seasoned water or setting up the parents in a planted tank & moving them so the fry can hatch out there .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.6180922985076904
#k-supertags:6
1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	True
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
3	a	_	a	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	1	(o(), s())	5	MOD_s	True
4	couple	_	couple	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	ways	_	way	NNS	O	(t3<root> / --LEX--  :domain (t2<dom>)  :manner-of (s2<mod>))	$LEMMA$	(dom(), mod())	0	ROOT	True
6	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_mod	True
8	spawn	_	spawn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	7	APP_s	True
9	lineatus	_	lineatus	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	True
10	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	True
11	mop	_	mop	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
12	spawning	_	spawning	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_op1	True
13	&	_name_	&	CC	O	_	multi-sentence	_	0	IGNORE	True
14	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	True
15	incubating	_	incubate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	True
16	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	for	_	for	IN	O	_	and	_	0	IGNORE	True
18	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	15	MOD_mod	True
19	weeks,	_name_	weeks,	NNS	O	_	and	_	0	IGNORE	True
20	picking	_	pick	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	True
21	eggs	_	egg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
22	from	_	from	IN	O	_	and	_	0	IGNORE	True
23	a	_	a	DT	O	_	person	_	0	IGNORE	True
24	mop	_	mop	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
25	&	_	&	CC	O	_	$LEMMA$	_	0	IGNORE	True
26	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	35	APP_op3	True
27	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
28	in	_	in	IN	O	_	i	_	0	IGNORE	True
29	a	_	a	DT	O	_	person	_	0	IGNORE	True
30	tray	_	tray	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	True
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
32	treated,	_	treated,	NNP	O	_	and	_	0	IGNORE	True
33	seasoned	_	seasoned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	True
34	water	_	water	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
35	or	_	or	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op1(), op2(), op3(), op4())	5	APP_dom	True
36	setting	_	set	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-03	(s())	35	APP_op4	True
37	up	_	up	RP	O	_	include-91	_	0	IGNORE	True
38	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
39	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	36	APP_s	True
40	in	_	in	IN	O	_	i	_	0	IGNORE	True
41	a	_	a	DT	O	_	1	_	0	IGNORE	True
42	planted	_	plant	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	43	MOD_s	True
43	tank	_	tank	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	36	MOD_mod	True
44	&	_name_	&	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	you	(op1(), op2())	5	MOD_op1	True
45	moving	_	move	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_op2	True
46	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
47	so	_	so	IN	O	_	cause-01	_	0	IGNORE	True
48	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	True
49	fry	_	fry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_s	True
50	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	45	MOD_mod	True
51	hatch	_	hatch	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	50	APP_s	True
52	out	_	out	RB	O	_	$LEMMA$	_	0	IGNORE	True
53	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	51	MOD_mod	True
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I know a lot of people say to wait until he calls you, but it's different because I'm a client and technically that's all I am at this point .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1239628791809082
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	APP_s	True
3	a	_	a	DT	O	_	1	_	0	IGNORE	True
4	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_s	True
7	say	_	say	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	True
8	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
9	wait	_	wait	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	True
10	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	9	MOD_mod	True
11	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
12	calls	_	call	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	10	APP_op1	True
13	you,	_	you,	NNS	O	_	_NAME_	_	0	IGNORE	True
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
15	it's	_	it's	PRP	O	_	contrast-01	_	0	IGNORE	True
16	different	_	different	JJ	O	(d<root> / --LEX--)	differ-02	()	14	APP_o	True
17	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	16	MOD_o	True
18	I'm	i'm	i'm	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-rel-role-91	(o(), s())	14	MOD_s	True
19	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	True
20	client	_	client	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	21	APP_op1	True
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	17	APP_s	True
22	technically	_	technically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	technical	(mod())	18	MOD_mod	True
23	that's	_	that's	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	MOD_s	True
24	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	True
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
26	am	_	be	VBP	O	_	$LEMMA$-02	_	0	IGNORE	True
27	at	_	at	IN	O	_	thing	_	0	IGNORE	True
28	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	True
29	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:He didn't have my number either because this was the first time I've called HIM instead of his dad .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.06695699691772461
#k-supertags:6
1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
2	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	True
3	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	7	APP_o	True
4	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
5	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
6	either	_	either	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
7	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
8	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
9	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	True
10	the	_	the	DT	O	_	he	_	0	IGNORE	True
11	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	14	MOD_mod	True
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
13	I've	i've	i've	NN	O	_	i	_	0	IGNORE	True
14	called	_	call	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	7	APP_s	True
15	HIM	him	him	PRP	O	_	$LEMMA$	_	0	IGNORE	True
16	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(o(), s())	14	MOD_s	True
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
18	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
19	dad	_	dad	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_o	True
20	.	_	.	.	O	_	person	_	0	IGNORE	True

#raw:The reason he said he didn't put that nail in was because he "didn't want to risk it" with my horse's horrible feet .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.042243003845214844
#k-supertags:6
1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	True
2	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
4	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	True
5	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
6	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	True
7	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	4	APP_o	True
8	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	nail	_	nail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	True
10	in	_	in	RP	O	_	i	_	0	IGNORE	True
11	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
12	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	2	APP_s	True
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
14	"didn't	_	"didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	True
15	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	True
16	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	True
17	risk	_	risk	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	True
18	it"	_	it"	NNP	O	_	thing	_	0	IGNORE	True
19	with	_	with	IN	O	_	i	_	0	IGNORE	True
20	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
21	horse's	_	horse's	CD	O	_	$LEMMA$	_	0	IGNORE	True
22	horrible	_	horrible	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
23	feet	_	foot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	True
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:This is about the fourth time they've done my horse's feet because I just switched back to them .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03812384605407715
#k-supertags:6
1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(o(), s())	12	MOD_o	True
3	about	_	about	RB	O	_	$LEMMA$	_	0	IGNORE	True
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
5	fourth	_name_	fourth	JJ	O	(o2<root> / ordinal-entity  :value (explicitanon4 / --LEX--)  :time-of (o<mod>))	4	(mod())	2	MOD_mod	True
6	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
7	they've	_	they've	VBG	O	_	mean-01	_	0	IGNORE	True
8	done	_	do	VBN	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-02	(o(poss_UNIFY_s()))	12	APP_o	True
9	my	_	my	PRP$	O	_	see-01	_	0	IGNORE	True
10	horse's	_	horse'	NNS	O	_	contrast-01	_	0	IGNORE	True
11	feet	_	foot	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	8	APP_o	True
12	because	_	because	IN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	cause-01	(o(s()))	0	ROOT	True
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	switched	_	switch	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	True
16	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
17	to	_	to	IN	O	_	thing	_	0	IGNORE	True
18	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
19	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:The only reason I switched away from them in the first place is because my good friend who apprenticed with them was starting out on his own .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04581093788146973
#k-supertags:6
1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	True
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	14	MOD_s	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
5	switched	_	switch	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
6	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	True
7	from	_	from	IN	O	_	cause-01	_	0	IGNORE	True
8	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
9	in	_	in	IN	O	_	i	_	0	IGNORE	True
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
11	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	True
12	place	_	place	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	True
15	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
16	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	True
17	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	23	APP_s	True
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	True
19	apprenticed	_	apprentice	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	True
20	with	_	with	IN	O	_	i	_	0	IGNORE	True
21	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
22	was	_	be	VBD	O	_	person	_	0	IGNORE	True
23	starting	_	start	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-out-03	(s())	14	APP_s	True
24	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	True
25	on	_	on	IN	O	_	i	_	0	IGNORE	True
26	his	_	he	PRP$	O	_	i	_	0	IGNORE	True
27	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	True
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:To answer Barry White, yes that did occur to me :) I hope that is all he's waiting for .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04893088340759277
#k-supertags:6
1	To	to	to	TO	O	_	cause-01	_	0	IGNORE	True
2	answer	_	answer	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	True
3	Barry	_name_	Barry	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	True
4	White,	white,	White,	NNP	O	_	thing	_	0	IGNORE	True
5	yes	_	yes	UH	O	_	$LEMMA$	_	0	IGNORE	True
6	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	True
7	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	True
8	occur	_	occur	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
9	to	_	to	IN	O	_	and	_	0	IGNORE	True
10	me	_	I	PRP	O	_	i	_	0	IGNORE	True
11	:)	_	:)	:	O	_	and	_	0	IGNORE	True
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	True
13	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	8	APP_s	True
14	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
16	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
17	he's	_	he'	NNS	O	_	thing	_	0	IGNORE	True
18	waiting	_	wait	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	13	APP_o	True
19	for	_	for	IN	O	_	thing	_	0	IGNORE	True
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:But like i said nothing ever came of It.. the next time I saw him He had told Me he had To get married to a girl Who he worked with becuse he knocked Her Up. .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.10448074340820312
#k-supertags:6
1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	True
2	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(o(), s())	1	MOD_s	True
3	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	True
4	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	True
5	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
6	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
7	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	1	APP_s	True
8	of	_	of	IN	O	_	anything	_	0	IGNORE	True
9	It..	it..	It..	NNP	O	_	and	_	0	IGNORE	True
10	the	_	the	DT	O	_	he	_	0	IGNORE	True
11	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
14	saw	_	see	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	True
15	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
16	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o2	True
17	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	True
18	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o(s()), o2())	1	APP_o	True
19	Me	me	I	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
21	had	_	have	VBD	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	18	APP_o	True
22	To	to	to	TO	O	_	cause-01	_	0	IGNORE	True
23	get	_	get	VB	O	_	cause-01	_	0	IGNORE	True
24	married	_	married	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	21	APP_o	True
25	to	_	to	IN	O	_	person	_	0	IGNORE	True
26	a	_	a	DT	O	_	1	_	0	IGNORE	True
27	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	True
28	Who	who	who	WP	O	_	have-org-role-91	_	0	IGNORE	True
29	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
30	worked	_	work	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	27	MOD_s	True
31	with	_	with	IN	O	_	-	_	0	IGNORE	True
32	becuse	_	becuse	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	30	APP_o	True
33	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
34	knocked	_	knock	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	True
35	Her	her	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
36	Up.	up.	Up.	NNP	O	_	person	_	0	IGNORE	True
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Cute or not, I'd call a different bloke because he's doing a sub-par job at something he needs to be doing his best at, whether he's flirting or trying to ask you out or not, he ought to put quality first .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.5929532051086426
#k-supertags:6
1	Cute	cute	cute	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_dom	True
2	or	_	or	CC	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_o2	True
3	not,	_	not,	XX	O	_	and	_	0	IGNORE	True
4	I'd	i'd	i'd	PRP	O	(d<root> / --LEX--)	i	()	5	APP_o	True
5	call	_	call	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
6	a	_	a	DT	O	_	person	_	0	IGNORE	True
7	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	8	MOD_s	True
8	bloke	_	bloke	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
9	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	5	MOD_o	True
10	he's	_	he's	NNP	O	_	cause-01	_	0	IGNORE	True
11	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	APP_s	True
12	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	True
13	sub-par	_	sub-par	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
14	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
15	at	_	at	IN	O	_	thing	_	0	IGNORE	True
16	something	_	something	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
18	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	True
19	to	_	to	TO	O	_	thing	_	0	IGNORE	True
20	be	_	be	VB	O	_	person	_	0	IGNORE	True
21	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	True
22	his	_	he	PRP$	O	_	thing	_	0	IGNORE	True
23	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	21	MOD_s	True
24	at,	_	at,	XX	O	_	$LEMMA$	_	0	IGNORE	True
25	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	True
26	he's	_	he's	NN	O	_	thing	_	0	IGNORE	True
27	flirting	_	flirt	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_op1	True
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	34	APP_op2	True
29	trying	_	try	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op2	True
30	to	_	to	TO	O	_	thing	_	0	IGNORE	True
31	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-04	(s())	29	APP_s	True
32	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
33	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	True
34	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	5	MOD_op1	True
35	not,	_	not,	IN	O	_	and	_	0	IGNORE	True
36	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
37	ought	_	ought	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	recommend-01	(o(), s())	5	MOD_o	True
38	to	_	to	TO	O	_	thing	_	0	IGNORE	True
39	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_s	True
40	quality	_	quality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	True
41	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	39	MOD_mod	True
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Will be getting a copy of the blood results the owner has already ran as well .
#batch_size:32
#normalized_nn_time:0.015593059360980988
#normalized_prepare_ftd_time:0.006248056888580322
#host:98e974c0f148
#parser:ftd
#parsing_time:0.021526575088500977
#k-supertags:6
1	Will	will	Will	MD	O	_	i	_	0	IGNORE	True
2	be	_	be	VB	O	_	person	_	0	IGNORE	True
3	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
4	a	_	a	DT	O	_	1	_	0	IGNORE	True
5	copy	_	copy	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	3	APP_s	True
6	of	_	of	IN	O	_	i	_	0	IGNORE	True
7	the	_	the	DT	O	_	person	_	0	IGNORE	True
8	blood	_	blood	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
9	results	_	result	VBZ	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	5	APP_s	True
10	the	_	the	DT	O	_	i	_	0	IGNORE	True
11	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	14	APP_s	True
12	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	True
13	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
14	ran	_	run	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	9	MOD_o	True
15	as	_	as	RB	O	_	cause-01	_	0	IGNORE	True
16	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	14	MOD_mod	True
17	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:Is that something you are up for ?
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.01011347770690918
#k-supertags:6
1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	True
2	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	True
3	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	True
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
5	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	True
6	up	_	up	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	3	MOD_o	True
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
8	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	True

#raw:If so go for it and I'll give you all the moral support I can as you figure out what is up .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05635809898376465
#k-supertags:6
1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	True
2	so	_	so	RB	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	6	APP_op1	True
4	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	True
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
7	I'll	i'll	I'll	NNP	O	_	i	_	0	IGNORE	True
8	give	_	give	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	6	APP_op2	True
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
10	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
11	the	_	the	DT	O	_	thing	_	0	IGNORE	True
12	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	True
13	support	_	support	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	True
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	True
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
18	figure	_	figure	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-out-05	(mod(), o(), s())	8	MOD_mod	True
19	out	_	out	RP	O	_	thing	_	0	IGNORE	True
20	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	True
21	is	_	be	VBZ	O	_	thing	_	0	IGNORE	True
22	up	_	up	RB	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
23	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:i couldn't be more happier with the way my garage looks .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07432866096496582
#k-supertags:6
1	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_o	True
2	couldn't	_	couldn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	True
3	be	_	be	VB	O	_	person	_	0	IGNORE	True
4	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	happier	_	happy	JJR	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
6	with	_	with	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	True
7	the	_	the	DT	O	_	thing	_	0	IGNORE	True
8	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	APP_s	True
9	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
10	garage	_	garage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
11	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_mod	True
12	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:I was experiencing severe back pain to the point I could barely walk or even bare to sit .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0337526798248291
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
3	experiencing	_	experience	VBG	O	(d<root> / --LEX--  :ARG1 (b2<o>)  :ARG0 (b<s>))	$LEMMA$-01	(o(o_UNIFY_s()))	0	ROOT	True
4	severe	_	severe	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
5	back	_	back	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
6	pain	_	pain	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
8	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
9	point	_	point	NN	O	_	$LEMMA$	_	0	IGNORE	True
10	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	True
11	could	_	could	MD	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	possible-01	(mod(), s())	3	MOD_mod	True
12	barely	_	barely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	bare	(mod())	13	MOD_mod	True
13	walk	_	walk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	True
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	11	APP_s	True
15	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	bare	_	bare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_op2	True
17	to	_	to	TO	O	_	-	_	0	IGNORE	True
18	sit	_	sit	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	True
19	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:In this hard economic times is very important to save money Very reasonable prices top quality work The owner operator he does all the the work with Helpers very friendly I definitely recommend this this guys Don't get jack by big companies that they pay alot of money to be on top of the list Thank s
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.8463537693023682
#k-supertags:6
1	In	in	in	IN	O	_	after	_	0	IGNORE	True
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
3	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	True
4	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	5	MOD_mod	True
5	times	_	time	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
6	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(o(), s())	56	MOD_s	True
7	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	True
9	to	_	to	TO	O	_	and	_	0	IGNORE	True
10	save	_	save	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_dom	True
11	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
12	Very	very	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	reasonable	_	reasonable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	True
14	prices	_	price	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	True
15	top	_	top	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
17	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	True
18	The	the	the	DT	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op1(), op2())	56	APP_o	True
19	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	20	APP_s	True
20	operator	_	operator	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	operate-01	(o(), s())	22	APP_s	True
21	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	True
22	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	56	APP_s	True
23	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	True
24	the	_	the	DT	O	_	person	_	0	IGNORE	True
25	the	_	the	DT	O	_	and	_	0	IGNORE	True
26	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_o	True
27	with	_	with	IN	O	_	-	_	0	IGNORE	True
28	Helpers	_name_	helper	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	26	APP_s	True
29	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
30	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	True
31	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	33	APP_s	True
32	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	33	MOD_mod	True
33	recommend	_	recommend	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	18	APP_op2	True
34	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	True
35	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	True
36	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	True
37	Don't	don't	Don't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	True
38	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	33	APP_o2	True
39	jack	_name_	jack	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	33	MOD_o	True
40	by	_	by	IN	O	_	cause-01	_	0	IGNORE	True
41	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	True
42	companies	_	company	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	True
43	that	_	that	WDT	O	_	and	_	0	IGNORE	True
44	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
45	pay	_	pay	VBP	O	(p<root> / --LEX--  :ARG1 (m<o>)  :ARG0 (i<s>)  :ARG3 (s<o2>))	$LEMMA$-01	(o(), o2(s()))	38	MOD_s	True
46	alot	_	alot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	lot	(mod())	48	MOD_mod	True
47	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
48	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	True
49	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
50	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
51	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
52	top	_	top	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(o(), s())	45	APP_o2	True
53	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
54	the	_	the	DT	O	_	he	_	0	IGNORE	True
55	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	52	APP_o	True
56	Thank	thank	thank	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
57	s	_	s	XX	O	_	_NAME_	_	0	IGNORE	True

#raw:This store is by far the worst Verizon store I've been in .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.02545619010925293
#k-supertags:6
1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
2	store	_	store	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	True
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
4	by	_	by	IN	O	_	and	_	0	IGNORE	True
5	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	by-$LEMMA$	(mod())	11	MOD_mod	True
6	the	_	the	DT	O	_	more	_	0	IGNORE	True
7	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	9	MOD_s	True
8	Verizon	_name_	Verizon	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	9	APP_poss	True
9	store	_	store	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	0	ROOT	True
10	I've	i've	i've	NN	O	_	-	_	0	IGNORE	True
11	been	_	be	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-located-at-91	(s())	9	MOD_s	True
12	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	True
13	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:I highly recommend Debi, she does an amazing job, I "love" the way she cuts my hair, extremely thorough and cross checks her work to make sure my hair is perfect .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.11836361885070801
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
2	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	3	MOD_mod	True
3	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	32	APP_snt1	True
4	Debi,	_name_	Debi,	NNP	O	_	and	_	0	IGNORE	True
5	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
6	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	3	MOD_o	True
7	an	_	an	DT	O	_	cause-01	_	0	IGNORE	True
8	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	6	MOD_s	True
9	job,	_	job,	NN	O	_	and	_	0	IGNORE	True
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	True
11	"love"	_	"love"	XX	O	_	mean-01	_	0	IGNORE	True
12	the	_	the	DT	O	_	he	_	0	IGNORE	True
13	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	32	APP_snt2	True
14	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
15	cuts	_	cut	VBZ	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_s	True
16	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
17	hair,	_	hair,	NNS	O	_	and	_	0	IGNORE	True
18	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	19	MOD_mod	True
19	thorough	_	thorough	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_op1	True
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	13	APP_mod	True
21	cross	_	cross	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
22	checks	_	check	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	20	APP_op2	True
23	her	_	she	PRP$	O	_	thing	_	0	IGNORE	True
24	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	True
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
26	make	_	make	VB	O	_	$FORM$-02	_	0	IGNORE	True
27	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	en$LEMMA$-01	(mod(), o(), s())	22	MOD_mod	True
28	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
29	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
31	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	APP_o	True
32	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt1(), snt2())	0	ROOT	True

#raw:I would have had to because with the economy the way it is i aint haves much monies fo repairs round the House... .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.050167083740234375
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	True
2	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	True
3	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	True
4	had	_	have	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	6	APP_o	True
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
6	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
7	with	_	with	IN	O	_	cause-01	_	0	IGNORE	True
8	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	6	MOD_o	True
9	economy	_	economy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
11	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
14	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	True
15	aint	_	aint	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	True
16	haves	_	have	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	-	(mod())	18	MOD_mod	True
17	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
18	monies	_	monie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
19	fo	_	fo	IN	O	_	$LEMMA$	_	0	IGNORE	True
20	repairs	_	repair	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	True
21	round	_	round	VBP	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(mod(), op1())	20	MOD_mod	True
22	the	_	the	DT	O	_	and	_	0	IGNORE	True
23	House...	_name_	House...	NNP	O	(d<root> / --LEX--)	_NAME_	()	21	APP_op1	True
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Will be staying here any and every time I come anywhere near .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04503989219665527
#k-supertags:6
1	Will	will	Will	MD	O	_	location	_	0	IGNORE	True
2	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
3	staying	_	stay	VBG	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	0	ROOT	True
4	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
5	any	_	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	True
6	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(mod(), op1(), op2())	3	MOD_mod	True
7	every	_	every	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	True
8	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
10	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-02	(mod(), s())	3	MOD_mod	True
11	anywhere	_	anywhere	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
12	near	_	near	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	True
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:We arrived early and the staff was very accomodating to our families and the situation we were in .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05517888069152832
#k-supertags:6
1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_op1	True
3	early	_	early	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
5	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	True
6	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
7	was	_	be	VBD	O	_	person	_	0	IGNORE	True
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	accomodating	_	accomodating	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	4	APP_op2	True
10	to	_	to	IN	O	_	and	_	0	IGNORE	True
11	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
12	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	9	APP_o	True
14	the	_	the	DT	O	_	person	_	0	IGNORE	True
15	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	True
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
18	in	_	in	IN	O	_	i	_	0	IGNORE	True
19	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:After going to the hospital and paying ER prices ... there is no way I won't be back here! !
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12749338150024414
#k-supertags:6
1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	17	MOD_mod	True
2	going	_	go	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	6	APP_op1	True
3	to	_	to	IN	O	_	i	_	0	IGNORE	True
4	the	_	the	DT	O	_	person	_	0	IGNORE	True
5	hospital	_	hospital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	1	APP_op1	True
7	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op2	True
8	ER	er	ER	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	prices	_	price	NNS	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	7	APP_s	True
10	...	_	...	NFP	O	_	and	_	0	IGNORE	True
11	there	_	there	EX	O	_	cause-01	_	0	IGNORE	True
12	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	True
13	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	True
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	True
16	won't	_	won't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	True
17	be	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(o(), s())	0	ROOT	True
18	back	_	back	RB	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	True
19	here!	_	here!	ADD	O	_	$LEMMA$	_	0	IGNORE	True
20	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:I was not happy with the way they looked, very wavy, uneven edges, and with the exception of 1, there is a dip in the center of each nail .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0990457534790039
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_o	True
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	True
4	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	APP_op1	True
5	with	_	with	IN	O	_	-	_	0	IGNORE	True
6	the	_	the	DT	O	_	thing	_	0	IGNORE	True
7	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
8	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
9	looked,	_	looked,	NNP	O	_	so	_	0	IGNORE	True
10	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
11	wavy,	_	wavy,	NNP	O	_	mean-01	_	0	IGNORE	True
12	uneven	_	uneven	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_s	True
13	edges,	_	edges,	NNP	O	_	and	_	0	IGNORE	True
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
15	with	_	with	IN	O	_	-	_	0	IGNORE	True
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
17	exception	_	exception	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	except-01	(o(), s())	14	MOD_o	True
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
19	1,	_	1,	CD	O	_	_NAME_	_	0	IGNORE	True
20	there	_	there	EX	O	_	cause-01	_	0	IGNORE	True
21	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	True
22	a	_	a	DT	O	_	thing	_	0	IGNORE	True
23	dip	_	dip	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	14	APP_op2	True
24	in	_	in	IN	O	_	i	_	0	IGNORE	True
25	the	_	the	DT	O	_	thing	_	0	IGNORE	True
26	center	_	center	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	23	APP_o	True
27	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	True
28	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	True
29	nail	_	nail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_poss	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Every time I go, Kevin, the manager, will always remember my family and I .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.032746315002441406
#k-supertags:6
1	Every	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	10	MOD_mod	True
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	True
4	go,	_	go,	VBP	O	_	and	_	0	IGNORE	True
5	Kevin,	kevin,	Kevin,	NFP	O	_	and	_	0	IGNORE	True
6	the	_	the	DT	O	_	he	_	0	IGNORE	True
7	manager,	_	manager,	NNS	O	_	have-org-role-91	_	0	IGNORE	True
8	will	_	will	MD	O	_	i	_	0	IGNORE	True
9	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
11	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	True
12	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	True
13	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_o	True
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
15	.	_	.	.	O	_	person	_	0	IGNORE	True

#raw:Bloom Legal was really attentive to my problem, and Seth Bloom took the time to help me understand the legal issue I was dealing with .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03283333778381348
#k-supertags:6
1	Bloom_Legal	_name_	Legal	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	True
2	was	_	be	VBD	O	_	person	_	0	IGNORE	True
3	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
4	attentive	_	attentive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	8	APP_op1	True
5	to	_	to	IN	O	_	thing	_	0	IGNORE	True
6	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
7	problem,	_	problem,	NNP	O	_	and	_	0	IGNORE	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
9	Seth_Bloom	_name_	Bloom	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	True
10	took	_	take	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), o2(s()))	8	APP_op2	True
11	the	_	the	DT	O	_	person	_	0	IGNORE	True
12	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	True
13	to	_	to	TO	O	_	thing	_	0	IGNORE	True
14	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_o2	True
15	me	_	I	PRP	O	_	i	_	0	IGNORE	True
16	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	True
17	the	_	the	DT	O	_	he	_	0	IGNORE	True
18	legal	_	legal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	True
19	issue	_	issue	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_s	True
20	I	i	I	PRP	O	_	-	_	0	IGNORE	True
21	was	_	be	VBD	O	_	person	_	0	IGNORE	True
22	dealing	_	deal	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	19	MOD_s	True
23	with	_	with	IN	O	_	-	_	0	IGNORE	True
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:This is the most humble gym you will every step into.... if you dare to work on your body don't be surprised when you see how addicting going to FITNESS UNLIMITED can be! !
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.048032283782958984
#k-supertags:6
1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	True
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
3	the	_	the	DT	O	_	and	_	0	IGNORE	True
4	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	humble	_	humble	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	gym	_	gym	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_o	True
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
8	will	_	will	MD	O	(r<root> / --LEX--  :domain (q<dom>))	have-org-role-91	(dom())	11	APP_snt1	True
9	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	step	_	step	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	8	APP_dom	True
11	into....	_	into....	NFP	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt1(), snt2())	0	ROOT	True
12	if	_	if	IN	O	_	cause-01	_	0	IGNORE	True
13	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
14	dare	_	dare	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	True
15	to	_	to	TO	O	_	and	_	0	IGNORE	True
16	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	True
17	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
18	your	_	your	PRP$	O	_	thing	_	0	IGNORE	True
19	body	_	body	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
20	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	True
21	be	_	be	VB	O	_	person	_	0	IGNORE	True
22	surprised	_	surprised	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_snt2	True
23	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	True
24	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
25	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	True
26	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	thing	(mod())	27	MOD_mod	True
27	addicting	_	addicting	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	28	MOD_mod	True
28	going	_	go	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	32	APP_s	True
29	to	_	to	IN	O	_	and	_	0	IGNORE	True
30	FITNESS	fitness	FITNESS	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
31	UNLIMITED	unlimited	UNLIMITED	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	28	APP_s	True
32	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	APP_s	True
33	be!	_	be!	ADD	O	_	$LEMMA$-01	_	0	IGNORE	True
34	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:Chasing them on issues from the day I moved in (many of them still unresolved as I left) to all sorts of farcical issues with funds, after I left. . . . as soon as I could .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.11838531494140625
#k-supertags:6
1	Chasing	chasing	chase	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
2	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	True
3	on	_	on	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(o(), s())	1	MOD_o	True
4	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	1	APP_o	True
5	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	True
6	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	True
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	True
8	moved	_	move	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	True
9	in	_	in	IN	O	_	i	_	0	IGNORE	True
10	(many	_	(many	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	MOD_s	True
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
12	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
14	unresolved	_	unresolve	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	resolve-01	(s())	4	MOD_s	True
15	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
17	left)	_	left)	VBP	O	_	and	_	0	IGNORE	True
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
19	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
20	sorts	_	sort	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
21	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
22	farcical	_	farcical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
23	issues	_	issue	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	APP_s	True
24	with	_	with	IN	O	_	have-03	_	0	IGNORE	True
25	funds,	_	funds,	NNP	O	(d<root> / --LEX--)	thing	()	23	APP_s	True
26	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
27	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
28	left.	_	left.	VBP	O	_	$LEMMA$	_	0	IGNORE	True
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True
32	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	1	MOD_mod	True
33	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	True
34	as	_	as	IN	O	_	equal	_	0	IGNORE	True
35	I	i	I	PRP	O	_	1	_	0	IGNORE	True
36	could	_	could	MD	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	possible-01	(mod())	33	MOD_mod	True
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Their sense of humour and calmness when dealing with the little ones amazes me every time I walk in .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05813908576965332
#k-supertags:6
1	Their	their	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	5	APP_op1	True
3	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	True
4	humour	_	humour	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	13	APP_s	True
6	calmness	_	calmness	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	True
7	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	True
8	dealing	_	deal	VBG	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(), s())	2	MOD_mod	True
9	with	_	with	IN	O	_	i	_	0	IGNORE	True
10	the	_	the	DT	O	_	he	_	0	IGNORE	True
11	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
12	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
13	amazes	_	amaze	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
14	me	_	I	PRP	O	_	i	_	0	IGNORE	True
15	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	13	MOD_mod	True
16	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
17	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_o	True
18	walk	_	walk	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	True
19	in	_	in	IN	O	_	i	_	0	IGNORE	True
20	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:This has to be some of the worst pizza I have ever had the misfortune of ordering .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.018876314163208008
#k-supertags:6
1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	has	_	have	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	True
3	to	_	to	TO	O	_	and	_	0	IGNORE	True
4	be	_	be	VB	O	_	person	_	0	IGNORE	True
5	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	2	APP_o	True
7	the	_	the	DT	O	_	-	_	0	IGNORE	True
8	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-02	(s())	9	MOD_s	True
9	pizza	_	pizza	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	True
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	True
11	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	True
12	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
13	had	_	have	VBN	O	_	$LEMMA$-03	_	0	IGNORE	True
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
15	misfortune	_	misfortune	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	17	MOD_o	True
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
17	ordering	_	ordering	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	9	MOD_o	True
18	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:Dave is a patient and methodical teacher, who has a great ear and sensitivity for his students' passion and the direction they want their lessons to take .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.2609221935272217
#k-supertags:6
1	Dave	_name_	Dave	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	True
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	True
4	patient	_	patient	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	True
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
6	methodical	_	methodical	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	True
7	teacher,	_	teacher,	NNS	O	_	and	_	0	IGNORE	True
8	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	True
9	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	5	MOD_s	True
10	a	_	a	DT	O	_	person	_	0	IGNORE	True
11	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
12	ear	_	ear	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	9	APP_o	True
14	sensitivity	_	sensitivity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	True
15	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	True
16	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
17	students'	_	students'	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
18	passion	_	passion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	True
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(mod(), op1(), op2())	13	MOD_mod	True
20	the	_	the	DT	O	_	thing	_	0	IGNORE	True
21	direction	_	direction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	True
22	they	_	they	PRP	O	_	person	_	0	IGNORE	True
23	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	True
24	their	_	they	PRP$	O	_	person	_	0	IGNORE	True
25	lessons	_	lesson	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	True
26	to	_	to	TO	O	_	thing	_	0	IGNORE	True
27	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	21	MOD_o	True
28	.	_	.	.	O	_	event	_	0	IGNORE	True

#raw:I FUCKING HATE THIS PLACE EVERY TIME i GO THIS HOT CHICK SHOWS UP AND i MEAN REALLY HOT BUT SHE IS LIKE REAAAALLY DUMB AND THEN THEIR IS THIS OTHER CHICK THAT IS REALY UGLY BUT SHE IS LIKE SUPER SMART SHE COULD BE A SCIENTIST, BUT THEN THEIR IS THIS STONER WHO ALWAYS COMES HERE HIGH AND HE ALWAYS BRINGS HIS FUCKING DOG WHO IS SO HIGH FROM THE SECOND HAND SMOKE I THINK HE IS TRYING TO TALK .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:23.459553003311157
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
2	FUCKING	fucking	fucking	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	fuck	(mod())	3	MOD_mod	True
3	HATE	hate	hate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	26	APP_op1	True
4	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	PLACE	place	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
6	EVERY	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	3	MOD_mod	True
7	TIME	time	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
8	i	_	i	PRP	O	_	1	_	0	IGNORE	True
9	GO	go	go	VBP	O	(d<root> / --LEX--)	$LEMMA$-02	()	6	APP_s	True
10	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
11	HOT	hot	hot	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	True
12	CHICK	chick	chick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
13	SHOWS	shows	show	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	15	APP_o	True
14	UP	up	up	RP	O	_	cause-01	_	0	IGNORE	True
15	AND	and	and	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(o(), s())	26	MOD_s	True
16	i	_	i	PRP	O	_	$REPL$	_	0	IGNORE	True
17	MEAN	mean	mean	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	True
18	REALLY	really	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
19	HOT	hot	HOT	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	True
20	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	26	MOD_s	True
21	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
22	IS	is	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	26	APP_op4	True
23	LIKE	like	like	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
24	REAAAALLY	reaaaally	reaaaally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	complete-02	(mod())	25	MOD_mod	True
25	DUMB	dumb	dumb	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	True
26	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op1(), op2(), op3(), op4())	0	ROOT	True
27	THEN	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	True
28	THEIR	their	their	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
29	IS	is	be	VBZ	O	_	person	_	0	IGNORE	True
30	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	True
31	OTHER	other	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	True
32	CHICK	chick	CHICK	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	True
33	THAT	that	that	DT	O	_	$LEMMA$	_	0	IGNORE	True
34	IS	is	be	VBZ	O	_	person	_	0	IGNORE	True
35	REALY	realy	realy	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	36	MOD_mod	True
36	UGLY	ugly	ugly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	32	MOD_s	True
37	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	contrast-01	(s())	26	APP_op2	True
38	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
39	IS	is	be	VBZ	O	_	cause-01	_	0	IGNORE	True
40	LIKE	like	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	26	APP_op3	True
41	SUPER	super	SUPER	NNP	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	42	MOD_mod	True
42	SMART	smart	SMART	NNP	O	(d<root> / --LEX--)	$LEMMA$-06	()	40	APP_s	True
43	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
44	COULD	could	COULD	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	40	MOD_s	True
45	BE	be	be	VB	O	_	person	_	0	IGNORE	True
46	A	a	a	DT	O	_	cause-01	_	0	IGNORE	True
47	SCIENTIST,	scientist,	scientist,	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	True
48	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	26	MOD_s	True
49	THEN	then	then	RB	O	_	$LEMMA$	_	0	IGNORE	True
50	THEIR	their	their	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
51	IS	is	be	VBZ	O	_	person	_	0	IGNORE	True
52	THIS	this	this	DT	O	_	$LEMMA$	_	0	IGNORE	True
53	STONER	stoner	STONER	``	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	True
54	WHO	who	who	WP	O	_	-	_	0	IGNORE	True
55	ALWAYS	always	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	56	MOD_mod	True
56	COMES	comes	come	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(o(), s())	53	MOD_s	True
57	HERE	here	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_o	True
58	HIGH	high	high	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-02	(mod())	56	MOD_mod	True
59	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	26	MOD_op1	True
60	HE	he	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
61	ALWAYS	always	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	62	MOD_mod	True
62	BRINGS	brings	bring	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	59	APP_op2	True
63	HIS	his	his	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
64	FUCKING	fucking	FUCKING	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	65	MOD_mod	True
65	DOG	dog	DOG	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	62	APP_s	True
66	WHO	who	who	WP	O	_	cause-01	_	0	IGNORE	True
67	IS	is	be	VBZ	O	_	person	_	0	IGNORE	True
68	SO	so	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	69	MOD_mod	True
69	HIGH	high	high	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(o(), s())	65	MOD_s	True
70	FROM	from	from	IN	O	_	cause-01	_	0	IGNORE	True
71	THE	the	the	DT	O	_	cause-01	_	0	IGNORE	True
72	SECOND	second	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	73	MOD_mod	True
73	HAND	hand	hand	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	74	MOD_mod	True
74	SMOKE	smoke	smoke	NN	O	(d<root> / --LEX--)	$LEMMA$	()	69	APP_o	True
75	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
76	THINK	think	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	65	MOD_s	True
77	HE	he	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
78	IS	is	be	VBZ	O	_	person	_	0	IGNORE	True
79	TRYING	trying	try	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	76	APP_o	True
80	TO	to	to	TO	O	_	and	_	0	IGNORE	True
81	TALK	talk	talk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	79	APP_s	True
82	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:This is one of the worst places I have stayed, we cut out stay short and went to the Mulberry .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.29491400718688965
#k-supertags:6
1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	True
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
3	one	_	one	CD	O	_	i	_	0	IGNORE	True
4	of	_	of	IN	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	include-91	(o(), o2(), s())	16	MOD_s	True
5	the	_	the	DT	O	_	thing	_	0	IGNORE	True
6	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-04	(s())	7	MOD_s	True
7	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
8	I	i	I	PRP	O	_	$REPL$	_	16	IGNORE	True
9	have	_	have	VBP	O	_	say-01	_	0	IGNORE	True
10	stayed,	_	stayed,	VBN	O	_	multi-sentence	_	0	IGNORE	True
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
12	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-06	(o(), s())	16	APP_op1	True
13	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	True
14	stay	_	stay	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	True
15	short	_	short	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	12	APP_o	True
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
17	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(o(), s())	16	APP_op2	True
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
19	the	_	the	DT	O	_	person	_	0	IGNORE	True
20	Mulberry	_name_	Mulberry	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	17	APP_o	True
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Pay extra attention to the appetizers - the next time I go there I'm planning on ordered a few instead of an entree .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03779029846191406
#k-supertags:6
1	Pay	pay	pay	VB	O	_	$LEMMA$-01	_	0	IGNORE	True
2	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	attend-02	(o(), s())	0	ROOT	True
4	to	_	to	IN	O	_	thing	_	0	IGNORE	True
5	the	_	the	DT	O	_	person	_	0	IGNORE	True
6	appetizers	_	appetizer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
7	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	True
8	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	True
9	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	True
12	go	_	go	VBP	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	20	MOD_s	True
13	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
14	I'm	i'm	I'm	NNS	O	_	person	_	0	IGNORE	True
15	planning	_	plan	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	20	APP_s	True
16	on	_	on	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	3	APP_s	True
17	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	15	APP_o	True
18	a	_	a	DT	O	_	1	_	0	IGNORE	True
19	few	_	few	JJ	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	$LEMMA$	()	17	APP_o	True
20	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(o(), s())	16	APP_s	True
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
22	an	_	an	DT	O	_	1	_	0	IGNORE	True
23	entree	_	entree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	True
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The first time I used them they arrived on time and towed car for me to the destination I needed .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.23776030540466309
#k-supertags:6
1	The	the	the	DT	O	_	have-frequency-91	_	0	IGNORE	True
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	11	MOD_mod	True
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
5	used	_	use	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	11	MOD_mod	True
6	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
8	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	True
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
10	time	_	time	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	on-$LEMMA$	(mod())	8	MOD_mod	True
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
12	towed	_	tow	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	11	APP_op2	True
13	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	True
14	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
15	me	_	I	PRP	O	_	i	_	0	IGNORE	True
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
17	the	_	the	DT	O	_	he	_	0	IGNORE	True
18	destination	_	destination	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	True
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
20	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	True
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Mike one of owners was awesome, he explained the detailed plan, and executed on time, I am always going use them and refer them to many friends I can because of the great job they did me .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1799159049987793
#k-supertags:6
1	Mike	_name_	Mike	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	38	APP_snt1	True
2	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	2	MOD_s	True
4	owners	_	owner	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	3	APP_o	True
5	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(o(), s())	0	ROOT	True
6	awesome,	_	awesome,	CD	O	_	and	_	0	IGNORE	True
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
8	explained	_	explain	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op1	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	detailed	_	detailed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	detail-01	(s())	12	MOD_s	True
11	plan,	_	plan,	NNP	O	_	thing	_	0	IGNORE	True
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	38	APP_snt2	True
13	executed	_	execute	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	True
14	on	_	on	IN	O	_	and	_	0	IGNORE	True
15	time,	_	time,	NNP	O	_	and	_	0	IGNORE	True
16	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	True
17	am	_	be	VBP	O	_	person	_	0	IGNORE	True
18	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
19	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	True
20	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_op1	True
21	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	5	APP_s	True
23	refer	_	refer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	22	APP_op2	True
24	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
26	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
27	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	23	APP_o	True
28	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
29	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	True
30	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	27	MOD_o	True
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
32	the	_	the	DT	O	_	thing	_	0	IGNORE	True
33	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	True
34	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	True
35	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
36	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	34	MOD_s	True
37	me	_	I	PRP	O	_	and	_	0	IGNORE	True
38	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt1(), snt2())	5	APP_o	True

#raw:I've never felt the need to write a review or make a complaint before, but after the way I was spoken to by a member of staff at the kennels (whose name I believe to be Mrs Closs) I would now not recommend this business to anybody .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.47519564628601074
#k-supertags:6
1	I've	i've	I've	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	True
2	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	3	MOD_mod	True
3	felt	_	feel	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	MOD_s	True
4	the	_	the	DT	O	_	-	_	0	IGNORE	True
5	need	_	need	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	3	APP_o	True
6	to	_	to	TO	O	_	-	_	0	IGNORE	True
7	write	_	write	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op1	True
8	a	_	a	DT	O	_	thing	_	0	IGNORE	True
9	review	_	review	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	True
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	5	APP_o	True
11	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	True
12	a	_	a	DT	O	_	-	_	0	IGNORE	True
13	complaint	_	complaint	NN	O	(d<root> / --LEX--)	complain-01	()	10	APP_op2	True
14	before,	_	before,	NNP	O	_	-	_	0	IGNORE	True
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
16	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	43	MOD_mod	True
17	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
18	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
20	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
21	spoken	_	speak	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_op1	True
22	to	_	to	IN	O	_	-	_	0	IGNORE	True
23	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	True
24	a	_	a	DT	O	_	1	_	0	IGNORE	True
25	member	_	member	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	21	APP_s	True
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
27	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	True
28	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	True
29	the	_	the	DT	O	_	person	_	0	IGNORE	True
30	kennels	_	kennel	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	True
31	(whose	_	(whose	-LRB-	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	True
32	name	_	name	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	25	MOD_mod	True
33	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
34	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	MOD_s	True
35	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	True
36	be	_	be	VB	O	_	person	_	0	IGNORE	True
37	Mrs	_name_	Mrs	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	True
38	Closs)	closs)	Closs)	NNP	O	_	and	_	0	IGNORE	True
39	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
40	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	True
41	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	43	MOD_mod	True
42	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	43	MOD_mod	True
43	recommend	_	recommend	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	15	APP_s	True
44	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	True
45	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	True
46	to	_	to	IN	O	_	-	_	0	IGNORE	True
47	anybody	_	anybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_o	True
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:If the animals are treated in the same way the customers are treated then this leaves a lot to be desired !
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05203723907470703
#k-supertags:6
1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(o(), s())	16	MOD_s	True
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
3	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
4	are	_	be	VBP	O	_	person	_	0	IGNORE	True
5	treated	_	treat	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	True
6	in	_	in	IN	O	_	event	_	0	IGNORE	True
7	the	_	the	DT	O	_	person	_	0	IGNORE	True
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	True
9	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
10	the	_	the	DT	O	_	person	_	0	IGNORE	True
11	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	True
12	are	_	be	VBP	O	_	thing	_	0	IGNORE	True
13	treated	_	treat	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	True
14	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	True
15	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
16	leaves	_	leave	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(o(), s())	0	ROOT	True
17	a	_	a	DT	O	_	1	_	0	IGNORE	True
18	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	True
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
20	be	_	be	VB	O	_	person	_	0	IGNORE	True
21	desired	_	desire	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	True
22	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:The sales men were very knowledgeable about every aspect of every car we looked at .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.019878149032592773
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	sales	_	sale	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	sell-01	(s())	3	MOD_s	True
3	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
4	were	_	be	VBD	O	_	person	_	0	IGNORE	True
5	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	knowledgeable	_	knowledgeable	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(o(), s())	0	ROOT	True
7	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	True
8	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	aspect	_	aspect	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_o	True
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
11	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
12	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	True
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
14	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	12	MOD_o	True
15	at	_	at	IN	O	_	thing	_	0	IGNORE	True
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:This school is the worst one i've ever been to .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.007672309875488281
#k-supertags:6
1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
2	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
4	the	_	the	DT	O	_	-	_	0	IGNORE	True
5	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-04	(s())	0	ROOT	True
6	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	True
7	i've	_	i've	-LRB-	O	_	-	_	0	IGNORE	True
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	been	_	be	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-located-at-91	(s())	2	MOD_s	True
10	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The last time I did that I was suggested to buy oblivion when I told them I was looking for a fps .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12239670753479004
#k-supertags:6
1	The	the	the	DT	O	_	person	_	0	IGNORE	True
2	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	True
5	did	_	do	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	9	MOD_mod	True
6	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
7	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	True
8	was	_	be	VBD	O	_	person	_	0	IGNORE	True
9	suggested	_	suggest	VBN	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
10	to	_	to	TO	O	_	and	_	0	IGNORE	True
11	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	9	APP_o	True
12	oblivion	_	oblivion	NN	O	(d<root> / --LEX--)	_NAME_	()	11	APP_o	True
13	when	_	when	WRB	O	_	i	_	0	IGNORE	True
14	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	True
15	told	_	tell	VBD	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(), s())	11	MOD_mod	True
16	them	_	they	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
17	I	i	I	PRP	O	_	name	_	0	IGNORE	True
18	was	_	be	VBD	O	_	person	_	0	IGNORE	True
19	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	True
20	for	_	for	IN	O	_	product	_	0	IGNORE	True
21	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	True
22	fps	_	fps	NN	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	19	APP_s	True
23	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:Overall they aren't very knowledge about the type of games are on the market .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12215828895568848
#k-supertags:6
1	Overall	overall	overall	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
2	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
3	aren't	_	aren't	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	True
4	very	_	very	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
5	knowledge	_	knowledge	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	know-01	(o(), s())	0	ROOT	True
6	about	_	about	IN	O	_	-	_	0	IGNORE	True
7	the	_	the	DT	O	_	thing	_	0	IGNORE	True
8	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	APP_o	True
9	of	_	of	IN	O	_	thing	_	0	IGNORE	True
10	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_mod	True
11	are	_	be	VBP	O	_	thing	_	0	IGNORE	True
12	on	_	on	IN	O	_	thing	_	0	IGNORE	True
13	the	_	the	DT	O	_	-	_	0	IGNORE	True
14	market	_	market	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	MOD_s	True
15	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:From the moment you enter the restaurant, you know you are some place special .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.023203372955322266
#k-supertags:6
1	From	from	from	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	9	MOD_mod	True
2	the	_	the	DT	O	_	he	_	0	IGNORE	True
3	moment	_	moment	NN	O	_	$LEMMA$	_	0	IGNORE	True
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
5	enter	_	enter	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_op1	True
6	the	_	the	DT	O	_	person	_	0	IGNORE	True
7	restaurant,	_	restaurant,	NNS	O	_	and	_	0	IGNORE	True
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
9	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
11	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
12	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
13	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	True
14	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	True
15	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:I spent 3 months going from shop to shop trying to get my Ferrari to run and drive the way it should .
#batch_size:32
#normalized_nn_time:0.02010389417409897
#normalized_prepare_ftd_time:0.007935963571071625
#host:98e974c0f148
#parser:ftd
#parsing_time:0.17224979400634766
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	spent	_	spend	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), o2(s()))	0	ROOT	True
3	3_months	_name_	month	NNS	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	$LEMMA$	()	2	APP_o	True
4	going	_	go	VBG	O	(r<root> / --LEX--  :ARG3 (t<o>)  :ARG4 (d<s>))	$LEMMA$-02	(o(), s())	2	APP_o2	True
5	from	_	from	IN	O	_	and	_	0	IGNORE	True
6	shop	_	shop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
7	to	_	to	IN	O	_	-	_	0	IGNORE	True
8	shop	_	shop	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
9	trying	_	try	VBG	O	(r<root> / --LEX--  :ARG1 (p<o>)  :ARG0 (c<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), o(s()))	2	MOD_mod	True
10	to	_	to	TO	O	_	thing	_	0	IGNORE	True
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(o(), s())	9	APP_o	True
12	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
13	Ferrari	_name_	Ferrari	NNP	O	(c<root> / car-make  :name (n / --LEX--))	_NAME_	()	16	APP_s	True
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
15	run	_	run	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	16	APP_op1	True
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	11	APP_o	True
17	drive	_	drive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_op2	True
18	the	_	the	DT	O	_	thing	_	0	IGNORE	True
19	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
20	it	_	it	PRP	O	_	i	_	0	IGNORE	True
21	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	17	MOD_s	True
22	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:They took on the challenge of making my Ferrari all I dreamed of and more .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.06057262420654297
#k-supertags:6
1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-on-09	(o(), s())	0	ROOT	True
3	on	_	on	RP	O	_	and	_	0	IGNORE	True
4	the	_	the	DT	O	_	he	_	0	IGNORE	True
5	challenge	_	challenge	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	True
6	of	_	of	IN	O	_	thing	_	0	IGNORE	True
7	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	5	APP_o	True
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
9	Ferrari	_name_	Ferrari	NNP	O	(c<root> / car-make  :name (n / --LEX--))	_NAME_	()	7	APP_o	True
10	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	True
11	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	True
12	dreamed	_	dream	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	True
13	of	_	of	IN	O	_	thing	_	0	IGNORE	True
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	2	APP_o	True
15	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	True
16	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:This is one of the best farms I have ever been too .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03545379638671875
#k-supertags:6
1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
3	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	True
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	0	ROOT	True
5	the	_	the	DT	O	_	thing	_	0	IGNORE	True
6	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	7	MOD_s	True
7	farms	_	farm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	True
9	have	_	have	VBP	O	_	say-01	_	0	IGNORE	True
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	been	_	be	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	4	MOD_o	True
12	too	_	too	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The decor left a lot to be desired and the posters telling me all the reasons 99 was great just served as an ironic contrast against the reality .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04346489906311035
#k-supertags:6
1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	True
2	decor	_	decor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
3	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(o(), s())	9	APP_op1	True
4	a	_	a	DT	O	_	thing	_	0	IGNORE	True
5	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
7	be	_	be	VB	O	_	person	_	0	IGNORE	True
8	desired	_	desire	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	True
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
11	posters	_	poster	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	post-01	()	21	APP_s	True
12	telling	_	tell	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	MOD_s	True
13	me	_	I	PRP	O	_	i	_	0	IGNORE	True
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
16	reasons	_	reason	NNS	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	cause-01	(s())	12	APP_o	True
17	99	_	99	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	19	APP_dom	True
18	was	_	be	VBD	O	_	person	_	0	IGNORE	True
19	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_s	True
20	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	True
21	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	9	APP_op2	True
22	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
23	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	True
24	ironic	_	ironic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	True
25	contrast	_	contrast	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	True
26	against	_	against	IN	O	_	-	_	0	IGNORE	True
27	the	_	the	DT	O	_	-	_	0	IGNORE	True
28	reality	_	reality	NN	O	(d<root> / --LEX--)	real-04	()	25	APP_s	True
29	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:I have finally found a mechanic I trust! !
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.014820575714111328
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	True
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	True
3	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	4	MOD_mod	True
4	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
5	a	_	a	DT	O	_	then	_	0	IGNORE	True
6	mechanic	_	mechanic	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	4	APP_o	True
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
8	trust!	_	trust!	VBD	O	_	have-org-role-91	_	0	IGNORE	True
9	!	_	!	.	O	_	contrast-01	_	0	IGNORE	True

#raw:After the way she spoke to me on my last visit, I will not be returning! !
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05742359161376953
#k-supertags:6
1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(mod(), op1())	11	MOD_mod	True
2	the	_	the	DT	O	_	he	_	0	IGNORE	True
3	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
4	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
5	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_op1	True
6	to	_	to	IN	O	_	and	_	0	IGNORE	True
7	me	_	I	PRP	O	_	i	_	0	IGNORE	True
8	on	_	on	IN	O	_	i	_	0	IGNORE	True
9	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
10	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
11	visit,	_	visit,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(o(), s())	0	ROOT	True
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	True
13	will	_	will	MD	O	_	i	_	0	IGNORE	True
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	True
15	be	_	be	VB	O	_	person	_	0	IGNORE	True
16	returning!	_	returning!	NNP	O	(d<root> / --LEX--)	and	()	11	APP_o	True
17	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:Seems like all they care about is the money and getting home on time, NO care for the customers AT ALL!! !
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07646656036376953
#k-supertags:6
1	Seems	seems	seem	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
2	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	True
3	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
5	care	_	care	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	1	APP_s	True
6	about	_	about	IN	O	_	thing	_	0	IGNORE	True
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	True
8	the	_	the	DT	O	_	thing	_	0	IGNORE	True
9	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	5	APP_o	True
11	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	10	APP_op2	True
12	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
13	on	_	on	IN	O	_	and	_	0	IGNORE	True
14	time,	_	time,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(o(), s())	1	MOD_s	True
15	NO	no	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	True
16	care	_	care	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	True
17	for	_	for	IN	O	_	say-01	_	0	IGNORE	True
18	the	_	the	DT	O	_	thing	_	0	IGNORE	True
19	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
20	AT	at	at	IN	O	_	America	_	0	IGNORE	True
21	ALL!!	_name_	ALL!!	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	16	MOD_mod	True
22	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:I'm 22, and my hairdresser was great (and not "old" like one of the reviews says) - she really listened to what I wanted and gave me tons of tips on how to style my hair so I could get it to look the way I wanted it to .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.10689973831176758
#k-supertags:6
1	I'm	i'm	I'm	NNP	O	_	dollar	_	0	IGNORE	True
2	22,	_	22,	NNP	O	_	year	_	0	IGNORE	True
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
4	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	True
5	hairdresser	_	hairdresser	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	7	APP_dom	True
6	was	_	be	VBD	O	_	person	_	0	IGNORE	True
7	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	25	APP_op2	True
8	(and	_	(and	NNP	O	_	i	_	0	IGNORE	True
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	True
10	"old"	_	"old"	``	O	_	resemble-01	_	0	IGNORE	True
11	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(o(), s())	3	MOD_s	True
12	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	15	MOD_mod	True
13	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	15	MOD_s	True
14	the	_	the	DT	O	_	person	_	0	IGNORE	True
15	reviews	_	review	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	True
16	says)	_	says)	NNP	O	_	and	_	0	IGNORE	True
17	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	True
18	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
19	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	20	MOD_s	True
20	listened	_	listen	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op1	True
21	to	_	to	IN	O	_	and	_	0	IGNORE	True
22	what	_	what	WP	O	_	thing	_	0	IGNORE	True
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
24	wanted	_	want	VBD	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	20	APP_s	True
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op1(), op2(), op3())	3	APP_op2	True
26	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op3	True
27	me	_	I	PRP	O	_	and	_	0	IGNORE	True
28	tons	_	ton	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
30	tips	_	tip	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	26	APP_s	True
31	on	_	on	IN	O	_	thing	_	0	IGNORE	True
32	how	_	how	WRB	O	_	thing	_	0	IGNORE	True
33	to	_	to	TO	O	_	thing	_	0	IGNORE	True
34	style	_	style	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_s	True
35	my	_	my	PRP$	O	(d<root> / --LEX--)	thing	()	3	APP_op1	True
36	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	True
37	so	_	so	IN	O	_	cause-01	_	0	IGNORE	True
38	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	True
39	could	_	could	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	34	MOD_mod	True
40	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	39	APP_s	True
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
42	to	_	to	TO	O	_	thing	_	0	IGNORE	True
43	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	APP_s	True
44	the	_	the	DT	O	_	thing	_	0	IGNORE	True
45	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
46	I	i	I	PRP	O	_	mean-01	_	0	IGNORE	True
47	wanted	_	want	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	43	APP_s	True
48	it	_	it	PRP	O	_	i	_	0	IGNORE	True
49	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
50	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:as an example they took payment for 5 out of 6 monthly plan premiums for a yearly policy and cancelled the contract for the remainder of the policy for reasons they stated was not receiving information on other licensed drivers in the household ?
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.12511610984802246
#k-supertags:6
1	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
2	an	_	an	DT	O	_	1	_	0	IGNORE	True
3	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(o(), s())	0	ROOT	True
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	True
5	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	19	APP_op1	True
6	payment	_	payment	NN	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	pay-01	(o(), s())	5	APP_o	True
7	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	True
8	5	_	5	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	True
9	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	True
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
11	6	_	6	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	True
12	monthly	_name_	monthly	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	month	(mod())	14	MOD_mod	True
13	plan	_	plan	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	14	MOD_mod	True
14	premiums	_	premium	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
15	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	True
16	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	True
17	yearly	_name_	yearly	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	year	(mod())	18	MOD_mod	True
18	policy	_	policy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	True
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	3	APP_s	True
20	cancelled	_	cancel	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	19	APP_op2	True
21	the	_	the	DT	O	_	thing	_	0	IGNORE	True
22	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_o	True
23	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	True
24	the	_	the	DT	O	_	thing	_	0	IGNORE	True
25	remainder	_	remainder	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	22	MOD_mod	True
26	of	_	of	IN	O	_	cause-01	_	0	IGNORE	True
27	the	_	the	DT	O	_	person	_	0	IGNORE	True
28	policy	_	policy	NN	O	_	$LEMMA$-01	_	0	IGNORE	True
29	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
30	reasons	_	reason	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
31	they	_	they	PRP	O	_	cause-01	_	0	IGNORE	True
32	stated	_	state	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	30	MOD_s	True
33	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
34	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	True
35	receiving	_	receive	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_o	True
36	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	True
37	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
38	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	True
39	licensed	_	licensed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	license-01	(s())	40	MOD_s	True
40	drivers	_	driver	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	drive-01	(mod())	36	MOD_mod	True
41	in	_	in	IN	O	_	i	_	0	IGNORE	True
42	the	_	the	DT	O	_	person	_	0	IGNORE	True
43	household	_	household	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	40	MOD_mod	True
44	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	19	MOD_mod	True

#raw:Not once did I feel listened to like they actually cared about what I wanted, all they were interested in was me signing a contract right then and there .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08844399452209473
#k-supertags:6
1	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	True
2	once	_	once	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
3	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	True
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
5	feel	_	feel	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	True
6	listened	_	listen	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	5	APP_o	True
7	to	_	to	TO	O	_	-	_	0	IGNORE	True
8	like	_	like	UH	O	_	resemble-01	_	0	IGNORE	True
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
10	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	11	MOD_s	True
11	cared	_	care	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	True
12	about	_	about	IN	O	_	thing	_	0	IGNORE	True
13	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	True
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
15	wanted,	_	wanted,	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(o(), s())	5	MOD_s	True
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
17	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
18	were	_	be	VBD	O	_	person	_	0	IGNORE	True
19	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	15	APP_o	True
20	in	_	in	IN	O	_	i	_	0	IGNORE	True
21	was	_	be	VBD	O	_	and	_	0	IGNORE	True
22	me	_	I	PRP	O	_	i	_	0	IGNORE	True
23	signing	_	sign	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_s	True
24	a	_	a	DT	O	_	thing	_	0	IGNORE	True
25	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	True
26	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	True
27	then	_	then	RB	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op1	True
28	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(mod(), op1(), op2())	23	MOD_mod	True
29	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op2	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:You do NOT learn the things you were promised .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.017539024353027344
#k-supertags:6
1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
2	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	True
3	NOT	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	True
4	learn	_	learn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
5	the	_	the	DT	O	_	thing	_	0	IGNORE	True
6	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
7	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
8	were	_	be	VBD	O	_	person	_	0	IGNORE	True
9	promised	_	promise	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	6	MOD_s	True
10	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:We have attended A Ward Dance Centre for over a year and really enjoy the friendly and welcoming way we are taught Ballroom and Latin as well as the fun filled social dance evening held every Saturday evening... .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.11871218681335449
#k-supertags:6
1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
2	have	_	have	VBP	O	_	1	_	0	IGNORE	True
3	attended	_	attend	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	7	APP_op1	True
4	A_Ward_Dance_Centre	_name_	Centre	NNP	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	3	APP_o	True
5	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	True
6	over_a_year	_name_	year	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	True
7	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op1(s()), op2(s()), op3(s()))	0	ROOT	True
8	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	enjoy	_	enjoy	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	7	APP_op2	True
10	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	True
11	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	True
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	True
13	welcoming	_	welcoming	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	True
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	APP_o	True
15	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
16	are	_	be	VBP	O	_	person	_	0	IGNORE	True
17	taught	_	teach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_mod	True
18	Ballroom	ballroom	Ballroom	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	True
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	17	APP_s	True
20	Latin	_name_	Latin	NNP	O	(l<root> / language  :name (n / --LEX--))	_NAME_	()	19	APP_op2	True
21	as	_	as	RB	O	_	cause-01	_	0	IGNORE	True
22	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	True
23	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(o(), s())	7	APP_op3	True
24	the	_	the	DT	O	_	and	_	0	IGNORE	True
25	fun	_	fun	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_o	True
26	filled	_	fill	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	29	MOD_s	True
27	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	True
28	dance	_	dance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	29	MOD_mod	True
29	evening	_	evening	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	True
30	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	29	MOD_s	True
31	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	True
32	Saturday	_name_	Saturday	NNP	O	(d<root> / date-entity  :weekday (t / --LEX--)  :time-of (c<mod>))	$REPL$	(mod())	30	MOD_mod	True
33	evening...	_	evening...	.	O	_	$LEMMA$	_	0	IGNORE	True
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:It was the first time i had left a salon with my hair curly .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.039528846740722656
#k-supertags:6
1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	True
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	True
3	the	_	the	DT	O	_	thing	_	0	IGNORE	True
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	8	MOD_mod	True
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
6	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	True
7	had	_	have	VBD	O	_	be-located-at-91	_	0	IGNORE	True
8	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-15	(o(), s())	0	ROOT	True
9	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	True
10	salon	_	salon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
11	with	_	with	IN	O	_	-	_	0	IGNORE	True
12	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
13	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
14	curly	_	curly	RB	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	8	MOD_mod	True
15	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:But she did a fabulous job letting me know what she was doing at all times and styled my hair in a way i could do it at home .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05636262893676758
#k-supertags:6
1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	True
2	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	True
3	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	17	APP_op1	True
4	a	_	a	DT	O	_	thing	_	0	IGNORE	True
5	fabulous	_	fabulous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-03	(mod())	6	MOD_mod	True
6	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
7	letting	_	let	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	MOD_s	True
8	me	_	I	PRP	O	_	i	_	0	IGNORE	True
9	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	True
10	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	True
11	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
12	was	_	be	VBD	O	_	thing	_	0	IGNORE	True
13	doing	_	do	VBG	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-02	()	9	APP_s	True
14	at	_	at	IN	O	_	thing	_	0	IGNORE	True
15	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	times	_	time	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	1	APP_s	True
18	styled	_	style	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	17	APP_op2	True
19	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
20	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	True
21	in	_	in	IN	O	_	i	_	0	IGNORE	True
22	a	_	a	DT	O	_	1	_	0	IGNORE	True
23	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	True
24	i	_	i	PRP	O	_	$REPL$	_	0	IGNORE	True
25	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	18	MOD_s	True
26	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	APP_o	True
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
28	at	_	at	IN	O	_	thing	_	0	IGNORE	True
29	home	_	home	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I called reception to ask if they knew the state the room was in and was told "This is a Days Inn, not the Hilton" and the receptionist then hung up on me .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.25931262969970703
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_o2	True
2	called	_	call	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o(), o2(), s())	15	APP_op1	True
3	reception	_	reception	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
4	to	_	to	TO	O	_	and	_	0	IGNORE	True
5	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	2	MOD_mod	True
6	if	_	if	IN	O	_	interrogative	_	0	IGNORE	True
7	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
8	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	True
9	the	_	the	DT	O	_	thing	_	0	IGNORE	True
10	state	_	state	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_s	True
11	the	_	the	DT	O	_	person	_	0	IGNORE	True
12	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	True
13	was	_	be	VBD	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	15	APP_s	True
14	in	_	in	RB	O	_	i	_	0	IGNORE	True
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
16	was	_	be	VBD	O	_	person	_	0	IGNORE	True
17	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	True
18	"This	"this	"this	CD	O	_	$LEMMA$	_	0	IGNORE	True
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
20	a	_	a	DT	O	_	1	_	0	IGNORE	True
21	Days	_name_	day	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
22	Inn,	inn,	Inn,	VBD	O	_	contrast-01	_	0	IGNORE	True
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	True
24	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
25	Hilton"	_name_	Hilton"	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	15	MOD_mod	True
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	15	MOD_op1	True
27	the	_	the	DT	O	_	he	_	0	IGNORE	True
28	receptionist	_	receptionist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	True
29	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
30	hung	_	hang	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-up-07	(s())	26	APP_op2	True
31	up	_	up	RP	O	_	cause-01	_	0	IGNORE	True
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
33	me	_	I	PRP	O	_	i	_	0	IGNORE	True
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:It took all the courage I could muster to make an appointment .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.025664329528808594
#k-supertags:6
1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	True
2	took	_	take	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-10	(o(), o2(), s())	0	ROOT	True
3	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
4	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	True
5	courage	_	courage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_o2	True
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	True
8	muster	_	muster	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	True
9	to	_	to	TO	O	_	thing	_	0	IGNORE	True
10	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	True
11	an	_	an	DT	O	_	1	_	0	IGNORE	True
12	appointment	_	appointment	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	2	APP_s	True
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	True

#raw:Doctor Gonzales and his entire staff are the most professional people I have ever dealt with .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.034337759017944336
#k-supertags:6
1	Doctor	doctor	Doctor	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	2	MOD_s	True
2	Gonzales	_name_	Gonzales	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_op1	True
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	11	APP_dom	True
4	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
5	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
6	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	True
7	are	_	be	VBP	O	_	person	_	0	IGNORE	True
8	the	_	the	DT	O	_	person	_	0	IGNORE	True
9	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	0	ROOT	True
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	True
13	have	_	have	VBP	O	_	person	_	0	IGNORE	True
14	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	dealt	_	deal	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	11	MOD_o	True
16	with	_	with	IN	O	_	cause-01	_	0	IGNORE	True
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:But I had my cat spayed through their reduced/free spay and neuter program and the vet they sent us to was first of all a hour and a half away, and 4 days later we had to bring them to our normal vet because the vets at the place in wisconsin did a crappy job and they got infections .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.19502830505371094
#k-supertags:6
1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_o	True
3	had	_	have	VBD	O	(d<root> / --LEX--)	$LEMMA$-03	()	26	APP_op1	True
4	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	True
5	cat	_	cat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	True
6	spayed	_	spay	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	APP_op2	True
7	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	True
8	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
9	reduced/free	_	reduced/free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	13	MOD_s	True
10	spay	_	spay	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	True
12	neuter	_	neuter	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	True
13	program	_	program	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	1	MOD_op1	True
15	the	_	the	DT	O	_	person	_	0	IGNORE	True
16	vet	_	vet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
17	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_o	True
18	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	True
19	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	to	_	to	TO	O	_	person	_	0	IGNORE	True
21	was	_	be	VBD	O	_	person	_	0	IGNORE	True
22	first	_name_	first	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	26	MOD_mod	True
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
24	all_a_hour_and_a_half	_name_	half	NN	O	(d<root> / --LEX--)	$LEMMA$-00	()	26	APP_op2	True
25	away,	_	away,	CD	O	_	$LEMMA$	_	0	IGNORE	True
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op1(), op2(), op3())	1	APP_s	True
27	4_days_later	_name_	later	RB	O	(d<root> / --LEX--)	slash	()	29	APP_s	True
28	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	True
29	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(o(), s())	26	APP_op3	True
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
31	bring	_	bring	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	29	APP_o	True
32	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
33	to	_	to	IN	O	_	person	_	0	IGNORE	True
34	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
35	normal	_	normal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	36	MOD_s	True
36	vet	_	vet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	True
37	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	29	MOD_o	True
38	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	True
39	vets	_	vet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	True
40	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	True
41	the	_	the	DT	O	_	person	_	0	IGNORE	True
42	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	39	MOD_mod	True
43	in	_	in	IN	O	_	i	_	0	IGNORE	True
44	wisconsin	_name_	wisconsin	NN	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	42	MOD_mod	True
45	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	37	APP_s	True
46	a	_	a	DT	O	_	1	_	0	IGNORE	True
47	crappy	_	crappy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	True
48	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	True
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	37	MOD_op1	True
50	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
51	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	1	MOD_s	True
52	infections	_	infection	NNS	O	(d<root> / --LEX--)	infect-01	()	49	APP_op2	True
53	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:I gave the woman I spoke with today a "You've been yelped!" card to let her know that Yelp may be a good tool for helping spreading the word about Papeluna .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08029794692993164
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
3	the	_	the	DT	O	_	person	_	0	IGNORE	True
4	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	True
5	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
6	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	4	MOD_s	True
7	with	_	with	IN	O	_	-	_	0	IGNORE	True
8	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	True
9	a	_	a	DT	O	_	i	_	0	IGNORE	True
10	"You've	"you've	"you've	XX	O	_	cause-01	_	0	IGNORE	True
11	been	_	be	VBN	O	_	person	_	0	IGNORE	True
12	yelped!"	_	yelped!"	JJ	O	_	and	_	0	IGNORE	True
13	card	_	card	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
15	let	_	let	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	2	MOD_mod	True
16	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	True
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
19	Yelp	yelp	Yelp	NNP	O	_	$LEMMA$	_	0	IGNORE	True
20	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	APP_s	True
21	be	_	be	VB	O	_	person	_	0	IGNORE	True
22	a	_	a	DT	O	_	thing	_	0	IGNORE	True
23	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	True
24	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
25	for	_	for	IN	O	_	thing	_	0	IGNORE	True
26	helping	_	help	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	True
27	spreading	_	spread	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	26	APP_s	True
28	the	_	the	DT	O	_	he	_	0	IGNORE	True
29	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_s	True
30	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	True
31	Papeluna	_name_	Papeluna	NNP	O	(p<root> / person  :name (n / --LEX--)  :topic-of (a<mod>))	_NAME_	(mod())	29	MOD_mod	True
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:The craziest part is that they aren't even based locally at the city I'm in- they just have 'teams' in areas through the country .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.09237313270568848
#k-supertags:6
1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	True
2	craziest	_	crazy	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	weird	(mod())	3	MOD_mod	True
3	part	_	part	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	True
4	is	_	be	VBZ	O	_	i	_	0	IGNORE	True
5	that	_	that	IN	O	_	and	_	0	IGNORE	True
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
7	aren't	_	aren't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	True
8	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_dom	True
10	locally	_	locally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	local-02	(s())	9	MOD_s	True
11	at	_	at	IN	O	_	mean-01	_	0	IGNORE	True
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	True
13	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
14	I'm	i'm	i'm	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	9	MOD_mod	True
15	in-	_	in-	XX	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(o(), s())	3	MOD_s	True
16	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
17	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
18	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	15	APP_o	True
19	'teams'	_	'teams'	VBN	O	_	mean-01	_	0	IGNORE	True
20	in	_	in	IN	O	_	mean-01	_	0	IGNORE	True
21	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
22	through	_	through	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(mod(), op1())	3	MOD_mod	True
23	the	_	the	DT	O	_	he	_	0	IGNORE	True
24	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	True
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Be warned- they'll ltake you for everything they can .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.015061616897583008
#k-supertags:6
1	Be	be	Be	VB	O	_	you	_	0	IGNORE	True
2	warned-	_	warned-	JJ	O	_	you	_	0	IGNORE	True
3	they'll	_	they'll	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	you	(mod())	4	MOD_mod	True
4	ltake	_	ltake	UH	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	remember-01	(o(), s())	0	ROOT	True
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
6	for	_	for	IN	O	_	thing	_	0	IGNORE	True
7	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
8	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
9	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	True
10	.	_	.	.	O	_	do-02	_	0	IGNORE	True

#raw:I've stayed at this fabulous little motel two years running, and I have to say it's one of the best lodging experiences I've ever had on the coast...and I'm even comparing it to the big resorts I've stayed at !
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.11031389236450195
#k-supertags:6
1	I've	i've	I've	NNP	O	_	cause-01	_	0	IGNORE	True
2	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_op1	True
3	at	_	at	IN	O	_	thing	_	0	IGNORE	True
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
5	fabulous	_	fabulous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
6	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
7	motel	_	motel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
8	two_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	True
9	running,	_	running,	NNP	O	_	_NAME_	_	0	IGNORE	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	True
12	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	10	APP_op2	True
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
14	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	True
15	it's	_	it's	PRP$	O	_	include-91	_	0	IGNORE	True
16	one	_	one	CD	O	_	1	_	0	IGNORE	True
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(o(), s())	10	MOD_s	True
18	the	_	the	DT	O	_	thing	_	0	IGNORE	True
19	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	21	MOD_s	True
20	lodging	_	lodging	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	True
21	experiences	_	experience	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	True
22	I've	i've	I've	VBG	O	_	thing	_	0	IGNORE	True
23	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
24	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	21	MOD_o	True
25	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	True
26	the	_	the	DT	O	_	he	_	0	IGNORE	True
27	coast...and	_	coast...and	NN	O	(c<root> / country-region  :name (n / --LEX--)  :location-of (r<mod>))	_NAME_	(mod())	24	MOD_mod	True
28	I'm	i'm	i'm	PRP	O	(d<root> / --LEX--)	person	()	10	APP_s	True
29	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
30	comparing	_	compare	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	28	MOD_s	True
31	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
32	to	_	to	IN	O	_	thing	_	0	IGNORE	True
33	the	_	the	DT	O	_	thing	_	0	IGNORE	True
34	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	True
35	resorts	_	resort	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	True
36	I've	i've	i've	PRP	O	_	thing	_	0	IGNORE	True
37	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	MOD_s	True
38	at	_	at	IN	O	_	i	_	0	IGNORE	True
39	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:They bake bread fresh daily, they don't press their sandwiches which is the way I like it, and the meat is always fresh .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08481454849243164
#k-supertags:6
1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	bake	_	bake	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	18	APP_op1	True
3	bread	_	bread	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
4	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	True
5	daily,	_	daily,	NNS	O	_	and	_	0	IGNORE	True
6	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	True
8	press	_	press	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	True
9	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
10	sandwiches	_	sandwich	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
11	which	_	which	WDT	O	_	i	_	0	IGNORE	True
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
13	the	_	the	DT	O	_	thing	_	0	IGNORE	True
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	True
16	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	MOD_o	True
17	it,	_	it,	PRP	O	_	thing	_	0	IGNORE	True
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op1(), op2(), op3())	0	ROOT	True
19	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
20	meat	_	meat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	True
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
22	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	True
23	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_op3	True
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Every time we go they seem to have a different ingredient or two which keeps things interesting .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.042421579360961914
#k-supertags:6
1	Every	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	6	MOD_mod	True
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
4	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	1	APP_s	True
5	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
6	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	True
7	to	_	to	TO	O	_	and	_	0	IGNORE	True
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	6	APP_s	True
9	a	_	a	DT	O	_	1	_	0	IGNORE	True
10	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	11	MOD_s	True
11	ingredient	_	ingredient	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	True
12	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	8	MOD_op1	True
13	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	12	APP_op2	True
14	which	_	which	WDT	O	_	i	_	0	IGNORE	True
15	keeps	_	keep	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	6	MOD_s	True
16	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	True
17	interesting	_	interesting	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	15	APP_o	True
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Outside of parking being at a premium, especially on discount days, The Laundry Tub is not filthy and it's no smaller than any of a dozen laundromats I've been in .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1038517951965332
#k-supertags:6
1	Outside	outside	outside	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(mod(), op1())	16	MOD_mod	True
2	of	_	of	IN	O	_	except-01	_	0	IGNORE	True
3	parking	_	parking	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_op1	True
4	being	_	be	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(o(), s())	16	MOD_o	True
5	at	_	at	IN	O	_	thing	_	0	IGNORE	True
6	a	_	a	DT	O	_	thing	_	0	IGNORE	True
7	premium,	_	premium,	NNP	O	_	multi-sentence	_	0	IGNORE	True
8	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
9	on	_	on	IN	O	_	9	_	0	IGNORE	True
10	discount	_	discount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
11	days,	_	days,	NNP	O	_	-	_	0	IGNORE	True
12	The_Laundry_Tub	_name_	Tub	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_dom	True
13	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	True
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	True
15	filthy	_	filthy	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	16	APP_op1	True
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
17	it's	_	it's	PRP$	O	_	opine-01	_	0	IGNORE	True
18	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	True
19	smaller	_	small	JJR	O	(d<root> / --LEX--)	small	()	16	APP_op2	True
20	than	_	than	IN	O	_	more	_	0	IGNORE	True
21	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	True
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
23	a	_	a	DT	O	_	1	_	0	IGNORE	True
24	dozen	_	dozen	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	12	(mod())	25	MOD_mod	True
25	laundromats	_	laundromat	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	19	MOD_mod	True
26	I've	i've	i've	ADD	O	_	location	_	0	IGNORE	True
27	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	25	MOD_s	True
28	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	True
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:In this day its rare to find such wonderful people who CARE , Not the kind of want to make cash .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.027409076690673828
#k-supertags:6
1	In	in	in	IN	O	_	after	_	0	IGNORE	True
2	this_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
3	its	_	its	PRP$	O	_	cause-01	_	0	IGNORE	True
4	rare	_	rare	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	True
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
6	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	True
7	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	True
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_s	True
10	who	_	who	WP	O	_	and	_	0	IGNORE	True
11	CARE	_name_	care	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	True
12	,	_	,	,	O	_	and	_	0	IGNORE	True
13	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	True
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
15	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	True
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	4	MOD_s	True
17	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	15	MOD_s	True
18	to	_	to	TO	O	_	person	_	0	IGNORE	True
19	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	17	APP_o	True
20	cash	_	cash	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	True
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:When having your car worked on you have to trust the mechanic & this Midas is truly someone you can trust !
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.03778862953186035
#k-supertags:6
1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	True
2	having	_	have	VBG	O	_	$LEMMA$-04	_	0	IGNORE	True
3	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
4	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
5	worked	_	work	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	True
6	on	_	on	IN	O	_	thing	_	0	IGNORE	True
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	True
8	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	True
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
10	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	8	APP_o	True
11	the	_	the	DT	O	_	person	_	0	IGNORE	True
12	mechanic	_	mechanic	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	10	APP_o	True
13	&	_	&	CC	O	_	and	_	0	IGNORE	True
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	Midas	midas	Midas	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_dom	True
16	is	_	be	VBZ	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	8	APP_s	True
17	truly	_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	true-01	(s())	18	MOD_s	True
18	someone	_	someone	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_dom	True
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	MOD_s	True
21	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	18	MOD_o	True
22	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:The only reason I'm giving 3 stars instead of 1 or 2, I should admit, nothing was broken .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.018770694732666016
#k-supertags:6
1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	True
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	14	MOD_s	True
4	I'm	i'm	i'm	WP	O	_	5	_	0	IGNORE	True
5	giving	_	give	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	True
6	3	_	3	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	True
7	stars	_	star	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
8	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(o(), s())	7	MOD_s	True
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
10	1	_	1	CD	O	(d<root> / --LEX--)	_NUMBER_	()	11	APP_op1	True
11	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	8	APP_o	True
12	2,	_	2,	CD	O	_	$LEMMA$	_	0	IGNORE	True
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
14	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	True
15	admit,	_	admit,	NNS	O	_	-	_	0	IGNORE	True
16	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
17	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
18	broken	_	break	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	break-01	(s())	14	APP_s	True
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Linda is the rudest person you will ever talk to and she sticks up for all of the trashy, rude people that live there, not the nice ones that actually give a crap about respecting others .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.14369463920593262
#k-supertags:6
1	Linda	_name_	Linda	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_dom	True
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
3	the	_	the	DT	O	_	-	_	0	IGNORE	True
4	rudest	_	rude	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	little	(mod())	5	MOD_mod	True
5	person	_	person	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	True
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
7	will	_	will	MD	O	_	person	_	0	IGNORE	True
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	talk	_	talk	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), s())	5	MOD_o	True
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
12	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	sticks	_	stick	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	11	APP_op2	True
14	up	_	up	RP	O	_	thing	_	0	IGNORE	True
15	for	_	for	IN	O	_	and	_	0	IGNORE	True
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	True
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
18	the	_	the	DT	O	_	he	_	0	IGNORE	True
19	trashy,	_	trashy,	NNP	O	_	thing	_	0	IGNORE	True
20	rude	_	rude	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	True
21	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	13	APP_s	True
22	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	True
23	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	True
24	there,	_	there,	NNS	O	_	person	_	0	IGNORE	True
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	True
26	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>))	contrast-01	(s())	11	MOD_s	True
27	nice	_	nice	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	True
28	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	True
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	True
30	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	31	MOD_s	True
31	give	_	give	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-16	(o(), o2(), s())	21	MOD_s	True
32	a	_	a	DT	O	_	person	_	0	IGNORE	True
33	crap	_	crap	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_o	True
34	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	True
35	respecting	_	respect	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o2	True
36	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	True
37	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:When it came time to pay the bill up front, they would not let me use any of the certificate for a tip (which I have done with any other restaurant I've gotten a gift certificate for. )
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.16115975379943848
#k-supertags:6
1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	True
2	it	_	it	PRP	O	_	i	_	0	IGNORE	True
3	came	_	come	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	14	MOD_mod	True
4	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
5	to	_	to	TO	O	_	thing	_	0	IGNORE	True
6	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	True
7	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	True
8	bill	_	bill	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	True
9	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	True
10	front,	_	front,	NNP	O	_	and	_	0	IGNORE	True
11	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
12	would	_	would	MD	O	_	-	_	0	IGNORE	True
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	True
14	let	_	let	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
15	me	_	I	PRP	O	_	i	_	0	IGNORE	True
16	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	14	APP_o	True
17	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	True
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
19	the	_	the	DT	O	_	person	_	0	IGNORE	True
20	certificate	_	certificate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	True
21	for	_	for	IN	O	_	or	_	0	IGNORE	True
22	a	_	a	DT	O	_	1	_	0	IGNORE	True
23	tip	_	tip	NN	O	(d<root> / --LEX--)	$LEMMA$-05	()	16	APP_o	True
24	(which	_	(which	.	O	_	$LEMMA$	_	0	IGNORE	True
25	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_o2	True
26	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	True
27	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	16	MOD_o	True
28	with	_	with	IN	O	_	-	_	0	IGNORE	True
29	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	True
30	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	True
31	restaurant	_	restaurant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	True
32	I've	i've	i've	NN	O	_	mean-01	_	0	IGNORE	True
33	gotten	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	31	MOD_s	True
34	a	_	a	DT	O	_	thing	_	0	IGNORE	True
35	gift	_	gift	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	True
36	certificate	_	certificate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	True
37	for.	_	for.	NN	O	_	$LEMMA$	_	0	IGNORE	True
38	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	True

#raw:He showed me the car I was interested in and we took a test drive .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.07231259346008301
#k-supertags:6
1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	True
2	showed	_	show	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	10	APP_op1	True
3	me	_	I	PRP	O	_	i	_	0	IGNORE	True
4	the	_	the	DT	O	_	he	_	0	IGNORE	True
5	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	True
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	True
7	was	_	be	VBD	O	_	person	_	0	IGNORE	True
8	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	5	MOD_s	True
9	in	_	in	IN	O	_	i	_	0	IGNORE	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	True
12	took	_	take	VBD	O	_	$LEMMA$-01	_	0	IGNORE	True
13	a	_	a	DT	O	_	thing	_	0	IGNORE	True
14	test	_	test	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	True
15	drive	_	drive	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_op2	True
16	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:The best there is in service .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0016772747039794922
#k-supertags:6
1	The	the	the	DT	O	_	thing	_	0	IGNORE	True
2	best	_	good	JJS	O	(g<root> / --LEX--  :degree (m / most))	good-02	()	0	ROOT	True
3	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	True
4	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
5	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	True
6	service	_	service	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	serve-01	(mod())	2	MOD_mod	True
7	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	True

#raw:It's without a doubt, the best service experience I've ever had and just to be clear, the price he charged me was the same as my tire guy in Nashville's price for putting on the other rear tire .
#batch_size:32
#normalized_nn_time:0.014868907630443573
#normalized_prepare_ftd_time:0.006538562476634979
#host:98e974c0f148
#parser:ftd
#parsing_time:0.09735703468322754
#k-supertags:6
1	It's	it's	it's	PRP	O	_	have-polarity-91	_	0	IGNORE	True
2	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	True
3	a	_	a	DT	O	_	1	_	0	IGNORE	True
4	doubt,	_	doubt,	NNS	O	_	i	_	0	IGNORE	True
5	the	_	the	DT	O	_	thing	_	0	IGNORE	True
6	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	8	MOD_s	True
7	service	_	service	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	serve-01	(mod())	8	MOD_mod	True
8	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op1	True
9	I've	i've	i've	JJ	O	_	-	_	0	IGNORE	True
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	True
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(o(), s())	8	MOD_o	True
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
13	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
14	to	_	to	TO	O	_	and	_	0	IGNORE	True
15	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	12	MOD_s	True
16	clear,	_	clear,	NNP	O	_	-	_	0	IGNORE	True
17	the	_	the	DT	O	_	thing	_	0	IGNORE	True
18	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o2	True
19	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	True
20	charged	_	charge	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	18	MOD_o	True
21	me	_	I	PRP	O	_	i	_	0	IGNORE	True
22	was	_	be	VBD	O	_	monetary-quantity	_	0	IGNORE	True
23	the	_	the	DT	O	_	thing	_	0	IGNORE	True
24	same	_	same	JJ	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o(), o2(), s())	12	APP_op2	True
25	as	_	as	IN	O	_	cause-01	_	0	IGNORE	True
26	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
27	tire	_	tire	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	True
28	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
29	in	_	in	IN	O	(d<root> / --LEX--)	i	()	12	APP_s	True
30	Nashville's	nashville's	Nashville's	NNP	O	_	thing	_	0	IGNORE	True
31	price	_	price	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	24	APP_o	True
32	for	_	for	IN	O	_	cause-01	_	0	IGNORE	True
33	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	True
34	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	True
35	the	_	the	DT	O	_	person	_	0	IGNORE	True
36	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	True
37	rear	_	rear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	True
38	tire	_	tire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	True
39	.	_	.	.	O	_	cause-01	_	0	IGNORE	True

#raw:I mean, that's the way it works at amusement parks: the longest lines are at the best rides .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.020346879959106445
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	True
2	mean,	_	mean,	VBP	O	_	expressive	_	0	IGNORE	True
3	that's	_	that's	IN	O	_	$LEMMA$-01	_	0	IGNORE	True
4	the	_	the	DT	O	_	thing	_	0	IGNORE	True
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	14	APP_o	True
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
7	works	_	work	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	5	APP_mod	True
8	at	_	at	IN	O	_	thing	_	0	IGNORE	True
9	amusement	_	amusement	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	True
10	parks:	_name_	parks:	NNP	O	_	mean-01	_	0	IGNORE	True
11	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	True
12	longest	_	long	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	long-03	(s())	13	MOD_s	True
13	lines	_	line	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
14	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(o(), s())	0	ROOT	True
15	at	_	at	IN	O	_	thing	_	0	IGNORE	True
16	the	_	the	DT	O	_	thing	_	0	IGNORE	True
17	best	_	good	JJS	O	(m2<root> / most  :degree-of (g / --LEX--  :ARG1 (c<s>)))	good-02	(s())	18	MOD_s	True
18	rides	_	ride	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	True
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:I rrly seek the cehf out to introduce myself-- but the second time we went-- i made a point of asking our wait person to introduce my friend and myself to the chef to tell him just how good our meals were .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.1857149600982666
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	True
2	rrly	_	rrly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	respect-01	(mod())	3	MOD_mod	True
3	seek	_	seek	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_s	True
4	the	_	the	DT	O	_	person	_	0	IGNORE	True
5	cehf	_	cehf	NN	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	True
6	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	True
7	to	_	to	TO	O	_	and	_	0	IGNORE	True
8	introduce	_	introduce	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	3	MOD_mod	True
9	myself--	_	myself--	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(o(), s())	10	MOD_s	True
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
11	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	True
12	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	21	MOD_mod	True
13	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	True
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	True
15	went--	_	went--	NNP	O	_	$LEMMA$	_	0	IGNORE	True
16	i	_	i	PRP	O	_	$REPL$	_	0	IGNORE	True
17	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	True
18	a	_	a	DT	O	_	thing	_	0	IGNORE	True
19	point	_	point	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	APP_o	True
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
21	asking	_	ask	VBG	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-02	(s(s_UNIFY_o()))	19	APP_s	True
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
23	wait	_	wait	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	True
24	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	True
25	to	_	to	TO	O	_	person	_	0	IGNORE	True
26	introduce	_	introduce	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	21	APP_s	True
27	my	_	my	PRP$	O	_	thing	_	0	IGNORE	True
28	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	29	APP_op2	True
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	26	APP_o	True
30	myself	_	myself	PRP	O	_	person	_	0	IGNORE	True
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
32	the	_	the	DT	O	_	person	_	0	IGNORE	True
33	chef	_	chef	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	26	APP_o2	True
34	to	_	to	TO	O	_	thing	_	0	IGNORE	True
35	tell	_	tell	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), o(), s())	26	MOD_mod	True
36	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
37	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	True
38	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	amr-unknown	(mod())	39	MOD_mod	True
39	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	35	APP_o	True
40	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
41	meals	_	meal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	True
42	were	_	be	VBD	O	_	person	_	0	IGNORE	True
43	.	_	.	.	O	_	thing	_	0	IGNORE	True

#raw:I feel that the way some doctors offices work around here is a little bit absurd so I'm happy that these guys don't do those two things in particlular .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05756330490112305
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	True
2	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	17	APP_s	True
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	True
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	True
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	APP_dom	True
6	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
7	doctors	_	doctor	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
8	offices	_	office	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	True
9	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_mod	True
10	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
11	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
12	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	17	MOD_s	True
13	a	_	a	DT	O	_	thing	_	0	IGNORE	True
14	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	True
15	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	True
16	absurd	_	absurd	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	True
17	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	0	ROOT	True
18	I'm	i'm	I'm	NNPS	O	_	cause-01	_	0	IGNORE	True
19	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	True
20	that	_	that	IN	O	_	i	_	0	IGNORE	True
21	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	22	MOD_mod	True
22	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	True
23	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	True
24	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	19	APP_s	True
25	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	27	MOD_mod	True
26	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	27	MOD_mod	True
27	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	True
28	in	_	in	IN	O	_	cause-01	_	0	IGNORE	True
29	particlular	_	particlular	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	True
30	.	_	.	.	O	_	name	_	0	IGNORE	True

#raw:I was extremely interested in the car and very likely would have bought it, but the sales guy I dealt with ruined the deal .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.08881282806396484
#k-supertags:6
1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	True
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	True
3	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	4	MOD_mod	True
4	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	interest-01	(o(), s())	8	APP_op1	True
5	in	_	in	IN	O	_	i	_	0	IGNORE	True
6	the	_	the	DT	O	_	he	_	0	IGNORE	True
7	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	15	APP_s	True
9	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
10	likely	_	likely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	True
11	would	_	would	MD	O	_	thing	_	0	IGNORE	True
12	have	_	have	VB	O	_	$LEMMA$-condition-91	_	0	IGNORE	True
13	bought	_	buy	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_op2	True
14	it,	_	it,	NNP	O	_	_NAME_	_	0	IGNORE	True
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	0	ROOT	True
16	the	_	the	DT	O	_	he	_	0	IGNORE	True
17	sales	_	sale	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	sell-01	(mod())	18	MOD_mod	True
18	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	True
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
20	dealt	_	deal	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	18	MOD_s	True
21	with	_	with	IN	O	_	-	_	0	IGNORE	True
22	ruined	_	ruin	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	15	APP_o	True
23	the	_	the	DT	O	_	person	_	0	IGNORE	True
24	deal	_	deal	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	True
25	.	_	.	.	O	_	and	_	0	IGNORE	True

#raw:I mean, I don't care if he doesn't know, but if he pretends to know and tells me BS to my face, there's no way I'm going to trust him when matters turn to the price of the car and financing .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.45477843284606934
#k-supertags:6
1	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	5	MOD_mod	True
2	mean,	_	mean,	VBP	O	_	-	_	0	IGNORE	True
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
4	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	True
5	care	_	care	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	10	APP_s	True
6	if	_	if	IN	O	_	cause-01	_	0	IGNORE	True
7	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	True
8	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	True
9	know,	_	know,	NNP	O	_	contrast-01	_	0	IGNORE	True
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	True
11	if	_	if	IN	O	_	cause-01	_	0	IGNORE	True
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
13	pretends	_	pretend	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	True
14	to	_	to	TO	O	_	person	_	0	IGNORE	True
15	know	_	know	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	True
16	and	_	and	CC	O	(o<root> / --LEX--  :op2 (e2<op2>)  :op1 (i<op1>)  :condition-of (h<mod>))	$LEMMA$	(mod(), op1(s()), op2(s()))	5	MOD_mod	True
17	tells	_	tell	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	16	APP_op2	True
18	me	_	I	PRP	O	_	and	_	0	IGNORE	True
19	BS	bs	BS	NNP	O	_	$LEMMA$	_	0	IGNORE	True
20	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
21	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	True
22	face,	_	face,	.	O	_	i	_	0	IGNORE	True
23	there's	_	there'	NNS	O	_	possible-01	_	0	IGNORE	True
24	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	29	MOD_mod	True
25	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
26	I'm	i'm	i'm	WP	O	_	person	_	0	IGNORE	True
27	going	_	go	VBG	O	_	say-01	_	0	IGNORE	True
28	to	_	to	TO	O	_	thing	_	0	IGNORE	True
29	trust	_	trust	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	True
30	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
31	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	True
32	matters	_	matter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	True
33	turn	_	turn	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), o(), s())	29	MOD_mod	True
34	to	_	to	IN	O	_	thing	_	0	IGNORE	True
35	the	_	the	DT	O	_	person	_	0	IGNORE	True
36	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	40	MOD_s	True
37	of	_	of	IN	O	_	thing	_	0	IGNORE	True
38	the	_	the	DT	O	_	person	_	0	IGNORE	True
39	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_op1	True
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	33	APP_o	True
41	financing	_	financing	NN	O	(d<root> / --LEX--)	fund-01	()	40	APP_op2	True
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:She told me she could not use the piece I was returning and the company would only put it in the trash so I could not return it .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.0934453010559082
#k-supertags:6
1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	True
2	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
3	me	_	I	PRP	O	_	i	_	0	IGNORE	True
4	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	True
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_op1	True
6	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	True
7	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	True
8	the	_	the	DT	O	_	thing	_	0	IGNORE	True
9	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	True
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
11	was	_	be	VBD	O	_	person	_	0	IGNORE	True
12	returning	_	return	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	True
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	2	APP_o	True
14	the	_	the	DT	O	_	he	_	0	IGNORE	True
15	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	True
16	would	_	would	MD	O	_	thing	_	0	IGNORE	True
17	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	True
18	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	13	APP_op2	True
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	True
20	in	_	in	IN	O	_	i	_	0	IGNORE	True
21	the	_	the	DT	O	_	he	_	0	IGNORE	True
22	trash	_	trash	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	True
23	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(o(), s())	2	MOD_s	True
24	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	True
25	could	_	could	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	18	MOD_mod	True
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	True
27	return	_	return	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	25	APP_s	True
28	it	_	it	PRP	O	_	i	_	0	IGNORE	True
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:With a smirk on her face she told me NO MONEY IS BEING RETURNED and THAT IS THE WAY IT WAS .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.2778449058532715
#k-supertags:6
1	With	with	with	IN	O	_	have-03	_	0	IGNORE	True
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	True
3	smirk	_	smirk	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	True
4	on	_	on	IN	O	_	cause-01	_	0	IGNORE	True
5	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
6	face	_	face	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
7	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	True
8	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
9	me	_	I	PRP	O	_	i	_	0	IGNORE	True
10	NO	no	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	True
11	MONEY	money	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
12	IS	is	be	VBZ	O	_	person	_	0	IGNORE	True
13	BEING	being	be	VBG	O	_	person	_	0	IGNORE	True
14	RETURNED	returned	return	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_op1	True
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	8	APP_o	True
16	THAT	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	True
17	IS	is	be	VBZ	O	_	i	_	0	IGNORE	True
18	THE	the	the	DT	O	_	cause-01	_	0	IGNORE	True
19	WAY	way	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	True
20	IT	it	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	True
21	WAS	was	be	VBD	O	_	cause-01	_	0	IGNORE	True
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:She highly recommended him and described him as the "Saintly Instructor and Simply the Best Instructor there is ....very calm, pleasant and very detailed in giving instructions" .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.3378713130950928
#k-supertags:6
1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	True
2	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	3	MOD_mod	True
3	recommended	_	recommend	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	5	APP_op1	True
4	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op1(o(), s()), op2(o(), s()))	0	ROOT	True
6	described	_	describe	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	5	APP_op2	True
7	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
8	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	True
9	the	_	the	DT	O	_	person	_	0	IGNORE	True
10	"Saintly	"saintly	"saintly	CD	O	(s<root> / --LEX--  :ARG0 (y<s>))	competent-01	(s())	11	MOD_s	True
11	Instructor	instructor	instructor	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	12	APP_op1	True
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	6	APP_o2	True
13	Simply	simply	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	16	MOD_s	True
14	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	5	APP_o	True
15	Best	best	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	16	MOD_s	True
16	Instructor	instructor	instructor	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	12	APP_op2	True
17	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	True
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
19	....very	_	....very	.	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	15	MOD_mod	True
20	calm,	_	calm,	NNP	O	_	and	_	0	IGNORE	True
21	pleasant	_	pleasant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	True
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op1(), op2(), op3())	5	MOD_op1	True
23	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	True
24	detailed	_	detailed	JJ	O	(d<root> / --LEX--)	$LEMMA$-03	()	22	APP_op3	True
25	in	_	in	IN	O	_	i	_	0	IGNORE	True
26	giving	_	give	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	True
27	instructions"	_	instructions"	.	O	_	thing	_	0	IGNORE	True
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:To my friend, thank you for your recommendation... you were true to your words in saying Gerry is a "Saintly Instructor ...Absolutely Simple the Best Instructor and Best Driving school there is !
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.05317234992980957
#k-supertags:6
1	To	to	to	IN	O	_	say-01	_	0	IGNORE	True
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
3	friend,	_	friend,	NNS	O	_	i	_	0	IGNORE	True
4	thank	_	thank	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	0	ROOT	True
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
6	for	_	for	IN	O	_	i	_	0	IGNORE	True
7	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	True
8	recommendation...	_	recommendation...	XX	O	_	i	_	0	IGNORE	True
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	True
10	were	_	be	VBD	O	_	person	_	0	IGNORE	True
11	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(o(), s())	4	APP_o2	True
12	to	_	to	IN	O	_	thing	_	0	IGNORE	True
13	your	_	your	PRP$	O	_	thing	_	0	IGNORE	True
14	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	True
15	in	_	in	IN	O	_	i	_	0	IGNORE	True
16	saying	_	say	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	11	APP_o	True
17	Gerry	_name_	Gerry	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	True
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	True
19	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	True
20	"Saintly	"saintly	"saintly	ADD	O	(s<root> / --LEX--  :ARG0 (y<s>))	know-01	(s())	21	MOD_s	True
21	Instructor	instructor	instructor	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	16	APP_s	True
22	...Absolutely	...absolutely	...Absolutely	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	compare-01	(s())	23	MOD_s	True
23	Simple	simple	simple	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_o	True
24	the	_	the	DT	O	_	person	_	0	IGNORE	True
25	Best	best	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	26	MOD_s	True
26	Instructor	instructor	Instructor	NNP	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	teach-01	()	27	APP_op1	True
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	23	APP_s	True
28	Best	best	Best	NNP	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	30	MOD_s	True
29	Driving	driving	drive	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	drive-01	(mod())	30	MOD_mod	True
30	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	True
31	there	_	there	EX	O	_	thing	_	0	IGNORE	True
32	is	_	be	VBZ	O	_	ex$FORM$t-01	_	0	IGNORE	True
33	!	_	!	.	O	_	expressive	_	0	IGNORE	True

#raw:Everything we have gotten there has been more authentic and better tasting than any other Chinese restaurant in the San Antonio area we have been to--and trust me we have been to a lot of them .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.28230977058410645
#k-supertags:6
1	Everything	everything	Everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	True
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	True
3	have	_	have	VBP	O	_	thing	_	0	IGNORE	True
4	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	1	MOD_o	True
5	there	_	there	EX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	True
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	True
7	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
8	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	authentic	_	authentic	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op1	True
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	0	ROOT	True
11	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	12	MOD_s	True
12	tasting	_	tasting	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op2	True
13	than	_	than	IN	O	_	thing	_	0	IGNORE	True
14	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
16	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	True
17	restaurant	_	restaurant	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
18	in	_	in	IN	O	_	i	_	0	IGNORE	True
19	the	_	the	DT	O	_	name	_	0	IGNORE	True
20	San_Antonio	_name_	Antonio	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	True
21	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	True
22	we	_	we	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	True
23	have	_	have	VBP	O	_	person	_	0	IGNORE	True
24	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	True
25	to--and	_	to--and	NNP	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(mod(), op1(), op2())	10	MOD_mod	True
26	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	25	APP_op2	True
27	me	_	I	PRP	O	_	i	_	0	IGNORE	True
28	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
29	have	_	have	VBP	O	_	person	_	0	IGNORE	True
30	been	_	be	VBN	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	26	APP_s	True
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	True
32	a	_	a	DT	O	_	thing	_	0	IGNORE	True
33	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	30	MOD_mod	True
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	True
35	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	True
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:Even my PA i went to the other day said "it must by comforting to have gone to a heart surgeon like him who will do nothing for you" .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.04994511604309082
#k-supertags:6
1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	True
3	PA	pa	pa	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	10	APP_s	True
4	i	_	i	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	True
5	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(o(), s())	3	MOD_o	True
6	to	_	to	IN	O	_	person	_	0	IGNORE	True
7	the	_	the	DT	O	_	person	_	0	IGNORE	True
8	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	True
9	day	_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	True
10	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	0	ROOT	True
11	"it	_	"it	.	O	(d<root> / --LEX--)	cause-01	()	12	APP_s	True
12	must	_	must	MD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	infer-01	(o(s()))	10	APP_o	True
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	True
14	comforting	_	comfort	VBG	O	(a2<root> / --LEX--  :ARG0 (c<s>)  :concession-of (a<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	True
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	True
16	have	_	have	VB	O	_	cause-01	_	0	IGNORE	True
17	gone	_	go	VBN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(o(), s())	12	APP_o	True
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	True
19	a	_	a	DT	O	_	thing	_	0	IGNORE	True
20	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	True
21	surgeon	_	surgeon	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	17	APP_o	True
22	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	21	MOD_s	True
23	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	True
24	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	True
25	will	_	will	MD	O	_	thing	_	0	IGNORE	True
26	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	21	MOD_s	True
27	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	True
28	for	_	for	IN	O	_	i	_	0	IGNORE	True
29	you"	_	you"	NNP	O	_	and	_	0	IGNORE	True
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

#raw:We then called the office and the man we spoke to said he'd send someone out to look at it but couldn't promise when- two weeks came and went and we heard nothing .
#batch_size:12
#normalized_nn_time:0.02019081513086955
#normalized_prepare_ftd_time:0.004539211591084798
#host:98e974c0f148
#parser:ftd
#parsing_time:0.20128703117370605
#k-supertags:6
1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	True
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	True
3	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(o(), s())	6	APP_op1	True
4	the	_	the	DT	O	_	person	_	0	IGNORE	True
5	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	True
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op1(), op2())	0	ROOT	True
7	the	_	the	DT	O	_	person	_	0	IGNORE	True
8	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	True
9	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
10	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	MOD_s	True
11	to	_	to	IN	O	_	person	_	0	IGNORE	True
12	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(o(), s())	6	APP_op2	True
13	he'd	_	he'd	PRP	O	_	person	_	0	IGNORE	True
14	send	_	send	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o(), o2(), s())	12	APP_o	True
15	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	True
16	out	_	out	RP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	True
17	to	_	to	TO	O	_	and	_	0	IGNORE	True
18	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), o(), s())	14	MOD_mod	True
19	at	_	at	IN	O	_	and	_	0	IGNORE	True
20	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	True
21	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(o(), s())	6	MOD_s	True
22	couldn't	_	couldn't	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	True
23	promise	_	promise	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	True
24	when-	_	when-	CD	O	_	-	_	0	IGNORE	True
25	two_weeks	_name_	week	NNS	O	(d<root> / --LEX--)	_NAME_	()	27	APP_s	True
26	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op1	True
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op1(s()), op2(s()))	23	APP_s	True
28	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op2	True
29	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(mod(), op1(), op2())	6	MOD_mod	True
30	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	True
31	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_op2	True
32	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	True
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	True

