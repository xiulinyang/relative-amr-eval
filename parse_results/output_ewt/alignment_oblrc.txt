sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	setting	_	set	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	road	_	road	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	blocks	_	block	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	at	_	at	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	positions	_	position	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	war	_	war	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	year,	_	year,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
20	indicates	_	indicate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
21	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	are	_	be	VBP	O	_	person	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
25	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	20	APP_o	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@s@@same-01, 16@@n@@war, 25@@d@@person, 6@@d@@block-01, 5@@p@@road, 3@@b@@set-01, 17@@p@@last, 1@@d@@They, 9@@p@@exact, 20@@s@@indicate-01, 10@@s@@same-01, 11@@d@@position]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	child	_	child	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	the_50's	_name_	50'	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	23	APP_s	true
7	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	23	APP_op1	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
11	glandular	_	glandular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	MOD_op1	true
14	they	_	they	PRP	O	_	$LEMMA$	_	23	IGNORE	true
15	treated	_	treat	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	23	APP_op2	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	with	_	with	IN	O	_	-	_	0	IGNORE	true
18	radiation	_	radiation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	therapy	_	therapy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	(primitive	_	(primitive	.	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o2	true
21	at	_	at	IN	O	_	i	_	0	IGNORE	true
22	best!)	_	best!)	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	23	MOD_s	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
24	stopped	_	stop	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op3	true
25	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
26	a	_	a	DT	O	_	thing	_	0	IGNORE	true
27	lesion	_	lesion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
28	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
29	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
30	neck	_	neck	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
32	enlarging--they	_	enlarging--they	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
33	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	APP_s	true
34	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
36	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
37	CA	_name_	CA	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_o	true
38	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	22	APP_o	true
39	stopped	_	stop	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_o	true
40	the	_	the	DT	O	_	and	_	0	IGNORE	true
41	treatments...	_	treatments...	XX	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@a@@and, 13@@a@@and, 32@@p@@person, 24@@s@@stop-01, 11@@p@@glandular, 33@@s@@say-01, 20@@d@@(primitive, 38@@s@@contrast-01, 12@@d@@problem, 39@@d@@stop-01, 37@@d@@CA-01, 15@@b@@treat-01, 19@@d@@therapy, 22@@s@@and, 18@@p@@radiation, 31@@s@@start-01, 5@@n@@_NAME_, 9@@explicitanon0@@lot, 27@@d@@lesion, 41@@r@@treatments..., 3@@n@@child, 7@@s@@have-03, 32@@n@@_NAME_, 36@@explicitanon0@@-, 30@@b@@neck, 6@@d@@i]
sentence=1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
5	was	_	be	VBD	O	_	person	_	0	IGNORE	true
6	over,	_	over,	NNP	O	_	-	_	0	IGNORE	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
8	had	_	have	VBD	O	_	1	_	0	IGNORE	true
9	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	nearly_two_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
11	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[10@@n@@_NAME_, 7@@n@@_NAME_, 9@@s@@serve-01, 4@@d@@it, 7@@p@@person]
sentence=1	Both	both	both	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	have	_	have	VBP	O	(d<root> / --LEX--)	person	()	8	APP_op3	true
3	shared	_	share	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	the_last_14_centuries	_name_	century	NNS	O	(p2<root> / person  :name (n / --LEX--)  :beneficiary-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
9	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
11	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
12	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
13	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	8	APP_op2	true
14	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_mod	true
17	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_s	true
18	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@-, 3@@s@@share-01, 8@@a@@and, 4@@p@@this, 13@@t@@way, 18@@explicitanon0@@-, 5@@d@@country, 17@@s@@live-01, 1@@d@@both, 7@@n@@_NAME_, 12@@s@@possible-01, 20@@p@@other, 7@@p2@@person, 2@@d@@person, 15@@d@@one, 16@@s@@possible-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	doubt	_	doubt	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	extradited	_	extradite	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
7	to	_	to	IN	O	_	person	_	0	IGNORE	true
8	Venezuela,	_name_	Venezuela,	NFP	O	_	_NAME_	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_o	true
14	that	_	that	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_mod	true
17	be	_	be	VB	O	_	thing	_	0	IGNORE	true
18	answered	_	answer	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	Yes	yes	yes	UH	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@he, 16@@s@@possible-01, 15@@d@@question-01, 14@@p@@that, 21@@d@@yes, 12@@p@@only, 13@@t@@way, 6@@s@@extradite-01, 18@@s@@answer-01, 2@@s@@doubt-01, 1@@d@@i]
sentence=1	Now	now	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	that's	_	that's	IN	O	_	say-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	expressive	_	0	IGNORE	true
4	post	_	post	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	0	ROOT	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
7	relate	_	relate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
9	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[5@@d@@i, 4@@t@@thing, 4@@d@@post-01, 1@@n@@now, 6@@s@@possible-01, 7@@s@@relate-01]
sentence=1	Correspondents	correspondents	correspondent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	flocked	_	flock	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true
4	in	_	in	RP	O	_	cause-01	_	0	IGNORE	true
5	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
6	cover	_	cover	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-03	(mod(), s(), o())	3	MOD_mod	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	tsunami	_	tsunami	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	9	MOD_s	true
11	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	9	APP_o	true
13	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	miserable	_	miserable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
20	surrounding	_	surround	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
21	the	_	the	DT	O	_	name	_	0	IGNORE	true
22	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	navy's	_	navy's	.	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	9	MOD_mod	true
24	Far_Eastern_Naval_Command,	_name_	Command,	NFP	O	_	name	_	0	IGNORE	true
25	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	being	_	be	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	9	MOD_s	true
27	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
28	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	with	_	with	IN	O	_	-	_	0	IGNORE	true
30	India's	_name_	India's	NNP	O	_	_NAME_	_	0	IGNORE	true
31	"blue	_	"blue	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	32	MOD_mod	true
32	water	_	water	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
33	navy"	_	navy"	ADD	O	_	and	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@s@@person, 3@@s@@flock-01, 27@@s@@establish-01, 19@@d@@situation, 10@@s@@person, 25@@n@@now, 6@@s@@cover-03, 17@@p@@miserable, 22@@n@@_NAME_, 8@@d@@tsunami, 11@@p@@also, 18@@p@@security, 14@@d@@story, 20@@s@@surround-01, 1@@d@@correspondent, 23@@b@@_NAME_, 31@@p@@_NAME_, 22@@c@@country, 32@@p@@water, 13@@p@@another, 9@@s@@find-01, 12@@s@@have-03]
sentence=1	‘’It	_name_	‘’It	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	was	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-temporally-at-91	(mod())	20	MOD_mod	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	1	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	that	_	that	WDT	O	_	name	_	0	IGNORE	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
8	totally	_	totally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	total	(mod())	9	MOD_mod	true
9	focused	_	focus	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
10	on	_	on	IN	O	_	name	_	0	IGNORE	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	threat	_	threat	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$en-01	(s())	9	APP_o	true
14	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	9	MOD_s	true
15	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	true
16	Al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	14	APP_o	true
17	with	_	with	IN	O	_	-	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Pakistanis,’’	pakistanis,’’	Pakistanis,’’	NNP	O	(n2<root> / --LEX--  :name-of (c2 / country  :mod-of (i<mod>)))	_NAME_	(mod())	9	MOD_mod	true
20	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	Western	western	western	JJ	O	(n2<root> / --LEX--  :name-of (w2 / world-region  :mod-of (w<mod>)))	_NAME_	(mod())	23	MOD_mod	true
23	diplomat	_	diplomat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[19@@c2@@country, 22@@n2@@_NAME_, 14@@s@@instead-of-91, 12@@n@@_NAME_, 22@@w2@@world-region, 12@@c2@@criminal-organization, 9@@s@@focus-01, 7@@n@@_NAME_, 4@@explicitanon0@@1, 19@@n2@@_NAME_, 23@@d@@diplomat, 8@@s@@total, 4@@o@@ordinal-entity, 16@@c2@@criminal-organization, 7@@p@@person, 2@@p@@be-temporally-at-91, 13@@s@@threaten-01, 20@@s@@say-01, 16@@n@@_NAME_, 1@@n@@_NAME_]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	explosive	_	explosive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	temper	_	temper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	probably	_	probably	RB	O	(r<root> / --LEX--  :domain (q<dom>))	probable	(dom())	0	ROOT	true
5	provoked	_	provoke	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_dom	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	disastrous	_	disastrous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	siege	_	siege	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	of	_	of	IN	O	_	-1	_	0	IGNORE	true
10	Fallujah	_name_	Fallujah	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
11	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
12	spring,	_	spring,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	4	MOD_s	true
13	killing	_	kill	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
14	600	_	600	CD	O	(d<root> / --LEX--)	_NUMBER_	()	13	APP_s	true
15	Iraqis,	iraqis,	iraqis,	CD	O	_	include-91	_	0	IGNORE	true
16	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	28	MOD_s	true
18	them	_	they	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	4	MOD_mod	true
19	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	MOD_op1	true
21	children,	_	children,	NNP	O	_	person	_	0	IGNORE	true
22	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
23	revenge	_	revenge	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	5	MOD_mod	true
24	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
26	deaths	_	death	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	die-01	(s())	23	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	4	_	4	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
29	civilian	_	civilian	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
30	mercenaries,	_	mercenaries,	NNS	O	_	include-91	_	0	IGNORE	true
31	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	4	MOD_mod	true
32	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	12	MOD_o	true
33	them	_	they	PRP	O	_	person	_	0	IGNORE	true
34	a_South_African	_name_	African	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	28	MOD_mod	true
35	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[4@@r@@probable, 10@@n@@_NAME_, 2@@p@@explosive, 32@@s@@include-91, 12@@s@@and, 10@@c@@city, 3@@d@@temper, 31@@p@@1, 18@@p@@person, 23@@b@@revenge, 28@@explicitanon0@@_NUMBER_, 20@@a@@and, 17@@s@@include-91, 34@@n@@_NAME_, 11@@p@@last, 13@@s@@kill-01, 7@@p@@disastrous, 19@@d@@woman, 29@@d@@civilian, 14@@d@@_NUMBER_, 5@@s@@provoke-01, 26@@s@@die-01, 34@@c@@country, 16@@p@@most, 8@@s@@siege-01]
sentence=1	GOODWYN:	_name_	goodwyn:	ADD	O	_	have-org-role-91	_	0	IGNORE	true
2	The	the	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
3	candidate	_	candidate	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	MOD_s	true
4	Mr.	mr.	Mr.	NNP	O	_	have-org-role-91	_	0	IGNORE	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	working	_	work	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	for,	_	for,	NN	O	_	have-org-role-91	_	0	IGNORE	true
9	Red_Blount,	_name_	Blount,	NNS	O	_	_NAME_	_	0	IGNORE	true
10	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
11	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	0	ROOT	true
12	rich	_	rich	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
14	Alabama	_name_	Alabama	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	(d<root> / --LEX--)	person	()	11	APP_s	true
17	construction	_	construction	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	construct-01	(mod())	18	MOD_mod	true
18	business	_	business	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@person, 7@@t@@work-01, 14@@n2@@_NAME_, 11@@s@@get-05, 18@@b@@business, 14@@s@@state, 3@@s@@candidate, 12@@d@@rich, 5@@n@@_NAME_, 5@@p@@person, 17@@p@@construct-01]
sentence=1	Then,	then,	Then,	NNP	O	_	expressive	_	0	IGNORE	true
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
3	course,	_	course,	NNP	O	_	and	_	0	IGNORE	true
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
5	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	evidence	_	evidence	NN	O	(t<root> / thing  :ARG0-of (a / --LEX--))	$LEMMA$-01	()	0	ROOT	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	jury	_	jury	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	did	_	do	VBD	O	_	person	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
13	about	_	about	RP	O	_	name	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Robinson	_name_	Robinson	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
17	case..	_	case..	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@hear-01, 7@@t@@thing, 9@@d@@jury, 16@@n@@_NAME_, 7@@a@@evidence-01, 11@@explicitanon0@@-]
sentence=1	A	a	a	DT	O	_	person	_	0	IGNORE	true
2	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	deserves	_	deserve	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	leaders	_	leader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	3	APP_o	true
6	it	_	it	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_s	true
7	has,	_	has,	VBD	O	_	i	_	0	IGNORE	true
8	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	9	APP_s	true
9	friends..	_	friends..	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	i	(s(), o())	5	MOD_o	true
10	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@it, 5@@e2@@lead-02, 2@@d@@country, 3@@s@@deserve-01, 5@@p2@@person, 9@@s@@i, 8@@d@@i]
sentence=1	Though	though	though	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	have-concession-91	(s())	0	ROOT	true
2	''decided''	_	''decided''	CD	O	_	have-concession-91	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	have-concession-91	_	0	IGNORE	true
4	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	9	MOD_mod	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
6	the	_	the	DT	O	_	-	_	0	IGNORE	true
7	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	4	MOD_s	true
8	word,	_	word,	NNS	O	_	have-concession-91	_	0	IGNORE	true
9	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	APP_op1	true
10	from	_	from	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	1	MOD_mod	true
11	the_day	_name_	day	NN	O	(e<root> / event  :name (n / --LEX--))	$LEMMA$	()	9	APP_s	true
12	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	born,	_	born,	NNP	O	_	-	_	0	IGNORE	true
15	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	17	MOD_mod	true
16	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_o	true
18	boys	_	boy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	were	_	be	VBD	O	_	person	_	0	IGNORE	true
20	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	taught	_	teach	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	think	_	think	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	true
24	for	_	for	IN	O	_	by-oneself	_	0	IGNORE	true
25	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
26	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	21	APP_s	true
27	to	_	to	TO	O	_	except-01	_	0	IGNORE	true
28	blindly	_	blindly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	blind	(mod())	29	MOD_mod	true
29	follow	_	follow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	APP_o	true
30	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
31	leaders	_	leader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	29	APP_s	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@s@@have-concession-91, 26@@s@@contrast-01, 29@@s@@follow-02, 21@@s@@teach-01, 28@@t@@blind, 17@@a@@and, 11@@e@@event, 18@@d@@boy, 31@@e2@@lead-02, 4@@p@@probable, 11@@n@@day, 5@@explicitanon0@@-, 15@@p@@this, 9@@s@@cause-01, 23@@d@@think-01, 20@@explicitanon0@@-, 7@@s@@right-06, 31@@p2@@person, 16@@d@@girl, 12@@d@@they, 10@@w@@from]
sentence=1	The	the	the	DT	O	_	say-01	_	0	IGNORE	true
2	answer	_	answer	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
3	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
4	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	D:	d:	d:	NN	O	_	-	_	0	IGNORE	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	above,	_	above,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	4	MOD_o	true
10	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
12	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_dom	true
13	being	_	be	VBG	O	_	person	_	0	IGNORE	true
14	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
15	complex	_	complex	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	reality	_	reality	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_s	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
19	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@answer-01, 17@@d@@we, 10@@s@@cause-01, 6@@p@@all, 18@@s@@live-01, 4@@s@@likely-01, 12@@d@@this, 9@@s@@thing, 15@@p@@complex, 16@@r@@reality]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	norms	_	norm	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	politics	_	politic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_s	true
7	diplomacy	_	diplomacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	are	_	be	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	1	APP_o	true
9	childish,	_	childish,	NNS	O	_	and	_	0	IGNORE	true
10	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
11	comparison	_	comparison	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	level	_	level	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	APP_o	true
15	of	_	of	IN	O	_	and	_	0	IGNORE	true
16	incitement	_	incitement	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_mod	true
18	total	_	total	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	absolute	_	absolute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	deliberate	_	deliberate	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
21	fabrications,	_	fabrications,	NNS	O	_	interrogative	_	0	IGNORE	true
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
23	have	_	have	VBP	O	_	person	_	0	IGNORE	true
24	reached	_	reach	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
25	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	heights	_	height	NNS	O	(d<root> / --LEX--)	high-02	()	24	APP_o	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
29	region	_	region	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
30	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
31	are	_	be	VBP	O	_	person	_	0	IGNORE	true
32	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_o	true
33	about	_	about	IN	O	_	-	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@a@@and, 32@@s@@talk-01, 16@@d@@incitement, 18@@p@@total, 24@@s@@reach-01, 14@@s@@level, 8@@s@@person, 7@@d@@diplomacy, 20@@d@@deliberate, 1@@h@@contrast-01, 30@@d@@we, 19@@p@@absolute, 29@@b@@region, 25@@s@@new-01, 26@@d@@high-02, 5@@d@@politic, 6@@a@@and, 3@@s@@norm]
sentence=1	In	in	in	IN	O	_	resemble-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
4	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
5	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
8	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_s	true
9	a	_	a	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
10	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	against	_	against	IN	O	_	-	_	0	IGNORE	true
12	cannibals	_	cannibal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
13	eating	_	eat	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
14	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
15	prime	_	prime	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	minister,	_	minister,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
17	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
18	such	_	such	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	an	_	an	DT	O	_	person	_	0	IGNORE	true
20	act	_	act	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	27	APP_o2	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	unthinkable,	_	unthinkable,	JJ	O	_	-	_	0	IGNORE	true
23	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
25	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	true
27	address	_	address	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
28	killers	_	killer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	29	APP_s	true
29	shooting	_	shoot	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	shoot-02	(s())	27	APP_o	true
30	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	hospitals,	_	hospitals,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
32	mosques	_	mosque	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	MOD_op1	true
34	ambulances,	_	ambulances,	NNS	O	_	and	_	0	IGNORE	true
35	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
36	being	_	be	VBG	O	_	person	_	0	IGNORE	true
37	protected	_	protect	VBN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	true
38	by	_	by	IN	O	_	person	_	0	IGNORE	true
39	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
40	Government	government	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	41	APP_op1	true
41	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	APP_s	true
42	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_op2	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[42@@d@@society, 9@@p@@a, 28@@p2@@person, 37@@v@@protect-01, 10@@d@@law, 18@@p@@such, 15@@p@@prime, 24@@d@@law, 41@@a@@or, 8@@s@@have-03, 23@@p@@international, 7@@d@@country, 29@@s@@shoot-02, 4@@t@@way, 13@@l@@eat-01, 28@@e2@@killer, 40@@g2@@govern-01, 6@@explicitanon0@@-, 27@@b@@address-02, 32@@d@@mosque, 40@@g@@government-organization, 12@@d@@cannibal, 17@@s@@cause-01, 3@@s@@same-01, 33@@a@@and, 20@@d@@act-02, 26@@explicitanon0@@-]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	other	_	other	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
4	hand,	_	hand,	NNS	O	_	and	_	0	IGNORE	true
5	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	transition	_	transition	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
8	democracy,	_	democracy,	NNP	O	_	mean-01	_	0	IGNORE	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	in	_	in	IN	O	_	resemble-01	_	0	IGNORE	true
11	Jordan,	_name_	jordan,	CD	O	_	_NAME_	_	0	IGNORE	true
12	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	16	MOD_s	true
16	temporary	_	temporary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	solution,	_	solution,	NNS	O	_	and	_	0	IGNORE	true
18	paving	_	pave	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	20	MOD_s	true
24	thing,	_	thing,	NNPS	O	_	thing	_	0	IGNORE	true
25	perhaps	_	perhaps	RB	O	_	possible-01	_	0	IGNORE	true
26	in	_	in	IN	O	_	resemble-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
29	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	3	APP_s	true
30	that	_	that	WDT	O	_	resemble-01	_	0	IGNORE	true
31	an	_	an	DT	O	_	1	_	0	IGNORE	true
32	immediate	_	immediate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	sudden	_	sudden	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	democracy	_	democracy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
35	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
36	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
37	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	40	APP_op1	true
38	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
39	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	37	MOD_mod	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_mod	true
41	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
42	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	44	MOD_mod	true
43	have	_	have	VB	O	_	thing	_	0	IGNORE	true
44	worked	_	work	VBN	O	(d<root> / --LEX--)	$LEMMA$-09	()	40	APP_op2	true
45	in	_	in	IN	O	_	i	_	0	IGNORE	true
46	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	44	MOD_mod	true
47	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[44@@d@@work-09, 42@@explicitanon0@@-, 7@@p@@transition-01, 40@@a@@and, 18@@s@@pave-01, 15@@b@@good-02, 46@@c@@country, 12@@s@@possible-01, 33@@p@@sudden, 36@@explicitanon0@@-, 6@@p@@certain, 39@@n@@_NAME_, 28@@s@@same-01, 16@@p@@temporary, 37@@s@@work-09, 39@@c@@country, 29@@t@@way, 34@@d@@democracy, 32@@p@@immediate, 3@@s@@contrast-01, 23@@s@@real-04, 20@@d@@way, 15@@m@@more, 46@@n@@_NAME_]
sentence=1	According	according	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	say-01	(s())	0	ROOT	true
2	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
3	Director	director	Director	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	6	MOD_s	true
4	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
5	Central_Intelligence_George_Tenet,	_name_	Tenet,	NNP	O	_	_NAME_	_	0	IGNORE	true
6	al	_	al	NNP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_s	true
7	Qaeda’s	qaeda’s	Qaeda’s	NNP	O	_	-	_	0	IGNORE	true
8	ability	_	ability	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	capable-01	(o(s()))	16	APP_s	true
9	to	_	to	TO	O	_	name	_	0	IGNORE	true
10	conduct	_	conduct	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	an	_	an	DT	O	_	1	_	0	IGNORE	true
12	anthrax	_	anthrax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_s	true
13	attack	_	attack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	one	_	one	CD	O	_	1	_	0	IGNORE	true
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	APP_s	true
17	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
18	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	immediate	_	immediate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	threats	_	threat	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$en-01	(s())	16	APP_o	true
21	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	to	_	to	TO	O	_	thing	_	0	IGNORE	true
25	face.	_	face.	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
26	"	_	"	''	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[21@@c@@country, 23@@s@@likely-01, 6@@d@@_NAME_, 13@@s@@attack-01, 1@@s@@say-01, 20@@s@@threaten-01, 3@@p2@@Director, 18@@s@@most, 10@@s@@conduct-01, 21@@n@@_NAME_, 8@@o@@capable-01, 19@@p@@immediate, 16@@s@@include-91, 3@@h@@have-org-role-91, 12@@d@@anthrax-01]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	-1	_	0	IGNORE	true
4	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	Ismat	_name_	Ismat	NNP	O	(d<root> / --LEX--)	_NAME_	()	6	APP_s	true
6	heard	_	hear	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	from	_	from	IN	O	_	thing	_	0	IGNORE	true
8	her	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
9	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[8@@d@@she, 5@@d@@_NAME_, 1@@d@@that, 4@@p@@last, 6@@b@@hear-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	media	_	medium	NNS	O	(d<root> / --LEX--)	$FORM$	()	3	APP_s	true
3	coverage	_	coverage	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cover-03	(s())	7	APP_s	true
4	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
5	been	_	be	VBN	O	_	cause-01	_	0	IGNORE	true
6	seriously	_	seriously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	serious-02	(s())	7	MOD_s	true
7	confused	_	confused	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	on	_	on	IN	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
10	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	13	APP_op1	true
11	of	_	of	IN	O	_	thing	_	0	IGNORE	true
12	motive	_	motive	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	13	APP_op2	true
16	Senators	senators	Senators	NNPS	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$REPL$	(s())	18	MOD_s	true
17	Daschle	_name_	Daschle	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_s	true
19	Leahy	_name_	Leahy	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_op2	true
20	would	_	would	MD	O	_	have-org-role-91	_	0	IGNORE	true
21	have	_	have	VB	O	_	person	_	0	IGNORE	true
22	been	_	be	VBN	O	_	person	_	0	IGNORE	true
23	targeted	_	target	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
24	--	_	--	:	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_s	true
25	tending	_	tend	VBG	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	24	MOD_s	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	simplistically	_	simplistically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	public-02	(mod())	28	MOD_mod	true
28	view	_	view	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	25	APP_o	true
29	them	_	they	PRP	O	_	person	_	0	IGNORE	true
30	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
31	"liberals.	_	"liberals.	XX	O	_	_NAME_	_	0	IGNORE	true
32	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[3@@s@@cover-03, 10@@s@@issue-02, 17@@p@@person, 16@@m@@senators, 7@@s@@confused-01, 19@@n@@_NAME_, 17@@n@@_NAME_, 25@@o@@tend-02, 15@@s@@cause-01, 19@@p@@person, 13@@a@@and, 28@@s@@view-02, 18@@a@@and, 27@@t@@public-02, 12@@d@@motive, 6@@s@@serious-02, 16@@h2@@have-org-role-91, 24@@s@@cause-01, 2@@d@@media, 23@@s@@target-01]
sentence=1	The	the	the	DT	O	_	nucleus	_	0	IGNORE	true
2	anthrax	_	anthrax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	letters	_	letter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	were	_	be	VBD	O	_	person	_	0	IGNORE	true
5	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	date	_	date	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	of	_	of	IN	O	_	name	_	0	IGNORE	true
10	the_Camp_David_Accord	_name_	Accord	NNP	O	(n3<root> / --LEX--  :name-of (e / event  :time-of (l<mod>)))	_NAME_	(mod())	8	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
12	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
13	the	_	the	DT	O	_	date-entity	_	0	IGNORE	true
14	date	_	date	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	Anwar_Sadat	_name_	Sadat	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	assassinated	_	assassinate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
20	to	_	to	TO	O	_	concern-02	_	0	IGNORE	true
21	underscore	_	underscore	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	to	_	to	IN	O	_	and	_	0	IGNORE	true
25	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
26	paying	_	pay	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
27	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	attend-02	(s())	25	MOD_s	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[27@@s@@attend-02, 12@@n@@then, 2@@p@@anthrax, 5@@s@@send-01, 15@@n@@_NAME_, 25@@d@@anyone, 3@@d@@letter, 17@@s@@assassinate-01, 10@@n3@@_NAME_, 21@@s@@underscore-01, 10@@e@@event, 23@@d@@point, 8@@n@@date, 11@@a@@and, 15@@p@@person]
sentence=1	Also	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
3	am	_	be	VBP	O	_	person	_	0	IGNORE	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
6	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	Matisse	_name_	Matisse	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	discussed	_	discuss	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	possible-01	(mod(), s())	12	MOD_mod	true
16	see,	_	see,	XX	O	_	and	_	0	IGNORE	true
17	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
18	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	28	APP_op1	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	artists	_	artist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
24	I	i	I	PRP	O	_	person	_	0	IGNORE	true
25	am	_	be	VBP	O	_	person	_	0	IGNORE	true
26	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	23	MOD_s	true
27	in	_	in	IN	O	_	include-91	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	APP_op2	true
31	remain	_	remain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_s	true
32	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
33	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
34	back	_	back	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	burner	_	burner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
36	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	31	MOD_o	true
37	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	36	APP_s	true
40	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@contrast-01, 38@@n@@already, 20@@explicitanon0@@lot, 28@@a@@and, 35@@d@@burner, 15@@s@@possible-01, 8@@p@@person, 10@@s@@discuss-01, 9@@d@@we, 8@@n@@_NAME_, 18@@s@@have-03, 11@@n@@before, 4@@p@@still, 23@@d@@artist, 1@@p@@also, 14@@d@@you, 5@@s@@think-01, 36@@s@@cause-01, 2@@d@@i, 39@@d@@have-03, 30@@s@@possible-01, 22@@p@@other, 26@@s@@interest-01, 31@@s@@remain-01, 34@@p@@back]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	believe	_	believe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
6	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	true
14	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
15	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	controllers	_	controller	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	23	APP_s	true
19	worldwide	_	worldwide	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
20	have	_	have	VBP	O	_	person	_	0	IGNORE	true
21	reviewed,	_	reviewed,	VBN	O	_	and	_	0	IGNORE	true
22	understand	_	understand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	14	APP_o	true
24	have	_	have	VBP	O	_	person	_	0	IGNORE	true
25	implemented	_	implement	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op2	true
26	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	27	MOD_mod	true
27	standards	_	standard	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@s@@controller, 22@@s@@understand-01, 14@@s@@say-01, 23@@a@@and, 10@@n@@point, 25@@s@@implement-01, 16@@p@@all, 27@@d@@standard, 3@@s@@believe-01, 1@@d@@i, 5@@d@@we, 2@@explicitanon0@@-, 13@@s@@possible-01, 19@@b@@worldwide, 7@@s@@quite, 17@@d@@business, 26@@p@@this]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_op1	true
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
6	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	2	MOD_s	true
7	away	_	away	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	6	APP_o	true
8	from	_	from	IN	O	_	-	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
11	for	_	for	IN	O	_	or	_	0	IGNORE	true
12	several_days	_name_	day	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
14	miss	_	miss	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_op2	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	entirely,	_	entirely,	.	O	_	$LEMMA$	_	0	IGNORE	true
18	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	14	MOD_o	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	would	_	would	MD	O	_	thing	_	0	IGNORE	true
21	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
22	expired	_	expire	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
24	disappeared	_	disappear	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op2	true
25	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
28	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
29	returned	_	return	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op1	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@d@@expire-01, 2@@s@@mean-01, 18@@s@@cause-01, 7@@o@@away, 29@@d@@return-01, 24@@d@@disappear-01, 13@@a@@and, 14@@s@@miss-02, 12@@t2@@temporal-quantity, 25@@w@@by, 4@@d@@i, 1@@d@@this, 23@@a@@and, 5@@s@@possible-01, 12@@explicitanon0@@day, 6@@s@@be-located-at-91, 16@@d@@message, 10@@d@@office]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	find	_	find	VB	O	(u<root> / --LEX--  :ARG0 (y / you)  :ARG1 (s<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	enclosed	_	enclose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
4	EES's	_name_	ees'	NNS	O	(d<root> / --LEX--)	_NAME_	()	5	APP_s	true
5	request	_	request	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	Volumes_for_PGE_CityGate	_name_	CityGate	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	delvery	_	delvery	FW	O	(p<root> / publication  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
9	effective	_	effective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
10	11/1/01	_	11/1/01	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
11	:	_	:	:	O	_	say-01	_	0	IGNORE	true

nodealignment=[3@@s@@enclose-01, 8@@p@@publication, 1@@explicitanon0@@+, 5@@s@@request-01, 2@@y@@you, 8@@n@@_NAME_, 7@@n@@_NAME_, 4@@d@@_NAME_, 2@@u@@find-01, 9@@p@@effective, 10@@n@@_NAME_]
sentence=1	"Calculation	"calculation	"calculation	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	precise	(s())	11	APP_s	true
2	of	_	of	IN	O	_	vice	_	0	IGNORE	true
3	Floating_Amount:_The_Floating_Amount	_name_	amount	NN	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	true
4	payable	_	payable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	represent-01	(s(), o())	1	MOD_o	true
5	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	[ENA]	_name_	[ena]	XX	O	_	thing	_	0	IGNORE	true
7	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	a_Payment_Date	_name_	Date	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	1	MOD_mod	true
9	will	_	will	MD	O	_	person	_	0	IGNORE	true
10	be	_	be	VB	O	_	person	_	0	IGNORE	true
11	calculated	_	calculate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	Payment	payment	Payment	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	pay-01	(mod())	15	MOD_mod	true
15	Date	date	Date	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	true
18	:	_	:	:	O	_	and	_	0	IGNORE	true

nodealignment=[14@@p@@pay-01, 3@@d@@_NAME_, 17@@s@@follow-04, 11@@s@@calculate-01, 8@@p@@_NAME_, 13@@p@@that, 1@@s@@precise, 15@@n@@Date, 4@@s@@represent-01]
sentence=1	"Calculation	"calculation	"calculation	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	precise	(s())	11	APP_s	true
2	of	_	of	IN	O	_	vice	_	0	IGNORE	true
3	Floating_Amount:_The_Floating_Amount	_name_	amount	NN	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	true
4	payable	_	payable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	represent-01	(s(), o())	1	MOD_o	true
5	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	[ENA]	_name_	[ena]	XX	O	_	thing	_	0	IGNORE	true
7	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	a_Payment_Date	_name_	Date	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	1	MOD_mod	true
9	will	_	will	MD	O	_	person	_	0	IGNORE	true
10	be	_	be	VB	O	_	person	_	0	IGNORE	true
11	calculated	_	calculate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	Payment	payment	Payment	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	pay-01	(mod())	15	MOD_mod	true
15	Date	date	Date	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	true
18	:	_	:	:	O	_	and	_	0	IGNORE	true

nodealignment=[1@@s@@precise, 3@@d@@_NAME_, 14@@p@@pay-01, 17@@s@@follow-04, 8@@p@@_NAME_, 15@@n@@Date, 4@@s@@represent-01, 11@@s@@calculate-01, 13@@p@@that]
sentence=1	As	as	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(s(), o())	16	MOD_o	true
4	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	an	_	an	DT	O	_	1	_	0	IGNORE	true
7	age	_	age	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
9	intellectual	_	intellectual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	capital	_	capital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
13	valuable,	_	valuable,	NFP	O	_	cause-01	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
16	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
17	for	_	for	IN	O	_	and	_	0	IGNORE	true
18	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
21	to	_	to	TO	O	_	woman	_	0	IGNORE	true
22	obtain	_	obtain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_dom	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	27	MOD_s	true
26	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
27	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	22	APP_o	true
28	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[27@@d@@educate-01, 9@@p@@intellectual, 25@@m@@most, 4@@s@@live-01, 7@@n@@age, 1@@s@@cause-01, 25@@b2@@good-02, 29@@s@@possible-01, 10@@d@@capital, 16@@r@@important, 24@@s@@very, 22@@s@@obtain-01, 2@@d@@we, 18@@p@@every, 12@@s@@so, 19@@p@@young, 20@@d@@person, 26@@s@@possible-01, 3@@s@@be-temporally-at-91]
sentence=1	Plus,	_name_	Plus,	NNP	O	_	expressive	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	work	_	work	VBP	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	with	_	with	IN	O	_	i	_	0	IGNORE	true
5	Janet	_name_	Janet	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	lot	_	lot	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_s	true
9	she	_	she	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_s	true
10	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_o	true
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
12	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	comfort	_	comfort	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
14	from	_	from	IN	O	_	and	_	0	IGNORE	true
15	that,	_	that,	NNP	O	_	cause-01	_	0	IGNORE	true
16	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	13	MOD_s	true
17	of	_	of	IN	O	_	company	_	0	IGNORE	true
18	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	16	MOD_s	true
19	a	_	a	DT	O	_	-	_	0	IGNORE	true
20	lawyer	_	lawyer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
21	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	hasn't	_	hasn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	dealt	_	deal	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	initial	_	initial	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	MOD_s	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@explicitanon0@@some, 7@@s@@lot, 2@@d@@i, 8@@s@@cause-01, 3@@g@@work-01, 25@@s@@initial, 23@@s@@deal-01, 5@@p@@person, 20@@d@@lawyer, 11@@s@@get-01, 10@@s@@possible-01, 18@@s@@have-03, 9@@s@@she, 16@@s@@instead-of-91, 5@@n@@_NAME_, 22@@explicitanon0@@-, 13@@d@@comfort-01]
sentence=1	It's	it's	it's	PRP	O	_	contrast-01	_	0	IGNORE	true
2	funny,	_	funny,	NNS	O	_	oppose-01	_	0	IGNORE	true
3	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
4	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	22	MOD_mod	true
5	it's	_	it's	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	just	_	just	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
7	me,	_	me,	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	Mom,_Craig	_name_	Craig	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_op2	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
10	Danelia,	_name_	Danelia,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
12	Danelia	_name_	Danelia	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	15	MOD_s	true
15	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
16	roasted	_	roasted	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	roast-01	(s())	17	MOD_s	true
17	turkey	_	turkey	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
19	roast	_	roast	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
20	beef	_	beef	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	(not	_	(not	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
22	that	_	that	IN	O	(d<root> / --LEX--)	mean-01	()	3	APP_s	true
23	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
25	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	to	_	to	TO	O	_	and	_	0	IGNORE	true
28	me!),	_	me!),	RB	O	_	-	_	0	IGNORE	true
29	so	_	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	3	APP_o	true
30	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
31	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	true
33	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
34	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
35	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	MOD_s	true
36	joy	_	joy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_s	true
37	in	_	in	IN	O	_	i	_	0	IGNORE	true
38	cooking	_	cook	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	36	APP_s	true
39	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
40	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
41	be	_	be	VB	O	_	person	_	0	IGNORE	true
42	elsewise	_	elsewise	VBN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@a@@or, 14@@s@@real-04, 25@@s@@say-01, 19@@s@@roast-01, 6@@d@@just, 32@@explicitanon0@@-, 3@@s@@cause-01, 38@@d@@cook-01, 11@@a@@and, 15@@s@@like-01, 29@@s@@cause-01, 17@@d@@turkey, 13@@explicitanon0@@-, 22@@d@@mean-01, 42@@p@@elsewise, 16@@s@@roast-01, 36@@s@@joy-01, 8@@p@@person, 33@@p@@just, 4@@p@@usual, 35@@s@@same-01, 20@@d@@beef, 8@@n@@_NAME_, 9@@a@@and]
sentence=1	With	with	with	IN	O	_	-	_	0	IGNORE	true
2	respect	_	respect	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	First_Union	_name_	Union	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	National	national	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
6	Bank,	_name_	Bank,	NNP	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	draft	_	draft	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	15	APP_dom	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	from	_	from	IN	O	_	name	_	0	IGNORE	true
13	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	15	MOD_s	true
14	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	old	_	old	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
16	that	_	that	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	15	MOD_s	true
17	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	15	MOD_s	true
18	agreed	_	agree	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
21	at	_	at	IN	O	_	thing	_	0	IGNORE	true
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
25	of	_	of	IN	O	_	thing	_	0	IGNORE	true
26	agreement	_	agreement	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	agree-01	(mod())	24	MOD_mod	true
27	which	_	which	WDT	O	_	i	_	0	IGNORE	true
28	was	_	be	VBD	O	_	person	_	0	IGNORE	true
29	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
30	to	_	to	IN	O	_	and	_	0	IGNORE	true
31	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	11/8/00	_	11/8/00	NNS	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
34	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
35	review	_	review	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@b@@review-01, 24@@d@@form, 20@@s@@look-01, 9@@d@@we, 18@@s@@agree-01, 15@@r@@old, 13@@s@@person, 33@@d@@date-entity, 16@@s@@cause-01, 4@@n@@_NAME_, 14@@s@@so, 26@@p@@agree-01, 29@@s@@send-01, 17@@s@@they, 23@@n@@current, 11@@s@@work-01, 33@@explicitanon2@@_NUMBER_, 5@@p@@National, 8@@d@@draft-01, 8@@t@@thing]
sentence=1	I'd	i'd	i'd	PRP	O	_	cause-01	_	0	IGNORE	true
2	forgotten	_	forget	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	how	_	how	WRB	O	(d<root> / --LEX--)	thing	()	2	APP_s	true
4	blown	_	blow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	songs	_	song	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	17	MOD_mod	true
15	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	I	i	I	PRP	O	_	1	_	0	IGNORE	true
17	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	NY	_name_	NY	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	17	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@n2@@_NAME_, 2@@s@@forget-01, 12@@d@@song, 20@@s@@state, 14@@explicitanon0@@1, 17@@s@@see-01, 4@@s@@blow-01, 3@@d@@thing, 14@@o@@ordinal-entity, 9@@explicitanon0@@some]
sentence=1	Kori	_name_	Kori	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), o(s()))	0	ROOT	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	she	_	she	PRP	O	_	person	_	0	IGNORE	true
5	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	last_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
8	at	_	at	IN	O	_	i	_	0	IGNORE	true
9	Steak_Night	_name_	Night	NNP	O	(n3<root> / --LEX--  :name-of (f2 / facility  :location-of (w<mod>)))	_NAME_	(mod())	5	MOD_mod	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
11	introduced	_	introduce	VBD	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-01	(s())	10	APP_op2	true
12	herself	_	herself	PRP	O	_	cause-01	_	0	IGNORE	true
13	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
14	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_o2	true
15	failed	_	fail	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
18	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	went	_	go	VBD	O	(d<root> / --LEX--)	$LEMMA$-02	()	15	APP_s	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@f2@@facility, 13@@s@@cause-01, 1@@n@@_NAME_, 9@@n3@@_NAME_, 11@@r@@introduce-01, 2@@s@@tell-01, 15@@s@@fail-01, 23@@d@@go-02, 7@@n@@night, 5@@s@@see-01, 6@@d@@you, 10@@a@@and, 1@@p@@person, 14@@d@@i, 20@@p@@last]
sentence=1	Days	days	day	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	7	MOD_mod	true
2	away:	_	away:	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	date-entity	(op2(), op1())	0	ROOT	true
3	Sept._21_through_Oct._3	_name_	3	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
4	(assuming	_	(assume	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_op2	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
6	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
7	on	_	on	IN	O	(d<root> / --LEX--)	and	()	2	APP_op1	true
8	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	day	(mod())	6	MOD_mod	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	leave	_	leave	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-15	(s())	6	APP_o	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_s	true
12	go	_	go	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-back-19	(s(), o())	11	APP_op2	true
13	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
16	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	12	MOD_mod	true
18	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	return	_	return	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op1	true
20	)	_	)	-RRB-	O	_	and	_	0	IGNORE	true

nodealignment=[12@@g@@go-back-19, 11@@a@@and, 3@@d@@date-entity, 3@@explicitanon2@@_NUMBER_, 2@@a@@date-entity, 7@@d@@and, 5@@d@@you, 1@@m2@@multiple, 10@@s@@leave-15, 6@@s@@work-01, 1@@t2@@temporal-quantity, 16@@n@@day, 8@@n@@day, 19@@d@@return-01, 15@@d@@work-01, 9@@d@@we, 17@@w@@after, 1@@m@@day, 4@@s@@(assume]
sentence=1	Perhaps	perhaps	perhaps	RB	O	_	possible-01	_	0	IGNORE	true
2	Jim_Armogida	_name_	Armogida	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
3	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	APP_o	true
4	assist	_	assist	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
5	in	_	in	IN	O	(d<root> / --LEX--)	thing	()	0	ROOT	true
6	revising	_	revise	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
7	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_o	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	am	_	be	VBP	O	_	person	_	0	IGNORE	true
11	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	APP_s	true
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	familiar	_	familiar	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$ize-01	(s(), o())	11	MOD_s	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	the	_	the	DT	O	_	thing	_	0	IGNORE	true
18	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	Enron_Corp.	_name_	Corp.	NNP	O	(d<root> / --LEX--)	_NAME_	()	20	APP_s	true
20	likes	_	like	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
21	their	_	they	PRP$	O	_	thing	_	0	IGNORE	true
22	resolutions	_	resolution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	drafted	_	draft	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
24	than	_	than	IN	O	_	and	_	0	IGNORE	true
25	we	_	we	PRP	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
26	are	_	be	VBP	O	_	person	_	0	IGNORE	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@familiarize-01, 22@@d@@resolution, 23@@s@@draft-01, 19@@d@@_NAME_, 4@@s@@assist-01, 5@@d@@thing, 14@@s@@more, 6@@i@@revise-01, 11@@s@@sure-02, 9@@d@@i, 25@@p@@we, 2@@p@@person, 3@@s@@possible-01, 20@@s@@like-01, 7@@d@@they, 2@@n@@_NAME_, 8@@s@@cause-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	post	_	post	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	id	_	id	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	at	_	at	IN	O	_	name	_	0	IGNORE	true
8	for	_	for	IN	O	_	thing	_	0	IGNORE	true
9	Calgary	_name_	Calgary	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
10	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	0	ROOT	true
11	11608	_name_	11608	CD	O	(m<root> / monetary-quantity  :quant (explicitanon0 / --LEX--)  :domain (s<dom>))	_NUMBER_	(dom())	10	APP_s	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@_NUMBER_, 6@@s@@look-01, 9@@c@@city, 3@@d@@id, 2@@p@@post, 4@@d@@i, 10@@s@@equal-01, 11@@m@@monetary-quantity, 9@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	post	_	post	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	id	_	id	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	at	_	at	IN	O	_	name	_	0	IGNORE	true
8	for	_	for	IN	O	_	thing	_	0	IGNORE	true
9	Calgary	_name_	Calgary	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
10	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	0	ROOT	true
11	11608	_name_	11608	CD	O	(m<root> / monetary-quantity  :quant (explicitanon0 / --LEX--)  :domain (s<dom>))	_NUMBER_	(dom())	10	APP_s	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@id, 6@@s@@look-01, 9@@c@@city, 2@@p@@post, 11@@explicitanon0@@_NUMBER_, 10@@s@@equal-01, 11@@m@@monetary-quantity, 9@@n@@_NAME_, 4@@d@@i]
sentence=1	Attached	attached	attach	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
2	for	_	for	IN	O	_	i	_	0	IGNORE	true
3	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	review	_	review	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	draft	_	draft	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
7	talking	_	talk	VBG	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
8	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Cal_Energy_Markets	_name_	Markets	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	conference	_	conference	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	I'm	i'm	I'm	NNS	O	(d<root> / --LEX--)	_NAME_	()	14	APP_s	true
14	speaking	_	speak	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
15	at	_	at	IN	O	_	name	_	0	IGNORE	true
16	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	Thursday	_name_	Thursday	NNP	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	14	MOD_mod	true
18	in	_	in	IN	O	_	name	_	0	IGNORE	true
19	SF	_name_	SF	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	14	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@d@@_NAME_, 12@@n@@conference, 7@@o@@talk-01, 17@@d@@date-entity, 8@@d@@point, 11@@n@@_NAME_, 19@@n@@_NAME_, 3@@d@@your, 6@@p@@draft-01, 4@@b@@review-01, 14@@s@@speak-01, 19@@c@@city, 17@@t@@_name_]
sentence=1	Attached	attached	attached	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	5	MOD_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	rough	_	rough	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	true
5	draft	_	draft	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
8	talking	_	talking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
9	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
10	for	_	for	IN	O	_	thing	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	panel	_	panel	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	I'll	i'll	I'll	NNP	O	_	thing	_	0	IGNORE	true
14	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	on	_	on	IN	O	_	thing	_	0	IGNORE	true
16	at	_	at	IN	O	_	thing	_	0	IGNORE	true
17	a	_	a	DT	O	_	name	_	0	IGNORE	true
18	CEM	_name_	CEM	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	conference	_	conference	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
20	in	_	in	IN	O	_	name	_	0	IGNORE	true
21	SF	_name_	SF	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	Thursday_afternoon	_name_	afternoon	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	19	MOD_mod	true
24	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[23@@n@@_NAME_, 5@@s@@draft-01, 9@@d@@point, 18@@p@@_NAME_, 8@@p@@talking-01, 19@@b@@conference, 21@@c@@city, 1@@s@@_NAME_, 21@@n@@_NAME_, 4@@s@@rough, 12@@o@@panel]
sentence=1	Therefore,	therefore,	therefore,	CD	O	_	and	_	0	IGNORE	true
2	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	trade	_	trade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
4	mark	_	mark	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	registration	_	registration	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	register-02	(s())	23	APP_s	true
6	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
7	incorporates	_	incorporate	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	ONLINE	online	online	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	suffix	_	suffix	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	will	_	will	MD	O	_	person	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	enable	_	enable	VB	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
24	its	_	its	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
25	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	23	APP_o2	true
26	to	_	to	TO	O	_	person	_	0	IGNORE	true
27	prevent	_	prevent	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	23	APP_o	true
28	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
29	from	_	from	IN	O	_	-	_	0	IGNORE	true
30	using	_	use	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	27	APP_o2	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	word	_	word	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	ONLINE	online	online	RB	O	_	$LEMMA$	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@d@@other, 4@@d@@mark, 22@@explicitanon0@@-, 30@@s@@use-01, 25@@p2@@person, 5@@s@@register-02, 7@@b@@incorporate-01, 27@@t@@prevent-01, 18@@d@@you, 3@@p@@trade-01, 19@@s@@use-01, 13@@d@@suffix, 2@@p@@any, 9@@d@@word, 10@@p@@online, 25@@e2@@own-01, 23@@w@@enable-01]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
2	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op1	true
3	with	_	with	IN	O	_	person	_	0	IGNORE	true
4	Professors	professors	Professors	NNPS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	7	APP_op1	true
5	Titman,	titman,	Titman,	NNP	O	_	_NAME_	_	0	IGNORE	true
6	Ronn,_Brown	_name_	Brown	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_op2	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
8	Jemison,	_name_	jemison,	CD	O	_	_NAME_	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	was	_	be	VBD	O	_	say-01	_	0	IGNORE	true
11	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	School	_name_	School	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_dom	true
15	was	_	be	VBD	O	_	person	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	place	_	place	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_o	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	get	_	get	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	20	APP_s	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	was	_	be	VBD	O	_	person	_	0	IGNORE	true
25	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
26	for	_	for	IN	O	_	-	_	0	IGNORE	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@p@@person, 25@@s@@look-01, 20@@i@@get-01, 1@@w@@after, 2@@s@@talk-01, 9@@d@@i, 11@@s@@sure-02, 6@@n@@_NAME_, 22@@d@@educate-01, 14@@d@@School, 17@@s@@right-02, 4@@e@@Professors, 7@@a@@and, 4@@h@@have-org-role-91, 4@@p@@person, 18@@r@@place]
sentence=1	Randy,	randy,	Randy,	NFP	O	_	say-01	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	i	_	0	IGNORE	true
5	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	left	_	leave	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-12	(o2(), s(), o())	5	APP_o	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	voice	_	voice	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	mail	_	mail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@p@@voice, 6@@d@@i, 7@@b@@leave-12, 8@@d@@you, 5@@s@@issue-02, 2@@d@@this, 11@@d@@mail]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	mean	_	mean	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
4	time,	_	time,	NNP	O	_	and	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
6	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
8	make	_	make	VB	O	_	obligate-01	_	0	IGNORE	true
9	sure	_	sure	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	en$LEMMA$-01	(o(s()))	6	APP_s	true
10	that	_	that	IN	O	_	and	_	0	IGNORE	true
11	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
13	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	APP_o	true
14	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	handle	_	handle	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
21	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
25	mitigate	_	mitigate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	20	MOD_mod	true
26	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	costs	_	cost	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
28	.	_	.	.	O	_	monetary-quantity	_	0	IGNORE	true

nodealignment=[13@@s@@do-02, 14@@d@@everything, 25@@i@@mitigate-01, 26@@n@@future, 27@@d@@cost-01, 3@@p@@mean-01, 18@@s@@get-01, 20@@s@@handle-01, 16@@s@@possible-01, 9@@c@@ensure-01, 6@@c@@need-01, 5@@d@@we, 23@@d@@situation]
sentence=1	However,	_name_	However,	LS	O	_	expressive	_	0	IGNORE	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
4	will	_	will	MD	O	_	thing	_	0	IGNORE	true
5	see,	_	see,	VB	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	questions	_	question	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
9	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
10	of	_	of	IN	O	_	thing	_	0	IGNORE	true
11	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	14	MOD_o	true
12	kinda	_	kinda	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	kind-of	(mod())	11	MOD_mod	true
13	long-	_	long-	JJ	O	_	and	_	0	IGNORE	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
16	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
19	answers	_	answer	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
20	for	_	for	IN	O	_	and	_	0	IGNORE	true
21	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@p@@all, 7@@d@@question-01, 18@@s@@need-01, 19@@d@@answer-01, 12@@p@@kind-of, 14@@s@@contrast-01, 8@@d@@i, 3@@d@@you, 11@@s@@get-03, 17@@d@@we, 16@@s@@think-01, 9@@s@@think-01]
sentence=1	Stan	_name_	Stan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	bring	_	bring	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	2	APP_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
8	orally	_	orally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	he's	_	he's	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	possible-01	(mod(), s())	2	MOD_mod	true
12	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	phonne	_	phonne	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	Gibson	_name_	Gibson	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
17	or	_	or	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
18	Kyle	_name_	Kyle	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
19	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
20	an	_	an	DT	O	_	thing	_	0	IGNORE	true
21	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	4	MOD_s	true
22	of	_	of	IN	O	_	thing	_	0	IGNORE	true
23	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
27	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[24@@explicitanon0@@-, 16@@n@@_NAME_, 6@@d@@letter, 18@@p@@person, 1@@n@@_NAME_, 11@@s@@possible-01, 17@@o@@or, 2@@s@@possible-01, 1@@p@@person, 21@@s@@exemplify-01, 26@@s@@handle-01, 14@@d@@phonne, 3@@p@@also, 9@@p@@next, 28@@d@@situation, 18@@n@@_NAME_, 4@@s@@bring-up-02, 27@@p@@this, 16@@p@@person, 8@@t@@orally]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
3	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	medical	_	medical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	medicine	(mod())	6	MOD_mod	true
6	convention	_	convention	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	ongoing	_	ongoe	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	Washington	_name_	Washington	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	at	_	at	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
13	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
16	meetings,	_	meetings,	NNP	O	_	i	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	Grand	grand	Grand	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	19	MOD_mod	true
19	Hyatt	_name_	Hyatt	NNP	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	23	APP_s	true
20	unfortunately	_	unfortunately	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	fortunate-01	(s())	23	MOD_s	true
21	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
22	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	booked	_	book	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	1	APP_o	true
24	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[20@@s@@fortunate-01, 1@@s@@cause-01, 4@@p@@international, 7@@s@@ongoe-01, 23@@s@@book-03, 6@@d@@convention, 9@@n@@_NAME_, 5@@p@@medicine, 12@@s@@same-01, 9@@c@@city, 15@@d@@our, 19@@m@@Hyatt, 22@@n@@already, 18@@p@@grand]
sentence=1	Your	your	Your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	answer	_	answer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
3	to	_	to	IN	O	_	i	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_o	true
6	indicated	_	indicate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
9	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_o	true
10	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
16	for	_	for	IN	O	_	thing	_	0	IGNORE	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@you, 9@@s@@have-03, 8@@d@@i, 10@@explicitanon0@@several, 6@@s@@indicate-01, 2@@s@@answer-01, 15@@s@@look-01, 5@@d@@question-01, 13@@d@@skill, 1@@d@@Your]
sentence=1	Took	took	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-10	(s())	0	ROOT	true
2	me	_	I	PRP	O	_	i	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	longer	_	long	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	1	MOD_s	true
6	to	_	to	TO	O	_	time	_	0	IGNORE	true
7	review	_	review	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_s	true
9	revise	_	revise	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op2	true
10	Adam's	adam's	adam's	JJ	O	_	_NAME_	_	0	IGNORE	true
11	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	true
12	drafts	_	draft	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
13	than	_	than	IN	O	_	1	_	0	IGNORE	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	had	_	have	VBD	O	_	$LEMMA$-quant-91	_	0	IGNORE	true
16	thought	_	think	VBN	O	(w<root> / --LEX--  :ARG0 (t<s>)  :compared-to-of (m<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
17	(there's	_	(there's	.	O	_	thing	_	0	IGNORE	true
18	a	_	a	DT	O	_	lot	_	0	IGNORE	true
19	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-15	(s())	16	APP_s	true
21	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	here,	_	here,	NNS	O	_	and	_	0	IGNORE	true
23	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
24	you'll	_	you'll	PRP	O	_	thing	_	0	IGNORE	true
25	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
26	soon)	_	soon)	NNP	O	_	-	_	0	IGNORE	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@p@@little, 7@@s@@review-01, 11@@explicitanon0@@1, 8@@a@@and, 1@@s@@take-10, 5@@b@@long-03, 16@@w@@think-01, 12@@d@@draft-01, 19@@d@@lot, 5@@m@@more, 11@@o@@ordinal-entity, 9@@s@@revise-01, 25@@s@@see-01, 20@@s@@go-on-15]
sentence=1	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
2	primary	_	primary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	7	MOD_mod	true
7	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	for	_	for	IN	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	scenario	_	scenario	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
12	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	company	_	0	IGNORE	true
14	muni	_	muni	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
15	does	_	do	VBZ	O	_	$LEMMA$-02	_	0	IGNORE	true
16	a	_	a	DT	O	_	company	_	0	IGNORE	true
17	derivative	_	derivative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	APP_op1	true
19	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
20	an	_	an	DT	O	_	monet$LEMMA$ry-qu$LEMMA$ntity	_	0	IGNORE	true
21	open-ended	_	open-ended	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-01	(s())	30	MOD_s	true
22	downside,	_	downside,	NNP	O	_	and	_	0	IGNORE	true
23	loses	_	lose	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
24	$50	_	$50	IN	O	(d<root> / --LEX--)	_NUMBER_	()	23	APP_o	true
25	million,	_	million,	NFP	O	_	and	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_s	true
27	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	claims	_	claim	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op2	true
29	that	_	that	IN	O	_	contrast-01	_	0	IGNORE	true
30	it	_	it	PRP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	3	MOD_s	true
31	was	_	be	VBD	O	_	person	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	true
33	a	_	a	DT	O	_	1	_	0	IGNORE	true
34	valid	_	valid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	35	MOD_s	true
35	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	28	APP_s	true
36	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@d@@we, 2@@p@@primary, 5@@s@@need-01, 3@@s@@cause-01, 23@@s@@lose-02, 7@@d@@thing, 32@@explicitanon0@@-, 34@@s@@valid-02, 26@@a@@and, 24@@d@@_NUMBER_, 11@@b@@scenario, 28@@s@@claim-01, 35@@d@@contract-02, 18@@s@@deal-01, 27@@n@@then, 14@@d@@muni, 17@@p@@derivative, 21@@s@@open-01, 6@@p@@this, 30@@s@@it]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	having	_	have	VBG	O	_	$LEMMA$-06	_	0	IGNORE	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	meeting	_	meeting	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	meet-03	(o2(), s(), o())	0	ROOT	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	Vicki	_name_	Vicki	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o2	true
9	Janet_Dietrich	_name_	Dietrich	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op2	true
10	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	Thursday	_name_	Thursday	NNP	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	5	MOD_mod	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	discuss	_	discuss	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
14	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
15	view	_	view	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_o	true
16	on	_	on	IN	O	_	thing	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	ability	_	ability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	APP_s	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	extend	_	extend	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	APP_s	true
21	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	contracts	_	contract	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	CA	_name_	CA	NNP	O	(n2<root> / --LEX--  :name-of (s2 / state  :location-of (h2<mod>)))	_NAME_	(mod())	23	MOD_mod	true
26	(for	_	(for	ADD	O	_	$LEMMA$	_	0	IGNORE	true
27	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
28	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
29	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	DA)	da)	DA)	NNP	O	_	cause-01	_	0	IGNORE	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@discuss-01, 27@@d@@customer, 11@@d@@date-entity, 25@@s2@@state, 7@@p@@person, 7@@n@@_NAME_, 20@@s@@extend-01, 8@@a@@and, 11@@t@@_name_, 5@@b@@meet-03, 23@@d@@contract, 22@@n@@current, 18@@s@@possible-01, 15@@s@@view-02, 14@@d@@our, 25@@n2@@_NAME_, 9@@n@@_NAME_, 9@@p@@person, 28@@n@@already, 1@@d@@i]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the_three_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
4	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
5	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	here,	_	here,	NNS	O	_	-	_	0	IGNORE	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	am	_	be	VBP	O	_	oppose-01	_	0	IGNORE	true
9	unaware	_	unaware	JJ	O	(r<root> / --LEX--  :polarity (explicitanon0 / -)  :ARG0 (h<s>)  :ARG1 (p<o>))	realize-01	(s(), o())	0	ROOT	true
10	of	_	of	IN	O	_	name	_	0	IGNORE	true
11	an	_	an	DT	O	_	sl$LEMMA$sh	_	0	IGNORE	true
12	ENA/ECT	_name_	ENA/ECT	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	value-interval	(s())	15	MOD_s	true
13	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	14	MOD_s	true
14	faith	_	faith	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	claim	_	claim	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
16	against	_	against	IN	O	_	-	_	0	IGNORE	true
17	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	insurance	_	insurance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	insure-02	(s())	19	MOD_s	true
19	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@explicitanon0@@-, 14@@p@@faith, 9@@r@@realize-01, 18@@s@@insure-02, 15@@s@@claim-01, 19@@d@@company, 2@@explicitanon0@@year, 3@@d@@i, 13@@s@@bad-07, 12@@s@@value-interval, 17@@p@@any, 2@@t2@@temporal-quantity]
sentence=1	Living	living	live	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_dom	true
2	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
3	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	synch	_	synch	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_s	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	nature	_	nature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
8	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	he	(s())	0	ROOT	true
9	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	8	APP_s	true
10	disease,	_	disease,	NNS	O	_	and	_	0	IGNORE	true
11	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
12	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	flows	_	flow	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	tributaries	_	tributary	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
18	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
19	come	_	come	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
20	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
21	think	_	think	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	16	MOD_o	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
24	sickness	_	sickness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o2	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@b@@think-01, 8@@s@@he, 4@@s@@synch, 6@@d@@nature, 1@@s@@live-01, 17@@d@@we, 24@@d@@sickness, 14@@p@@all, 13@@s@@flow-01, 19@@s@@come-01, 16@@d@@tributary, 9@@r@@great]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	escape	_	escape	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	collective	_	collective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	ocean	_	ocean	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	swim	_	swim	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	in	_	in	RP	O	_	be-located-at-91	_	0	IGNORE	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@d@@ocean, 10@@p@@all, 9@@d@@we, 4@@s@@escape-01, 7@@p@@collective, 3@@explicitanon0@@-, 11@@s@@swim-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	joke	_	joke	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	boasting	_	boast	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
8	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_mod	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	search-engine	_	search-engine	NN	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
15	would	_	would	MD	O	_	thing	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	search	_	search	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@explicitanon0@@amount, 19@@s@@search-01, 17@@s@@possible-01, 6@@d@@joke-01, 14@@d@@_NAME_, 7@@s@@boast-01, 12@@d@@information, 3@@s@@start-01, 2@@d@@name-01]
sentence=1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	28	MOD_s	true
3	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
5	burrowed	_	burrow	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_op1	true
6	beneath	_	beneath	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	5	APP_o	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
9	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
10	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
11	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	spiritual	_	spiritual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	being,	_	being,	NNS	O	_	and	_	0	IGNORE	true
16	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	understanding	_	understand	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	understand-01	(s())	18	MOD_s	true
18	force	_	force	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
19	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
20	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	22	MOD_mod	true
21	as	_	as	RB	O	_	equal	_	0	IGNORE	true
22	powerful	_	powerful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
23	as	_	as	IN	O	_	equal	_	0	IGNORE	true
24	those	_	those	DT	O	_	that	_	0	IGNORE	true
25	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
26	succumbed	_	succumb	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
27	to,	_	to,	NN	O	_	-	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
29	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
32	wouldn't	_	wouldn't	CD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	true
33	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_op2	true
34	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
35	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	opened	_	open	VBD	O	(c<root> / --LEX--  :ARG0 (i<o>)  :ARG1 (y<s>)  :condition-of (w<mod>))	$LEMMA$-01	(mod(), s(), o())	33	MOD_mod	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	front	_	front	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	door	_	door	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_o	true
40	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[12@@p@@spiritual, 13@@s@@sense-01, 5@@s@@burrow-01, 39@@d@@door, 10@@s@@find-01, 1@@explicitanon0@@many, 22@@s@@powerful-02, 36@@c@@open-01, 25@@d@@we, 6@@o@@beneath, 38@@p@@front, 8@@d@@surface, 35@@d@@you, 31@@s@@use-01, 32@@explicitanon0@@-, 26@@s@@succumb-01, 2@@s@@include-91, 20@@p@@at-least, 3@@d@@us, 29@@explicitanon0@@many, 28@@a@@and, 33@@s@@escape-01, 17@@s@@understand-01, 18@@d@@force]
sentence=1	Don't	don't	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	it's	_	it's	PRP$	O	_	-	_	0	IGNORE	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	talked	_	talk	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
8	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[2@@d@@you, 1@@explicitanon0@@-, 7@@s@@talk-01, 6@@d@@we, 8@@explicitanon0@@interrogative, 3@@s@@think-01]
sentence=1	Can	can	Can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
4	that	_	that	IN	O	_	interrogative	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	road	_	road	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	travelling	_	travel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	points	_	point	NNS	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
11	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	grim	_	grim	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	painful	_	painful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	pain-01	(s())	16	MOD_s	true
16	future	_	future	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
17	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true

nodealignment=[7@@d@@we, 16@@d@@future, 15@@s@@pain-01, 10@@t@@point-01, 9@@s@@travel-01, 6@@d@@road, 3@@s@@accept-01, 2@@d@@you, 1@@s@@possible-01, 17@@explicitanon0@@interrogative, 13@@s@@grim-02]
sentence=1	Abby	_name_	Abby	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_op1	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	beloved	_	beloved	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	love-01	(s())	1	MOD_s	true
5	friend,	_	friend,	NNS	O	_	and	_	0	IGNORE	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	trying	_	try	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	APP_op2	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	raise	_	raise	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
12	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	for	_	for	IN	O	_	and	_	0	IGNORE	true
14	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
17	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	can,	_	can,	VBD	O	_	event	_	0	IGNORE	true
19	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_s	true
20	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	prize	_	prize	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
22	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_dom	true
23	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
24	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	19	APP_o	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	help	_	help	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
27	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	continue	_	continue	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
29	to	_	to	TO	O	_	person	_	0	IGNORE	true
30	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	true
31	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	life-saving	_	life-saving	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	save-02	(s())	33	MOD_s	true
33	treatments	_	treatment	NNS	O	(d<root> / --LEX--)	treat-03	()	30	APP_s	true
34	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 15@@p@@any, 1@@p@@person, 30@@s@@receive-01, 6@@a@@and, 24@@r@@important, 9@@c@@try-01, 28@@s@@continue-01, 7@@d@@we, 11@@s@@raise-01, 32@@s@@save-02, 16@@t@@way, 22@@d@@money, 33@@d@@treat-03, 26@@i@@help-01, 19@@s@@cause-01, 12@@d@@money, 20@@p@@this, 4@@s@@love-01, 21@@p@@prize-01]
sentence=1	"It	"it	"It	``	O	(d<root> / --LEX--)	_NAME_	()	2	APP_s	true
2	marks	_	mark	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	first	_name_	first	JJ	O	(o<root> / ordinal-entity  :value (explicitanon0 / --LEX--)  :ord-of (d<mod>))	1	(mod())	2	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
7	recent_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
8	that	_	that	IN	O	_	name	_	0	IGNORE	true
9	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
10	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
11	promised	_	promise	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	wield	_	wield	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	APP_o	true
14	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
15	veto	_	veto	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
16	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	the_UN_Security_Council	_name_	Council	NNP	O	(n<root> / --LEX--  :name-of (o / organization  :mod-of (e<mod>)))	_NAME_	(mod())	13	MOD_mod	true
19	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	petition	_	petition	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_o2	true
22	initiated	_	initiate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
23	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
25	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
26	backed	_	back	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
27	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
28	France	_name_	France	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	APP_s	true
30	Great	great	Great	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op2	true
31	Britain.	britain.	Britain.	NNP	O	_	_NAME_	_	0	IGNORE	true
32	"	_	"	''	O	_	and	_	0	IGNORE	true

nodealignment=[16@@d@@power, 18@@n@@_NAME_, 11@@c@@promise-01, 24@@c@@country, 24@@n@@_NAME_, 28@@c@@country, 2@@s@@mark-01, 26@@s@@back-01, 15@@p@@veto-01, 1@@d@@_NAME_, 30@@d@@Great, 29@@a@@and, 7@@n@@_NAME_, 4@@explicitanon0@@1, 28@@n@@_NAME_, 13@@b@@wield-01, 4@@o@@ordinal-entity, 22@@s@@initiate-01, 9@@c@@country, 21@@d@@petition-01, 9@@n@@_NAME_, 18@@o@@organization]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	eager	_	eager	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-06	(s(), o())	10	APP_op1	true
8	ahead	_	ahead	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	7	MOD_s	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	vote,	_	vote,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_o	true
15	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
19	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
20	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	18	APP_s	true
21	Samuel_Alito	_name_	Alito	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
22	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	the_Supreme_Court,	_name_	Court,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
24	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	judging	_	judge	VBG	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	cases	_	case	NNS	O	(d<root> / --LEX--)	$LEMMA$-03	()	26	APP_o	true
29	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_s	true
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
31	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	interest-01	(s(), o())	28	MOD_o	true
32	in	_	in	IN	O	_	include-91	_	0	IGNORE	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@c@@eager-01, 9@@s@@quick-02, 12@@d@@this, 21@@n@@_NAME_, 2@@e@@president, 2@@p@@person, 7@@g@@go-06, 11@@s@@get-01, 2@@h@@have-org-role-91, 28@@d@@case-03, 31@@s@@interest-01, 8@@d@@ahead, 29@@n@@_NAME_, 4@@s@@very, 17@@s@@much, 21@@p@@person, 18@@s@@want-01, 16@@s@@very, 14@@s@@cause-01, 26@@s@@judge-01, 10@@a@@and, 20@@s@@have-04, 29@@p@@person]
sentence=1	"There	"there	"there	EX	O	_	_NAME_	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
3	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	possibility	_	possibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	APP_o	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_s	true
8	jam	_	jam	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_s	true
9	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	up,	_	up,	NNS	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
11	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
12	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	APP_o	true
14	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
15	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	numero	_	numero	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
19	uno,"	_	uno,"	NNP	O	_	name	_	0	IGNORE	true
20	Pike	pike	pike	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
21	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@make-02, 17@@explicitanon0@@-, 20@@n@@_NAME_, 20@@p@@person, 13@@s@@look-02, 21@@s@@say-01, 18@@d@@numero, 8@@s@@jam-01, 10@@explicitanon0@@up,, 3@@n@@always, 6@@d@@they, 7@@s@@possible-01, 5@@s@@possible-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	8	MOD_mod	true
3	developments,	_	developments,	NNS	O	_	and	_	0	IGNORE	true
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
5	said,	_	said,	NNP	O	_	mean-01	_	0	IGNORE	true
6	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
7	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	8	MOD_mod	true
8	enable	_	enable	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
9	China's	_name_	China's	NNP	O	_	_NAME_	_	0	IGNORE	true
10	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	program	_	program	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	mature	_	mature	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	8	APP_o	true
14	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	point	_	point	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	experts	_	expert	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$-01	()	21	APP_s	true
19	could	_	could	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	13	MOD_mod	true
20	assemble	_	assemble	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	19	APP_s	true
22	launch	_	launch	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
23	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	Earth's	_name_	Earth's	NNP	O	_	_NAME_	_	0	IGNORE	true
25	orbit	_	orbit	VB	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
26	a	_	a	DT	O	_	thing	_	0	IGNORE	true
27	spacecraft	_	spacecraft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
28	capable	_	capable	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
29	of	_	of	IN	O	_	person	_	0	IGNORE	true
30	circling	_	circle	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op1	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	moon	_	moon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	astronauts	_	astronaut	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_o	true
36	returning	_	return	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-01	(s())	35	APP_op2	true
37	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@d@@moon, 18@@p@@person, 37@@d@@home, 8@@s@@enable-01, 21@@a@@and, 4@@d@@he, 6@@s@@possible-01, 22@@s@@launch-01, 35@@a@@and, 13@@s@@mature-02, 2@@explicitanon0@@2, 36@@p@@return-01, 11@@d@@program, 30@@s@@circle-01, 28@@s@@capable-01, 25@@s@@orbit-01, 19@@i@@possible-01, 34@@y@@astronaut, 18@@l@@expert-01, 27@@d@@spacecraft, 7@@n@@eventual, 10@@p@@space, 20@@s@@assemble-01]
sentence=1	Recently,	recently,	Recently,	NFP	O	_	and	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	horrific	_	horrific	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	nightmare	_	nightmare	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
11	Civet_Cats	_name_	Cats	NNPS	O	(d<root> / --LEX--)	_NAME_	()	12	APP_s	true
12	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-12	(s(), o())	16	MOD_o	true
13	through	_	through	RP	O	_	name	_	0	IGNORE	true
14	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
15	sick	_	sick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	16	MOD_s	true
16	losers	_	loser	NNS	O	(d<root> / --LEX--)	lose-03	()	10	APP_poss	true
17	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
18	put	_	put	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	sheds	_	shed	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	heat	_	heat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	inside	_	inside	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	sheds	_	shed	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
31	110	_	110	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	32	MOD_mod	true
32	degrees	_	degree	NNS	O	(r<root> / --LEX--  :scale-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	fires,	_	fires,	NNP	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	23	MOD_mod	true
35	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
36	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
37	they	_	they	PRP	O	_	person	_	0	IGNORE	true
38	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	23	MOD_mod	true
39	periodically	_	periodically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	repeat-01	(mod())	40	MOD_mod	true
40	scrape	_	scrape	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op1	true
41	the	_	the	DT	O	_	and	_	0	IGNORE	true
42	sweat	_	sweat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
43	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
45	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
46	genitals	_	genital	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	38	APP_s	true
48	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op2	true
49	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
50	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
51	corrupt	_	corrupt	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	MOD_s	true
52	corporations	_	corporation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
53	who	_	who	WP	O	_	person	_	0	IGNORE	true
54	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	52	MOD_s	true
55	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
56	to	_	to	TO	O	_	thing	_	0	IGNORE	true
57	prolong	_	prolong	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	54	APP_o	true
58	the	_	the	DT	O	_	person	_	0	IGNORE	true
59	scent	_	scent	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	57	APP_s	true
60	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
61	perfumes	_	perfume	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	59	APP_s	true
62	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@read-01, 18@@t@@put-01, 46@@s@@genital, 59@@s@@scent-01, 2@@d@@i, 61@@d@@perfume, 57@@s@@prolong-01, 48@@s@@sell-01, 54@@s@@use-01, 11@@d@@_NAME_, 39@@t@@repeat-01, 10@@m@@nightmare, 23@@s@@heat-01, 52@@d@@corporation, 34@@t@@thing, 9@@p@@horrific, 7@@s@@report-01, 32@@r@@degree, 16@@d@@lose-03, 12@@s@@go-12, 40@@s@@scrape-01, 42@@d@@sweat, 38@@i@@possible-01, 47@@a@@and, 51@@s@@corrupt-01, 15@@s@@sick-05, 21@@d@@shed, 25@@d@@inside, 31@@explicitanon0@@_NUMBER_, 5@@d@@email]
sentence=1	The	the	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
2	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	wrote	_	write	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	post	_	post	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
8	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
9	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
10	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
11	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	reading	_	read	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
13	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
15	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
17	of	_	of	IN	O	_	thing	_	0	IGNORE	true
18	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
21	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	APP_o	true
22	help	_	help	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
23	put	_	put	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
24	a	_	a	DT	O	_	event	_	0	IGNORE	true
25	stop	_	stop	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
26	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	Cat	cat	Cat	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	Holocaust	holocaust	Holocaust	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@read-01, 21@@s@@possible-01, 27@@p@@this, 2@@p@@main, 16@@s@@know-01, 13@@d@@this, 19@@d@@way, 3@@s@@cause-01, 11@@d@@anyone, 28@@p@@Cat, 6@@p@@this, 25@@s@@stop-01, 29@@d@@Holocaust, 22@@s@@help-01, 10@@s@@ask-01, 5@@s@@write-01, 7@@d@@post-01, 4@@d@@i, 18@@p@@some]
sentence=1	Well,	_name_	Well,	NNP	O	_	expressive	_	0	IGNORE	true
2	sure	_	sure	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	32	APP_s	true
3	enough,	_	enough,	NNP	O	_	and	_	0	IGNORE	true
4	when	_	when	WRB	O	_	i	_	0	IGNORE	true
5	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
6	heard	_	hear	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	"Meowing,"	"meowing,"	"Meowing,"	.	O	_	and	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	imagined	_	imagine	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_op1	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	hellish	_	hellish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	moments	_	moment	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	APP_o	true
15	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	18	MOD_mod	true
16	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	beautiful	_	beautiful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	creatures	_	creature	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	God	god	God	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
21	were	_	be	VBD	O	_	person	_	0	IGNORE	true
22	living,	_	living,	NNPS	O	_	and	_	0	IGNORE	true
23	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
24	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-15	(s())	14	APP_mod	true
25	on	_	on	RP	O	_	thing	_	0	IGNORE	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
28	tiny,	_	tiny,	CD	O	_	mean-01	_	0	IGNORE	true
29	sweet	_	sweet	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	30	MOD_s	true
30	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
31	minds,	_	minds,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
33	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	32	APP_op2	true
34	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
35	I	i	I	PRP	O	_	1	_	0	IGNORE	true
36	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	33	APP_o	true
37	to	_	to	TO	O	_	thing	_	0	IGNORE	true
38	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	36	APP_o	true
39	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
40	about	_	about	IN	O	_	i	_	0	IGNORE	true
41	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	torture	_	torture	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	39	MOD_mod	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@beautiful-02, 42@@a@@torture-01, 2@@d@@sure-02, 16@@p@@poor, 11@@s@@imagine-01, 38@@s@@do-02, 8@@d@@cat, 29@@s@@sweet, 33@@c@@decide-01, 30@@p@@little, 32@@a@@and, 6@@t@@hear-01, 18@@d@@creature, 24@@s@@go-on-15, 15@@p@@this, 13@@p@@hellish, 20@@n@@_NAME_, 14@@n@@moment, 39@@d@@something, 36@@c@@want-01, 41@@p@@this]
sentence=1	In	in	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
4	press,	_	press,	NNP	O	_	and	_	0	IGNORE	true
5	commentators	_	commentator	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	6	APP_s	true
6	predict	_	predict	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
8	Katrina	_name_	Katrina	NNP	O	(n<root> / natural-disaster  :name (n2 / --LEX--))	_NAME_	()	13	APP_s	true
9	will	_	will	MD	O	_	-1	_	0	IGNORE	true
10	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	profound	_	profound	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	change	_	change	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
14	in	_	in	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	APP_o	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	perceived	_	perceive	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_mod	true
21	at	_	at	IN	O	_	1	_	0	IGNORE	true
22	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	20	MOD_mod	true
24	abroad,	_	abroad,	NNP	O	_	and	_	0	IGNORE	true
25	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
27	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	he	(s(), o())	6	MOD_o	true
28	scenes	_	scene	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
30	poverty	_	poverty	NN	O	(d<root> / --LEX--)	poor	()	31	APP_op1	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	28	MOD_mod	true
32	racial	_	racial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	race	(mod())	33	MOD_mod	true
33	divisions	_	division	NNS	O	(d<root> / --LEX--)	divide-02	()	31	APP_op2	true
34	they	_	they	PRP	O	_	person	_	0	IGNORE	true
35	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
38	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
39	revealed	_	reveal	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[39@@s@@reveal-01, 10@@s@@make-01, 27@@s@@he, 23@@b@@and, 18@@c@@country, 16@@t@@way, 3@@d@@world, 28@@d@@scene, 13@@s@@change-01, 32@@p@@race, 8@@n@@natural-disaster, 6@@s@@predict-01, 26@@s@@follow-01, 31@@a@@and, 25@@p@@especially, 18@@n@@_NAME_, 12@@p@@profound, 20@@s@@perceive-01, 5@@p2@@person, 8@@n2@@_NAME_, 22@@d@@home, 30@@d@@poor, 35@@s@@believe-01, 33@@d@@divide-02, 37@@d@@disaster, 5@@e2@@commentator]
sentence=1	Has	has	have	VBZ	O	_	cause-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	interrogative	_	0	IGNORE	true
3	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	affected	_	affect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	APP_o	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	view	_	view	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	APP_mod	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
12	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[8@@d@@country, 6@@t@@way, 4@@s@@affect-01, 3@@d@@disaster, 11@@n@@_NAME_, 7@@p@@other, 12@@explicitanon0@@interrogative, 11@@c@@country, 9@@s@@view-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	expect	_	expect	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
4	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
5	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	4	MOD_s	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	displaced	_	displace	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	11	MOD_mod	true
9	(those	_	(those	-LRB-	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
10	affluent	_	affluent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
12	those	_	those	DT	O	_	have-org-role-91	_	0	IGNORE	true
13	not)	_	not)	NN	O	_	person	_	0	IGNORE	true
14	will	_	will	MD	O	_	person	_	0	IGNORE	true
15	remain	_	remain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
16	in	_	in	IN	O	_	after	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	places	_	place	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	they	_	they	PRP	O	_	person	_	0	IGNORE	true
20	were	_	be	VBD	O	_	person	_	0	IGNORE	true
21	evacuated	_	evacuate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
22	to	_	to	IN	O	_	person	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@g@@person, 9@@p@@(those, 2@@s@@expect-01, 1@@d@@i, 10@@p@@affluent, 4@@explicitanon0@@many, 18@@b@@place, 5@@s@@include-91, 11@@d@@and, 7@@s@@displace-01, 21@@s@@evacuate-01, 15@@s@@remain-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	guess	_	guess	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
5	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	16	MOD_mod	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	schtick	_	schtick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	resounding	_	resounding	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	12	MOD_s	true
12	success	_	success	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	7	MOD_s	true
13	once,	_	once,	.	O	_	and	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	help	_	help	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	17	APP_o	true
17	but	_	but	CC	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	contrast-01	(o(s()))	2	MOD_s	true
18	trot	_	trot	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
21	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	18	MOD_mod	true
22	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
23	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	act	_	act	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	true
25	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
26	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-08	(s(), o())	2	APP_o	true
27	sour	_	sour	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@d@@sour, 4@@d@@you, 11@@s@@resounding, 5@@m@@have-03, 12@@s@@succeed-01, 24@@d@@act-01, 17@@c@@contrast-01, 15@@explicitanon0@@-, 21@@r@@rate-entity-91, 7@@d@@schtick, 26@@s@@go-08, 2@@b@@guess-01, 1@@d@@i, 16@@c@@help-02, 18@@s@@trot-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	is	_	be	VBZ	O	_	2	_	0	IGNORE	true
3	the_year	_name_	year	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	you'll	_	you'll	PRP	O	_	mean-01	_	0	IGNORE	true
5	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	take	_	take	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
8	stock	_	stock	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op1	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	career	_	career	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
13	ask	_	ask	VB	O	(a<root> / --LEX--  :ARG2 (y<s>  :ARG0-of a)  :ARG1 (q<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
14	yourself	_	yourself	PRP	O	_	say-01	_	0	IGNORE	true
15	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
16	you're	_	you're	PRP	O	_	thing	_	0	IGNORE	true
17	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_o	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
24	for	_	for	IN	O	_	thing	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	rest	_	rest	NN	O	(r<root> / --LEX--  :part-of (c4<poss>)  :duration-of (p2<mod>))	$LEMMA$	(mod(), poss())	23	MOD_mod	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	your	_	your	PRP$	O	_	cause-01	_	0	IGNORE	true
29	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_poss	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@r@@rest, 23@@s@@do-02, 13@@a@@ask-01, 17@@s@@do-02, 5@@c@@want-01, 12@@a@@and, 19@@d@@work-01, 8@@s@@stock-01, 3@@e@@event, 11@@d@@career, 3@@n@@_NAME_, 21@@s@@want-01, 29@@d@@life, 1@@p@@this]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	is	_	be	VBZ	O	_	now	_	0	IGNORE	true
3	the_year	_name_	year	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
4	you're	_	you're	PRP$	O	_	name	_	0	IGNORE	true
5	going	_	go	VBG	O	_	name	_	0	IGNORE	true
6	to	_	to	TO	O	_	-1	_	0	IGNORE	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
14	learning	_	learn	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op2	true
15	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	world,	_	world,	NNS	O	_	and	_	0	IGNORE	true
18	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
19	expansion	_	expansion	NN	O	(d<root> / --LEX--)	expand-01	()	22	APP_dom	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	the	_	the	DT	O	_	event	_	0	IGNORE	true
22	theme	_	theme	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	18	APP_s	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@cause-01, 3@@n@@_NAME_, 1@@p@@this, 13@@a@@and, 10@@explicitanon0@@lot, 22@@r@@theme, 8@@s@@do-02, 19@@d@@expand-01, 14@@d@@learn-01, 3@@e@@event, 12@@d@@travel-01]
sentence=1	Your	your	Your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-on-09	(s(), o())	3	APP_s	true
5	on	_	on	RP	O	_	and	_	0	IGNORE	true
6	an	_	an	DT	O	_	thing	_	0	IGNORE	true
7	entirely	_	entirely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	entire	(mod())	8	MOD_mod	true
8	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	direction	_	direction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	you've	_	you've	NFP	O	_	-	_	0	IGNORE	true
11	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	12	MOD_mod	true
12	dreamed	_	dream	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	of	_	of	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
14	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[7@@s@@entire, 12@@s@@dream-01, 4@@s@@take-on-09, 2@@d@@life, 3@@s@@possible-01, 11@@n@@ever, 13@@explicitanon0@@-, 8@@s@@new-01, 9@@d@@direction]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	mysteries	_	mystery	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	universe	_	universe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
6	continue	_	continue	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	person	_	0	IGNORE	true
8	attract	_	attract	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	APP_o	true
10	intrigue	_	intrigue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_op2	true
11	you,	_	you,	NNS	O	_	and	_	0	IGNORE	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	you	_	you	PRP	O	_	$LEMMA$	_	6	IGNORE	true
14	apply	_	apply	VBP	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	6	MOD_mod	true
15	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	mystical	_	mystical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	awareness	_	awareness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	to	_	to	IN	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	decisions	_	decision	NNS	O	(d<root> / --LEX--)	decide-01	()	14	APP_o	true
22	upcoming	_	upcoming	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
23	in	_	in	IN	O	_	thing	_	0	IGNORE	true
24	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
25	life,	_	life,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
26	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	concerning	_	concern	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
28	partnerships	_	partnership	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	kinds	_	kind	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
32	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[14@@b@@apply-01, 10@@s@@intrigue-01, 6@@c@@continue-01, 28@@d@@partnership, 5@@d@@universe, 22@@s@@upcoming-02, 21@@d@@decide-01, 8@@s@@attract-01, 16@@p@@mystical, 17@@d@@awareness, 30@@p@@all, 2@@m@@mystery, 20@@p@@important, 31@@p@@kind, 26@@p@@especially, 9@@a@@and, 27@@s@@concern-01]
sentence=1	1561_Last	_name_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	castling	_	castle	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_dom	true
4	was	_	be	VBD	O	_	say-01	_	0	IGNORE	true
5	2	_	2	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
6	separate	_	separate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	moves	_	move	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-02	(dom())	0	ROOT	true
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@separate-02, 3@@d@@castle-01, 2@@n@@time, 1@@p@@_NAME_, 5@@explicitanon0@@_NUMBER_, 7@@r@@move-02]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	true
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the_day	_name_	day	NN	O	(t3<root> / --LEX--  :domain (i<dom>)  :time-of (t<mod>))	$LEMMA$	(dom(), mod())	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	GOD'S	_name_	GOD'S	NNP	O	_	_NAME_	_	0	IGNORE	true
6	CURSE	curse	curse	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
7	fell	_	fall	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	3	APP_mod	true
8	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Rock	_name_	Rock	NNP	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@t3@@day, 6@@d@@curse-01, 10@@d@@world, 12@@g@@Rock, 7@@g@@fall-01, 1@@d@@that]
sentence=1	Antichrist_John_Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_s	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	compete	_	compete	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
6	Jesus_Christ,	_name_	Christ,	NNP	O	_	_NAME_	_	0	IGNORE	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	APP_op1	true
11	a	_	a	DT	O	_	person	_	0	IGNORE	true
12	beard	_	beard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
14	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
18	bogus	_	bogus	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	of	_	of	IN	O	_	person	_	0	IGNORE	true
21	Christ	_name_	Christ	NNP	O	(p<root> / person  :name (n / --LEX--)  :source-of (t<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	together	_	together	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	Yoko_Ono	_name_	Ono	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
25	at	_	at	IN	O	_	person	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Amsterdam_Hilton	_name_	Hilton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	hotel	_	hotel	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
29	proclaiming	_	proclaim	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
30	"Peace",	"peace",	"Peace",	NNP	O	_	thing	_	0	IGNORE	true
31	being	_	be	VBG	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
32	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
33	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
34	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	was	_	be	VBD	O	_	person	_	0	IGNORE	true
36	visited	_	visit	VBN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
37	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	Canadian	_name_	canadian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	40	MOD_mod	true
40	journalist	_	journalist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
41	who	_	who	WP	O	_	person	_	0	IGNORE	true
42	ridiculized	_	ridiculize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	true
43	and	_	and	CC	O	_	$LEMMA$	_	8	IGNORE	true
44	admonished	_	admonish	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	true
45	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
46	wanting	_	want	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	MOD_s	true
47	to	_	to	TO	O	_	thing	_	0	IGNORE	true
48	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	46	APP_o	true
49	about	_	about	IN	O	_	thing	_	0	IGNORE	true
50	what	_	what	WP	O	_	cause-01	_	0	IGNORE	true
51	Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	74	APP_s	true
52	meant	_	mean	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
53	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
54	he	_	he	PRP	O	_	thing	_	0	IGNORE	true
55	wrote	_	write	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	46	MOD_mod	true
56	in	_	in	IN	O	_	i	_	0	IGNORE	true
57	the	_	the	DT	O	_	person	_	0	IGNORE	true
58	lyrics	_	lyric	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	55	MOD_mod	true
59	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
60	"The	"the	"The	``	O	_	_NAME_	_	0	IGNORE	true
61	ballad	_	ballad	NN	O	(d<root> / --LEX--)	$LEMMA$	()	58	APP_poss	true
62	of	_	of	IN	O	_	person	_	0	IGNORE	true
63	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	61	MOD_mod	true
64	and	_	and	CC	O	_	$LEMMA$	_	61	IGNORE	true
65	Yoko":	_name_	yoko":	CD	O	_	$LEMMA$	_	0	IGNORE	true
66	"the	_	"the	DT	O	_	i	_	0	IGNORE	true
67	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
68	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	74	APP_o	true
69	are	_	be	VBP	O	_	person	_	0	IGNORE	true
70	going,	_	going,	NNP	O	_	and	_	0	IGNORE	true
71	they're	_	they're	NNP	O	_	person	_	0	IGNORE	true
72	going	_	go	VBG	O	_	accompany-01	_	0	IGNORE	true
73	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
74	crucify	_	crucify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	48	APP_o	true
75	me...",	_	me...",	.	O	_	slash	_	0	IGNORE	true
76	The_CURSE_OF_GOD_upon_John_Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	74	MOD_mod	true
77	carried	_	carry	VBD	O	(d<root> / --LEX--)	$LEMMA$-on-02	()	55	APP_o	true
78	on	_	on	RP	O	_	cause-01	_	0	IGNORE	true
79	with	_	with	IN	O	_	-	_	0	IGNORE	true
80	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	81	MOD_mod	true
81	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	84	MOD_mod	true
82	of	_	of	IN	O	_	person	_	0	IGNORE	true
83	miseries	_	misery	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op1	true
84	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	74	MOD_mod	true
85	distresses	_	distress	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op2	true
86	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
87	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	MOD_s	true
88	Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
89	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
90	the	_	the	DT	O	_	person	_	0	IGNORE	true
91	interview	_	interview	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	89	APP_o	true
92	to	_	to	IN	O	_	and	_	0	IGNORE	true
93	the	_	the	DT	O	_	person	_	0	IGNORE	true
94	"Rolling	"rolling	"rolling	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	96	MOD_mod	true
95	Stone"	_name_	Stone"	NNP	O	_	and	_	0	IGNORE	true
96	magazine	_	magazine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	91	APP_s	true
97	(today	_	(today	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	true
98	condensed	_	condense	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	96	MOD_s	true
99	in	_	in	IN	O	_	i	_	0	IGNORE	true
100	the	_	the	DT	O	_	person	_	0	IGNORE	true
101	"Lennon	"lennon	"lennon	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	true
102	remembers"	_	remembers"	NFP	O	_	mean-01	_	0	IGNORE	true
103	book)	_	book)	XX	O	_	and	_	0	IGNORE	true
104	where	_	where	WRB	O	_	and	_	0	IGNORE	true
105	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
106	speaks	_	speak	VBZ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	96	MOD_mod	true
107	about	_	about	IN	O	_	thing	_	0	IGNORE	true
108	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
109	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	112	MOD_s	true
110	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_s	true
111	were	_	be	VBD	O	_	person	_	0	IGNORE	true
112	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	115	MOD_s	true
113	for	_	for	IN	O	_	and	_	0	IGNORE	true
114	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
115	blaming	_	blame	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	106	APP_s	true
116	"whatever	_	"whatever	''	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_o	true
117	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
118	up	_	up	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	115	MOD_mod	true
119	there"	_	there"	CD	O	_	thing	_	0	IGNORE	true
120	for	_	for	IN	O	_	thing	_	0	IGNORE	true
121	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
122	(referring	_	(referring	ADD	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	115	MOD_mod	true
123	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
124	God)	_name_	God)	NNS	O	_	mean-01	_	0	IGNORE	true
125	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[116@@d@@"whatever, 91@@s@@interview-01, 89@@s@@give-01, 21@@n@@_NAME_, 10@@s@@grow-03, 87@@s@@make-02, 27@@n@@_NAME_, 39@@c@@country, 67@@d@@way, 19@@d@@role, 46@@s@@want-01, 58@@h@@lyric, 106@@s@@speak-01, 97@@n@@_NAME_, 115@@s@@blame-01, 40@@d@@journalist, 42@@s@@ridiculize-01, 12@@d@@beard, 39@@n@@_NAME_, 51@@p@@person, 2@@c@@want-01, 29@@s@@proclaim-01, 21@@p@@person, 13@@a@@and, 118@@b@@up, 94@@n@@_NAME_, 98@@s@@condense-01, 28@@b@@hotel, 88@@n@@_NAME_, 8@@s@@cause-01, 24@@n@@_NAME_, 76@@n@@_NAME_, 85@@d@@distress, 48@@s@@know-01, 80@@p@@all, 1@@n@@_NAME_, 83@@d@@misery, 1@@p@@person, 84@@a@@and, 4@@s@@compete-01, 81@@p@@type, 112@@s@@go-09, 110@@d@@thing, 61@@d@@ballad, 52@@d@@mean-01, 122@@o@@(referring-01, 14@@s@@start-01, 18@@p@@bogus, 96@@d@@magazine, 16@@s@@make-01, 55@@t@@write-01, 101@@n@@_NAME_, 109@@s@@bad-07, 36@@v@@visit-01, 77@@d@@carry-on-02, 63@@n@@_NAME_, 44@@s@@admonish-01, 68@@d@@thing, 51@@n@@_NAME_, 74@@s@@crucify-01]
sentence=1	At	at	at	IN	O	_	thing	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
5	McCartney	_name_	McCartney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	going	_	go	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-out-17	(mod(), s())	4	MOD_mod	true
8	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	Heather_Mills,	_name_	mills,	ADD	O	_	and	_	0	IGNORE	true
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	used	_	use	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
13	Linda's	_name_	Linda's	NNP	O	_	_NAME_	_	0	IGNORE	true
14	death	_	death	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	die-01	(s())	12	APP_o	true
15	for	_	for	IN	O	_	thing	_	0	IGNORE	true
16	promotional	_	promotional	JJ	O	(d<root> / --LEX--)	market-01	()	12	APP_s	true
17	ends,	_	ends,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	12	MOD_o	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
21	waning	_	wane	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	popularity	_	popularity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@v@@go-out-17, 5@@p@@person, 5@@n@@_NAME_, 18@@s@@cause-01, 3@@s@@same-01, 21@@s@@wane-01, 22@@d@@popularity, 4@@n@@time, 12@@o@@use-01, 14@@s@@die-01, 16@@d@@market-01]
sentence=1	The_early_days	_name_	day	NNS	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	5	APP_s	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the_days	_name_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	competition	_	competition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	compete-02	(s(), o())	16	APP_op1	true
6	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	Paul	_name_	Paul	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op2	true
8	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
9	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	wife	_	wife	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	12	MOD_s	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	John	_name_	John	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	48	APP_op2	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	16	APP_op2	true
14	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
15	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_op3	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	had	_	have	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	18	APP_o	true
21	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
22	compete	_	compete	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_s	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	ugly	_	ugly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
26	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	the	_	the	DT	O	_	and	_	0	IGNORE	true
28	leadership	_	leadership	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	lead-02	(s())	22	APP_s	true
29	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
32	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	front	_	front	NN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	in-$LEMMA$-of	(op1(), mod())	22	MOD_mod	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	wives	_	wife	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	33	APP_op1	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	MOD_op1	true
38	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	64	MOD_s	true
39	Yoko_Ono	_name_	Ono	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	40	APP_s	true
40	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	64	APP_op2	true
41	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
42	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	realize-01	(s())	40	APP_o	true
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
44	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
45	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	APP_op1	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	virility	_	virility	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
48	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	42	APP_s	true
49	repressed	_	repress	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	true
50	homosexuality,	_	homosexuality,	.	O	_	cause-01	_	0	IGNORE	true
51	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
52	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	64	APP_op1	true
53	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
54	beard	_	beard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_s	true
55	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
56	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_s	true
57	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	54	MOD_o	true
58	in	_	in	IN	O	_	i	_	0	IGNORE	true
59	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
60	"Let	"let	"Let	.	O	_	$LEMMA$	_	0	IGNORE	true
61	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
62	Be"	be"	be"	CD	O	_	shit	_	0	IGNORE	true
63	film	_	film	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	57	MOD_mod	true
64	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	37	APP_op2	true
65	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	64	APP_op3	true
66	to	_	to	TO	O	_	person	_	0	IGNORE	true
67	show	_	show	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	65	APP_s	true
68	pictures	_	picture	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	67	APP_s	true
69	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
70	naked	_	naked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	71	MOD_s	true
71	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	68	APP_s	true
72	in	_	in	IN	O	_	i	_	0	IGNORE	true
73	the	_	the	DT	O	_	person	_	0	IGNORE	true
74	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	71	MOD_s	true
75	film,	_	film,	NN	O	_	and	_	0	IGNORE	true
76	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_op4	true
77	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	78	MOD_mod	true
78	effort	_	effort	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	76	APP_s	true
79	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
80	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	78	MOD_s	true
81	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
82	be	_	be	VB	O	_	person	_	0	IGNORE	true
83	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	78	APP_s	true
84	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
85	a	_	a	DT	O	_	1	_	0	IGNORE	true
86	man...	_	man...	NFP	O	(d<root> / --LEX--)	_NAME_	()	83	APP_s	true
87	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[64@@a@@and, 40@@s@@make-02, 47@@d@@virility, 39@@p@@person, 12@@p@@person, 45@@s@@lack-01, 39@@n@@_NAME_, 54@@d@@beard, 83@@s@@see-01, 15@@p@@person, 68@@s@@picture, 48@@a@@and, 57@@s@@see-01, 37@@a@@and, 65@@s@@start-01, 10@@b@@wife, 67@@s@@show-01, 70@@s@@naked, 42@@s@@realize-01, 1@@n2@@_NAME_, 38@@s@@have-04, 77@@p@@every, 7@@n@@_NAME_, 80@@s@@possible-01, 33@@b@@in-front-of, 13@@a@@and, 15@@f@@wife, 86@@d@@_NAME_, 71@@d@@woman, 15@@h@@have-rel-role-91, 18@@s@@know-01, 10@@h@@have-rel-role-91, 25@@n@@_NAME_, 24@@p@@ugly, 28@@s@@lead-02, 16@@a@@and, 12@@n@@_NAME_, 36@@p@@person, 1@@n@@newspaper, 78@@s@@effort-01, 22@@s@@compete-02, 36@@h@@have-rel-role-91, 76@@s@@do-02, 31@@d@@band, 49@@s@@repress-01, 5@@s@@compete-02, 52@@s@@grow-03, 56@@d@@we, 63@@p@@film, 74@@s@@same-01, 7@@p@@person, 36@@f@@wife, 20@@s@@obligate-01, 3@@d@@day]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	rejection	_	rejection	NN	O	(d<root> / --LEX--)	reject-01	()	3	APP_s	true
3	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-04	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that	_	that	IN	O	_	name	_	0	IGNORE	true
8	George_Harrison	_name_	Harrison	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	kicked	_	kick	VBD	O	(d<root> / --LEX--  :ARG0 (t<s>)  :ARG1 (s2<o>)  :topic-of (s<mod>))	$LEMMA$-01	(mod(), s(), o())	6	MOD_mod	true
10	Yoko_Ono	_name_	Ono	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Apple	_name_	Apple	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	studios	_	studio	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
15	during	_	during	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	filming	_	filming	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	Let	let	let	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	Be	be	Be	VB	O	_	person	_	0	IGNORE	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@d@@let-01, 17@@s@@filming-01, 13@@n@@_NAME_, 8@@p@@person, 6@@d@@point, 14@@b@@studio, 9@@d@@kick-01, 10@@n@@_NAME_, 8@@n@@_NAME_, 1@@p@@that, 10@@p@@person, 2@@d@@reject-01, 3@@s@@get-04]
sentence=1	Their	their	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
2	chauvinisms	_	chauvinism	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
3	got	_	get	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-03	(o(s()))	0	ROOT	true
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	point	_	point	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
9	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
11	hated	_	hate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
12	each	_	each	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@o@@get-03, 2@@m@@chauvinism, 11@@s@@hate-01, 8@@p@@even, 13@@d@@other, 1@@d@@they]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	dangers	_	danger	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
3	implicit	_	implicit	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	2	MOD_s	true
4	in	_	in	IN	O	_	thing	_	0	IGNORE	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	attack	_	attack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	upon	_	upon	IN	O	_	-	_	0	IGNORE	true
8	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	nation,	_	nation,	NNS	O	_	cause-01	_	0	IGNORE	true
10	however,	_	however,	NNP	O	_	thing	_	0	IGNORE	true
11	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
12	to	_	to	TO	O	_	affect-01	_	0	IGNORE	true
13	significantly	_	significantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	significant-02	(s())	14	MOD_s	true
14	offset	_	offset	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
15	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	gains	_	gain	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
20	in	_	in	IN	O	_	after	_	0	IGNORE	true
21	the	_	the	DT	O	_	so	_	0	IGNORE	true
22	so-called	_	so-calle	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	call-01	(s())	23	MOD_s	true
23	"War	"war	"war	XX	O	(w<root> / war  :name (n / --LEX--))	$LEMMA$-01	()	16	APP_s	true
24	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
25	Terror.	_name_	Terror.	NNP	O	_	_NAME_	_	0	IGNORE	true
26	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[16@@s@@gain-01, 13@@s@@significant-02, 14@@s@@offset-01, 2@@d@@danger, 6@@s@@attack-01, 17@@s@@possible-01, 19@@s@@make-01, 5@@p@@any, 23@@n@@"war-01, 22@@s@@call-01, 11@@s@@seem-01, 23@@w@@war, 3@@s@@implicit, 8@@d@@that, 15@@p@@whatever]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
2	-	_	-	:	O	_	and	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	global	_	global	JJ	O	(d<root> / --LEX--)	globe	()	17	APP_op1	true
9	warming,	_	warming,	NNS	O	_	and	_	0	IGNORE	true
10	clean	_	clean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	14	MOD_s	true
11	air,	_	air,	NN	O	_	and	_	0	IGNORE	true
12	clean	_	clean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	MOD_s	true
13	water,	_	water,	NNP	O	_	mean-01	_	0	IGNORE	true
14	pollution	_	pollution	NN	O	(d<root> / --LEX--)	pollute-01	()	15	APP_op1	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
16	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	in	_	in	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	i	(op1(), mod())	7	MOD_mod	true
18	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
19	2004	_name_	2004	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	24	MOD_mod	true
20	State	state	State	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Union	union	Union	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
24	speech	_	speech	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
25	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@number, 17@@w@@i, 12@@s@@clean-04, 20@@p@@State, 19@@explicitanon0@@_NUMBER_, 6@@p@@person, 6@@n@@_NAME_, 19@@d@@date-entity, 24@@n@@speech, 15@@a@@or, 10@@s@@clean-04, 7@@s@@mention-01, 16@@d@@environment, 14@@d@@pollute-01, 1@@explicitanon0@@_NUMBER_, 8@@d@@globe, 23@@p@@Union]
sentence=1	68	_	68	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	days	_	day	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	6	MOD_mod	true
6	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
7	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op1	true
8	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
9	that	_	that	WDT	O	_	1	_	0	IGNORE	true
10	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
11	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_mod	true
12	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	ratify	_	ratify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Kyoto	_name_	Kyoto	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	Protocol,	protocol,	protocol,	CD	O	_	mean-01	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	treaty	_	treaty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	reduce	_	reduce	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
23	greenhouse	_	greenhouse	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	gases	_	gas	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	by	_	by	IN	O	_	date-interval	_	0	IGNORE	true
26	roughly	_	roughly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	rough-04	(mod())	22	MOD_mod	true
27	5.2	_	5.2	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
28	per	_	per	IN	O	_	rate-entity-91	_	0	IGNORE	true
29	cent	_	cent	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	10	(mod())	3	MOD_mod	true
30	below	_	below	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	22	MOD_mod	true
31	1990	_name_	1990	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	32	MOD_mod	true
32	levels	_	level	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
33	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	22	MOD_mod	true
34	2012	_name_	2012	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	33	APP_op1	true
35	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[10@@p@@person, 10@@n@@_NAME_, 19@@p@@international, 27@@explicitanon0@@_NUMBER_, 22@@s@@reduce-01, 29@@explicitanon0@@10, 20@@d@@treaty, 11@@c@@decide-01, 5@@m@@day, 5@@m2@@multiple, 33@@w@@by, 16@@n@@_NAME_, 32@@d@@level, 12@@explicitanon0@@-, 24@@d@@gas, 14@@s@@ratify-01, 34@@d@@date-entity, 5@@t2@@temporal-quantity, 31@@d@@date-entity, 23@@p@@greenhouse, 31@@explicitanon0@@_NUMBER_, 1@@explicitanon0@@_NUMBER_, 30@@s@@below, 3@@explicitanon0@@number, 7@@s@@take-01, 34@@explicitanon0@@_NUMBER_, 6@@w@@after, 26@@s@@rough-04, 8@@d@@office]
sentence=1	25	_	25	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
6	worldwide	_	worldwide	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	carbon	_	carbon	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	dioxide	_	dioxide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	emissions	_	emission	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	emit-01	(s())	12	APP_o	true
10	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
11	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
12	responsible	_	responsible	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	for	_	for	IN	O	_	and	_	0	IGNORE	true
14	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[9@@s@@emit-01, 10@@c@@country, 6@@p@@worldwide, 8@@d@@dioxide, 12@@s@@responsible-01, 10@@n@@_NAME_, 3@@p@@percentage, 7@@p@@carbon, 5@@p@@overall, 1@@explicitanon0@@_NUMBER_]
sentence=1	5	_	5	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	years	_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	23	MOD_mod	true
8	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	10	MOD_s	true
9	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	in	_	in	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	government-organization	(mod())	9	MOD_mod	true
11	2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	9	MOD_mod	true
12	that	_	that	IN	O	_	and	_	0	IGNORE	true
13	global	_	global	JJ	O	(d<root> / --LEX--)	globe	()	14	APP_s	true
14	warming	_	warming	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	warm-01	(s())	18	APP_s	true
15	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	9	APP_o	true
16	be	_	be	VB	O	_	thing	_	0	IGNORE	true
17	further	_	further	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	studied	_	study	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
19	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
20	substantive	_	substantive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	MOD_s	true
21	action	_	action	NN	O	(d<root> / --LEX--)	act-02	()	22	APP_s	true
22	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	19	APP_op1	true
23	be	_	be	VB	O	(d<root> / --LEX--)	thing	()	9	APP_s	true
24	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 11@@d@@date-entity, 3@@explicitanon0@@number, 23@@d@@thing, 10@@p@@government-organization, 5@@b@@year, 9@@s@@say-01, 22@@f@@possible-01, 13@@d@@globe, 7@@p@@person, 8@@s@@administrate-01, 7@@n@@_NAME_, 19@@w@@before, 21@@d@@act-02, 24@@s@@take-01, 15@@s@@obligate-01, 17@@s@@further, 14@@s@@warm-01, 20@@s@@substantive, 11@@explicitanon0@@_NUMBER_, 18@@s@@study-01]
sentence=1	$6.1m	_	$6.1m	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
5	EPA	_name_	EPA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	historically	_	historically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	historical	(mod())	7	MOD_mod	true
7	valued	_	value	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_mod	true
8	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
12	conducting	_	conduct	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
13	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	14	MOD_mod	true
14	analyses	_	analysis	NNS	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	analyze-01	(mod(), s())	7	MOD_mod	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	proposed	_	propose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	regulations	_	regulation	NNS	O	(d<root> / --LEX--)	regulate-01	()	14	APP_s	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@s@@analyze-01, 12@@s@@conduct-01, 6@@p@@historical, 8@@p@@each, 1@@explicitanon0@@_NAME_, 16@@s@@propose-01, 3@@explicitanon0@@amount, 17@@d@@regulate-01, 7@@s@@value-01, 5@@g@@government-organization, 13@@p@@economy, 10@@d@@life, 9@@p@@human, 5@@n@@_NAME_]
sentence=1	$3.7m_-_Amount	_name_	amount	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
2	the	_	the	DT	O	(d<root> / --LEX--)	person	()	4	APP_o2	true
3	EPA	_name_	EPA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	valued	_	value	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	when	_	when	WRB	O	_	person	_	0	IGNORE	true
9	conducting	_	conduct	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
10	analyses	_	analysis	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	analyze-01	(s())	9	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	proposed	_	propose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
13	regulations	_	regulation	NNS	O	(d<root> / --LEX--)	regulate-01	()	10	APP_s	true
14	during	_	during	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	4	MOD_mod	true
17	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	2	MOD_s	true
18	.	_	.	.	O	(n<root> / --LEX--  :time-of (p<mod>))	government-organization	(mod())	4	MOD_mod	true

nodealignment=[18@@n@@government-organization, 12@@s@@propose-01, 9@@t@@conduct-01, 17@@s@@administrate-01, 1@@n@@_NAME_, 16@@p@@person, 13@@d@@regulate-01, 7@@d@@life, 4@@t@@value-01, 3@@g@@government-organization, 6@@p@@human, 2@@d@@person, 5@@p@@each, 16@@n@@_NAME_, 3@@n@@_NAME_, 10@@s@@analyze-01]
sentence=1	6	_	6	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	10	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	months	_name_	month	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	6	MOD_mod	true
6	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
7	11_September	_name_	September	NNP	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	6	APP_op1	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	Cheney's_Energy_Task_Force	_name_	Force	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
10	investigated	_	investigate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	Iraq's	iraq's	iraq's	CD	O	_	_NAME_	_	0	IGNORE	true
12	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	reserves	_	reserve	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@w@@before, 3@@explicitanon0@@Number, 7@@n@@_NAME_, 10@@s@@investigate-01, 9@@o2@@organization, 1@@explicitanon0@@_NUMBER_, 7@@w@@war, 13@@d@@reserve, 5@@t2@@temporal-quantity, 5@@m@@month, 5@@m2@@multiple, 12@@p@@oil, 9@@n@@_NAME_]
sentence=1	$3.8bn	_	$3.8bn	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	APP_s	true
4	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	Superfund	_name_	Superfund	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	trust	_	trust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	fund	_	fund	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_mod	true
9	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
10	toxic	_	toxic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	clean-ups	_	clean-up	NNS	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-02	(mod(), s())	8	MOD_mod	true
13	in	_	in	IN	O	_	10	_	0	IGNORE	true
14	1995,_the_Year	_name_	Year	NNP	O	(m<root> / --LEX--  :unit-of (a<mod>))	year	(mod())	17	MOD_mod	true
15	"polluter	_	"polluter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
16	pays"	_	pays"	JJ	O	_	and	_	0	IGNORE	true
17	fees	_	fee	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
18	expired	_	expire	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@m@@year, 1@@explicitanon0@@_NAME_, 6@@d@@Superfund, 11@@d@@site, 18@@s@@expire-01, 15@@p@@_NAME_, 8@@s@@fund-01, 3@@explicitanon0@@amount, 12@@i@@clean-up-02, 17@@d@@fee, 7@@p@@trust, 10@@p@@toxic]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
2	-	_	-	:	O	_	and	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	Osama_bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
9	in	_	in	IN	O	_	and	_	0	IGNORE	true
10	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	16	MOD_mod	true
12	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	Union	union	Union	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
17	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@p@@person, 6@@n@@_NAME_, 12@@p@@state, 16@@v@@address-01, 8@@p@@person, 8@@n@@_NAME_, 11@@explicitanon0@@3, 1@@explicitanon0@@_NUMBER_, 3@@explicitanon0@@number, 7@@s@@mention-01, 15@@d@@Union]
sentence=1	73	_	73	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	that	_	that	IN	O	_	1	_	0	IGNORE	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_mod	true
9	terrorism	_	terrorism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
11	terrorists	_	terrorist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	19	MOD_mod	true
15	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	Union	union	Union	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 9@@d@@terrorism, 18@@p@@Union, 7@@p@@person, 7@@n@@_NAME_, 3@@explicitanon0@@number, 14@@explicitanon0@@3, 10@@a@@or, 11@@d@@terrorist, 8@@s@@mention-01, 15@@p@@state, 19@@v@@address-01]
sentence=1	83	_	83	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	mentioned	_	mention	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
8	Saddam,	saddam,	Saddam,	NNP	O	_	mean-01	_	0	IGNORE	true
9	Iraq,	iraq,	Iraq,	NNP	O	_	mean-01	_	0	IGNORE	true
10	or	_	or	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	7	APP_o	true
11	regime	_	regime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	(as	_	(as	.	O	_	_NAME_	_	0	IGNORE	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	change)	_	change)	NNS	O	_	and	_	0	IGNORE	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	his	_	he	PRP$	O	_	and	_	0	IGNORE	true
17	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	22	MOD_mod	true
18	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	Union	union	Union	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	7	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@p@@state, 7@@c@@mention-01, 21@@d@@Union, 11@@d@@regime, 6@@n@@_NAME_, 22@@v@@address-02, 1@@explicitanon0@@_NUMBER_, 6@@p@@person, 17@@explicitanon0@@3, 3@@explicitanon0@@number, 10@@s@@or]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
2	-	_	-	:	O	_	and	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	Saudi_Arabia	_name_	Arabia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
9	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	16	MOD_mod	true
12	State	state	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	Union	union	Union	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	addresses	_	address	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@c@@country, 1@@explicitanon0@@_NUMBER_, 15@@d@@Union, 7@@s@@mention-01, 11@@explicitanon0@@3, 12@@p@@state, 3@@explicitanon0@@number, 16@@v@@address-01, 6@@n@@_NAME_, 6@@p@@person, 8@@n@@_NAME_]
sentence=1	$3m	_	$3m	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	the_White_House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	was	_	be	VBD	O	_	person	_	0	IGNORE	true
6	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
8	grant	_	grant	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	the_9/11_Commission	_name_	Commission	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
10	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
11	investigate	_	investigate	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	8	MOD_mod	true
12	the	_	the	DT	O	_	12	_	0	IGNORE	true
13	11_September	_name_	September	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	14	MOD_s	true
14	attacks	_	attack	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
15	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[4@@n@@_NAME_, 4@@g@@government-organization, 1@@explicitanon0@@_NAME_, 11@@s@@investigate-01, 13@@s@@_NAME_, 9@@g@@government-organization, 3@@explicitanon0@@amount, 6@@c@@will-02, 8@@s@@grant-01, 14@@d@@attack-01, 9@@n@@_NAME_]
sentence=1	$5m	_	$5m	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	1996	_name_	1996	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	7	MOD_mod	true
6	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	7	MOD_mod	true
7	commission	_	commission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	study	_	study	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
12	legalised	_	legalise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	legalize-01	(s())	13	MOD_s	true
13	gambling	_	gambling	NN	O	(d<root> / --LEX--)	gamble-01	()	11	APP_o	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@date-entity, 1@@explicitanon0@@_NAME_, 3@@d@@amount, 9@@s@@give-01, 13@@d@@gamble-01, 11@@s@@study-01, 7@@d@@commission, 12@@s@@legalize-01, 5@@explicitanon0@@_NUMBER_, 6@@p@@federal]
sentence=1	1972_-_Year	_name_	year	NN	O	(n3<root> / --LEX--  :name-of (f / festival  :time-of (t<mod>)))	_NAME_	(mod())	0	ROOT	true
2	that	_	that	IN	O	_	slash	_	0	IGNORE	true
3	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	walked	_	walk	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	1	APP_mod	true
5	away	_	away	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	from	_	from	IN	O	_	-	_	0	IGNORE	true
7	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
8	pilot	_	pilot	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
9	duties	_	duty	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Texas	texas	Texas	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	National	national	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	9	MOD_mod	true
14	Guard,	guard,	Guard,	NFP	O	_	_NAME_	_	0	IGNORE	true
15	Nearly_two_years	_name_	year	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	20	MOD_mod	true
16	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
17	his	_	he	PRP$	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	1	MOD_mod	true
18	six-year	_	six-year	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	year	(mod())	19	MOD_mod	true
19	obligation	_	obligation	NN	O	(d<root> / --LEX--)	obligate-01	()	21	APP_s	true
20	was	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	1	MOD_mod	true
21	up	_	up	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_op1	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@n2@@_NAME_, 15@@explicitanon0@@_NAME_, 9@@d@@duty, 8@@p@@pilot-01, 1@@f@@festival, 4@@t@@walk-01, 1@@n3@@_NAME_, 21@@s@@up-02, 12@@s@@state, 13@@p@@nation, 20@@p@@person, 18@@y@@year, 16@@w@@before, 19@@d@@obligate-01, 18@@t@@temporal-quantity, 17@@explicitanon0@@2, 3@@n@@_NAME_, 5@@a@@away, 3@@p@@person]
sentence=1	2.5	_	2.5	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(s<root> / --LEX--  :ARG0 (y<s>))	8	(s())	3	APP_mod	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	hours	_	hour	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	6	MOD_mod	true
6	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
7	Rumsfeld	_name_	Rumsfeld	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	learnt	_	learn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op1	true
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	Osama_bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	suspect	_	suspect	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
14	in	_	in	IN	O	_	12	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	11_September	_name_	September	NNP	O	(d<root> / --LEX--)	_NAME_	()	17	APP_s	true
17	attacks	_	attack	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
18	that	_	that	IN	O	_	name	_	0	IGNORE	true
19	he	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
20	brought	_	bring	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	2	APP_s	true
21	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
22	reasons	_	reason	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_s	true
23	to	_	to	IN	O	_	thing	_	0	IGNORE	true
24	"hit"	_	"hit"	XX	O	_	and	_	0	IGNORE	true
25	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@m@@hour, 5@@t2@@temporal-quantity, 17@@s@@attack-01, 6@@w@@after, 25@@n@@_NAME_, 3@@explicitanon0@@number, 2@@s@@8, 10@@p@@person, 1@@explicitanon2@@_NAME_, 20@@s@@bring-up-02, 25@@c@@country, 22@@s@@reason, 5@@m2@@multiple, 13@@s@@suspect-01, 1@@d@@date-entity, 7@@p@@person, 16@@d@@_NAME_, 8@@s@@learn-01, 10@@n@@_NAME_, 7@@n@@_NAME_]
sentence=1	2000_-_Year	_name_	year	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
2	that	_	that	WDT	O	_	1	_	0	IGNORE	true
3	Cheney	_name_	Cheney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
6	policy	_	policy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	CEO	ceo	CEO	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	officer	(mod())	6	MOD_mod	true
9	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	Halliburton	_name_	Halliburton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
11	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
12	services	_	service	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	serve-01	(s(), o())	13	MOD_s	true
13	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	"we	_	"we	CD	O	_	$LEMMA$	_	0	IGNORE	true
16	wouldn't	_	wouldn't	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	APP_o	true
18	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	Iraq"	iraq"	Iraq"	NNP	O	_	and	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@d@@anything, 10@@n@@_NAME_, 12@@s@@serve-01, 17@@s@@do-02, 8@@p@@officer, 1@@n@@_NAME_, 13@@d@@company, 4@@c@@say-01, 11@@d@@oil, 16@@explicitanon0@@-, 6@@s@@policy-01, 3@@p@@person, 3@@n@@_NAME_]
sentence=1	$120b	_	$120b	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
7	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	aftermath	_	aftermath	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
9	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
10	projected	_	project	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	to	_	to	TO	O	_	multiple	_	0	IGNORE	true
12	cost	_	cost	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
13	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
14	the_2004_fiscal_year	_name_	year	NN	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	12	APP_o	true
15	.	_	.	.	O	_	1	_	0	IGNORE	true

nodealignment=[1@@p@@_NAME_, 12@@s@@cost-01, 6@@a@@and, 8@@d@@aftermath, 14@@n2@@_NAME_, 5@@d@@war, 3@@d@@amount, 14@@n@@newspaper, 10@@s@@project-01]
sentence=1	$59,339	_	$59,339	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	Amount	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	campaign	_	campaign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_s	true
7	reimbursed	_	reimburse	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_s	true
8	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	14	_	14	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	11	MOD_mod	true
11	trips	_	trip	NNS	O	(d<root> / --LEX--)	$LEMMA$-03	()	7	APP_o2	true
12	on	_	on	IN	O	_	i	_	0	IGNORE	true
13	its	_	its	PRP$	O	_	person	_	0	IGNORE	true
14	corporate	_	corporate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	corporation	(mod())	15	MOD_mod	true
15	jet	_	jet	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
16	during	_	during	IN	O	_	i	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	2000	_name_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	19	MOD_mod	true
19	campaign	_	campaign	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@c@@company, 5@@n@@_NAME_, 15@@b@@jet, 1@@explicitanon0@@_NUMBER_, 8@@n@@_NAME_, 11@@d@@trip-03, 19@@n@@campaign-01, 18@@explicitanon0@@_NUMBER_, 14@@p@@corporation, 18@@d@@date-entity, 5@@p@@person, 7@@b@@reimburse-01, 10@@explicitanon0@@_NUMBER_, 3@@s@@Amount-01, 6@@s@@campaign-01]
sentence=1	33	_	33	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
6	$15bn	_	$15bn	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	pledged	_	pledge	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	0	ROOT	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o2	true
11	Aids	aids	Aids	NNP	O	(d2<root> / disease  :name (n2 / --LEX--))	_NAME_	()	10	APP_o	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	Africa	_name_	Africa	NNP	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	10	MOD_mod	true
14	that	_	that	WDT	O	_	name	_	0	IGNORE	true
15	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	16	MOD_s	true
16	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-10	(s(), o())	11	MOD_s	true
17	to	_	to	IN	O	_	name	_	0	IGNORE	true
18	abstinence-only	_	abstinence-only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	programmes	_	programme	NNS	O	(d<root> / --LEX--)	program	()	16	APP_o	true
20	.	_	.	.	O	_	exchange-01	_	0	IGNORE	true

nodealignment=[8@@i@@pledge-01, 18@@p@@_NAME_, 19@@d@@program, 16@@s@@go-10, 15@@s@@obligate-01, 10@@s@@fight-01, 13@@n2@@_NAME_, 6@@explicitanon0@@1, 7@@n@@_NAME_, 7@@p@@person, 11@@d2@@disease, 11@@n2@@_NAME_, 3@@d@@percentage, 1@@explicitanon0@@_NUMBER_, 13@@c3@@continent]
sentence=1	22	_	22	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	10	MOD_mod	true
2	-	_	-	HYPH	O	_	say-01	_	0	IGNORE	true
3	Number	number	number	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	APP_op1	true
4	of	_	of	IN	O	_	1	_	0	IGNORE	true
5	hours	_	hour	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	prisoners	_	prisoner	NNS	O	(d<root> / --LEX--)	imprison-01	()	10	APP_s	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	handcuffed,	_	handcuffed,	NNP	O	_	and	_	0	IGNORE	true
9	shackled,	_	shackled,	NNP	O	_	and	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	made	_	make	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	10	APP_op2	true
12	to	_	to	TO	O	_	woman	_	0	IGNORE	true
13	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	surgical	_	surgical	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
15	masks,	_	masks,	NNS	O	_	and	_	0	IGNORE	true
16	earmuffs,	_	earmuffs,	NNS	O	_	and	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
18	blindfolds	_	blindfold	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	during	_	during	IN	O	_	and	_	0	IGNORE	true
20	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
21	flight	_	flight	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	fly-01	(mod(), s())	10	MOD_mod	true
22	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	Guantanamo	_name_	Guantanamo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
24	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[23@@p@@person, 14@@d@@surgical, 11@@o@@make-02, 23@@n@@_NAME_, 5@@p@@hour, 18@@d@@blindfold, 10@@a@@and, 17@@a@@and, 3@@s@@number, 13@@s@@wear-01, 6@@d@@imprison-01, 1@@explicitanon0@@_NUMBER_, 21@@v@@fly-01]
sentence=1	90	_	90	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	10	_	0	IGNORE	true
19	26_September_2001	_name_	2001	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	11	_	0	IGNORE	true

nodealignment=[11@@p@@person, 11@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 5@@c@@country, 2@@p@@-, 17@@p3@@person, 10@@t@@way, 3@@d@@percentage, 17@@p4@@president, 19@@n@@_DATE_, 17@@h2@@have-rel-role-91, 5@@n@@_NAME_, 15@@m@@job, 13@@l@@handle-01, 7@@s@@approve-01]
sentence=1	67	_	67	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	(d<root> / --LEX--)	have-org-role-91	()	3	APP_mod	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
19	26_September_2002	_name_	2002	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	11	_	0	IGNORE	true

nodealignment=[17@@p3@@person, 13@@l@@handle-01, 17@@h2@@have-rel-role-91, 5@@n@@_NAME_, 15@@m@@job, 1@@explicitanon0@@_NUMBER_, 11@@p@@person, 5@@c@@country, 7@@s@@approve-01, 3@@explicitanon0@@percentage, 19@@n@@_DATE_, 10@@t@@way, 17@@p4@@president, 16@@d@@have-org-role-91, 11@@n@@_NAME_]
sentence=1	54	_	54	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	(d<root> / --LEX--)	have-org-role-91	()	3	APP_mod	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
19	30	_	30	CD	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
20	September,	september,	september,	SYM	O	_	1	_	0	IGNORE	true
21	2003	_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	19	MOD_mod	true
22	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 19@@explicitanon4@@_NUMBER_, 11@@p@@person, 17@@p4@@president, 7@@s@@approve-01, 13@@l@@handle-01, 17@@h2@@have-rel-role-91, 5@@n@@_NAME_, 15@@m@@job, 2@@p@@-, 21@@explicitanon0@@_NUMBER_, 5@@c@@country, 3@@explicitanon0@@percentage, 16@@d@@have-org-role-91, 10@@t@@way, 17@@p3@@person, 11@@n@@_NAME_]
sentence=1	50	_	50	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	have-org-role-91	(mod())	7	MOD_mod	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	10	_	0	IGNORE	true
19	15_October_2003	_name_	2003	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[5@@n@@_NAME_, 17@@h2@@have-rel-role-91, 13@@l@@handle-01, 16@@p@@have-org-role-91, 1@@explicitanon0@@_NUMBER_, 11@@n@@_NAME_, 15@@m@@job, 5@@c@@country, 17@@p3@@person, 11@@p@@person, 17@@p4@@president, 10@@t@@way, 7@@s@@approve-01, 19@@n@@_DATE_, 3@@d@@percentage]
sentence=1	49	_	49	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	in	_	in	IN	O	_	10	_	0	IGNORE	true
19	May_2004	_name_	2004	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	2008	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@explicitanon0@@2008, 10@@t@@way, 7@@s@@approve-01, 5@@c@@country, 5@@n@@_NAME_, 17@@p3@@person, 2@@p@@-, 3@@d@@percentage, 17@@p4@@president, 1@@explicitanon0@@_NUMBER_, 17@@h2@@have-rel-role-91, 15@@m@@job, 13@@l@@handle-01, 11@@p@@person, 11@@n@@_NAME_]
sentence=1	28	_	28	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	vacation	_	vacation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	days	_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
9	in	_	in	RP	O	_	after	_	0	IGNORE	true
10	August_2001,_the_month	_name_	month	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_mod	true
13	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
14	6_August	_name_	August	NNP	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	10	(mod())	17	MOD_mod	true
15	Presidential	presidential	Presidential	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	president	(mod())	17	MOD_mod	true
16	Daily	daily	Daily	NNP	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	17	MOD_mod	true
17	Briefing	briefing	Briefing	NNP	O	(d<root> / --LEX--)	brief-01	()	12	APP_o	true
18	headed	_	head	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
19	"Osama_bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
20	Determined	determined	determine	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	18	MOD_s	true
21	to	_	to	TO	O	_	name	_	0	IGNORE	true
22	Strike	strike	strike	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	US	us	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
24	Targets.	targets.	Targets.	NNP	O	_	_NAME_	_	0	IGNORE	true
25	"	_	"	''	O	_	name	_	0	IGNORE	true

nodealignment=[19@@p@@person, 16@@t@@temporal-quantity, 8@@s@@take-01, 10@@n@@_NAME_, 12@@s@@receive-01, 11@@d@@he, 13@@explicitanon0@@1, 16@@r@@rate-entity-91, 1@@explicitanon0@@_NUMBER_, 18@@s@@head-01, 16@@d@@day, 6@@n@@day, 14@@t@@temporal-quantity, 15@@p@@president, 19@@n@@_NAME_, 17@@d@@brief-01, 5@@p@@vacation-01, 7@@p@@person, 7@@n@@_NAME_, 20@@c@@determine-01, 22@@s@@strike-01, 23@@n@@_NAME_, 23@@c@@country, 3@@explicitanon0@@Number, 14@@y@@10]
sentence=1	500	_	500	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	days	_	day	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	3	MOD_mod	true
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	spent	_	spend	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
9	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
11	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
14	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
15	away	_	away	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	8	APP_o2	true
16	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the_White_House	_name_	House	NNP	O	(l2<root> / location  :name (n / --LEX--))	_NAME_	()	15	APP_op1	true
18	at	_	at	IN	O	_	relative-position	_	0	IGNORE	true
19	his	_	he	PRP$	O	_	mean-01	_	0	IGNORE	true
20	ranch	_	ranch	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	Crawford,	crawford,	crawford,	CD	O	_	mean-01	_	0	IGNORE	true
23	Texas,	texas,	texas,	CD	O	_	and	_	0	IGNORE	true
24	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
25	parents'	_	parents'	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	mean-01	(mod())	26	MOD_mod	true
26	retreat	_	retreat	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_op1	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	Kennebunkport,	kennebunkport,	kennebunkport,	CD	O	_	mean-01	_	0	IGNORE	true
29	Maine,	_name_	maine,	CD	O	_	_NAME_	_	0	IGNORE	true
30	or	_	or	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
31	Camp_David	_name_	David	NNP	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	30	APP_op2	true
32	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	of	_	of	IN	O	_	3	_	0	IGNORE	true
34	1_April_2004	_name_	2004	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	30	MOD_mod	true
35	.	_	.	.	O	_	between	_	0	IGNORE	true

nodealignment=[5@@m@@day, 6@@n@@_NAME_, 8@@b@@spend-02, 6@@p@@person, 1@@explicitanon0@@_NUMBER_, 15@@o@@away, 5@@t2@@temporal-quantity, 3@@explicitanon0@@number, 25@@b@@mean-01, 10@@a@@or, 30@@b@@or, 11@@d@@part, 14@@n@@time, 20@@b@@ranch, 31@@explicitanon0@@_NAME_, 17@@l2@@location, 34@@n@@_DATE_, 5@@m2@@multiple, 31@@u@@url-entity, 17@@n@@_NAME_, 9@@d@@all, 26@@d@@retreat-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	shouldn't	_	shouldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_s	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	question	_	question	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	3	APP_o	true
6	it's	_	it's	PRP	O	_	thing	_	0	IGNORE	true
7	intimidating,	_	intimidating,	NNP	O	_	and	_	0	IGNORE	true
8	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
9	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	20	APP_s	true
10	tell	_	tell	VBP	O	(a<root> / --LEX--  :ARG2 (u<o2>)  :ARG1 (t2<o>)  :ARG0 (t<s>)  :condition-of (c<mod>))	$LEMMA$-01	(mod(), o2(), s(), o())	20	MOD_mod	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	what	_	what	WP	O	_	and	_	0	IGNORE	true
13	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	14	APP_s	true
14	knows	_	know	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
15	about	_	about	IN	O	_	thing	_	0	IGNORE	true
16	Philippines	_name_	Philippines	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_o	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	will	_	will	MD	O	_	thing	_	0	IGNORE	true
19	blush,	_	blush,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	0	ROOT	true
20	thank	_	thank	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	19	APP_o	true
21	god	_	god	UH	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
22	many	_	many	JJ	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	23	APP_s	true
23	thinks	_	think	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o2	true
24	i'm	_	i'm	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	19	MOD_s	true
25	japanese	_name_	japanese	NNS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
26	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	23	MOD_o	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	27	APP_s	true
31	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
32	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	APP_mod	true
33	myself,	_	myself,	NNS	O	_	thing	_	0	IGNORE	true
34	the	_	the	DT	O	_	thing	_	0	IGNORE	true
35	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
36	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
37	talk	_	talk	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_op1	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	32	APP_s	true
39	treat	_	treat	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_op2	true
40	people,	_	people,	NNP	O	_	and	_	0	IGNORE	true
41	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	32	MOD_op1	true
42	the	_	the	DT	O	_	regardless-91	_	0	IGNORE	true
43	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_op2	true
44	i	_	i	PRP	O	_	thing	_	0	IGNORE	true
45	dress,	_	dress,	VBZ	O	_	-	_	0	IGNORE	true
46	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
47	if	_	if	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	19	MOD_s	true
48	you	_	you	PRP	O	_	$LEMMA$	_	19	IGNORE	true
49	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	50	MOD_mod	true
50	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_o	true
51	nasty,	_	nasty,	NNS	O	_	-	_	0	IGNORE	true
52	insulting	_	insult	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	insult-01	(s())	53	MOD_s	true
53	answers	_	answer	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	50	APP_s	true
54	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	58	MOD_mod	true
55	from	_	from	IN	O	_	oppose-01	_	0	IGNORE	true
56	those	_	those	DT	O	_	that	_	0	IGNORE	true
57	undesirable	_	undesirable	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	desire-01	(s())	58	MOD_s	true
58	migrants	_	migrant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_s	true
59	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
60	puttagenius,	_	puttagenius,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
61	caloy,	_	caloy,	NNP	O	_	expressive	_	0	IGNORE	true
62	gro	_	gro	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_op1	true
63	science,	_	science,	NNP	O	_	mean-01	_	0	IGNORE	true
64	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	58	MOD_mod	true
65	irene	_	irene	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	64	APP_op2	true
66	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@p@@this, 37@@d@@talk-01, 5@@t@@thing, 14@@s@@know-01, 50@@s@@want-01, 25@@n@@_NAME_, 65@@n@@_NAME_, 21@@p@@person, 30@@t@@way, 49@@explicitanon0@@-, 62@@d@@gro, 52@@s@@insult-01, 38@@a@@and, 19@@s@@and, 20@@b@@thank-01, 2@@explicitanon0@@-, 5@@d@@question-01, 39@@d@@treat-01, 16@@n@@_NAME_, 16@@c@@country, 25@@c@@country, 47@@s@@cause-01, 13@@d@@person, 1@@d@@You, 64@@a@@and, 10@@a@@tell-01, 23@@s@@think-01, 32@@s@@keep-02, 21@@n@@_NAME_, 43@@d@@way, 24@@s@@person, 57@@explicitanon0@@-, 57@@n@@desire-01, 9@@d@@i, 41@@a@@and, 26@@p@@just, 22@@p@@person, 53@@s@@answer-01, 22@@n@@many, 27@@s@@cause-01, 65@@p@@person, 54@@p@@especially, 3@@s@@ask-01, 58@@d@@migrant]
sentence=1	when	_	when	WRB	O	_	i	_	0	IGNORE	true
2	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	16	APP_s	true
3	watched	_	watch	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
4	werewolf	_	werewolf	NN	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	london	_name_	london	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	(	_	(	-LRB-	O	_	and	_	0	IGNORE	true
8	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	film)	_	film)	NNS	O	_	mean-01	_	0	IGNORE	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
13	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
14	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	i	_	i	PRP	O	_	1	_	0	IGNORE	true
16	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
17	the	_	the	DT	O	_	name	_	0	IGNORE	true
18	yorkshire	_	yorkshire	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	moors	_	moor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	(b<root> / --LEX--  :location-of (h<mod>))	multi-sentence	(mod())	16	MOD_mod	true

nodealignment=[4@@d@@_NAME_, 18@@n@@_NAME_, 13@@p@@only, 6@@n@@_NAME_, 8@@p@@great, 20@@b@@multi-sentence, 2@@d@@i, 6@@c@@city, 16@@s@@see-01, 3@@t@@watch-01, 19@@d@@moor]
sentence=1	The	the	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_s	true
3	abandoned	_	abandon	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	9	APP_op1	true
4	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
5	farms	_	farm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :poss (p<poss>)  :op2 (m<op2>))	$LEMMA$	(op2(), op1(), poss())	3	APP_o	true
7	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	sites	_	site	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	ground	_	ground	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	stood	_	stand	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	on	_	on	IN	O	_	contrast-01	_	0	IGNORE	true
15	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_op2	true
16	moorland	_	moorland	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@p@@religious, 13@@s@@stand-01, 6@@a@@and, 8@@d@@site, 16@@d@@moorland, 15@@s@@become-01, 5@@d@@farm, 9@@a@@and, 3@@l@@abandon-01, 2@@d@@person, 11@@d@@ground]
sentence=1	So	so	so	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	17	MOD_s	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	17	APP_op1	true
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	VERY	very	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	true
7	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	7	MOD_mod	true
10	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	Xmas	xmas	Xmas	NNP	O	(n3<root> / --LEX--  :name-of (f / festival  :time-of (t<mod>)))	_NAME_	(mod())	15	MOD_mod	true
15	gifts	_	gift	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	for	_	for	IN	O	_	thing	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
18	one	_	one	CD	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	17	APP_op3	true
19	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	17	MOD_s	true
20	them	_	they	PRP	O	_	person	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
23	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	24	MOD_s	true
24	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	17	APP_op2	true
25	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[9@@g@@person, 18@@p@@person, 24@@f@@friend, 23@@b2@@good-02, 2@@d@@i, 11@@s@@want-01, 24@@h@@have-rel-role-91, 6@@s@@long-03, 19@@s@@include-91, 3@@s@@have-03, 5@@s@@very, 1@@s@@cause-01, 13@@s@@make-01, 15@@d@@gift, 17@@a@@and, 23@@m@@most, 14@@f@@festival, 14@@n3@@_NAME_, 24@@p@@person, 7@@d@@list, 18@@n@@one]
sentence=1	its	_	its	PRP$	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	it	(s(), o())	6	MOD_o	true
2	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
4	craft	_	craft	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	project.....i	_	project.....i	CD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_o	true
9	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	u	_	u	PRP	O	(d<root> / --LEX--)	thing	()	14	APP_s	true
13	would	_	would	MD	O	_	thing	_	0	IGNORE	true
14	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
15	icing...	_	icing...	XX	O	_	_NAME_	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@it, 12@@d@@thing, 11@@t@@way, 1@@s@@it, 4@@p@@craft, 14@@s@@use-01, 5@@explicitanon0@@-, 6@@c@@want-01, 8@@s@@use-01]
sentence=1	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	17	MOD_s	true
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
3	bit	_	bit	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	searching	_	search	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_o	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	discover	_	discover	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	POP	_name_	pop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_dom	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	14	MOD_mod	true
12	PoP	pop	pop	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
13	-	_	-	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	plaster	_	plaster	NN	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	17	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
18	yes	_	yes	UH	O	_	$LEMMA$	_	0	IGNORE	true
19	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	true
22	will	_	will	MD	O	_	thing	_	0	IGNORE	true
23	slow	_	slow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-down-03	(s())	17	APP_op2	true
24	way	_	way	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	down	_	down	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
26	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
29	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	30	MOD_mod	true
30	exposed	_	expose	VBN	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
31	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
32	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
34	in	_	in	NN	O	_	multi-sentence	_	0	IGNORE	true
35	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	true
36	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	17	MOD_o	true
37	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op3	true
38	are	_	be	VBP	O	_	person	_	0	IGNORE	true
39	building	_	build	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-up-05	(mod(), s())	36	MOD_mod	true
40	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
41	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
42	("the	_	("the	UH	O	_	see-01	_	0	IGNORE	true
43	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
44	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op4	true
45	would	_	would	MD	O	_	be-located-at-91	_	0	IGNORE	true
46	icing")	_	icing")	VB	O	_	shit	_	0	IGNORE	true
47	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
48	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
49	sculpting,	_	sculpting,	NNP	O	_	and	_	0	IGNORE	true
50	which	_	which	WDT	O	_	i	_	0	IGNORE	true
51	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
52	rather	_	rather	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	59	MOD_mod	true
53	uncommon,	_	uncommon,	NFP	O	_	contrast-01	_	0	IGNORE	true
54	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
55	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	67	APP_op1	true
56	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
57	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	58	MOD_s	true
58	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
59	damp	_	damp	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_o	true
60	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
61	order	_	order	NN	O	_	cause-01	_	0	IGNORE	true
62	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
63	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	55	MOD_mod	true
64	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	66	MOD_mod	true
65	unset	_	unset	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	66	MOD_s	true
66	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_s	true
67	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_s	true
68	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
69	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	67	APP_op2	true
70	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
71	wet	_	wet	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	APP_s	true
72	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
73	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	71	APP_s	true
74	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
75	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
76	will	_	will	MD	O	_	thing	_	0	IGNORE	true
77	be	_	be	VB	O	_	person	_	0	IGNORE	true
78	adding	_	add	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	73	APP_mod	true
79	plaster	_	plaster	NN	O	_	$LEMMA$	_	0	IGNORE	true
80	"mud	_	"mud	NNP	O	_	$LEMMA$	_	0	IGNORE	true
81	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[30@@h@@expose-01, 44@@d@@you, 36@@s@@have-condition-91, 29@@explicitanon0@@-, 59@@d@@damp, 24@@t@@way, 25@@a@@down, 63@@s@@add-02, 66@@d@@plaster, 7@@s@@discover-01, 9@@d@@pop, 3@@explicitanon0@@bit, 32@@d@@air, 12@@s@@pop-01, 73@@b@@area, 23@@s@@slow-down-03, 14@@r@@_NAME_, 69@@s@@obligate-01, 52@@s@@rather, 11@@p@@probable, 41@@d@@plaster, 65@@s@@unset, 55@@s@@keep-04, 37@@d@@you, 67@@a@@or, 78@@d@@add-02, 19@@d@@plaster, 71@@s@@wet-01, 1@@s@@take-10, 5@@d@@search-01, 57@@s@@set, 39@@o@@build-up-05, 58@@d@@plaster, 17@@a@@and, 64@@explicitanon0@@more]
sentence=1	Cheapest	_name_	cheap	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	cheap-02	(s())	2	MOD_s	true
2	surgeons	_	surgeon	NNS	O	(d<root> / --LEX--)	surgery-01	()	9	APP_s	true
3	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
4	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	clinic	_	clinic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
10	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	9	APP_op2	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
18	for.	_	for.	JJ	O	_	and	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@a@@and, 14@@d@@skill, 11@@explicitanon0@@-, 3@@s@@work-01, 15@@d@@you, 2@@d@@surgery-01, 7@@p@@small, 1@@m@@most, 12@@s@@have-03, 6@@p@@some, 1@@b2@@cheap-02, 8@@d@@clinic, 17@@s@@look-01]
sentence=1	It's	it's	it's	PRP	O	_	contrast-01	_	0	IGNORE	true
2	fine	_	fine	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	0	ROOT	true
3	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
4	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	make	_	make	VB	O	_	contrast-01	_	0	IGNORE	true
6	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	en$LEMMA$-01	(s())	2	APP_s	true
7	that	_	that	IN	O	_	you	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	APP_s	true
10	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	cage	_	cage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_mod	true
12	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	kept	_	keep	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
16	warm	_	warm	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@b@@room, 11@@d@@cage, 16@@s@@warm-01, 6@@s@@ensure-01, 15@@s@@keep-01, 2@@s@@fine-04, 4@@p@@just]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	phones	_	phone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
4	networks	_	network	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	compatible,	_	compatible,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	7	APP_s	true
7	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
9	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	7	MOD_s	true
11	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	wouldn't	_	wouldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	work	_	work	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	10	APP_o	true
14	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	have,	_	have,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	7	APP_o	true
19	say,	_	say,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	-	(s(), o())	7	MOD_o	true
20	a	_	a	DT	O	_	-	_	0	IGNORE	true
21	cheap	_	cheap	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
22	cell	_	cell	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	phone	_	phone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
24	company.	_	company.	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@and, 10@@s@@reason, 9@@p@@only, 3@@a@@and, 18@@s@@-, 22@@p@@cell, 17@@d@@you, 23@@d@@phone, 12@@explicitanon0@@-, 13@@s@@work-09, 2@@d@@phone, 7@@s@@cause-01, 4@@d@@network, 21@@s@@cheap-02, 19@@s@@-, 11@@d@@it]
sentence=1	Is	is	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	legs	_	leg	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	7	APP_op1	true
7	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
9	it	_	it	PRP	O	_	i	_	0	IGNORE	true
10	conceivable	_	conceivable	JJ	O	(f<root> / --LEX--  :ARG1 (p<o>))	deny-01	(o(s()))	7	APP_op2	true
11	that	_	that	IN	O	_	and	_	0	IGNORE	true
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	10	APP_o	true
14	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	13	APP_o	true
15	around	_	around	RB	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
16	for	_	for	IN	O	_	and	_	0	IGNORE	true
17	another_15_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	14	MOD_mod	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
20	claimed	_	claim	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
21	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	this	_	0	IGNORE	true
25	sources	_	source	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
26	ive	_	ive	RB	O	_	$LEMMA$	_	0	IGNORE	true
27	been	_	be	VBN	O	_	person	_	0	IGNORE	true
28	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
29	at	_	at	IN	O	_	thing	_	0	IGNORE	true
30	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	7	MOD_mod	true

nodealignment=[5@@p@@last, 25@@d@@source, 20@@s@@claim-01, 7@@a@@or, 6@@s@@leg, 22@@explicitanon0@@some, 28@@s@@look-01, 2@@d@@he, 17@@b@@_NAME_, 30@@explicitanon0@@interrogative, 10@@f@@deny-01, 13@@f@@possible-01, 14@@s@@be-located-at-91, 15@@d@@around]
sentence=1	im	_	im	UH	O	(d<root> / --LEX--)	i	()	3	APP_s	true
2	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	worried	_	worried	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
4	about	_	about	IN	O	_	say-01	_	0	IGNORE	true
5	damaging	_	damage	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	tank	_	tank	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	MOD_poss	true
10	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	on	_	on	IN	O	_	thing	_	0	IGNORE	true
12	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
13	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_s	true
15	prop	_	prop	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-01	(s())	14	APP_s	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
18	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
21	anyway	_	anyway	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@damage-01, 2@@explicitanon0@@-, 1@@d@@i, 3@@c@@worried-02, 21@@p@@anyway, 14@@s@@possible-01, 12@@s@@cause-01, 9@@m@@tank, 20@@d@@surface, 7@@d@@surface, 15@@s@@prop-up-01]
sentence=1	When	when	when	WRB	O	(n<root> / --LEX--  :time-of (p<mod>))	amr-unknown	(mod())	7	MOD_mod	true
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	amr-unknown	_	0	IGNORE	true
4	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	about	_	about	IN	O	_	thing	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	ship	_	ship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	sinking	_	sink	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
12	?	_	?	.	O	_	concern-02	_	0	IGNORE	true

nodealignment=[6@@d@@you, 4@@p@@last, 10@@d@@ship, 11@@s@@sink-01, 7@@s@@hear-01, 1@@n@@amr-unknown]
sentence=1	Once	once	once	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	troops	_	troop	NNS	O	(d<root> / --LEX--)	troop	()	4	APP_s	true
4	started	_	start	VBD	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	18	MOD_mod	true
5	cleaning	_	clean	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	weapon	_	weapon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	properly	_	properly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	proper	(mod())	5	MOD_mod	true
9	(even	_	(even	NNP	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
11	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
12	dirtier	_	dirty	JJR	O	(m2<root> / more  :degree-of (l / --LEX--  :ARG1 (m<s>)))	light-06	(s())	14	MOD_s	true
13	powder)	_	powder)	IN	O	_	cause-01	_	0	IGNORE	true
14	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	18	MOD_mod	true
15	Vietnam	_name_	Vietnam	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	era	_	era	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	M-16	_name_	M-16	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
18	turned	_	turn	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-11	(s(), o())	0	ROOT	true
19	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
20	to	_	to	TO	O	_	and	_	0	IGNORE	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	weapon	_	weapon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
25	for	_	for	IN	O	_	have-purpose-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	purpose	_	purpose	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	was	_	be	VBD	O	_	person	_	0	IGNORE	true
30	being	_	be	VBG	O	_	person	_	0	IGNORE	true
31	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
32	for	_	for	IN	O	_	thing	_	0	IGNORE	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@p@@product, 16@@p@@era, 27@@o@@purpose, 15@@n@@_NAME_, 31@@s@@use-01, 5@@s@@clean-01, 4@@s2@@start-01, 14@@p@@name, 15@@c@@country, 3@@d@@troop, 23@@s@@good-02, 12@@m2@@more, 18@@s@@turn-out-11, 24@@d@@weapon, 8@@t@@proper, 17@@n@@_NAME_, 9@@t@@(even, 12@@l@@light-06, 7@@d@@weapon]
sentence=1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	3	MOD_mod	true
3	discovered	_	discover	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
4	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
5	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	was	_	be	VBD	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), s(), o())	13	MOD_mod	true
9	down	_	down	RB	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	there,	_	there,	NNP	O	_	and	_	0	IGNORE	true
11	they're	_	they're	NNP	O	_	multi-sentence	_	0	IGNORE	true
12	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	nice)	_	nice)	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	publication-91	(s(), o())	0	ROOT	true
14	www.kaffeeeis.co.n	_	www.kaffeeeis.co.n	JJ	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
15	z	_	z	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true

nodealignment=[3@@s@@discover-01, 8@@b@@be-located-at-91, 15@@p@@_NAME_, 4@@d@@they, 5@@p@@last, 14@@d@@_NAME_, 12@@s@@very, 1@@p@@just, 9@@d@@down, 7@@d@@i, 2@@n@@recent, 13@@s@@publication-91]
sentence=1	Given	given	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	chance	_	chance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	APP_s	true
4	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
5	cat	_	cat	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_s	true
6	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_s	true
7	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_s	true
9	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	true
10	kidney,	_	kidney,	.	O	_	$LEMMA$	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
12	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
13	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	16	MOD_s	true
16	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	MOD_s	true
17	scenario	_	scenario	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
18	would	_	would	MD	O	_	thing	_	0	IGNORE	true
19	be	_	be	VB	O	_	person	_	0	IGNORE	true
20	kidney	_	kidney	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
21	disease,	_	disease,	NNS	O	_	include-91	_	0	IGNORE	true
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
23	untreated	_	untreate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	lead	_	lead	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	20	MOD_s	true
26	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
27	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
28	renal	_	renal	JJ	O	(d<root> / --LEX--)	kidney	()	29	APP_s	true
29	failure	_	failure	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	fail-01	(s())	25	APP_o	true
30	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[15@@m@@most, 24@@s@@possible-01, 11@@d@@i, 7@@p@@only, 3@@s@@chance-02, 15@@b2@@bad-07, 1@@s@@give-01, 8@@s@@have-03, 28@@d@@kidney, 4@@d@@your, 27@@s@@possible-01, 9@@explicitanon0@@1, 6@@s@@possible-01, 16@@s@@case-04, 29@@s@@fail-01, 23@@s@@untreate-01, 20@@d@@kidney, 13@@s@@think-01, 17@@d@@scenario, 25@@t@@lead-03, 5@@m@@cat]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	began	_	begin	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	APP_op1	true
7	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
8	research	_	research	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_o	true
9	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	1	MOD_mod	true
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
11	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	_	1	_	0	IGNORE	true
13	applied,	_	applied,	VBZ	O	_	-	_	0	IGNORE	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	minimum	_	minimum	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	score	_	score	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_s	true
17	did	_	do	VBD	O	_	-	_	0	IGNORE	true
18	change	_	change	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op2	true
19	once	_	once	RB	O	_	$LEMMA$	_	0	IGNORE	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@score-01, 6@@c@@begin-01, 8@@s@@research-01, 5@@d@@i, 15@@p@@minimum, 1@@a@@and, 18@@s@@change-01, 9@@d@@and]
sentence=1	Your	your	Your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
2	application	_	application	NN	O	(m<root> / --LEX--  :poss (i<poss>))	apply-01	(poss())	5	APP_s	true
3	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	5	APP_o	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	evaluated	_	evaluate	VBN	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	on	_	on	IN	O	_	and	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	criteria,	_	criteria,	NNP	O	_	and	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
13	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	5	MOD_s	true
14	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	as	_	as	IN	O	_	equal	_	0	IGNORE	true
16	"cast	_	"cast	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	in	_	in	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	name	(mod())	5	MOD_mod	true
18	steel"	_	steel"	NFP	O	_	and	_	0	IGNORE	true
19	as	_	as	IN	O	_	equal	_	0	IGNORE	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	points	_	point	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@b@@name, 11@@explicitanon0@@-, 5@@s@@evaluate-01, 21@@p@@point, 16@@s@@"cast-01, 3@@d@@person, 13@@s@@include-91, 1@@d@@Your, 4@@p@@still, 12@@p@@all, 2@@m@@apply-01, 8@@explicitanon0@@number]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	photo	_	photo	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
4	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	couch,	_	couch,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	pillow	_	pillow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
9	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	resting	_	rest	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	on	_	on	IN	O	_	and	_	0	IGNORE	true
13	clashes	_	clash	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	shot	_	shot	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@d@@she, 15@@d@@everything, 13@@s@@clash-01, 16@@p@@else, 8@@d@@pillow, 19@@b@@shot, 11@@s@@rest-01, 3@@b@@photo]
sentence=1	2.	_	2.	LS	O	_	expressive	_	0	IGNORE	true
2	Short	short	short	JJ	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-06	(o(s()))	12	MOD_s	true
3	of	_	of	IN	O	_	except-01	_	0	IGNORE	true
4	chartering	_	charter	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	true
6	own	_	own	JJ	O	_	person	_	0	IGNORE	true
7	ship	_	ship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	MOD_op1	true
9	crew,	_	crew,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
11	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	see	_	see	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_o	true
17	customize	_	customize	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	16	APP_s	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	own	_	own	JJ	O	_	person	_	0	IGNORE	true
20	itinerary	_	itinerary	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	17	APP_o	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[20@@m@@itinerary, 17@@l@@customize-01, 8@@a@@and, 16@@s@@possible-01, 13@@p@@any, 14@@t@@way, 2@@h@@short-06, 11@@explicitanon0@@-, 7@@d@@ship, 5@@d@@your, 15@@d@@you, 4@@s@@charter-01, 12@@b@@see-01, 10@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
2	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	possible-01	(s(), o())	0	ROOT	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
4	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	8	APP_op1	true
5	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
6	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
7	country	_	country	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_s	true
9	demand	_	demand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op2	true
10	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
11	slaughter	_	slaughter	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	9	APP_o	true
13	sell	_	sell	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
14	an	_	an	DT	O	_	thing	_	0	IGNORE	true
15	animal	_	animal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	meat	_	meat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
20	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
21	prefer	_	prefer	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	MOD_s	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	eat	_	eat	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@sell-01, 6@@d@@they, 3@@explicitanon0@@-, 12@@a@@and, 8@@a@@and, 21@@c@@prefer-01, 19@@t@@way, 23@@s@@eat-01, 4@@g@@go-02, 2@@s@@possible-01, 10@@d@@they, 15@@d@@animal, 7@@m@@country, 1@@d@@i, 11@@s@@slaughter-01, 17@@d@@meat, 9@@s@@demand-01]
sentence=1	Last	last	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	got	_	get	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	medium	_	medium	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	true
7	rat	_	rat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
14	snake	_	snake	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	handled	_	handle	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	APP_op2	true
16	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	easily	_	easily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	easy-05	(s())	15	MOD_s	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@handle-01, 12@@a@@and, 17@@s@@easy-05, 14@@d@@snake, 3@@d@@i, 4@@t@@get-01, 7@@d@@rat, 6@@s@@medium-03, 11@@d@@girl, 1@@p@@last]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	is	_	be	VBZ	O	_	and	_	0	IGNORE	true
3	kind	_	kind	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	5	MOD_mod	true
4	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
5	hate	_	hate	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	walking	_	walk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_o	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	leash,	_	leash,	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
9	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	18	MOD_mod	true
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
12	put	_	put	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_s	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	leash	_	leash	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	on,	_	on,	NFP	O	_	and	_	0	IGNORE	true
16	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	will	_	will	MD	O	_	and	_	0	IGNORE	true
18	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	MOD_s	true
19	to	_	to	TO	O	_	and	_	0	IGNORE	true
20	bite	_	bite	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_o	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@bite-01, 18@@c@@try-01, 11@@d@@i, 3@@s@@kind-of, 8@@explicitanon0@@-, 6@@s@@walk-01, 9@@r@@rate-entity-91, 5@@c@@hate-01, 12@@s@@put-01, 1@@d@@He]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
3	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
6	let	_	let	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
7	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	walk	_	walk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
12	with	_	with	IN	O	_	i	_	0	IGNORE	true
13	leash	_	leash	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[6@@f@@let-01, 5@@f@@possible-01, 3@@p@@any, 14@@explicitanon0@@interrogative, 11@@d@@walk-01, 8@@s@@know-01, 13@@t@@leash, 4@@d@@way]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	13	MOD_mod	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
5	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
6	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	will	_	will	MD	O	_	i	_	0	IGNORE	true
10	rush	_	rush	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_op2	true
14	jump	_	jump	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	13	APP_op2	true
15	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	them,	_	them,	NNP	O	_	i	_	0	IGNORE	true
17	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	listen	_	listen	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
19	to	_	to	IN	O	_	i	_	0	IGNORE	true
20	me	_	I	PRP	O	_	i	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@person, 2@@r@@rate-entity-91, 5@@s@@see-01, 14@@s@@jump-03, 4@@d@@he, 6@@p@@some, 1@@a@@and, 10@@t@@rush-01, 13@@a@@and, 7@@d@@one, 18@@s@@listen-01, 17@@explicitanon0@@-]
sentence=1	Last	last	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
2	thing	_	thing	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	possible-01	(s(), o())	0	ROOT	true
4	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	3	MOD_mod	true
5	time	_	time	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_s	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	18	APP_s	true
7	sit	_	sit	VBP	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	a	_	a	DT	O	_	person	_	0	IGNORE	true
10	chair	_	chair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
12	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
13	higher	_	high	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	high-02	(s())	12	MOD_s	true
14	than	_	than	IN	O	_	more	_	0	IGNORE	true
15	him,	_	him,	NNS	O	_	and	_	0	IGNORE	true
16	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
17	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
18	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
19	to	_	to	TO	O	(d<root> / --LEX--)	and	()	3	APP_o	true
20	jump	_	jump	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	18	APP_o	true
21	on,	_	on,	RB	O	_	and	_	0	IGNORE	true
22	if	_	if	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_s	true
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	can't,	_	can't,	XX	O	_	and	_	0	IGNORE	true
25	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
27	bark	_	bark	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
28	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	the	_	the	DT	O	_	he	_	0	IGNORE	true
30	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	27	MOD_mod	true
32	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	let	_	let	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op1	true
34	him	_	he	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	3	MOD_s	true
35	get	_	get	VB	O	(d<root> / --LEX--)	$LEMMA$-05	()	33	APP_s	true
36	on,	_	on,	NFP	O	_	multi-sentence	_	0	IGNORE	true
37	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	40	APP_o	true
38	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	34	APP_o	true
39	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
40	do	_	do	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	38	APP_s	true
41	with	_	with	IN	O	_	-	_	0	IGNORE	true
42	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o2	true
43	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[39@@d@@i, 18@@c@@try-01, 1@@p@@last, 30@@n@@time, 6@@d@@i, 33@@s@@let-01, 10@@d@@chair, 42@@d@@this, 13@@m@@more, 7@@b@@sit-01, 13@@b@@high-02, 11@@a@@or, 38@@s@@recommend-01, 20@@s@@jump-03, 12@@d@@something, 16@@d@@he, 40@@b@@do-02, 28@@p@@all, 34@@s@@he, 19@@d@@and, 31@@w@@until, 4@@r@@rate-entity-91, 27@@d@@bark-01, 22@@s@@cause-01, 3@@s@@possible-01, 5@@s@@time, 37@@d@@amr-unknown, 35@@d@@get-05]
sentence=1	That's	that's	that's	DT	O	_	resemble-01	_	0	IGNORE	true
2	kind	_	kind	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	5	MOD_mod	true
3	of	_	of	RB	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	0	ROOT	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
7	goes..lol	_	goes..lol	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	5	APP_mod	true
8	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[2@@s@@kind-of, 7@@r@@_NAME_, 5@@t@@way, 6@@d@@it]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	in	_	in	IN	O	_	i	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	meantime,	_	meantime,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
5	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	6	MOD_mod	true
6	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
7	jeans	_	jean	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
9	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	MOD_s	true
10	sleeves	_	sleeve	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
11	anytime	_	anytime	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	you'll	_	you'll	PRP	O	_	i	_	0	IGNORE	true
13	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	interacting	_	interact	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	kittens	_	kitten	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@a@@and, 17@@d@@kitten, 14@@s@@interact-01, 6@@s@@recommend-01, 7@@d@@jean, 9@@s@@long-03, 5@@s@@high, 11@@n@@anytime, 10@@d@@sleeve, 1@@s@@contrast-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	buying	_	buy	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	true
4	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
5	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
6	unlimited	_	unlimited	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	Europass	_name_	Europass	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_s	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
9	travelling	_	travel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_op2	true
10	anywhere	_	anywhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	EU	_name_	EU	NNP	O	(n2<root> / --LEX--  :name-of (o / organization  :location-of (s<mod>)))	_NAME_	(mod())	10	MOD_mod	true
14	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	desires	_	desire	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[6@@p@@unlimited, 9@@s@@travel-01, 7@@d@@_NAME_, 15@@d@@heart, 5@@s@@single-02, 16@@s@@desire-01, 8@@a@@and, 1@@d@@i, 10@@d@@anywhere, 3@@s@@buy-01, 2@@s@@recommend-01, 13@@o@@organization, 13@@n2@@_NAME_]
sentence=1	the	_	the	DT	O	_	he	_	0	IGNORE	true
2	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	sleep	_	sleep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	in	_	in	RP	O	_	i	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	request-confirmation-91	_	0	IGNORE	true
7	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	24	MOD_s	true
8	(seeing	_	(seeing	NFP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	relaxed	_	relax	VBD	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
12	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
13	you	_	you	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	24	MOD_s	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	sleeping	_	sleep	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
16	will	_	will	MD	O	_	thing	_	0	IGNORE	true
17	send	_	send	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
20	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	OK),	_name_	ok),	CD	O	_	and	_	0	IGNORE	true
24	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
25	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
26	will	_	will	MD	O	_	thing	_	0	IGNORE	true
27	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-09	(s())	24	APP_o	true
28	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
29	as	_	as	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal	(s())	27	MOD_s	true
30	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-09	(mod())	27	MOD_mod	true
31	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[15@@d@@sleep-01, 11@@b@@relax-01, 19@@d@@message-01, 21@@d@@everything, 7@@m@@most, 10@@s@@so, 25@@d@@other, 17@@s@@send-01, 4@@s@@sleep-01, 28@@p@@just, 24@@s@@contrast-01, 2@@d@@room, 3@@d@@you, 7@@b2@@good-02, 29@@s@@equal, 13@@s@@you, 8@@s@@(seeing-01, 30@@p@@well-09, 27@@s@@work-09]
sentence=1	extend	_	extend	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	1	APP_s	true
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	out	_	out	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	APP_mod	true
7	each	_	each	DT	O	(r<root> / --LEX--  :ARG3 (t<s>)  :frequency-of (t2<mod>))	$LEMMA$	(mod(), s())	6	MOD_mod	true
8	day,	_	day,	NN	O	_	shit	_	0	IGNORE	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	for	_	for	IN	O	_	or	_	0	IGNORE	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	15	MOD_mod	true
13	month,	_	month,	CD	O	_	$LEMMA$	_	0	IGNORE	true
14	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	put	_	put	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
16	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	at	_	at	IN	O	_	i	_	0	IGNORE	true
21	night,	_	night,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
22	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	feels	_	feel	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
25	safe	_	safe	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
27	sleep	_	sleep	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@feel-01, 27@@d@@sleep-01, 4@@d@@he, 19@@d@@room, 1@@s@@extend-01, 15@@s@@put-01, 14@@n@@always, 9@@s@@contrast-01, 7@@r@@each, 12@@o@@ordinal-entity, 3@@b@@time, 25@@s@@safe-01, 12@@explicitanon0@@1, 6@@s@@out]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	done	_	do	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
4	Yoga	yoga	Yoga	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	riders	_	rider	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	for	_	for	IN	O	_	or	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	while,	_	while,	NNS	O	_	and	_	0	IGNORE	true
10	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	3	MOD_mod	true
11	20_minute	_name_	minute	NN	O	(d<root> / distance-quantity  :unit (i / --LEX--)  :mod-of (p2<mod>))	minute	(mod())	12	MOD_mod	true
12	routine	_	routine	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	3	MOD_s	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	found	_	find	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
16	YouTube	_name_	YouTube	NNP	O	(p<root> / publication  :name (n / --LEX--)  :medium-of (u<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	(I	(i	(I	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	think	_	think	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	MOD_s	true
19	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
20	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	APP_o	true
21	"Yoga	"yoga	"Yoga	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
23	horse	_	horse	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
25	riding"	_	riding"	NNS	O	_	and	_	0	IGNORE	true
26	hosted	_	host	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
27	by	_	by	IN	O	_	and	_	0	IGNORE	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	man)	_	man)	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	helped	_	help	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	42	APP_s	true
32	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
33	noticing	_	notice	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
34	slight	_	slight	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	differences	_	difference	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	33	APP_s	true
36	in	_	in	IN	O	_	i	_	0	IGNORE	true
37	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
38	balance	_	balance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	35	APP_s	true
40	weight	_	weight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
41	distribution	_	distribution	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	distribute-01	(s())	39	APP_op2	true
42	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	3	APP_o2	true
43	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	42	MOD_mod	true
44	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	47	MOD_s	true
45	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
46	the	_	the	DT	O	_	thing	_	0	IGNORE	true
47	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	42	APP_o	true
48	I	i	I	PRP	O	_	1	_	0	IGNORE	true
49	use	_	use	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_mod	true
50	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
51	legs	_	leg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op1	true
52	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_s	true
53	back	_	back	RB	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op2	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[39@@a@@and, 14@@s@@find-01, 6@@o@@rider, 1@@d@@i, 12@@s@@routine, 16@@p@@publication, 20@@s@@call-01, 24@@p@@back, 49@@s@@use-01, 23@@p@@horse, 26@@s@@host-01, 41@@s@@distribute-01, 42@@s@@contrast-01, 21@@d@@"Yoga, 51@@d@@leg, 16@@n@@_NAME_, 31@@s@@help-01, 11@@i@@minute, 4@@d@@Yoga, 11@@d@@distance-quantity, 35@@s@@differ-02, 52@@a@@and, 44@@s@@real-04, 10@@explicitanon0@@3, 3@@b@@do-02, 43@@explicitanon0@@-, 53@@d@@back, 18@@c@@think-01, 34@@p@@slight, 47@@t@@way, 40@@d@@weight, 33@@s@@notice-01, 17@@b@@(I, 38@@d@@balance]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
3	ABSOLUTELY	absolutely	absolutely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	absolute	(mod())	4	MOD_mod	true
4	call	_	call	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_s	true
5	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	veterinarian	_	veterinarian	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	4	APP_o	true
7	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	immediately	_	immediately	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	immediate	(mod())	4	MOD_mod	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	clarify	_	clarify	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-10	(mod(), s(), o())	4	MOD_mod	true
11	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
14	questions	_	question	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
15	about	_	about	IN	O	_	and	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@n@@immediate, 1@@d@@You, 10@@s@@clarify-10, 11@@d@@anything, 3@@t@@absolute, 6@@h@@have-rel-role-91, 6@@f@@veterinarian, 7@@p@@back, 2@@s@@recommend-01, 6@@p@@person, 4@@s@@call-02, 14@@s@@question-01]
sentence=1	Unfair	unfair	unfair	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	fair-01	(s())	13	APP_s	true
2	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	1	MOD_o	true
6	boys	_	boy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	APP_s	true
9	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	of	_	of	RB	O	_	cause-01	_	0	IGNORE	true
12	handicap,	_	handicap,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	that's	_	that's	PRP	O	_	person	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	APP_o	true
17	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
18	own	_	own	JJ	O	_	cause-01	_	0	IGNORE	true
19	rules	_	rule	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	20	APP_s	true
20	work	_	work	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	16	APP_mod	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@d@@our, 16@@t@@way, 1@@explicitanon0@@-, 20@@s@@work-09, 12@@p@@handicap,, 4@@d@@girl, 6@@d@@boy, 8@@s@@have-03, 5@@s@@cause-01, 9@@p@@that, 10@@d@@kind, 7@@explicitanon0@@-, 19@@m@@rule-01, 13@@s@@contrast-01, 1@@p@@fair-01]
sentence=1	Your	your	Your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	answer	_	answer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_s	true
3	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
5	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	remind	_	remind	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
8	me	_	I	PRP	O	_	i	_	0	IGNORE	true
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	I'm	i'm	I'm	NNS	O	_	i	_	0	IGNORE	true
11	going	_	go	VBG	O	_	say-01	_	0	IGNORE	true
12	to	_	to	TO	O	_	and	_	0	IGNORE	true
13	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	$25,000	_	$25,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	16	MOD_mod	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	debt	_	debt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
17	by	_	by	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	I'm	i'm	I'm	NNPS	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	dollar	(mod(), s(), o())	6	MOD_mod	true
21	22	_	22	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	20	APP_s	true
22	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[14@@explicitanon0@@_NUMBER_, 1@@d@@Your, 21@@t@@temporal-quantity, 16@@d@@debt, 20@@b@@dollar, 2@@s@@answer-01, 4@@s@@do-02, 5@@d@@anything, 17@@n@@by, 7@@s@@remind-01, 6@@s@@contrast-01, 3@@explicitanon0@@-, 21@@explicitanon0@@_NUMBER_]
sentence=1	I've	i've	I've	NNP	O	_	name	_	0	IGNORE	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	considered	_	consider	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	APP_s	true
4	becoming	_	become	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
5	a	_	a	DT	O	_	you	_	0	IGNORE	true
6	teacher,	_	teacher,	CD	O	_	shit	_	0	IGNORE	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	it's	_	it's	PRP$	O	_	person	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
13	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-06	(s())	7	APP_o	true
14	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
15	for	_	for	IN	O	_	name	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@also, 9@@explicitanon0@@-, 4@@d@@become-01, 7@@s@@contrast-01, 3@@s@@consider-02, 13@@s@@cut-out-06, 11@@d@@job]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
5	you're	_	you're	PRP$	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	overseas	_	overseas	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	you'll	_	you'll	PRP	O	_	name	_	0	IGNORE	true
8	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	racking	_	rack	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
10	up	_	up	RP	O	_	-	_	0	IGNORE	true
11	interest	_	interest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
12	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[2@@p@@all, 3@@p@@that, 6@@d@@overseas, 4@@b@@time, 1@@a@@and, 9@@s@@rack-01, 11@@d@@interest-01]
sentence=1	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	3	APP_s	true
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
3	tried	_	try	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
4	EVERYTHING	everything	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	i	_	i	PRP	O	_	do-02	_	0	IGNORE	true
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	MOD_s	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-04	(mod(), s(), o())	3	MOD_mod	true
9	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	eat	_	eat	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
13	he	_	he	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	refuses	_	refuse	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@d@@everything, 14@@d@@refuse-01, 8@@s@@get-04, 11@@d@@eat-01, 13@@p@@he, 1@@d@@i, 3@@s@@try-01, 12@@s@@contrast-01, 6@@s@@possible-01]
sentence=1	the	_	the	DT	O	_	he	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	5	MOD_mod	true
3	night	_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
4	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	16	APP_s	true
5	brought	_	bring	VBD	O	(a<root> / --LEX--  :ARG2 (u<o2>)  :ARG1 (t2<o>)  :ARG0 (t<s>)  :condition-of (c<mod>))	$LEMMA$-01	(mod(), o2(), s(), o())	16	MOD_mod	true
6	her	_	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
8	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
9	did	_	do	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	sniffing	_	sniffing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	16	APP_op1	true
12	under	_	under	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	door	_	door	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-14	(s())	16	APP_op2	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
20	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@door, 5@@a@@bring-01, 11@@s@@sniffing-02, 7@@d@@home, 15@@d@@thing, 3@@d@@date-entity, 2@@explicitanon0@@1, 16@@a@@and, 4@@d@@i, 12@@b@@under, 2@@o@@ordinal-entity, 3@@m@@night, 17@@s@@leave-14, 6@@d@@she]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_s	true
3	rejected	_	reject	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_op1	true
4	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
5	attempt	_	attempt	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_o	true
6	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
7	topple	_	topple	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	government,	_	government,	NNS	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	all	_	all	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	intents	_	intent	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	10	MOD_mod	true
15	purposes	_	purpose	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	military	_	military	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
19	(and	_	(and	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	ARVN)	arvn)	arvn)	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	handed	_	hand	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	APP_op2	true
23	Johnson	_name_	Johnson	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_o2	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	victory	_	victory	NN	O	(d<root> / --LEX--)	win-01	()	22	APP_o	true
26	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	had	_	have	VBD	O	_	person	_	0	IGNORE	true
28	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
29	them	_	they	PRP	O	_	person	_	0	IGNORE	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	achieve	_	achieve	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
32	within	_	within	IN	O	_	conform-01	_	0	IGNORE	true
33	the	_	the	DT	O	_	event	_	0	IGNORE	true
34	time-frame	_	time-frame	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
35	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	ordered	_	order	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
37	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[25@@d@@win-01, 2@@d@@person, 17@@c@@country, 23@@p@@person, 18@@d@@military, 31@@s@@achieve-01, 23@@n@@_NAME_, 28@@s@@order-01, 14@@a@@and, 15@@d@@purpose, 36@@s@@order-01, 5@@c@@attempt-01, 13@@p@@intent, 17@@n@@_NAME_, 19@@explicitanon0@@(and, 7@@s@@topple-01, 3@@c@@reject-01, 22@@b@@hand-01, 9@@d@@_NAME_, 10@@a@@and, 34@@n@@time-frame]
sentence=1	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	shady	_	shady	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_o	true
8	move	_	move	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
9	to	_	to	IN	O	_	name	_	0	IGNORE	true
10	(for	_	(for	VBN	O	_	or	_	0	IGNORE	true
11	example	_	example	NN	O	_	exemplify-01	_	0	IGNORE	true
12	a	_	a	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	1	MOD_mod	true
13	3x5x4	_name_	3x5x4	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	tank	_	tank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
15	with	_	with	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-03	(s(), o())	1	MOD_s	true
16	light	_	light	NN	O	(i<root> / --LEX--  :prep-with-of (l<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	on	_	on	IN	O	_	product	_	0	IGNORE	true
18	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	16	MOD_mod	true
19	side)	_	side)	NNS	O	_	and	_	0	IGNORE	true
20	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_s	true
23	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-15	(s())	22	APP_s	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	on	_	on	IN	O	_	and	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
28	12-14	_	12-14	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	17	(mod())	29	MOD_mod	true
29	hours,	_	hours,	NNS	O	(m<root> / --LEX--  :unit-of (a<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
30	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
31	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
32	a	_	a	DT	O	_	1	_	0	IGNORE	true
33	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	tank	_	tank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op1	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	22	MOD_mod	true
36	he	_	he	PRP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
37	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	true
38	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
39	the	_	the	DT	O	_	person	_	0	IGNORE	true
40	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
41	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
42	4-6	_	4-6	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	at	_	at	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	foot	(mod())	1	MOD_mod	true
44	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	42	MOD_mod	true
45	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
46	a	_	a	DT	O	_	1	_	0	IGNORE	true
47	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
48	though	_	though	IN	O	_	contrast-01	_	0	IGNORE	true
49	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	possibly	_	possibly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	36	MOD_s	true
51	4-6_hours	_name_	hour	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	cost-01	(mod())	42	MOD_mod	true
52	at	_	at	IN	O	_	1	_	0	IGNORE	true
53	a	_	a	DT	O	_	1	_	0	IGNORE	true
54	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
55	twice	_	twice	PDT	O	_	$LEMMA$	_	0	IGNORE	true
56	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	1	MOD_mod	true
57	day	_	day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :ARG2-of (r / rate-entity-91  :frequency-of (c<mod>)))	$LEMMA$	(mod())	42	MOD_mod	true
58	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@d@@tank, 4@@p@@shady, 57@@r@@rate-entity-91, 12@@p@@name, 47@@n@@time, 57@@t@@temporal-quantity, 44@@p@@at-most, 18@@explicitanon0@@1, 23@@s@@leave-15, 7@@s@@possible-01, 15@@s@@have-03, 27@@p@@full, 8@@t@@move-01, 14@@d@@tank, 6@@d@@he, 51@@p@@cost-01, 13@@p@@_NAME_, 1@@s@@have-condition-91, 40@@d@@light, 49@@s@@quite, 22@@s@@possible-01, 57@@y@@day, 33@@p@@small, 28@@p@@17, 5@@b@@area, 35@@a@@and, 56@@explicitanon0@@1, 21@@d@@you, 43@@p@@foot, 16@@i@@light, 38@@s@@escape-01, 42@@n@@4-6, 50@@s@@possible-01, 29@@m@@hours,, 37@@explicitanon0@@-, 36@@explicitanon0@@he]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	APP_s	true
7	of	_	of	IN	O	_	name	_	0	IGNORE	true
8	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	4	MOD_mod	true
9	Irish	_name_	irish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	country	(mod())	10	MOD_mod	true
10	weather	_	weather	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
13	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
16	be	_	be	VB	O	_	thing	_	0	IGNORE	true
17	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
18	of	_	of	IN	O	_	thing	_	0	IGNORE	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@s@@sure-02, 1@@explicitanon0@@1, 9@@p@@country, 3@@d@@you, 6@@s@@sure-02, 15@@s@@possible-01, 10@@a@@weather, 8@@p@@name, 2@@d@@thing, 4@@s@@possible-01, 13@@s@@little]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	a	_	a	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	1	(s(), o())	5	MOD_s	true
4	couple	_	couple	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	ways	_	way	NNS	O	(t3<root> / --LEX--  :domain (t2<dom>)  :manner-of (s2<mod>))	$LEMMA$	(dom(), mod())	0	ROOT	true
6	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_mod	true
8	spawn	_	spawn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
9	lineatus	_	lineatus	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
10	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
11	mop	_	mop	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	spawning	_	spawning	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_op1	true
13	&	_name_	&	CC	O	_	multi-sentence	_	0	IGNORE	true
14	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	incubating	_	incubate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
16	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	for	_	for	IN	O	_	and	_	0	IGNORE	true
18	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	15	MOD_mod	true
19	weeks,	_name_	weeks,	NNS	O	_	and	_	0	IGNORE	true
20	picking	_	pick	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
21	eggs	_	egg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
22	from	_	from	IN	O	_	and	_	0	IGNORE	true
23	a	_	a	DT	O	_	person	_	0	IGNORE	true
24	mop	_	mop	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
25	&	_	&	CC	O	_	$LEMMA$	_	0	IGNORE	true
26	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	35	APP_op3	true
27	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	a	_	a	DT	O	_	person	_	0	IGNORE	true
30	tray	_	tray	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	treated,	_	treated,	NNP	O	_	and	_	0	IGNORE	true
33	seasoned	_	seasoned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
34	water	_	water	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
35	or	_	or	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	5	APP_dom	true
36	setting	_	set	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-03	(s())	35	APP_op4	true
37	up	_	up	RP	O	_	include-91	_	0	IGNORE	true
38	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
39	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	36	APP_s	true
40	in	_	in	IN	O	_	i	_	0	IGNORE	true
41	a	_	a	DT	O	_	1	_	0	IGNORE	true
42	planted	_	plant	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	43	MOD_s	true
43	tank	_	tank	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
44	&	_name_	&	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	you	(op2(), op1())	5	MOD_op1	true
45	moving	_	move	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_op2	true
46	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
47	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
48	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
49	fry	_	fry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_s	true
50	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	45	MOD_mod	true
51	hatch	_	hatch	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	50	APP_s	true
52	out	_	out	RB	O	_	$LEMMA$	_	0	IGNORE	true
53	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@a@@or, 7@@s@@possible-01, 43@@b@@tank, 18@@explicitanon0@@2, 39@@p@@person, 9@@n@@_NAME_, 53@@b@@there, 36@@s@@set-up-03, 6@@d@@one, 33@@s@@seasoned-01, 3@@s@@1, 4@@explicitanon0@@couple, 8@@s@@spawn-01, 49@@d@@fry, 24@@s@@mop, 9@@p@@person, 5@@t3@@way, 20@@s@@pick-01, 14@@d@@water, 26@@s@@put-01, 15@@s@@incubate-01, 11@@p@@mop, 12@@d@@spawning-01, 44@@a@@you, 21@@d@@egg, 30@@d@@tray, 34@@g@@water, 39@@f@@parent, 45@@d@@move-01, 39@@h@@have-rel-role-91, 42@@s@@plant-03, 50@@i@@possible-01, 51@@s@@hatch-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_s	true
7	say	_	say	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	true
8	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
9	wait	_	wait	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
11	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	calls	_	call	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	10	APP_op1	true
13	you,	_	you,	NNS	O	_	_NAME_	_	0	IGNORE	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
15	it's	_	it's	PRP	O	_	contrast-01	_	0	IGNORE	true
16	different	_	different	JJ	O	(d<root> / --LEX--)	differ-02	()	14	APP_o	true
17	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
18	I'm	i'm	i'm	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-rel-role-91	(s(), o())	14	MOD_s	true
19	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
20	client	_	client	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
22	technically	_	technically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	technical	(mod())	18	MOD_mod	true
23	that's	_	that's	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
24	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	am	_	be	VBP	O	_	$LEMMA$-02	_	0	IGNORE	true
27	at	_	at	IN	O	_	thing	_	0	IGNORE	true
28	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@call-02, 6@@d@@person, 23@@s@@that's-01, 24@@d@@all, 1@@d@@i, 18@@s@@have-rel-role-91, 17@@s@@cause-01, 14@@s@@contrast-01, 22@@t@@technical, 11@@d@@he, 9@@s@@wait-01, 16@@d@@differ-02, 7@@c@@say-01, 20@@h@@have-rel-role-91, 20@@f@@client, 29@@n@@point, 2@@s@@know-01, 28@@p@@this, 10@@w@@until, 20@@p@@person, 4@@explicitanon0@@lot, 21@@a@@and]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	APP_o	true
4	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
5	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	either	_	either	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
8	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
9	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	14	MOD_mod	true
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	I've	i've	i've	NN	O	_	i	_	0	IGNORE	true
14	called	_	call	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	7	APP_s	true
15	HIM	him	him	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	14	MOD_s	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	dad	_	dad	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@1, 19@@h@@have-rel-role-91, 16@@s@@instead-of-91, 6@@p@@either, 1@@d@@He, 3@@s@@have-03, 7@@s@@cause-01, 11@@o@@ordinal-entity, 2@@explicitanon0@@-, 5@@d@@number, 19@@f@@dad, 14@@s@@call-02, 8@@d@@this, 19@@p@@person]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	true
5	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
8	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	nail	_	nail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	in	_	in	RP	O	_	i	_	0	IGNORE	true
11	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
12	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	2	APP_s	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	"didn't	_	"didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
16	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
17	risk	_	risk	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
18	it"	_	it"	NNP	O	_	thing	_	0	IGNORE	true
19	with	_	with	IN	O	_	i	_	0	IGNORE	true
20	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
21	horse's	_	horse's	CD	O	_	$LEMMA$	_	0	IGNORE	true
22	horrible	_	horrible	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	feet	_	foot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@want-01, 12@@s@@cause-01, 2@@s@@cause-01, 8@@p@@that, 6@@explicitanon0@@-, 7@@s@@put-01, 22@@p@@horrible, 14@@explicitanon0@@-, 17@@s@@risk-01, 3@@d@@he, 23@@d@@foot, 4@@c@@say-01, 9@@d@@nail]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(s(), o())	12	MOD_o	true
3	about	_	about	RB	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
5	fourth	_name_	fourth	JJ	O	(o2<root> / ordinal-entity  :value (explicitanon4 / --LEX--)  :time-of (o<mod>))	4	(mod())	2	MOD_mod	true
6	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	they've	_	they've	VBG	O	_	mean-01	_	0	IGNORE	true
8	done	_	do	VBN	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-02	(o(poss_UNIFY_s()))	12	APP_o	true
9	my	_	my	PRP$	O	_	see-01	_	0	IGNORE	true
10	horse's	_	horse'	NNS	O	_	contrast-01	_	0	IGNORE	true
11	feet	_	foot	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	8	APP_o	true
12	because	_	because	IN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	cause-01	(o(s()))	0	ROOT	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	switched	_	switch	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
16	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[15@@d@@switch-01, 5@@o2@@ordinal-entity, 1@@d@@this, 5@@explicitanon4@@4, 8@@l@@do-02, 11@@h@@foot, 14@@p@@just, 12@@c@@cause-01, 16@@a@@back, 2@@s@@be-temporally-at-91]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	14	MOD_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	switched	_	switch	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
7	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
8	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	true
12	place	_	place	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	true
15	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
16	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	23	APP_s	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	apprenticed	_	apprentice	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	with	_	with	IN	O	_	i	_	0	IGNORE	true
21	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	was	_	be	VBD	O	_	person	_	0	IGNORE	true
23	starting	_	start	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-out-03	(s())	14	APP_s	true
24	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
25	on	_	on	IN	O	_	i	_	0	IGNORE	true
26	his	_	he	PRP$	O	_	i	_	0	IGNORE	true
27	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@d@@i, 19@@s@@apprentice-01, 23@@s@@start-out-03, 17@@p@@person, 11@@o@@ordinal-entity, 3@@s@@cause-01, 2@@p@@only, 8@@d@@they, 14@@s@@cause-01, 11@@explicitanon0@@1, 16@@s@@good-02, 17@@h@@have-rel-role-91, 12@@t@@place, 17@@f@@friend, 5@@t@@switch-01]
sentence=1	To	to	to	TO	O	_	cause-01	_	0	IGNORE	true
2	answer	_	answer	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
3	Barry	_name_	Barry	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
4	White,	white,	White,	NNP	O	_	thing	_	0	IGNORE	true
5	yes	_	yes	UH	O	_	$LEMMA$	_	0	IGNORE	true
6	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
8	occur	_	occur	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	to	_	to	IN	O	_	and	_	0	IGNORE	true
10	me	_	I	PRP	O	_	i	_	0	IGNORE	true
11	:)	_	:)	:	O	_	and	_	0	IGNORE	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
13	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
14	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	he's	_	he'	NNS	O	_	thing	_	0	IGNORE	true
18	waiting	_	wait	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	13	APP_o	true
19	for	_	for	IN	O	_	thing	_	0	IGNORE	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@all, 3@@p@@person, 14@@d@@that, 18@@s@@wait-01, 12@@d@@i, 13@@s@@hope-01, 3@@n@@_NAME_, 2@@i@@answer-01, 8@@s@@occur-01]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	1	MOD_s	true
3	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	4	APP_s	true
4	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	1	APP_s	true
8	of	_	of	IN	O	_	anything	_	0	IGNORE	true
9	It..	it..	It..	NNP	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	saw	_	see	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
15	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o2	true
17	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
18	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), o(s()))	1	APP_o	true
19	Me	me	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	had	_	have	VBD	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	18	APP_o	true
22	To	to	to	TO	O	_	cause-01	_	0	IGNORE	true
23	get	_	get	VB	O	_	cause-01	_	0	IGNORE	true
24	married	_	married	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
25	to	_	to	IN	O	_	person	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	Who	who	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
29	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	worked	_	work	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
31	with	_	with	IN	O	_	-	_	0	IGNORE	true
32	becuse	_	becuse	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	30	APP_o	true
33	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	knocked	_	knock	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
35	Her	her	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	Up.	up.	Up.	NNP	O	_	person	_	0	IGNORE	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@married-01, 32@@n@@_NAME_, 27@@d@@girl, 11@@p@@next, 18@@s@@tell-01, 1@@h@@contrast-01, 4@@s@@say-01, 6@@n@@ever, 5@@d@@nothing, 32@@p@@person, 3@@d@@i, 16@@d@@He, 34@@s@@knock-01, 30@@t@@work-01, 21@@h@@obligate-01, 7@@s@@come-04, 2@@s@@resemble-01, 14@@v@@see-01]
sentence=1	Cute	cute	cute	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_dom	true
2	or	_	or	CC	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_o2	true
3	not,	_	not,	XX	O	_	and	_	0	IGNORE	true
4	I'd	i'd	i'd	PRP	O	(d<root> / --LEX--)	i	()	5	APP_o	true
5	call	_	call	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
6	a	_	a	DT	O	_	person	_	0	IGNORE	true
7	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	8	MOD_s	true
8	bloke	_	bloke	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_o	true
10	he's	_	he's	NNP	O	_	cause-01	_	0	IGNORE	true
11	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	APP_s	true
12	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
13	sub-par	_	sub-par	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	at	_	at	IN	O	_	thing	_	0	IGNORE	true
16	something	_	something	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
22	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
23	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	21	MOD_s	true
24	at,	_	at,	XX	O	_	$LEMMA$	_	0	IGNORE	true
25	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
26	he's	_	he's	NN	O	_	thing	_	0	IGNORE	true
27	flirting	_	flirt	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_op1	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	34	APP_op2	true
29	trying	_	try	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op2	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-04	(s())	29	APP_s	true
32	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
33	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
34	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
35	not,	_	not,	IN	O	_	and	_	0	IGNORE	true
36	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	ought	_	ought	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	recommend-01	(s(), o())	5	MOD_o	true
38	to	_	to	TO	O	_	thing	_	0	IGNORE	true
39	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_s	true
40	quality	_	quality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
41	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	39	MOD_mod	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@d@@i, 21@@s@@do-02, 28@@a@@or, 23@@b2@@good-02, 32@@d@@you, 16@@a@@something, 13@@p@@sub-par, 41@@o@@ordinal-entity, 39@@s@@put-01, 7@@s@@differ-02, 40@@d@@quality, 2@@r@@or, 14@@d@@job, 18@@s@@need-01, 1@@d@@cute, 11@@s@@do-02, 29@@s@@try-01, 27@@d@@flirt-01, 23@@m@@most, 37@@s@@recommend-01, 34@@a@@or, 31@@s@@ask-out-04, 5@@b@@call-01, 41@@explicitanon0@@1, 9@@s@@cause-01, 8@@d@@bloke]
sentence=1	Will	will	Will	MD	O	_	i	_	0	IGNORE	true
2	be	_	be	VB	O	_	person	_	0	IGNORE	true
3	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	copy	_	copy	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	3	APP_s	true
6	of	_	of	IN	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	blood	_	blood	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	results	_	result	VBZ	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	5	APP_s	true
10	the	_	the	DT	O	_	i	_	0	IGNORE	true
11	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	14	APP_s	true
12	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
13	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	ran	_	run	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_o	true
15	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
16	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	14	MOD_mod	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[11@@p2@@person, 14@@s@@run-02, 9@@c@@result-01, 9@@t@@thing, 8@@d@@blood, 3@@s@@get-01, 5@@c@@copy-01, 11@@e2@@own-01, 5@@t@@thing, 16@@p@@as-well, 13@@n@@already]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	true
3	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
6	up	_	up	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_o	true
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
8	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[8@@explicitanon0@@interrogative, 6@@s@@up, 3@@r@@something, 4@@d@@you, 2@@d@@that]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	so	_	so	RB	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	6	APP_op1	true
4	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	I'll	i'll	I'll	NNP	O	_	i	_	0	IGNORE	true
8	give	_	give	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
13	support	_	support	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	figure	_	figure	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-out-05	(mod(), s(), o())	8	MOD_mod	true
19	out	_	out	RP	O	_	thing	_	0	IGNORE	true
20	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
22	up	_	up	RB	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@s@@possible-01, 10@@p@@all, 3@@s@@go-03, 6@@a@@and, 8@@s@@give-01, 9@@d@@you, 12@@s@@moral-02, 13@@d@@support-01, 2@@r@@so, 5@@d@@it, 18@@t@@figure-out-05, 22@@d@@up]
sentence=1	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	5	APP_o	true
2	couldn't	_	couldn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
3	be	_	be	VB	O	_	person	_	0	IGNORE	true
4	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	happier	_	happy	JJR	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	with	_	with	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	APP_s	true
9	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
10	garage	_	garage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_mod	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@s@@happy-01, 1@@d@@i, 10@@d@@garage, 8@@t@@way, 4@@s@@more, 6@@explicitanon0@@-, 11@@s@@look-02, 2@@explicitanon0@@-]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	experiencing	_	experience	VBG	O	(d<root> / --LEX--  :ARG1 (b2<o>)  :ARG0 (b<s>))	$LEMMA$-01	(o(o_UNIFY_s()))	0	ROOT	true
4	severe	_	severe	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	back	_	back	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	pain	_	pain	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
9	point	_	point	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
11	could	_	could	MD	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	possible-01	(mod(), s())	3	MOD_mod	true
12	barely	_	barely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	bare	(mod())	13	MOD_mod	true
13	walk	_	walk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
15	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	bare	_	bare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_op2	true
17	to	_	to	TO	O	_	-	_	0	IGNORE	true
18	sit	_	sit	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
19	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[11@@b@@possible-01, 4@@p@@severe, 18@@d@@sit-01, 14@@a@@or, 16@@s@@bare-02, 15@@p@@even, 3@@d@@experience-01, 6@@s@@pain-01, 12@@s@@bare, 13@@d@@walk-01, 5@@d@@back, 1@@d@@i]
sentence=1	In	in	in	IN	O	_	after	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
4	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	5	MOD_mod	true
5	times	_	time	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	56	MOD_s	true
7	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	true
9	to	_	to	TO	O	_	and	_	0	IGNORE	true
10	save	_	save	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_dom	true
11	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
12	Very	very	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	reasonable	_	reasonable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	prices	_	price	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	top	_	top	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
18	The	the	the	DT	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	56	APP_o	true
19	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	20	APP_s	true
20	operator	_	operator	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	operate-01	(s(), o())	22	APP_s	true
21	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	56	APP_s	true
23	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	the	_	the	DT	O	_	and	_	0	IGNORE	true
26	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_o	true
27	with	_	with	IN	O	_	-	_	0	IGNORE	true
28	Helpers	_name_	helper	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	26	APP_s	true
29	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
31	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	33	APP_s	true
32	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	33	MOD_mod	true
33	recommend	_	recommend	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	APP_op2	true
34	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
35	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
37	Don't	don't	Don't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	true
38	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_o2	true
39	jack	_name_	jack	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	33	MOD_o	true
40	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
41	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	companies	_	company	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
43	that	_	that	WDT	O	_	and	_	0	IGNORE	true
44	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
45	pay	_	pay	VBP	O	(p<root> / --LEX--  :ARG1 (m<o>)  :ARG0 (i<s>)  :ARG3 (s<o2>))	$LEMMA$-01	(o2(s()), o())	38	MOD_s	true
46	alot	_	alot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	lot	(mod())	48	MOD_mod	true
47	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
48	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
49	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
50	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
51	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
52	top	_	top	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	45	APP_o2	true
53	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
54	the	_	the	DT	O	_	he	_	0	IGNORE	true
55	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	52	APP_o	true
56	Thank	thank	thank	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
57	s	_	s	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[22@@s@@do-02, 7@@s@@very, 21@@d@@he, 16@@p@@quality, 6@@s@@person, 32@@p@@definite, 19@@e2@@own-01, 36@@d@@guy, 48@@d@@money, 56@@s@@thank-01, 45@@p@@pay-01, 20@@s@@operate-01, 31@@d@@i, 18@@a@@and, 33@@b@@recommend-01, 12@@s@@very, 39@@s@@jack, 37@@explicitanon0@@-, 28@@p2@@person, 42@@d@@company, 29@@s@@very, 38@@s@@get-01, 11@@d@@money, 52@@s@@top-02, 41@@p@@big, 46@@explicitanon0@@lot, 35@@p@@this, 2@@p@@this, 30@@s@@friendly-01, 5@@n@@time, 23@@p@@all, 34@@d@@this, 55@@d@@list-01, 8@@r@@important, 26@@s@@work-01, 14@@s@@price-01, 17@@d@@work-01, 19@@p2@@person, 3@@s@@hard-02, 10@@s@@save-01, 15@@p@@top, 28@@e2@@helper, 4@@p@@economy, 13@@s@@reasonable-02]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	store	_	store	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	by	_	by	IN	O	_	and	_	0	IGNORE	true
5	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	by-$LEMMA$	(mod())	11	MOD_mod	true
6	the	_	the	DT	O	_	more	_	0	IGNORE	true
7	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	9	MOD_s	true
8	Verizon	_name_	Verizon	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	9	APP_poss	true
9	store	_	store	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	0	ROOT	true
10	I've	i've	i've	NN	O	_	-	_	0	IGNORE	true
11	been	_	be	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-located-at-91	(s())	9	MOD_s	true
12	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
13	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@c@@store, 7@@m@@most, 2@@d@@store, 5@@s@@by-far, 1@@p@@this, 8@@n@@_NAME_, 8@@c@@company, 11@@s@@be-located-at-91, 7@@b2@@bad-07]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	3	MOD_mod	true
3	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_snt1	true
4	Debi,	_name_	Debi,	NNP	O	_	and	_	0	IGNORE	true
5	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_o	true
7	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
8	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	6	MOD_s	true
9	job,	_	job,	NN	O	_	and	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
11	"love"	_	"love"	XX	O	_	mean-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	32	APP_snt2	true
14	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	cuts	_	cut	VBZ	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_s	true
16	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
17	hair,	_	hair,	NNS	O	_	and	_	0	IGNORE	true
18	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	19	MOD_mod	true
19	thorough	_	thorough	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	13	APP_mod	true
21	cross	_	cross	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	checks	_	check	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op2	true
23	her	_	she	PRP$	O	_	thing	_	0	IGNORE	true
24	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	make	_	make	VB	O	_	$FORM$-02	_	0	IGNORE	true
27	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	en$LEMMA$-01	(mod(), s(), o())	22	MOD_mod	true
28	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
29	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
31	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	APP_o	true
32	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true

nodealignment=[22@@s@@check-01, 18@@s@@extreme, 19@@s@@thorough, 13@@t@@way, 31@@s@@perfect-02, 29@@d@@hair, 1@@d@@i, 21@@t@@cross, 3@@s@@recommend-01, 8@@s@@amaze-01, 32@@m@@multi-sentence, 6@@s@@do-02, 24@@d@@work-01, 27@@s@@ensure-01, 20@@a@@and, 2@@s@@high, 15@@d@@cut-02, 10@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
3	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
4	had	_	have	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	6	APP_o	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
7	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
8	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_o	true
9	economy	_	economy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	aint	_	aint	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
16	haves	_	have	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	-	(mod())	18	MOD_mod	true
17	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	monies	_	monie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
19	fo	_	fo	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	repairs	_	repair	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
21	round	_	round	VBP	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
22	the	_	the	DT	O	_	and	_	0	IGNORE	true
23	House...	_name_	House...	NNP	O	(d<root> / --LEX--)	_NAME_	()	21	APP_op1	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@b@@round, 17@@explicitanon0@@much, 15@@explicitanon0@@-, 8@@s@@cause-01, 6@@s@@cause-01, 4@@s@@obligate-01, 18@@d@@monie, 9@@d@@economy, 16@@p@@-, 1@@d@@i, 20@@p@@repair-01, 23@@d@@_NAME_]
sentence=1	Will	will	Will	MD	O	_	location	_	0	IGNORE	true
2	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	staying	_	stay	VBG	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	any	_	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
7	every	_	every	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
10	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-02	(mod(), s())	3	MOD_mod	true
11	anywhere	_	anywhere	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	near	_	near	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@and, 7@@d@@every, 3@@l@@stay-01, 11@@p@@anywhere, 5@@d@@any, 12@@s@@near-02, 4@@b@@here, 10@@s@@come-02, 9@@d@@i]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_op1	true
3	early	_	early	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
5	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	accomodating	_	accomodating	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op2	true
10	to	_	to	IN	O	_	and	_	0	IGNORE	true
11	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@d@@situation, 2@@s@@arrive-01, 8@@s@@very, 9@@s@@accomodating-01, 4@@a@@and, 3@@n@@early, 1@@d@@We, 6@@d@@staff, 13@@a@@and, 12@@d@@family]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	17	MOD_mod	true
2	going	_	go	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	6	APP_op1	true
3	to	_	to	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	hospital	_	hospital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_op1	true
7	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op2	true
8	ER	er	ER	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	prices	_	price	NNS	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	7	APP_s	true
10	...	_	...	NFP	O	_	and	_	0	IGNORE	true
11	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
13	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	true
16	won't	_	won't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	be	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
18	back	_	back	RB	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	here!	_	here!	ADD	O	_	$LEMMA$	_	0	IGNORE	true
20	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[18@@d@@back, 17@@s@@be-located-at-91, 14@@t@@way, 16@@explicitanon0@@-, 1@@w@@after, 9@@a@@price-01, 15@@d@@i, 13@@explicitanon0@@-, 7@@s@@pay-01, 9@@t@@thing, 2@@p@@go-02, 6@@a@@and, 8@@p@@ER, 5@@d@@hospital]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_o	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
9	looked,	_	looked,	NNP	O	_	so	_	0	IGNORE	true
10	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	wavy,	_	wavy,	NNP	O	_	mean-01	_	0	IGNORE	true
12	uneven	_	uneven	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_s	true
13	edges,	_	edges,	NNP	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
17	exception	_	exception	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	except-01	(s(), o())	14	MOD_o	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	1,	_	1,	CD	O	_	_NAME_	_	0	IGNORE	true
20	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	dip	_	dip	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_op2	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	the	_	the	DT	O	_	thing	_	0	IGNORE	true
26	center	_	center	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	23	APP_o	true
27	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	nail	_	nail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_poss	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@except-01, 4@@s@@happy-01, 8@@d@@they, 26@@h@@center, 3@@explicitanon0@@-, 28@@p@@each, 10@@s@@very, 29@@d@@nail, 12@@s@@uneven, 23@@s@@dip-01, 14@@a@@and, 1@@d@@i]
sentence=1	Every	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	10	MOD_mod	true
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
4	go,	_	go,	VBP	O	_	and	_	0	IGNORE	true
5	Kevin,	kevin,	Kevin,	NFP	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	manager,	_	manager,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
8	will	_	will	MD	O	_	i	_	0	IGNORE	true
9	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
12	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_o	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[13@@o@@and, 1@@r@@rate-entity-91, 3@@d@@i, 9@@n@@always, 10@@s@@remember-01, 12@@d@@family]
sentence=1	Bloom_Legal	_name_	Legal	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	attentive	_	attentive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	8	APP_op1	true
5	to	_	to	IN	O	_	thing	_	0	IGNORE	true
6	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
7	problem,	_	problem,	NNP	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	Seth_Bloom	_name_	Bloom	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
10	took	_	take	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	8	APP_op2	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o2	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	legal	_	legal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	issue	_	issue	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_s	true
20	I	i	I	PRP	O	_	-	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	dealing	_	deal	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	19	MOD_s	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p@@person, 16@@s@@understand-01, 10@@i@@take-01, 1@@n@@_NAME_, 9@@n@@_NAME_, 3@@s@@really, 18@@s@@legal-02, 14@@s@@help-01, 8@@a@@and, 4@@s@@attentive, 19@@d@@issue-02, 12@@d@@time, 22@@s@@deal-01, 1@@p@@person]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	humble	_	humble	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	gym	_	gym	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	will	_	will	MD	O	(r<root> / --LEX--  :domain (q<dom>))	have-org-role-91	(dom())	11	APP_snt1	true
9	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	step	_	step	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	APP_dom	true
11	into....	_	into....	NFP	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true
12	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
13	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	dare	_	dare	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
15	to	_	to	TO	O	_	and	_	0	IGNORE	true
16	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
19	body	_	body	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	surprised	_	surprised	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_snt2	true
23	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
24	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
26	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	thing	(mod())	27	MOD_mod	true
27	addicting	_	addicting	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	28	MOD_mod	true
28	going	_	go	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	32	APP_s	true
29	to	_	to	IN	O	_	and	_	0	IGNORE	true
30	FITNESS	fitness	FITNESS	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
31	UNLIMITED	unlimited	UNLIMITED	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	28	APP_s	true
32	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	APP_s	true
33	be!	_	be!	ADD	O	_	$LEMMA$-01	_	0	IGNORE	true
34	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[4@@s@@most, 5@@p@@humble, 10@@s@@step-01, 28@@p@@go-02, 26@@s@@thing, 6@@r@@gym, 30@@d@@FITNESS, 9@@p@@every, 20@@explicitanon0@@-, 7@@d@@you, 19@@d@@body, 16@@s@@work-01, 31@@s@@UNLIMITED, 11@@m@@multi-sentence, 25@@s@@see-01, 14@@o@@dare-01, 8@@r@@have-org-role-91, 22@@d@@surprised-01, 27@@t@@addicting-01, 1@@d@@this, 32@@s@@possible-01]
sentence=1	Chasing	chasing	chase	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	on	_	on	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	1	MOD_o	true
4	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	1	APP_o	true
5	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	moved	_	move	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	(many	_	(many	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	MOD_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	unresolved	_	unresolve	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	resolve-01	(s())	4	MOD_s	true
15	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	left)	_	left)	VBP	O	_	and	_	0	IGNORE	true
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
19	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	sorts	_	sort	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
22	farcical	_	farcical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	issues	_	issue	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	APP_s	true
24	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
25	funds,	_	funds,	NNP	O	(d<root> / --LEX--)	thing	()	23	APP_s	true
26	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
28	left.	_	left.	VBP	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true
32	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	1	MOD_mod	true
33	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
34	as	_	as	IN	O	_	equal	_	0	IGNORE	true
35	I	i	I	PRP	O	_	1	_	0	IGNORE	true
36	could	_	could	MD	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	possible-01	(mod())	33	MOD_mod	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@n@@after, 25@@d@@thing, 10@@s@@(many, 3@@s@@and, 32@@s@@equal, 1@@s@@chase-01, 33@@n@@soon, 23@@s@@issue-02, 14@@s@@resolve-01, 6@@n@@_NAME_, 36@@p@@possible-01, 2@@d@@they, 4@@d@@issue-02, 19@@p@@all, 20@@p@@sort, 13@@p@@still, 22@@p@@farcical, 7@@d@@i, 8@@v@@move-01]
sentence=1	Their	their	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
3	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	humour	_	humour	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
6	calmness	_	calmness	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
7	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
8	dealing	_	deal	VBG	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
9	with	_	with	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	amazes	_	amaze	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	me	_	I	PRP	O	_	i	_	0	IGNORE	true
15	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	13	MOD_mod	true
16	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_o	true
18	walk	_	walk	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[5@@a@@and, 15@@r@@rate-entity-91, 12@@d@@one, 1@@d@@they, 2@@s@@sense-01, 8@@p@@deal-01, 17@@d@@i, 18@@d@@walk-01, 11@@p@@little, 6@@d@@calmness, 4@@d@@humour, 13@@s@@amaze-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	has	_	have	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	and	_	0	IGNORE	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	APP_o	true
7	the	_	the	DT	O	_	-	_	0	IGNORE	true
8	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-02	(s())	9	MOD_s	true
9	pizza	_	pizza	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	true
11	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
12	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	had	_	have	VBN	O	_	$LEMMA$-03	_	0	IGNORE	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	misfortune	_	misfortune	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	17	MOD_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	ordering	_	ordering	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@n@@ever, 2@@o@@obligate-01, 8@@m@@most, 15@@s@@misfortune, 5@@p@@some, 8@@b2@@bad-02, 9@@d@@pizza, 6@@s@@include-91, 1@@d@@this, 10@@d@@i, 17@@s@@ordering-01]
sentence=1	Dave	_name_	Dave	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	patient	_	patient	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	methodical	_	methodical	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
7	teacher,	_	teacher,	NNS	O	_	and	_	0	IGNORE	true
8	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
9	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	ear	_	ear	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
14	sensitivity	_	sensitivity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	students'	_	students'	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	passion	_	passion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	direction	_	direction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
22	they	_	they	PRP	O	_	person	_	0	IGNORE	true
23	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
24	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
25	lessons	_	lesson	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
28	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[14@@d@@sensitivity, 27@@s@@take-01, 9@@s@@have-03, 1@@p@@person, 12@@d@@ear, 11@@p@@great, 19@@a@@and, 13@@a@@and, 4@@s@@patient, 18@@d@@passion, 6@@d@@methodical, 25@@d@@lesson, 1@@n@@_NAME_, 21@@d@@direction, 17@@p@@students', 5@@a@@and, 23@@s@@want-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	FUCKING	fucking	fucking	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	fuck	(mod())	3	MOD_mod	true
3	HATE	hate	hate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op1	true
4	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	PLACE	place	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	EVERY	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	3	MOD_mod	true
7	TIME	time	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	i	_	i	PRP	O	_	1	_	0	IGNORE	true
9	GO	go	go	VBP	O	(d<root> / --LEX--)	$LEMMA$-02	()	6	APP_s	true
10	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	HOT	hot	hot	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	CHICK	chick	chick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	SHOWS	shows	show	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	15	APP_o	true
14	UP	up	up	RP	O	_	cause-01	_	0	IGNORE	true
15	AND	and	and	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	26	MOD_s	true
16	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
17	MEAN	mean	mean	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
18	REALLY	really	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	HOT	hot	HOT	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
20	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	26	MOD_s	true
21	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	IS	is	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	26	APP_op4	true
23	LIKE	like	like	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	REAAAALLY	reaaaally	reaaaally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	complete-02	(mod())	25	MOD_mod	true
25	DUMB	dumb	dumb	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
26	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
27	THEN	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
28	THEIR	their	their	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
29	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
30	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	OTHER	other	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	CHICK	chick	CHICK	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
33	THAT	that	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
34	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
35	REALY	realy	realy	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	36	MOD_mod	true
36	UGLY	ugly	ugly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	32	MOD_s	true
37	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	contrast-01	(s())	26	APP_op2	true
38	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	IS	is	be	VBZ	O	_	cause-01	_	0	IGNORE	true
40	LIKE	like	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	26	APP_op3	true
41	SUPER	super	SUPER	NNP	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	SMART	smart	SMART	NNP	O	(d<root> / --LEX--)	$LEMMA$-06	()	40	APP_s	true
43	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
44	COULD	could	COULD	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	40	MOD_s	true
45	BE	be	be	VB	O	_	person	_	0	IGNORE	true
46	A	a	a	DT	O	_	cause-01	_	0	IGNORE	true
47	SCIENTIST,	scientist,	scientist,	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
48	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	26	MOD_s	true
49	THEN	then	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
50	THEIR	their	their	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
51	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
52	THIS	this	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
53	STONER	stoner	STONER	``	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
54	WHO	who	who	WP	O	_	-	_	0	IGNORE	true
55	ALWAYS	always	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
56	COMES	comes	come	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	53	MOD_s	true
57	HERE	here	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_o	true
58	HIGH	high	high	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-02	(mod())	56	MOD_mod	true
59	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	MOD_op1	true
60	HE	he	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
61	ALWAYS	always	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	62	MOD_mod	true
62	BRINGS	brings	bring	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	59	APP_op2	true
63	HIS	his	his	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
64	FUCKING	fucking	FUCKING	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	65	MOD_mod	true
65	DOG	dog	DOG	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	62	APP_s	true
66	WHO	who	who	WP	O	_	cause-01	_	0	IGNORE	true
67	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
68	SO	so	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	69	MOD_mod	true
69	HIGH	high	high	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	65	MOD_s	true
70	FROM	from	from	IN	O	_	cause-01	_	0	IGNORE	true
71	THE	the	the	DT	O	_	cause-01	_	0	IGNORE	true
72	SECOND	second	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	73	MOD_mod	true
73	HAND	hand	hand	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	74	MOD_mod	true
74	SMOKE	smoke	smoke	NN	O	(d<root> / --LEX--)	$LEMMA$	()	69	APP_o	true
75	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
76	THINK	think	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	65	MOD_s	true
77	HE	he	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
78	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
79	TRYING	trying	try	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	76	APP_o	true
80	TO	to	to	TO	O	_	and	_	0	IGNORE	true
81	TALK	talk	talk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	79	APP_s	true
82	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@complete-02, 6@@r@@rate-entity-91, 30@@p@@this, 17@@s@@mean-01, 62@@s@@bring-01, 41@@s@@SUPER, 55@@n@@always, 58@@t@@high-02, 74@@d@@smoke, 76@@s@@think-01, 27@@n@@then, 72@@o@@ordinal-entity, 44@@s@@possible-01, 42@@d@@SMART-06, 40@@s@@resemble-01, 56@@g@@come-01, 65@@d@@DOG, 26@@a@@and, 64@@p@@FUCKING, 69@@s@@high-02, 5@@d@@place, 12@@d@@chick, 3@@s@@hate-01, 47@@d@@scientist,, 10@@p@@this, 61@@n@@always, 4@@p@@this, 22@@s@@person, 32@@d@@CHICK, 36@@s@@ugly, 9@@d@@go-02, 1@@d@@i, 13@@s@@show-up-02, 15@@s@@and, 20@@s@@contrast-01, 23@@s@@like, 79@@s@@try-01, 81@@d@@talk-01, 31@@p@@other, 18@@s@@really, 11@@s@@hot-02, 72@@explicitanon0@@2, 35@@s@@so, 25@@d@@dumb, 48@@s@@contrast-01, 19@@s@@HOT-02, 53@@d@@STONER, 2@@p@@fuck, 59@@a@@and, 68@@s@@so, 37@@s@@contrast-01, 73@@p@@hand, 57@@d@@here]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	one	_	one	CD	O	_	i	_	0	IGNORE	true
4	of	_	of	IN	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	include-91	(o2(), s(), o())	16	MOD_s	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-04	(s())	7	MOD_s	true
7	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	I	i	I	PRP	O	_	$REPL$	_	16	IGNORE	true
9	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
10	stayed,	_	stayed,	VBN	O	_	multi-sentence	_	0	IGNORE	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
12	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-06	(s(), o())	16	APP_op1	true
13	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	stay	_	stay	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
15	short	_	short	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	12	APP_o	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	16	APP_op2	true
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Mulberry	_name_	Mulberry	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	17	APP_o	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@this, 6@@m@@most, 12@@s@@cut-out-06, 4@@c@@include-91, 14@@d@@stay-01, 6@@b2@@bad-04, 20@@n@@_NAME_, 11@@d@@we, 17@@g@@go-02, 16@@a@@and, 15@@s@@short-06, 20@@o2@@organization, 7@@d@@place]
sentence=1	Pay	pay	pay	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
2	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	attend-02	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	appetizers	_	appetizer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	true
12	go	_	go	VBP	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	20	MOD_s	true
13	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	I'm	i'm	I'm	NNS	O	_	person	_	0	IGNORE	true
15	planning	_	plan	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	20	APP_s	true
16	on	_	on	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	3	APP_s	true
17	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	few	_	few	JJ	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	$LEMMA$	()	17	APP_o	true
20	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	16	APP_s	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	an	_	an	DT	O	_	1	_	0	IGNORE	true
23	entree	_	entree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@thing, 12@@p@@go-02, 19@@t@@thing, 19@@explicitanon0@@few, 20@@s@@instead-of-91, 17@@s@@order-01, 6@@d@@appetizer, 23@@d@@entree, 11@@d@@i, 13@@b@@there, 9@@p@@next, 15@@c@@plan-01, 2@@p@@extra, 3@@s@@attend-02]
sentence=1	The	the	the	DT	O	_	have-frequency-91	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	11	MOD_mod	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	used	_	use	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
6	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
8	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	time	_	time	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	on-$LEMMA$	(mod())	8	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	towed	_	tow	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	APP_op2	true
13	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	destination	_	destination	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@explicitanon0@@1, 6@@d@@they, 12@@b@@tow-01, 11@@a@@and, 4@@d@@i, 8@@s@@arrive-01, 18@@d@@destination, 20@@s@@need-01, 7@@d@@they, 2@@o@@ordinal-entity, 10@@t@@on-time, 5@@t@@use-01, 13@@d@@car]
sentence=1	Mike	_name_	Mike	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	38	APP_snt1	true
2	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_s	true
4	owners	_	owner	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	3	APP_o	true
5	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	0	ROOT	true
6	awesome,	_	awesome,	CD	O	_	and	_	0	IGNORE	true
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	explained	_	explain	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op1	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	detailed	_	detailed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	detail-01	(s())	12	MOD_s	true
11	plan,	_	plan,	NNP	O	_	thing	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	38	APP_snt2	true
13	executed	_	execute	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	true
14	on	_	on	IN	O	_	and	_	0	IGNORE	true
15	time,	_	time,	NNP	O	_	and	_	0	IGNORE	true
16	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	true
17	am	_	be	VBP	O	_	person	_	0	IGNORE	true
18	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
19	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
20	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_op1	true
21	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_s	true
23	refer	_	refer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op2	true
24	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	23	APP_o	true
28	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
29	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	true
30	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	27	MOD_o	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	thing	_	0	IGNORE	true
33	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
35	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	34	MOD_s	true
37	me	_	I	PRP	O	_	and	_	0	IGNORE	true
38	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	5	APP_o	true

nodealignment=[38@@m@@multi-sentence, 4@@e2@@own-01, 27@@f@@friend, 27@@h@@have-rel-role-91, 5@@s@@person, 1@@n@@_NAME_, 1@@p@@person, 26@@explicitanon0@@many, 13@@d@@execute-01, 12@@a@@and, 3@@s@@include-91, 20@@s@@use-01, 23@@s@@refer-01, 8@@d@@explain-01, 34@@d@@job, 18@@n@@always, 27@@p@@person, 33@@p@@great, 36@@s@@do-02, 2@@explicitanon0@@one, 16@@d@@i, 29@@s@@possible-01, 22@@a@@and, 10@@s@@detail-01, 4@@p2@@person, 30@@s@@cause-01]
sentence=1	I've	i've	I've	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
2	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	3	MOD_mod	true
3	felt	_	feel	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	MOD_s	true
4	the	_	the	DT	O	_	-	_	0	IGNORE	true
5	need	_	need	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	to	_	to	TO	O	_	-	_	0	IGNORE	true
7	write	_	write	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op1	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	review	_	review	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o	true
11	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	-	_	0	IGNORE	true
13	complaint	_	complaint	NN	O	(d<root> / --LEX--)	complain-01	()	10	APP_op2	true
14	before,	_	before,	NNP	O	_	-	_	0	IGNORE	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
16	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	43	MOD_mod	true
17	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
18	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
21	spoken	_	speak	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_op1	true
22	to	_	to	IN	O	_	-	_	0	IGNORE	true
23	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	member	_	member	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	21	APP_s	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
28	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	kennels	_	kennel	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
31	(whose	_	(whose	-LRB-	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	name	_	name	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
33	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
34	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	MOD_s	true
35	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
36	be	_	be	VB	O	_	person	_	0	IGNORE	true
37	Mrs	_name_	Mrs	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
38	Closs)	closs)	Closs)	NNP	O	_	and	_	0	IGNORE	true
39	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
40	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
41	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
42	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	43	MOD_mod	true
43	recommend	_	recommend	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_s	true
44	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
46	to	_	to	IN	O	_	-	_	0	IGNORE	true
47	anybody	_	anybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_o	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[47@@d@@anybody, 30@@b@@kennel, 3@@c@@feel-01, 37@@d@@Mrs, 21@@s@@speak-01, 2@@n@@ever, 18@@t@@way, 13@@d@@complain-01, 16@@w@@after, 32@@a@@name, 42@@explicitanon0@@-, 10@@a@@or, 34@@s@@believe-01, 27@@d@@staff, 15@@s@@contrast-01, 1@@explicitanon0@@-, 31@@p@@(whose, 9@@d@@review-01, 43@@s@@recommend-01, 7@@s@@write-01, 25@@p@@person, 45@@d@@business, 25@@h@@have-org-role-91, 44@@p@@this, 5@@s@@need-01, 41@@n@@now, 25@@o@@member]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	16	MOD_s	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	treated	_	treat	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	true
6	in	_	in	IN	O	_	event	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
13	treated	_	treat	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
14	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
15	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	leaves	_	leave	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	0	ROOT	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	desired	_	desire	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
22	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[18@@d@@lot, 11@@d@@customer, 13@@s@@treat-01, 21@@s@@desire-01, 3@@d@@animal, 15@@d@@this, 16@@s@@leave-13, 8@@s@@same-01, 1@@s@@have-condition-91, 5@@o@@treat-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	sales	_	sale	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	sell-01	(s())	3	MOD_s	true
3	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	were	_	be	VBD	O	_	person	_	0	IGNORE	true
5	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	knowledgeable	_	knowledgeable	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
7	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	aspect	_	aspect	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
15	at	_	at	IN	O	_	thing	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@very, 13@@d@@we, 8@@p@@every, 9@@m@@aspect, 2@@s@@sell-01, 11@@p@@every, 14@@s@@look-01, 12@@d@@car, 3@@d@@man, 6@@s@@knowledgeable-03]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	-	_	0	IGNORE	true
5	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-04	(s())	0	ROOT	true
6	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
7	i've	_	i've	-LRB-	O	_	-	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	been	_	be	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-located-at-91	(s())	2	MOD_s	true
10	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@s@@be-located-at-91, 2@@d@@school, 1@@p@@this, 5@@b2@@bad-04, 5@@m@@most, 8@@n@@ever]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
5	did	_	do	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	9	MOD_mod	true
6	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
7	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	suggested	_	suggest	VBN	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
10	to	_	to	TO	O	_	and	_	0	IGNORE	true
11	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
12	oblivion	_	oblivion	NN	O	(d<root> / --LEX--)	_NAME_	()	11	APP_o	true
13	when	_	when	WRB	O	_	i	_	0	IGNORE	true
14	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
15	told	_	tell	VBD	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
16	them	_	they	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
17	I	i	I	PRP	O	_	name	_	0	IGNORE	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
20	for	_	for	IN	O	_	product	_	0	IGNORE	true
21	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
22	fps	_	fps	NN	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
23	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[2@@p@@last, 6@@d@@that, 9@@f@@suggest-01, 5@@v@@do-02, 15@@p@@tell-01, 22@@n@@_NAME_, 16@@b@@they, 19@@s@@look-01, 12@@d@@_NAME_, 4@@d@@i, 22@@t@@thing, 11@@s@@buy-01]
sentence=1	Overall	overall	overall	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	aren't	_	aren't	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	very	_	very	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	knowledge	_	knowledge	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	know-01	(s(), o())	0	ROOT	true
6	about	_	about	IN	O	_	-	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	APP_o	true
9	of	_	of	IN	O	_	thing	_	0	IGNORE	true
10	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_mod	true
11	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	-	_	0	IGNORE	true
14	market	_	market	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	MOD_s	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@p@@overall, 5@@s@@know-01, 4@@s@@very, 14@@s@@market, 8@@p@@type, 3@@explicitanon0@@-, 10@@d@@game, 2@@d@@they]
sentence=1	From	from	from	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	moment	_	moment	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
5	enter	_	enter	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_op1	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	restaurant,	_	restaurant,	NNS	O	_	and	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@s@@know-01, 1@@w@@from, 13@@d@@place, 4@@d@@you, 12@@p@@some, 14@@s@@special-02, 5@@d@@enter-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	spent	_	spend	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o2(s()), o())	0	ROOT	true
3	3_months	_name_	month	NNS	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	$LEMMA$	()	2	APP_o	true
4	going	_	go	VBG	O	(r<root> / --LEX--  :ARG3 (t<o>)  :ARG4 (d<s>))	$LEMMA$-02	(s(), o())	2	APP_o2	true
5	from	_	from	IN	O	_	and	_	0	IGNORE	true
6	shop	_	shop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	to	_	to	IN	O	_	-	_	0	IGNORE	true
8	shop	_	shop	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	trying	_	try	VBG	O	(r<root> / --LEX--  :ARG1 (p<o>)  :ARG0 (c<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), o(s()))	2	MOD_mod	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	9	APP_o	true
12	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
13	Ferrari	_name_	Ferrari	NNP	O	(c<root> / car-make  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
15	run	_	run	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	APP_o	true
17	drive	_	drive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	it	_	it	PRP	O	_	i	_	0	IGNORE	true
21	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	17	MOD_s	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@r@@go-02, 16@@a@@and, 13@@n@@_NAME_, 8@@s@@shop, 3@@explicitanon0@@month, 3@@t@@temporal-quantity, 17@@s@@drive-01, 6@@d@@shop, 9@@r@@try-01, 15@@s@@run-02, 2@@i@@spend-02, 13@@c@@car-make, 11@@s@@get-04, 1@@d@@i, 21@@s@@recommend-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-on-09	(s(), o())	0	ROOT	true
3	on	_	on	RP	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	challenge	_	challenge	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	Ferrari	_name_	Ferrari	NNP	O	(c<root> / car-make  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
10	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
11	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
12	dreamed	_	dream	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	of	_	of	IN	O	_	thing	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
15	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@a@@and, 12@@s@@dream-01, 9@@n@@_NAME_, 11@@p@@i, 5@@c@@challenge-01, 10@@d@@all, 9@@c@@car-make, 15@@d@@more, 7@@s@@make-01, 2@@s@@take-on-09, 1@@d@@They]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	7	MOD_s	true
7	farms	_	farm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
9	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	been	_	be	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_o	true
12	too	_	too	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@n@@ever, 7@@d@@farm, 6@@m@@most, 12@@p@@too, 1@@d@@this, 6@@b2@@good-02, 4@@s@@include-91, 8@@d@@i, 11@@s@@be-02]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	decor	_	decor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	9	APP_op1	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	desired	_	desire	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	posters	_	poster	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	post-01	()	21	APP_s	true
12	telling	_	tell	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
13	me	_	I	PRP	O	_	i	_	0	IGNORE	true
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	reasons	_	reason	NNS	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	cause-01	(s())	12	APP_o	true
17	99	_	99	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	19	APP_dom	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_s	true
20	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op2	true
22	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
23	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	ironic	_	ironic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	contrast	_	contrast	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
26	against	_	against	IN	O	_	-	_	0	IGNORE	true
27	the	_	the	DT	O	_	-	_	0	IGNORE	true
28	reality	_	reality	NN	O	(d<root> / --LEX--)	real-04	()	25	APP_s	true
29	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[5@@d@@lot, 3@@s@@leave-13, 2@@d@@decor, 11@@e2@@post-01, 16@@t3@@thing, 14@@p@@all, 11@@p2@@person, 17@@t@@temporal-quantity, 28@@d@@real-04, 20@@p@@just, 17@@explicitanon0@@_NUMBER_, 19@@r@@great, 9@@a@@and, 25@@s@@contrast-01, 12@@s@@tell-01, 16@@t@@cause-01, 8@@s@@desire-01, 24@@p@@ironic, 21@@s@@serve-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
3	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	4	MOD_mod	true
4	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	then	_	0	IGNORE	true
6	mechanic	_	mechanic	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	4	APP_o	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	trust!	_	trust!	VBD	O	_	have-org-role-91	_	0	IGNORE	true
9	!	_	!	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[4@@s@@find-01, 1@@d@@i, 6@@p2@@person, 6@@e2@@mechanic-01, 3@@n@@final]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
4	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_op1	true
6	to	_	to	IN	O	_	and	_	0	IGNORE	true
7	me	_	I	PRP	O	_	i	_	0	IGNORE	true
8	on	_	on	IN	O	_	i	_	0	IGNORE	true
9	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
10	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	visit,	_	visit,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
13	will	_	will	MD	O	_	i	_	0	IGNORE	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	returning!	_	returning!	NNP	O	(d<root> / --LEX--)	and	()	11	APP_o	true
17	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[5@@s@@speak-01, 10@@p@@last, 14@@explicitanon0@@-, 16@@d@@and, 3@@t@@way, 4@@d@@she, 11@@s@@visit,, 12@@d@@i, 1@@w@@after]
sentence=1	Seems	seems	seem	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
3	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	care	_	care	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
6	about	_	about	IN	O	_	thing	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o	true
11	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	10	APP_op2	true
12	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
13	on	_	on	IN	O	_	and	_	0	IGNORE	true
14	time,	_	time,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	1	MOD_s	true
15	NO	no	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	care	_	care	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	for	_	for	IN	O	_	say-01	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	AT	at	at	IN	O	_	America	_	0	IGNORE	true
21	ALL!!	_name_	ALL!!	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	16	MOD_mod	true
22	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[21@@p@@and, 14@@s@@and, 9@@d@@money, 11@@s@@get-05, 10@@a@@and, 15@@explicitanon0@@-, 4@@d@@they, 12@@d@@home, 5@@s@@care-01, 1@@s@@seem-01, 3@@p@@all, 19@@d@@customer, 16@@s@@care-01]
sentence=1	I'm	i'm	I'm	NNP	O	_	dollar	_	0	IGNORE	true
2	22,	_	22,	NNP	O	_	year	_	0	IGNORE	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
4	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
5	hairdresser	_	hairdresser	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	7	APP_dom	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	25	APP_op2	true
8	(and	_	(and	NNP	O	_	i	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	true
10	"old"	_	"old"	``	O	_	resemble-01	_	0	IGNORE	true
11	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	MOD_s	true
12	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	15	MOD_mod	true
13	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	15	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	reviews	_	review	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
16	says)	_	says)	NNP	O	_	and	_	0	IGNORE	true
17	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
18	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	20	MOD_s	true
20	listened	_	listen	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op1	true
21	to	_	to	IN	O	_	and	_	0	IGNORE	true
22	what	_	what	WP	O	_	thing	_	0	IGNORE	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	wanted	_	want	VBD	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	20	APP_s	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	3	APP_op2	true
26	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op3	true
27	me	_	I	PRP	O	_	and	_	0	IGNORE	true
28	tons	_	ton	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	tips	_	tip	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	26	APP_s	true
31	on	_	on	IN	O	_	thing	_	0	IGNORE	true
32	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
33	to	_	to	TO	O	_	thing	_	0	IGNORE	true
34	style	_	style	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_s	true
35	my	_	my	PRP$	O	(d<root> / --LEX--)	thing	()	3	APP_op1	true
36	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
37	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
38	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	could	_	could	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	34	MOD_mod	true
40	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	39	APP_s	true
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	to	_	to	TO	O	_	thing	_	0	IGNORE	true
43	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	APP_s	true
44	the	_	the	DT	O	_	thing	_	0	IGNORE	true
45	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
46	I	i	I	PRP	O	_	mean-01	_	0	IGNORE	true
47	wanted	_	want	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	43	APP_s	true
48	it	_	it	PRP	O	_	i	_	0	IGNORE	true
49	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
50	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@include-91, 28@@explicitanon0@@ton, 20@@s@@listen-01, 30@@s@@tip-01, 26@@s@@give-01, 35@@d@@thing, 39@@i@@possible-01, 12@@explicitanon0@@1, 19@@s@@real-04, 5@@e2@@hairdresser, 11@@s@@resemble-01, 5@@p2@@person, 9@@explicitanon0@@-, 25@@a@@and, 36@@d@@hair, 43@@s@@look-02, 34@@s@@style-01, 3@@a@@and, 40@@s@@get-04, 15@@d@@review, 24@@t@@thing, 47@@d@@want-01, 7@@r@@great, 24@@d@@want-01]
sentence=1	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
2	an	_	an	DT	O	_	1	_	0	IGNORE	true
3	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	0	ROOT	true
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
5	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
6	payment	_	payment	NN	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	pay-01	(s(), o())	5	APP_o	true
7	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
8	5	_	5	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
9	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	6	_	6	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
12	monthly	_name_	monthly	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	month	(mod())	14	MOD_mod	true
13	plan	_	plan	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	14	MOD_mod	true
14	premiums	_	premium	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
15	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
16	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
17	yearly	_name_	yearly	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	year	(mod())	18	MOD_mod	true
18	policy	_	policy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	APP_s	true
20	cancelled	_	cancel	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op2	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_o	true
23	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	remainder	_	remainder	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	policy	_	policy	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
29	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
30	reasons	_	reason	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
31	they	_	they	PRP	O	_	cause-01	_	0	IGNORE	true
32	stated	_	state	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
33	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
34	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	true
35	receiving	_	receive	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_o	true
36	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
37	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
39	licensed	_	licensed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	license-01	(s())	40	MOD_s	true
40	drivers	_	driver	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	drive-01	(mod())	36	MOD_mod	true
41	in	_	in	IN	O	_	i	_	0	IGNORE	true
42	the	_	the	DT	O	_	person	_	0	IGNORE	true
43	household	_	household	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
44	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	19	MOD_mod	true

nodealignment=[12@@r@@rate-entity-91, 39@@s@@license-01, 14@@d@@premium, 12@@t@@temporal-quantity, 5@@s@@take-01, 38@@p@@other, 16@@explicitanon0@@1, 32@@s@@state-01, 40@@p@@drive-01, 22@@d@@contract-02, 17@@r@@rate-entity-91, 11@@explicitanon0@@_NUMBER_, 20@@s@@cancel-01, 17@@d@@year, 13@@p@@plan-01, 19@@a@@and, 43@@b@@household, 6@@s@@pay-01, 34@@explicitanon0@@-, 12@@d@@month, 44@@explicitanon0@@interrogative, 30@@d@@reason, 35@@s@@receive-01, 36@@d@@information, 4@@d@@they, 18@@d@@policy, 8@@explicitanon0@@_NUMBER_, 25@@b@@remainder, 3@@s@@exemplify-01, 17@@t@@temporal-quantity]
sentence=1	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
2	once	_	once	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	feel	_	feel	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	listened	_	listen	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
7	to	_	to	TO	O	_	-	_	0	IGNORE	true
8	like	_	like	UH	O	_	resemble-01	_	0	IGNORE	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	11	MOD_s	true
11	cared	_	care	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
12	about	_	about	IN	O	_	thing	_	0	IGNORE	true
13	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	wanted,	_	wanted,	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	5	MOD_s	true
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	15	APP_o	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	was	_	be	VBD	O	_	and	_	0	IGNORE	true
22	me	_	I	PRP	O	_	i	_	0	IGNORE	true
23	signing	_	sign	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_s	true
24	a	_	a	DT	O	_	thing	_	0	IGNORE	true
25	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	then	_	then	RB	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op1	true
28	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	23	MOD_mod	true
29	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op2	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@b@@and, 23@@s@@sign-02, 5@@c@@feel-01, 11@@s@@care-01, 1@@explicitanon0@@-, 29@@d@@there, 27@@d@@then, 16@@p@@all, 26@@p@@right, 25@@d@@contract, 9@@d@@they, 4@@d@@i, 10@@s@@actual-02, 19@@s@@interest-01, 15@@s@@and, 6@@s@@listen-01, 2@@p@@once]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
3	NOT	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	learn	_	learn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	were	_	be	VBD	O	_	person	_	0	IGNORE	true
9	promised	_	promise	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@-, 4@@s@@learn-01, 9@@s@@promise-01, 6@@d@@thing, 1@@d@@You]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	have	_	have	VBP	O	_	1	_	0	IGNORE	true
3	attended	_	attend	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
4	A_Ward_Dance_Centre	_name_	Centre	NNP	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	3	APP_o	true
5	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	over_a_year	_name_	year	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
8	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	enjoy	_	enjoy	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op2	true
10	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	welcoming	_	welcoming	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	APP_o	true
15	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	taught	_	teach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_mod	true
18	Ballroom	ballroom	Ballroom	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
20	Latin	_name_	Latin	NNP	O	(l<root> / language  :name (n / --LEX--))	_NAME_	()	19	APP_op2	true
21	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
22	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	7	APP_op3	true
24	the	_	the	DT	O	_	and	_	0	IGNORE	true
25	fun	_	fun	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_o	true
26	filled	_	fill	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	29	MOD_s	true
27	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	dance	_	dance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	29	MOD_mod	true
29	evening	_	evening	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
30	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	29	MOD_s	true
31	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	Saturday	_name_	Saturday	NNP	O	(d<root> / date-entity  :weekday (t / --LEX--)  :time-of (c<mod>))	$REPL$	(mod())	30	MOD_mod	true
33	evening...	_	evening...	.	O	_	$LEMMA$	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@attend-01, 11@@s@@friendly-01, 17@@s@@teach-01, 32@@t@@_name_, 13@@s@@welcoming-01, 30@@s@@hold-04, 6@@t@@temporal-quantity, 25@@d@@fun-01, 1@@d@@We, 8@@s@@really, 28@@p@@dance-01, 9@@s@@enjoy-01, 26@@s@@fill-01, 20@@l@@language, 18@@d@@Ballroom, 20@@n@@_NAME_, 6@@y@@_NAME_, 32@@d@@date-entity, 23@@s@@and, 7@@a@@and, 4@@n4@@_NAME_, 19@@a@@and, 4@@b@@broadcast-program, 31@@p@@every, 29@@d@@evening, 27@@p@@social, 14@@t@@way]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	8	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	8	APP_s	true
7	had	_	have	VBD	O	_	be-located-at-91	_	0	IGNORE	true
8	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-15	(s(), o())	0	ROOT	true
9	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	salon	_	salon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
13	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	curly	_	curly	RB	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	8	MOD_mod	true
15	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[4@@explicitanon0@@1, 14@@b@@curly, 13@@d@@hair, 8@@s@@leave-15, 4@@o@@ordinal-entity, 6@@d@@i, 10@@d@@salon]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
3	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_op1	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	fabulous	_	fabulous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-03	(mod())	6	MOD_mod	true
6	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	letting	_	let	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
8	me	_	I	PRP	O	_	i	_	0	IGNORE	true
9	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
11	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
13	doing	_	do	VBG	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-02	()	9	APP_s	true
14	at	_	at	IN	O	_	thing	_	0	IGNORE	true
15	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	times	_	time	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_s	true
18	styled	_	style	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op2	true
19	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
20	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
25	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	18	MOD_s	true
26	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	APP_o	true
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	at	_	at	IN	O	_	thing	_	0	IGNORE	true
29	home	_	home	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@let-01, 26@@s@@do-02, 25@@f@@possible-01, 6@@d@@job, 16@@n@@time, 15@@p@@all, 18@@s@@style-01, 3@@s@@do-02, 5@@p@@fabulous-03, 13@@d@@do-02, 29@@b@@home, 1@@s@@contrast-01, 2@@d@@she, 9@@s@@know-01, 13@@t@@thing, 17@@a@@and, 20@@d@@hair]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_o2	true
2	called	_	call	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	15	APP_op1	true
3	reception	_	reception	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
6	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
7	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	state	_	state	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
13	was	_	be	VBD	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	15	APP_s	true
14	in	_	in	RB	O	_	i	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
18	"This	"this	"this	CD	O	_	$LEMMA$	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	Days	_name_	day	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
22	Inn,	inn,	Inn,	VBD	O	_	contrast-01	_	0	IGNORE	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
24	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
25	Hilton"	_name_	Hilton"	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	15	MOD_mod	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	MOD_op1	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	receptionist	_	receptionist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
29	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	hung	_	hang	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-up-07	(s())	26	APP_op2	true
31	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	me	_	I	PRP	O	_	i	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@y@@day, 23@@explicitanon0@@-, 15@@a@@and, 26@@a@@and, 5@@s@@ask-01, 25@@p@@and, 3@@d@@reception, 8@@s@@know-01, 2@@b@@call-02, 12@@d@@room, 13@@d@@be-located-at-91, 1@@d@@i, 17@@s@@tell-01, 21@@t@@temporal-quantity, 10@@m@@state, 30@@s@@hang-up-07, 29@@n@@then, 28@@d@@receptionist]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	took	_	take	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-10	(o2(), s(), o())	0	ROOT	true
3	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	courage	_	courage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_o2	true
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	muster	_	muster	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
11	an	_	an	DT	O	_	1	_	0	IGNORE	true
12	appointment	_	appointment	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	2	APP_s	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@b@@take-10, 8@@s@@muster-01, 3@@p@@all, 6@@d@@i, 7@@s@@possible-01, 12@@d@@appointment-02, 5@@d@@courage]
sentence=1	Doctor	doctor	Doctor	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	2	MOD_s	true
2	Gonzales	_name_	Gonzales	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_dom	true
4	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	0	ROOT	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	dealt	_	deal	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
16	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@a@@and, 12@@d@@i, 1@@p2@@doctor, 9@@s@@most, 2@@p@@person, 10@@p@@professional, 2@@n@@_NAME_, 5@@p@@entire, 6@@d@@staff, 1@@h@@have-org-role-91, 14@@n@@ever, 15@@t@@deal-01, 11@@r@@person]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_o	true
3	had	_	have	VBD	O	(d<root> / --LEX--)	$LEMMA$-03	()	26	APP_op1	true
4	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
5	cat	_	cat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	spayed	_	spay	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op2	true
7	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	reduced/free	_	reduced/free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	13	MOD_s	true
10	spay	_	spay	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	neuter	_	neuter	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
13	program	_	program	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	MOD_op1	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	vet	_	vet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
17	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_o	true
18	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
19	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	to	_	to	TO	O	_	person	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	first	_name_	first	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	26	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	all_a_hour_and_a_half	_name_	half	NN	O	(d<root> / --LEX--)	$LEMMA$-00	()	26	APP_op2	true
25	away,	_	away,	CD	O	_	$LEMMA$	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	1	APP_s	true
27	4_days_later	_name_	later	RB	O	(d<root> / --LEX--)	slash	()	29	APP_s	true
28	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
29	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	26	APP_op3	true
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
31	bring	_	bring	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	29	APP_o	true
32	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	to	_	to	IN	O	_	person	_	0	IGNORE	true
34	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
35	normal	_	normal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	36	MOD_s	true
36	vet	_	vet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
37	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	29	MOD_o	true
38	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
39	vets	_	vet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
40	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
43	in	_	in	IN	O	_	i	_	0	IGNORE	true
44	wisconsin	_name_	wisconsin	NN	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	42	MOD_mod	true
45	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	37	APP_s	true
46	a	_	a	DT	O	_	1	_	0	IGNORE	true
47	crappy	_	crappy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	MOD_op1	true
50	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
51	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
52	infections	_	infection	NNS	O	(d<root> / --LEX--)	infect-01	()	49	APP_op2	true
53	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@a@@and, 10@@p@@spay, 51@@s@@get-01, 44@@n2@@_NAME_, 31@@t@@bring-01, 5@@d@@cat, 44@@s@@state, 47@@p@@crappy, 37@@s@@cause-01, 42@@b@@place, 28@@d@@we, 35@@s@@normal-02, 49@@a@@and, 52@@d@@infect-01, 39@@d@@vet, 26@@a@@and, 27@@d@@slash, 1@@s@@contrast-01, 29@@s@@obligate-01, 6@@s@@spay-01, 36@@d@@vet, 9@@s@@reduced/free-04, 16@@d@@vet, 13@@s@@program, 24@@d@@half-00, 17@@d@@they, 3@@d@@have-03, 2@@d@@i, 22@@p@@1, 18@@s@@send-01, 12@@p@@neuter-01, 45@@s@@do-02, 48@@d@@job, 11@@p@@and]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
5	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
6	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	a	_	a	DT	O	_	i	_	0	IGNORE	true
10	"You've	"you've	"you've	XX	O	_	cause-01	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	yelped!"	_	yelped!"	JJ	O	_	and	_	0	IGNORE	true
13	card	_	card	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
15	let	_	let	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
16	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	Yelp	yelp	Yelp	NNP	O	_	$LEMMA$	_	0	IGNORE	true
20	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	APP_s	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
25	for	_	for	IN	O	_	thing	_	0	IGNORE	true
26	helping	_	help	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
27	spreading	_	spread	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	26	APP_s	true
28	the	_	the	DT	O	_	he	_	0	IGNORE	true
29	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_s	true
30	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	Papeluna	_name_	Papeluna	NNP	O	(p<root> / person  :name (n / --LEX--)  :topic-of (a<mod>))	_NAME_	(mod())	29	MOD_mod	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@p@@person, 23@@s@@good-02, 20@@s@@possible-01, 2@@b@@give-01, 17@@s@@know-01, 6@@s@@speak-01, 15@@s@@let-01, 29@@d@@word-01, 26@@i@@help-01, 8@@n@@today, 24@@d@@tool, 13@@d@@card, 1@@d@@i, 27@@s@@spread-03, 31@@n@@_NAME_, 4@@d@@woman]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	craziest	_	crazy	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	weird	(mod())	3	MOD_mod	true
3	part	_	part	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
5	that	_	that	IN	O	_	and	_	0	IGNORE	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	aren't	_	aren't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
8	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_dom	true
10	locally	_	locally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	local-02	(s())	9	MOD_s	true
11	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	I'm	i'm	i'm	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	9	MOD_mod	true
15	in-	_	in-	XX	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	3	MOD_s	true
16	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	15	APP_o	true
19	'teams'	_	'teams'	VBN	O	_	mean-01	_	0	IGNORE	true
20	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
21	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	through	_	through	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@d@@country, 9@@s@@base-01, 18@@d@@have-03, 3@@r@@part, 14@@b@@_NAME_, 13@@b@@city, 6@@d@@they, 21@@b@@area, 7@@explicitanon0@@-, 2@@t@@weird, 17@@p@@just, 8@@p@@even, 15@@s@@mean-01, 10@@s@@local-02, 2@@m@@most, 22@@b@@through]
sentence=1	Be	be	Be	VB	O	_	you	_	0	IGNORE	true
2	warned-	_	warned-	JJ	O	_	you	_	0	IGNORE	true
3	they'll	_	they'll	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	you	(mod())	4	MOD_mod	true
4	ltake	_	ltake	UH	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	remember-01	(s(), o())	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
10	.	_	.	.	O	_	do-02	_	0	IGNORE	true

nodealignment=[9@@s@@possible-01, 7@@d@@everything, 3@@p@@you, 4@@s@@remember-01, 5@@d@@you]
sentence=1	I've	i've	I've	NNP	O	_	cause-01	_	0	IGNORE	true
2	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
3	at	_	at	IN	O	_	thing	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	fabulous	_	fabulous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	motel	_	motel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	two_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
9	running,	_	running,	NNP	O	_	_NAME_	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	10	APP_op2	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
15	it's	_	it's	PRP$	O	_	include-91	_	0	IGNORE	true
16	one	_	one	CD	O	_	1	_	0	IGNORE	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	10	MOD_s	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	21	MOD_s	true
20	lodging	_	lodging	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	experiences	_	experience	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
22	I've	i've	I've	VBG	O	_	thing	_	0	IGNORE	true
23	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	21	MOD_o	true
25	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	coast...and	_	coast...and	NN	O	(c<root> / country-region  :name (n / --LEX--)  :location-of (r<mod>))	_NAME_	(mod())	24	MOD_mod	true
28	I'm	i'm	i'm	PRP	O	(d<root> / --LEX--)	person	()	10	APP_s	true
29	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	comparing	_	compare	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
31	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	to	_	to	IN	O	_	thing	_	0	IGNORE	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	resorts	_	resort	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
36	I've	i've	i've	PRP	O	_	thing	_	0	IGNORE	true
37	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	MOD_s	true
38	at	_	at	IN	O	_	i	_	0	IGNORE	true
39	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[23@@n@@ever, 35@@d@@resort, 5@@p@@fabulous, 34@@p@@big, 19@@b2@@good-02, 12@@o@@obligate-01, 30@@s@@compare-01, 37@@s@@stay-01, 27@@c@@country-region, 21@@s@@experience-01, 19@@m@@most, 8@@n@@year, 10@@a@@and, 7@@d@@motel, 28@@d@@person, 24@@s@@have-03, 20@@d@@lodging, 14@@s@@say-01, 4@@p@@this, 6@@p@@little, 2@@s@@stay-01, 27@@n@@_NAME_, 17@@s@@include-91, 29@@p@@even]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	bake	_	bake	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op1	true
3	bread	_	bread	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
5	daily,	_	daily,	NNS	O	_	and	_	0	IGNORE	true
6	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	press	_	press	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
9	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	sandwiches	_	sandwich	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	true
16	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
17	it,	_	it,	PRP	O	_	thing	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
19	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
20	meat	_	meat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_op3	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@like-01, 15@@d@@i, 2@@s@@bake-01, 20@@d@@meat, 8@@s@@press-01, 4@@s@@fresh-02, 7@@explicitanon0@@-, 10@@d@@sandwich, 18@@a@@and, 3@@d@@bread, 23@@s@@fresh-02, 14@@t@@way, 1@@d@@They, 22@@n@@always]
sentence=1	Every	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	6	MOD_mod	true
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	1	APP_s	true
5	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	to	_	to	TO	O	_	and	_	0	IGNORE	true
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_s	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	11	MOD_s	true
11	ingredient	_	ingredient	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
13	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	12	APP_op2	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	keeps	_	keep	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
16	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	interesting	_	interesting	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	15	APP_o	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@t@@thing, 11@@d@@ingredient, 6@@s@@seem-01, 16@@d@@thing, 3@@d@@we, 5@@d@@they, 13@@explicitanon0@@2, 15@@s@@keep-02, 1@@r@@rate-entity-91, 10@@s@@differ-02, 12@@a@@or, 8@@s@@have-03, 4@@s@@go-02, 17@@s@@interesting]
sentence=1	Outside	outside	outside	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
2	of	_	of	IN	O	_	except-01	_	0	IGNORE	true
3	parking	_	parking	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_op1	true
4	being	_	be	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	16	MOD_o	true
5	at	_	at	IN	O	_	thing	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	premium,	_	premium,	NNP	O	_	multi-sentence	_	0	IGNORE	true
8	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	on	_	on	IN	O	_	9	_	0	IGNORE	true
10	discount	_	discount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
11	days,	_	days,	NNP	O	_	-	_	0	IGNORE	true
12	The_Laundry_Tub	_name_	Tub	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_dom	true
13	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	filthy	_	filthy	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	it's	_	it's	PRP$	O	_	opine-01	_	0	IGNORE	true
18	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	smaller	_	small	JJR	O	(d<root> / --LEX--)	small	()	16	APP_op2	true
20	than	_	than	IN	O	_	more	_	0	IGNORE	true
21	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	dozen	_	dozen	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	12	(mod())	25	MOD_mod	true
25	laundromats	_	laundromat	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
26	I've	i've	i've	ADD	O	_	location	_	0	IGNORE	true
27	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	25	MOD_s	true
28	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@explicitanon0@@12, 18@@explicitanon0@@-, 8@@p@@especially, 1@@b@@outside, 21@@p@@any, 25@@p@@laundromat, 16@@a@@and, 14@@explicitanon0@@-, 19@@d@@small, 10@@d@@discount, 3@@d@@parking-01, 27@@s@@be-located-at-91, 12@@d@@Tub, 15@@r@@filthy-01, 4@@s@@be-located-at-91]
sentence=1	In	in	in	IN	O	_	after	_	0	IGNORE	true
2	this_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	its	_	its	PRP$	O	_	cause-01	_	0	IGNORE	true
4	rare	_	rare	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
7	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_s	true
10	who	_	who	WP	O	_	and	_	0	IGNORE	true
11	CARE	_name_	care	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	,	_	,	,	O	_	and	_	0	IGNORE	true
13	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
17	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	to	_	to	TO	O	_	person	_	0	IGNORE	true
19	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	17	APP_o	true
20	cash	_	cash	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@such, 17@@s@@want-01, 8@@s@@wonderful-03, 19@@s@@make-05, 13@@explicitanon0@@-, 11@@s@@care-01, 9@@d@@person, 6@@s@@find-01, 20@@d@@cash, 15@@d@@kind, 16@@s@@contrast-01, 2@@n@@day, 4@@s@@rare-02]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	having	_	have	VBG	O	_	$LEMMA$-04	_	0	IGNORE	true
3	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	worked	_	work	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
8	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
10	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	APP_o	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	mechanic	_	mechanic	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	10	APP_o	true
13	&	_	&	CC	O	_	and	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	Midas	midas	Midas	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_dom	true
16	is	_	be	VBZ	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	8	APP_s	true
17	truly	_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	true-01	(s())	18	MOD_s	true
18	someone	_	someone	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_dom	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	MOD_s	true
21	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_o	true
22	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[14@@p@@this, 16@@r@@person, 17@@s@@true-01, 4@@d@@car, 21@@s@@trust-02, 5@@s@@work-01, 20@@s@@possible-01, 12@@e2@@mechanic, 15@@n@@_NAME_, 12@@p2@@person, 7@@d@@you, 18@@r@@someone, 10@@s@@trust-02, 8@@o@@obligate-01, 15@@p@@person]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	14	MOD_s	true
4	I'm	i'm	i'm	WP	O	_	5	_	0	IGNORE	true
5	giving	_	give	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
6	3	_	3	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
7	stars	_	star	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	7	MOD_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	1	_	1	CD	O	(d<root> / --LEX--)	_NUMBER_	()	11	APP_op1	true
11	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	8	APP_o	true
12	2,	_	2,	CD	O	_	$LEMMA$	_	0	IGNORE	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
15	admit,	_	admit,	NNS	O	_	-	_	0	IGNORE	true
16	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
18	broken	_	break	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	break-01	(s())	14	APP_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@o@@or, 6@@explicitanon0@@_NUMBER_, 3@@s@@cause-01, 2@@p@@only, 7@@d@@star, 16@@d@@nothing, 14@@s@@recommend-01, 18@@s@@break-01, 8@@s@@instead-of-91, 10@@d@@_NUMBER_, 5@@s@@give-01]
sentence=1	Linda	_name_	Linda	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	-	_	0	IGNORE	true
4	rudest	_	rude	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	little	(mod())	5	MOD_mod	true
5	person	_	person	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	will	_	will	MD	O	_	person	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	talk	_	talk	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	sticks	_	stick	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	11	APP_op2	true
14	up	_	up	RP	O	_	thing	_	0	IGNORE	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	trashy,	_	trashy,	NNP	O	_	thing	_	0	IGNORE	true
20	rude	_	rude	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	13	APP_s	true
22	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
23	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	there,	_	there,	NNS	O	_	person	_	0	IGNORE	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
26	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>))	contrast-01	(s())	11	MOD_s	true
27	nice	_	nice	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
28	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	31	MOD_s	true
31	give	_	give	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-16	(o2(), s(), o())	21	MOD_s	true
32	a	_	a	DT	O	_	person	_	0	IGNORE	true
33	crap	_	crap	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_o	true
34	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	respecting	_	respect	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o2	true
36	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[36@@d@@other, 6@@d@@you, 13@@s@@stick-up-02, 8@@n@@ever, 27@@s@@nice-01, 16@@p@@all, 30@@s@@actual-02, 9@@t@@talk-01, 33@@d@@crap-01, 31@@b@@give-16, 23@@s@@live-01, 21@@d@@person, 26@@s@@contrast-01, 25@@explicitanon0@@-, 1@@p@@person, 11@@a@@and, 5@@r@@person, 4@@m@@most, 4@@t@@little, 1@@n@@_NAME_, 35@@s@@respect-01, 20@@p@@rude]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	it	_	it	PRP	O	_	i	_	0	IGNORE	true
3	came	_	come	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	14	MOD_mod	true
4	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
7	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
8	bill	_	bill	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
9	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
10	front,	_	front,	NNP	O	_	and	_	0	IGNORE	true
11	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	would	_	would	MD	O	_	-	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	let	_	let	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
17	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	certificate	_	certificate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
21	for	_	for	IN	O	_	or	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	tip	_	tip	NN	O	(d<root> / --LEX--)	$LEMMA$-05	()	16	APP_o	true
24	(which	_	(which	.	O	_	$LEMMA$	_	0	IGNORE	true
25	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_o2	true
26	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
27	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	16	MOD_o	true
28	with	_	with	IN	O	_	-	_	0	IGNORE	true
29	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	restaurant	_	restaurant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
32	I've	i've	i've	NN	O	_	mean-01	_	0	IGNORE	true
33	gotten	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_s	true
34	a	_	a	DT	O	_	thing	_	0	IGNORE	true
35	gift	_	gift	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	certificate	_	certificate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
37	for.	_	for.	NN	O	_	$LEMMA$	_	0	IGNORE	true
38	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[20@@d@@certificate, 33@@s@@get-01, 16@@s@@use-01, 4@@d@@time, 31@@d@@restaurant, 11@@d@@they, 27@@s@@do-02, 8@@d@@bill-01, 3@@t@@come-01, 13@@explicitanon0@@-, 23@@d@@tip-05, 17@@p@@any, 36@@d@@certificate, 6@@s@@pay-01, 29@@p@@any, 14@@b@@let-01, 30@@p@@other, 25@@d@@i, 35@@p@@gift]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
2	showed	_	show	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	APP_op1	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	5	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
12	took	_	take	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	test	_	test	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	drive	_	drive	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@interest-01, 5@@d@@car, 15@@s@@drive-01, 6@@d@@i, 11@@d@@we, 14@@s@@test-01, 10@@a@@and, 1@@d@@He, 2@@b@@show-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	best	_	good	JJS	O	(g<root> / --LEX--  :degree (m / most))	good-02	()	0	ROOT	true
3	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
5	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
6	service	_	service	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	serve-01	(mod())	2	MOD_mod	true
7	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@b@@serve-01, 2@@g@@good-02, 2@@m@@most]
sentence=1	It's	it's	it's	PRP	O	_	have-polarity-91	_	0	IGNORE	true
2	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	doubt,	_	doubt,	NNS	O	_	i	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	8	MOD_s	true
7	service	_	service	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	serve-01	(mod())	8	MOD_mod	true
8	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op1	true
9	I've	i've	i've	JJ	O	_	-	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
13	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	to	_	to	TO	O	_	and	_	0	IGNORE	true
15	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	12	MOD_s	true
16	clear,	_	clear,	NNP	O	_	-	_	0	IGNORE	true
17	the	_	the	DT	O	_	thing	_	0	IGNORE	true
18	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o2	true
19	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	charged	_	charge	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
21	me	_	I	PRP	O	_	i	_	0	IGNORE	true
22	was	_	be	VBD	O	_	monetary-quantity	_	0	IGNORE	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	same	_	same	JJ	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o2(), s(), o())	12	APP_op2	true
25	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
26	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
27	tire	_	tire	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
29	in	_	in	IN	O	(d<root> / --LEX--)	i	()	12	APP_s	true
30	Nashville's	nashville's	Nashville's	NNP	O	_	thing	_	0	IGNORE	true
31	price	_	price	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
32	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
33	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	true
34	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
37	rear	_	rear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	tire	_	tire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
39	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@p@@serve-01, 13@@p@@just, 19@@d@@he, 18@@d@@price-01, 28@@d@@guy, 2@@explicitanon0@@-, 10@@n@@ever, 12@@a@@and, 36@@p@@other, 15@@s@@and, 27@@p@@tire, 6@@m@@most, 31@@s@@price-01, 8@@s@@experience-01, 38@@d@@tire, 11@@s@@have-03, 33@@s@@put-01, 24@@c@@same-01, 37@@p@@rear, 29@@d@@i, 6@@b2@@good-02, 20@@s@@charge-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
2	mean,	_	mean,	VBP	O	_	expressive	_	0	IGNORE	true
3	that's	_	that's	IN	O	_	$LEMMA$-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	14	APP_o	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	works	_	work	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	5	APP_mod	true
8	at	_	at	IN	O	_	thing	_	0	IGNORE	true
9	amusement	_	amusement	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	parks:	_name_	parks:	NNP	O	_	mean-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
12	longest	_	long	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	long-03	(s())	13	MOD_s	true
13	lines	_	line	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
14	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
15	at	_	at	IN	O	_	thing	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	best	_	good	JJS	O	(m2<root> / most  :degree-of (g / --LEX--  :ARG1 (c<s>)))	good-02	(s())	18	MOD_s	true
18	rides	_	ride	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@be-located-at-91, 5@@t@@way, 17@@m2@@most, 9@@p@@amusement, 6@@d@@it, 17@@g@@good-02, 12@@b2@@long-03, 12@@m@@most, 1@@d@@i, 13@@t@@line, 18@@b@@ride, 7@@s@@work-09]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	rrly	_	rrly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	respect-01	(mod())	3	MOD_mod	true
3	seek	_	seek	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	cehf	_	cehf	NN	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	true
6	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
7	to	_	to	TO	O	_	and	_	0	IGNORE	true
8	introduce	_	introduce	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
9	myself--	_	myself--	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	10	MOD_s	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
11	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	21	MOD_mod	true
13	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
15	went--	_	went--	NNP	O	_	$LEMMA$	_	0	IGNORE	true
16	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
17	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	point	_	point	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	APP_o	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	asking	_	ask	VBG	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-02	(s(s_UNIFY_o()))	19	APP_s	true
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	wait	_	wait	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
24	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	introduce	_	introduce	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_s	true
27	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
28	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	29	APP_op2	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	26	APP_o	true
30	myself	_	myself	PRP	O	_	person	_	0	IGNORE	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	chef	_	chef	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	26	APP_o2	true
34	to	_	to	TO	O	_	thing	_	0	IGNORE	true
35	tell	_	tell	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	26	MOD_mod	true
36	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
38	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	amr-unknown	(mod())	39	MOD_mod	true
39	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	35	APP_o	true
40	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
41	meals	_	meal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
42	were	_	be	VBD	O	_	person	_	0	IGNORE	true
43	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@d@@_NAME_, 35@@r2@@tell-01, 2@@t@@respect-01, 3@@s@@seek-01, 23@@s@@wait-01, 33@@p2@@person, 21@@s@@ask-02, 24@@d@@person, 28@@f@@friend, 12@@o@@ordinal-entity, 28@@p@@person, 28@@h@@have-rel-role-91, 33@@e2@@chef, 29@@a@@and, 12@@explicitanon0@@2, 8@@s@@introduce-01, 1@@d@@i, 14@@d@@we, 17@@s@@make-01, 26@@b@@introduce-01, 9@@s@@and, 10@@s@@contrast-01, 41@@d@@meal, 37@@p@@just, 38@@s@@amr-unknown, 39@@s@@good-02, 19@@s@@point]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_s	true
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	APP_dom	true
6	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	doctors	_	doctor	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	offices	_	office	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_mod	true
10	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	17	MOD_s	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	absurd	_	absurd	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
17	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
18	I'm	i'm	I'm	NNPS	O	_	cause-01	_	0	IGNORE	true
19	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
20	that	_	that	IN	O	_	i	_	0	IGNORE	true
21	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	22	MOD_mod	true
22	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	19	APP_s	true
25	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	27	MOD_mod	true
26	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	27	MOD_mod	true
27	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
29	particlular	_	particlular	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
30	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@p@@little, 11@@b@@here, 8@@d@@office, 9@@s@@work-01, 5@@t@@way, 6@@explicitanon0@@some, 12@@s@@person, 26@@explicitanon0@@2, 29@@p@@particlular, 19@@s@@happy-01, 10@@b@@around, 25@@p@@that, 17@@s@@cause-01, 15@@s@@bit, 22@@d@@guy, 7@@p@@doctor, 16@@r@@absurd, 1@@d@@i, 24@@s@@do-02, 27@@d@@thing, 21@@p@@this, 2@@s@@feel-02, 23@@explicitanon0@@-]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	4	MOD_mod	true
4	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	interest-01	(s(), o())	8	APP_op1	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	15	APP_s	true
9	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	likely	_	likely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	would	_	would	MD	O	_	thing	_	0	IGNORE	true
12	have	_	have	VB	O	_	$LEMMA$-condition-91	_	0	IGNORE	true
13	bought	_	buy	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_op2	true
14	it,	_	it,	NNP	O	_	_NAME_	_	0	IGNORE	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	sales	_	sale	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	sell-01	(mod())	18	MOD_mod	true
18	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	dealt	_	deal	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	18	MOD_s	true
21	with	_	with	IN	O	_	-	_	0	IGNORE	true
22	ruined	_	ruin	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	deal	_	deal	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[9@@s@@very, 22@@s@@ruin-01, 8@@a@@and, 10@@s@@likely-01, 1@@d@@i, 7@@d@@car, 17@@p@@sell-01, 3@@s@@extreme, 24@@d@@deal-01, 4@@s@@interest-01, 18@@d@@guy, 15@@s@@contrast-01, 13@@s@@buy-01, 20@@s@@deal-01]
sentence=1	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	5	MOD_mod	true
2	mean,	_	mean,	VBP	O	_	-	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	care	_	care	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
6	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
7	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
9	know,	_	know,	NNP	O	_	contrast-01	_	0	IGNORE	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
11	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	pretends	_	pretend	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
14	to	_	to	TO	O	_	person	_	0	IGNORE	true
15	know	_	know	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
16	and	_	and	CC	O	(o<root> / --LEX--  :op2 (e2<op2>)  :op1 (i<op1>)  :condition-of (h<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	5	MOD_mod	true
17	tells	_	tell	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_op2	true
18	me	_	I	PRP	O	_	and	_	0	IGNORE	true
19	BS	bs	BS	NNP	O	_	$LEMMA$	_	0	IGNORE	true
20	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
22	face,	_	face,	.	O	_	i	_	0	IGNORE	true
23	there's	_	there'	NNS	O	_	possible-01	_	0	IGNORE	true
24	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	29	MOD_mod	true
25	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
26	I'm	i'm	i'm	WP	O	_	person	_	0	IGNORE	true
27	going	_	go	VBG	O	_	say-01	_	0	IGNORE	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	trust	_	trust	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
30	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
32	matters	_	matter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
33	turn	_	turn	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	29	MOD_mod	true
34	to	_	to	IN	O	_	thing	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	40	MOD_s	true
37	of	_	of	IN	O	_	thing	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_op1	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_o	true
41	financing	_	financing	NN	O	(d<root> / --LEX--)	fund-01	()	40	APP_op2	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@p@@i, 3@@d@@i, 24@@explicitanon0@@-, 25@@t@@way, 7@@d@@he, 15@@d@@know-01, 16@@o@@and, 39@@d@@car, 10@@s@@contrast-01, 41@@d@@fund-01, 40@@a@@and, 13@@s@@pretend-01, 29@@d@@trust-01, 33@@t@@turn-01, 5@@s@@care-01, 4@@explicitanon0@@-, 32@@d@@matter, 36@@c@@price-01, 17@@s@@tell-01, 8@@explicitanon0@@-, 36@@t@@thing]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_op1	true
6	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
7	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	returning	_	return	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
16	would	_	would	MD	O	_	thing	_	0	IGNORE	true
17	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	trash	_	trash	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
24	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
25	could	_	could	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	18	MOD_mod	true
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
27	return	_	return	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	25	APP_s	true
28	it	_	it	PRP	O	_	i	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@d@@trash, 7@@s@@use-01, 27@@d@@return-02, 23@@s@@cause-01, 26@@explicitanon0@@-, 18@@s@@put-01, 13@@a@@and, 1@@d@@She, 15@@d@@company, 2@@s@@tell-01, 25@@i@@possible-01, 5@@s@@possible-01, 17@@p@@only, 9@@d@@piece, 6@@explicitanon0@@-, 12@@s@@return-01]
sentence=1	With	with	with	IN	O	_	have-03	_	0	IGNORE	true
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
3	smirk	_	smirk	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
4	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
5	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	face	_	face	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
9	me	_	I	PRP	O	_	i	_	0	IGNORE	true
10	NO	no	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
11	MONEY	money	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
13	BEING	being	be	VBG	O	_	person	_	0	IGNORE	true
14	RETURNED	returned	return	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
16	THAT	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
17	IS	is	be	VBZ	O	_	i	_	0	IGNORE	true
18	THE	the	the	DT	O	_	cause-01	_	0	IGNORE	true
19	WAY	way	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
20	IT	it	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
21	WAS	was	be	VBD	O	_	cause-01	_	0	IGNORE	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@money, 20@@d@@it, 14@@s@@return-02, 6@@b@@face, 16@@p@@that, 3@@t@@smirk-01, 19@@d@@way, 7@@d@@she, 8@@b@@tell-01, 10@@explicitanon0@@-, 15@@a@@and]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	3	MOD_mod	true
3	recommended	_	recommend	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
4	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
6	described	_	describe	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	APP_op2	true
7	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	"Saintly	"saintly	"saintly	CD	O	(s<root> / --LEX--  :ARG0 (y<s>))	competent-01	(s())	11	MOD_s	true
11	Instructor	instructor	instructor	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o2	true
13	Simply	simply	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	16	MOD_s	true
14	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	5	APP_o	true
15	Best	best	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	16	MOD_s	true
16	Instructor	instructor	instructor	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	12	APP_op2	true
17	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	....very	_	....very	.	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	15	MOD_mod	true
20	calm,	_	calm,	NNP	O	_	and	_	0	IGNORE	true
21	pleasant	_	pleasant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	5	MOD_op1	true
23	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	detailed	_	detailed	JJ	O	(d<root> / --LEX--)	$LEMMA$-03	()	22	APP_op3	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	giving	_	give	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
27	instructions"	_	instructions"	.	O	_	thing	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@b2@@good-02, 1@@d@@She, 19@@s@@so, 26@@d@@give-01, 13@@s@@simple-02, 16@@p2@@person, 14@@s@@thing, 6@@b@@describe-01, 24@@d@@detailed-03, 16@@e2@@instructor, 3@@s@@recommend-01, 15@@m@@most, 2@@s@@high, 11@@p2@@person, 21@@s@@pleasant-01, 10@@s@@competent-01, 23@@s@@very, 22@@a@@and, 12@@a@@and, 5@@a@@and, 11@@e2@@instructor]
sentence=1	To	to	to	IN	O	_	say-01	_	0	IGNORE	true
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
3	friend,	_	friend,	NNS	O	_	i	_	0	IGNORE	true
4	thank	_	thank	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
6	for	_	for	IN	O	_	i	_	0	IGNORE	true
7	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	recommendation...	_	recommendation...	XX	O	_	i	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_o2	true
12	to	_	to	IN	O	_	thing	_	0	IGNORE	true
13	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
14	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	saying	_	say	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
17	Gerry	_name_	Gerry	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
20	"Saintly	"saintly	"saintly	ADD	O	(s<root> / --LEX--  :ARG0 (y<s>))	know-01	(s())	21	MOD_s	true
21	Instructor	instructor	instructor	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	16	APP_s	true
22	...Absolutely	...absolutely	...Absolutely	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	compare-01	(s())	23	MOD_s	true
23	Simple	simple	simple	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_o	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Best	best	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	26	MOD_s	true
26	Instructor	instructor	Instructor	NNP	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	teach-01	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_s	true
28	Best	best	Best	NNP	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	30	MOD_s	true
29	Driving	driving	drive	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	drive-01	(mod())	30	MOD_mod	true
30	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
31	there	_	there	EX	O	_	thing	_	0	IGNORE	true
32	is	_	be	VBZ	O	_	ex$FORM$t-01	_	0	IGNORE	true
33	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[22@@s@@compare-01, 23@@s@@simple-02, 17@@p@@person, 9@@d@@you, 21@@s@@instructor, 14@@d@@word, 25@@b2@@good-02, 16@@s@@say-01, 11@@s@@true-01, 30@@d@@school, 28@@m@@most, 26@@p2@@person, 4@@b@@thank-01, 28@@b2@@good-02, 5@@d@@you, 29@@p@@drive-01, 20@@s@@know-01, 26@@e2@@teach-01, 17@@n@@_NAME_, 25@@m@@most, 27@@a@@and]
sentence=1	Everything	everything	Everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	have	_	have	VBP	O	_	thing	_	0	IGNORE	true
4	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
5	there	_	there	EX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
7	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	authentic	_	authentic	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	12	MOD_s	true
12	tasting	_	tasting	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op2	true
13	than	_	than	IN	O	_	thing	_	0	IGNORE	true
14	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	restaurant	_	restaurant	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	name	_	0	IGNORE	true
20	San_Antonio	_name_	Antonio	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	we	_	we	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
23	have	_	have	VBP	O	_	person	_	0	IGNORE	true
24	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
25	to--and	_	to--and	NNP	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	10	MOD_mod	true
26	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	25	APP_op2	true
27	me	_	I	PRP	O	_	i	_	0	IGNORE	true
28	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	have	_	have	VBP	O	_	person	_	0	IGNORE	true
30	been	_	be	VBN	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	26	APP_s	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	a	_	a	DT	O	_	thing	_	0	IGNORE	true
33	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@c@@country, 4@@s@@get-01, 2@@d@@we, 22@@b@@we, 15@@p@@other, 8@@s@@more, 30@@d@@be-located-at-91, 17@@p@@restaurant, 21@@b@@area, 14@@p@@any, 25@@b@@to--and, 10@@a@@and, 9@@s@@authentic-02, 26@@s@@trust-01, 1@@d@@Everything, 20@@n@@_NAME_, 11@@b@@good-02, 12@@s@@tasting-02, 33@@explicitanon0@@lot, 11@@m@@more, 5@@b@@there, 16@@n@@_NAME_]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
3	PA	pa	pa	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	10	APP_s	true
4	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	5	APP_s	true
5	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	3	MOD_o	true
6	to	_	to	IN	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	day	_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	"it	_	"it	.	O	(d<root> / --LEX--)	cause-01	()	12	APP_s	true
12	must	_	must	MD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	infer-01	(o(s()))	10	APP_o	true
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
14	comforting	_	comfort	VBG	O	(a2<root> / --LEX--  :ARG0 (c<s>)  :concession-of (a<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
17	gone	_	go	VBN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	12	APP_o	true
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	surgeon	_	surgeon	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	17	APP_o	true
22	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	21	MOD_s	true
23	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
25	will	_	will	MD	O	_	thing	_	0	IGNORE	true
26	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	21	MOD_s	true
27	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
28	for	_	for	IN	O	_	i	_	0	IGNORE	true
29	you"	_	you"	NNP	O	_	and	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@n@@day, 3@@p@@person, 11@@d@@cause-01, 21@@s@@surgeon, 3@@f@@pa, 27@@d@@nothing, 14@@a2@@comfort-01, 12@@c@@infer-01, 1@@p@@even, 10@@s@@say-01, 26@@s@@do-02, 4@@d@@i, 5@@g@@go-02, 17@@g@@go-02, 20@@d@@heart, 3@@h@@have-rel-role-91, 22@@s@@resemble-01, 8@@p@@other]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	APP_op1	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
9	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	to	_	to	IN	O	_	person	_	0	IGNORE	true
12	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
13	he'd	_	he'd	PRP	O	_	person	_	0	IGNORE	true
14	send	_	send	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	APP_o	true
15	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
16	out	_	out	RP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	to	_	to	TO	O	_	and	_	0	IGNORE	true
18	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	14	MOD_mod	true
19	at	_	at	IN	O	_	and	_	0	IGNORE	true
20	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
21	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
22	couldn't	_	couldn't	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	promise	_	promise	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
24	when-	_	when-	CD	O	_	-	_	0	IGNORE	true
25	two_weeks	_name_	week	NNS	O	(d<root> / --LEX--)	_NAME_	()	27	APP_s	true
26	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	23	APP_s	true
28	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op2	true
29	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
30	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_op2	true
32	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@We, 10@@s@@speak-01, 12@@s@@say-01, 5@@d@@office, 28@@s@@go-01, 26@@s@@come-01, 16@@d@@out, 23@@s@@promise-01, 25@@d@@_NAME_, 3@@s@@call-02, 32@@d@@nothing, 27@@a@@and, 18@@s@@look-01, 31@@s@@hear-01, 8@@d@@man, 15@@d@@someone, 6@@a@@and, 20@@d@@it, 21@@s@@contrast-01, 2@@n@@then, 29@@d@@and, 22@@explicitanon0@@-, 14@@b@@send-01]

