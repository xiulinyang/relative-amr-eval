sentence=1	Some	some	some	DT	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
2	2,000	_	2,000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	1	APP_op1	true
3	junior	_	junior	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	officers	_	officer	NNS	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	19	MOD_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	Baath	_name_	Baath	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	army	_	army	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	recalled	_	recall	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	duty	_	duty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	in	_	in	IN	O	_	after	_	0	IGNORE	true
16	recent	_	recent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	months,	_	months,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
18	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
19	Chalabi	_name_	Chalabi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
20	would	_	would	MD	O	_	name	_	0	IGNORE	true
21	have	_	have	VB	O	_	-	_	0	IGNORE	true
22	blocked	_	block	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
23	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
24	he	_	he	PRP	O	_	-	_	0	IGNORE	true
25	could	_	could	MD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	possible-01	(mod(), s())	22	MOD_mod	true
26	have	_	have	VB	O	_	event	_	0	IGNORE	true
27	.	_	.	.	O	_	eye	_	0	IGNORE	true

nodealignment=[9@@d@@army, 22@@s@@block-01, 8@@n@@_NAME_, 7@@p@@old, 2@@d@@_NUMBER_, 1@@s@@some, 4@@h@@have-org-role-91, 14@@d@@duty, 3@@p@@junior, 16@@p@@recent, 4@@g@@officer, 19@@p@@person, 12@@s@@recall-01, 18@@d@@something, 25@@o@@possible-01, 19@@n@@_NAME_]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
4	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_op1	true
7	do	_	do	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	6	APP_s	true
8	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
10	really,	_	really,	NNP	O	_	multi-sentence	_	0	IGNORE	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	23	APP_s	true
12	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	suggesting	_	suggest	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
17	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-out-17	(s())	19	APP_op1	true
18	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	14	APP_o	true
20	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	APP_op2	true
21	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	are	_	be	VBP	O	_	person	_	0	IGNORE	true
23	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_op2	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	dream	_	dream	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	26	MOD_mod	true
26	land	_	land	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@b@@land, 7@@b@@do-02, 11@@d@@person, 16@@d@@we, 5@@d@@we, 23@@s@@live-01, 9@@d@@it, 19@@a@@and, 1@@a@@and, 4@@d@@nothing, 6@@s@@possible-01, 14@@s@@suggest-01, 20@@s@@fight-01, 17@@s@@go-out-17, 25@@p@@dream-01]
sentence=1	"They	"they	"they	EX	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	targetting	_	targette	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op1	true
4	ambulances",	_	ambulances",	NNP	O	_	-	_	0	IGNORE	true
5	"American	"american	"american	CD	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	snipers	_	sniper	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	shooting	_	shoot	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
9	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
11	pregnant	_	pregnant	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	women",	_	women",	NNS	O	_	$LEMMA$	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
14	"They	"they	"They	NNS	O	_	$LEMMA$	_	0	IGNORE	true
15	are	_	be	VBP	O	_	person	_	0	IGNORE	true
16	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op3	true
17	cluster	_	cluster	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	bombs	_	bomb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	civilians"	_	civilians"	NFP	O	_	and	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	get	_	get	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-22	(o(s()))	13	APP_op4	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	APP_o	true
27	from	_	from	IN	O	_	thing	_	0	IGNORE	true
28	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@p@@cluster, 5@@c@@country, 18@@d@@bomb, 26@@s@@hear-01, 9@@d@@child, 22@@p@@all, 6@@d@@sniper, 16@@s@@use-01, 13@@a@@and, 23@@d@@you, 3@@s@@targette-01, 5@@n@@_NAME_, 1@@d@@"they, 10@@a@@and, 8@@s@@shoot-01, 24@@c@@get-22, 11@@d@@pregnant]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	urge	_	urge	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	protect	_	protect	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_s	true
6	gather	_	gather	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_op2	true
7	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	overwhelming,	_	overwhelming,	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	APP_op2	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	grateful	_	grateful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	appreciate-02	(s())	14	APP_o	true
18	for	_	for	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	blessings	_	blessing	NNS	O	(d<root> / --LEX--)	bless-01	()	17	APP_s	true
21	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
22	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	MOD_s	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@s@@have-03, 11@@p@@almost, 8@@p@@all, 14@@s@@make-02, 5@@a@@and, 17@@s@@appreciate-02, 7@@d@@they, 20@@d@@bless-01, 12@@s@@overwhelming,, 13@@a@@and, 4@@s@@protect-01, 2@@s@@urge-01, 6@@s@@gather-01, 16@@s@@more]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	biggest	_	big	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	big	(mod())	3	MOD_mod	true
3	threat	_	threat	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$en-01	(s(), o())	0	ROOT	true
4	Israel	_name_	Israel	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	faces	_	face	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
6	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
8	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
9	conventional	_	conventional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	armies	_	army	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	3	APP_o	true
12	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	asymmetrical	_	asymmetrical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	tactics	_	tactic	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	Palestinian	_name_	palestinian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	20	MOD_mod	true
18	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	19	MOD_mod	true
19	liberation	_	liberation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	free-04	(mod())	20	MOD_mod	true
20	movements	_	movement	NNS	O	(d<root> / --LEX--)	$LEMMA$-07	()	15	APP_poss	true
21	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[19@@p@@free-04, 20@@d@@movement-07, 4@@n@@_NAME_, 4@@c@@country, 18@@p@@nation, 15@@m@@tactic, 10@@d@@army, 17@@n@@_NAME_, 2@@m@@most, 5@@s@@face-01, 9@@p@@conventional, 7@@explicitanon0@@-, 11@@s@@contrast-01, 17@@c@@country, 3@@t@@threaten-01, 14@@p@@asymmetrical, 2@@t@@big]
sentence=1	Despite	despite	despite	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	5	MOD_s	true
2	Sept._11,	_name_	11,	CD	O	_	_NAME_	_	0	IGNORE	true
3	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	supports	_	support	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	have-concession-91	_	0	IGNORE	true
7	Kashmir	_name_	Kashmir	NNP	O	(n3<root> / --LEX--  :name-of (w / world-region  :location-of (s<mod>)))	_NAME_	(mod())	8	MOD_mod	true
8	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	back	_	back	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	jihad	_	jihad	NN	O	(d<root> / --LEX--)	_NAME_	()	10	APP_o	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	part	_	part	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	price	_	price	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	1	MOD_s	true
17	Washington	_name_	Washington	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
18	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
19	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
20	to	_	to	TO	O	_	and	_	0	IGNORE	true
21	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	19	MOD_mod	true
22	Pervez	_name_	Pervez	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	Musharraf	musharraf	Musharraf	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
24	happy	_	happy	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@p@@still, 19@@s@@pay-01, 10@@s@@back-01, 7@@n3@@_NAME_, 5@@s@@support-01, 3@@n@@_NAME_, 22@@n@@_NAME_, 23@@p@@person, 21@@s@@keep-02, 1@@s@@despite, 23@@n@@_NAME_, 16@@s@@price-01, 24@@d@@happy-01, 3@@c@@country, 7@@w@@world-region, 8@@d@@group, 11@@d@@_NAME_, 17@@n@@_NAME_, 17@@g@@government-organization]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	doubt	_	doubt	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_s	true
5	that	_	that	IN	O	_	name	_	0	IGNORE	true
6	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
7	Iraqis	_name_	Iraqis	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
8	regard	_	regard	VBP	O	(t<root> / thing  :ARG1-of (t2 / --LEX--  :ARG0 (i<s>)  :ARG2 (p2<o2>)))	$LEMMA$-01	(o2(), s())	4	APP_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	date	_	date	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
11	of	_	of	IN	O	_	person	_	0	IGNORE	true
12	30_January	_name_	January	NNP	O	(p<root> / person  :name (n / --LEX--)  :topic-of (a<mod>))	_NAME_	(mod())	10	MOD_mod	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	day	_	day	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
16	of	_	of	IN	O	_	name	_	0	IGNORE	true
17	renewed	_	renew	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	hope,	_	hope,	NNP	O	_	-	_	0	IGNORE	true
19	one	_	one	CD	O	_	1	_	0	IGNORE	true
20	they	_	they	PRP	O	_	person	_	0	IGNORE	true
21	have	_	have	VBP	O	_	person	_	0	IGNORE	true
22	been	_	be	VBN	O	_	person	_	0	IGNORE	true
23	awaiting	_	await	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
24	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
26	lives,	_	lives,	NNS	O	_	and	_	0	IGNORE	true
27	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
28	at	_	at	IN	O	_	contrast-01	_	0	IGNORE	true
29	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
30	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	MOD_s	true
31	time,	_	time,	NNP	O	_	and	_	0	IGNORE	true
32	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
34	are	_	be	VBP	O	_	person	_	0	IGNORE	true
35	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	dreading	_	dread	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	27	APP_o	true
37	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[24@@p@@all, 7@@n@@_NAME_, 15@@d@@day, 12@@p@@person, 12@@n@@_NAME_, 36@@s@@dread-01, 4@@s@@doubt-01, 6@@explicitanon0@@many, 32@@explicitanon0@@many, 7@@c@@country, 30@@s@@same-01, 33@@d@@other, 3@@explicitanon0@@-, 35@@n@@already, 8@@t2@@regard-01, 8@@t@@thing, 17@@s@@renew-01, 27@@s@@contrast-01, 23@@s@@await-01, 10@@d@@date]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
3	have	_	have	VB	O	_	person	_	0	IGNORE	true
4	taken	_	take	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_s	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	cue	_	cue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	from	_	from	IN	O	_	person	_	0	IGNORE	true
8	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	bomber	_	bomber	NN	O	(d<root> / --LEX--)	bomb-01	()	4	APP_o2	true
10	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
11	pesky	_	pesky	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
12	dark-skinned	_	dark-skinned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	18	MOD_s	true
13	foreigners	_	foreigner	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	foreign	(mod())	14	MOD_mod	true
14	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	extradited,	_	extradited,	NNP	O	_	name	_	0	IGNORE	true
16	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	17	APP_o	true
17	operative	_	operative	NN	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	18	MOD_s	true
18	Michael_Meiring	_name_	Meiring	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_o	true
19	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[17@@j@@operative, 11@@p@@pesky, 18@@n@@_NAME_, 16@@n@@_NAME_, 8@@p@@another, 4@@b@@take-01, 13@@p@@foreign, 9@@d@@bomb-01, 10@@p@@some, 16@@g@@government-organization, 14@@s@@want-01, 17@@h@@have-org-role-91, 18@@p@@person, 12@@s@@_NAME_, 1@@d@@He, 6@@d@@cue, 2@@s@@recommend-01]
sentence=1	For	for	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	weeks,	_name_	weeks,	NNS	O	_	multiple	_	0	IGNORE	true
3	reporters	_	reporter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	report-01	()	4	APP_s	true
4	scoured	_	scour	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Alabama	_name_	Alabama	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
6	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	search	_	search	NN	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
8	of	_	of	IN	O	_	person	_	0	IGNORE	true
9	pilots	_	pilot	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	10	APP_op1	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
11	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	who	_	who	WP	O	_	person	_	0	IGNORE	true
13	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
14	have	_	have	VB	O	_	person	_	0	IGNORE	true
15	remembered	_	remember	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	MOD_s	true
16	seeing	_	see	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
17	Mr.	mr.	Mr.	NNP	O	_	have-org-role-91	_	0	IGNORE	true
18	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
19	at	_	at	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	serving	_	serve	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	the_National_Guard	_name_	Guard	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
27	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p2@@person, 13@@s@@possible-01, 18@@p@@person, 9@@e2@@pilot-01, 18@@n@@_NAME_, 11@@d@@anyone, 10@@a@@or, 3@@e2@@report-01, 24@@v@@serve-01, 26@@m@@military, 16@@s@@see-01, 5@@n@@_NAME_, 26@@n@@_NAME_, 5@@s@@state, 3@@p2@@person, 4@@s@@scour-01, 15@@c@@remember-01, 7@@s@@search-01]
sentence=1	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	2	MOD_s	true
2	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
3	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
4	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	said	_	say	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
7	working	_	work	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	12	APP_s	true
8	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	Blount	_name_	Blount	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	APP_o	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	transferred	_	transfer	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	12	APP_o	true
15	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
16	the_Alabama_Air_National_Guard	_name_	Guard	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
17	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[16@@n@@_NAME_, 9@@p@@person, 5@@s@@say-01, 1@@p2@@president, 2@@n@@_NAME_, 1@@h@@have-org-role-91, 9@@n@@_NAME_, 16@@m@@military, 7@@s@@work-01, 14@@s@@transfer-01, 4@@n@@always, 2@@p@@person, 12@@s@@cause-01]
sentence=1	In	in	in	IN	O	_	elect-01	_	0	IGNORE	true
2	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-15	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	house	_	house	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	rented	_	rent	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	disrepair--with	_	disrepair--with	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	4	MOD_o	true
12	damage	_	damage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
13	to	_	to	IN	O	_	post-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	walls	_	wall	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	chandelier	_	chandelier	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
19	destroyed--that	_	destroyed--that	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	Montgomery	_name_	Montgomery	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
23	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
24	owned	_	own	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	MOD_s	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	grumble	_	grumble	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
28	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	unpaid	_	unpaid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	pay-01	(s())	32	MOD_s	true
31	repair	_	repair	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	32	APP_s	true
32	bill	_	bill	NN	O	(f<root> / --LEX--  :ARG3 (c<s>)  :topic-of (i<mod>))	$LEMMA$-01	(mod(), s())	27	MOD_mod	true
33	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[8@@s@@rent-01, 4@@s@@leave-15, 24@@s@@own-01, 11@@s@@disrepair--with, 22@@d@@family, 30@@s@@pay-01, 6@@d@@house, 31@@d@@repair-01, 32@@f@@bill-01, 16@@a@@and, 21@@n@@_NAME_, 12@@s@@damage-01, 26@@p@@still, 3@@d@@he, 18@@d@@chandelier, 10@@s@@such, 15@@d@@wall, 19@@explicitanon0@@-, 27@@s@@grumble-01]
sentence=1	Archibald	_name_	Archibald	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	Mr.	mr.	Mr.	NNP	O	_	governor	_	0	IGNORE	true
4	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	would	_	would	MD	O	_	person	_	0	IGNORE	true
6	come	_	come	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	2	APP_o	true
7	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	and,	_	and,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
13	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
14	way,	_	way,	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	offer	_	offer	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	6	MOD_mod	true
16	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
17	stories	_	story	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	about	_	about	IN	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	drinking	_	drinking	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	drink-01	(mod())	17	MOD_mod	true
21	he'd	_	he'd	NN	O	_	cause-01	_	0	IGNORE	true
22	done	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	night	_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
25	before,	_	before,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	cause-01	(mod())	2	MOD_mod	true
26	kind	_	kind	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-of	(mod())	31	MOD_mod	true
27	of	_	of	RB	O	_	cause-01	_	0	IGNORE	true
28	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
29	a	_	a	DT	O	_	thing	_	0	IGNORE	true
30	conversation	_	conversation	NN	O	(d<root> / --LEX--)	converse-01	()	31	APP_o	true
31	starter	_	starter	NN	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$	(mod(), s(), o())	25	MOD_s	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[31@@l@@starter, 24@@d@@date-entity, 24@@m@@night, 1@@n@@_NAME_, 25@@p@@cause-01, 20@@a@@drink-01, 17@@d@@story, 9@@d@@office, 13@@s@@friendly-01, 6@@g@@come-01, 2@@s@@say-01, 26@@p@@kind-of, 30@@d@@converse-01, 4@@n@@_NAME_, 1@@p@@person, 4@@p@@person, 15@@t@@offer-01, 22@@s@@do-02]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
4	nothing,	_	nothing,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
5	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
7	weren't	_	weren't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
8	the	_	the	DT	O	_	-	_	0	IGNORE	true
9	sort	_	sort	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	things	_	thing	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
13	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	1	MOD_o	true
14	Bush	_name_	Bush	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	told	_	tell	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	"girls"	_	"girls"	NNP	O	_	-	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@-, 5@@s@@cause-01, 12@@d@@guy, 11@@p@@thing, 13@@s@@resemble-01, 14@@n@@_NAME_, 2@@d@@that, 6@@d@@they, 15@@t@@tell-01, 9@@p@@sort, 1@@s@@contrast-01, 3@@s@@mean-01]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	200,000	_	200,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
3	guns	_	gun	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
7	to	_	to	IN	O	_	person	_	0	IGNORE	true
8	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
9	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
11	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
12	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	smuggled	_	smuggle	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_s	true
15	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	terrorists,	_	terrorists,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
17	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
19	feared	_	fear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
20	yesterday	_name_	yesterday	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@some, 5@@n@@_NAME_, 6@@b@@send-01, 2@@explicitanon0@@_NUMBER_, 8@@c@@country, 19@@s@@fear-01, 20@@n@@yesterday, 11@@s@@possible-01, 5@@c@@country, 3@@d@@gun, 8@@n@@_NAME_, 9@@p@@security, 14@@s@@smuggle-01, 10@@d@@force]
sentence=1	It's	it's	it's	PRP	O	_	-	_	0	IGNORE	true
2	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
4	bang-your-head-against-the-wall	_	bang-your-head-against-the-wall	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
5	moment,	_	moment,	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	0	ROOT	true
6	reading	_	read	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	read-01	(s())	5	APP_op2	true
7	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	play	_	play	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_s	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	incompetence	_	incompetence	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	receives,	_	receives,	.	O	_	cause-01	_	0	IGNORE	true
14	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
15	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	5	APP_op1	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Administration's	_name_	Administration's	NNP	O	_	_NAME_	_	0	IGNORE	true
20	harshest	_	harsh	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	strict	(s())	22	MOD_s	true
21	mainstream	_	mainstream	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	critics	_	critic	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$ize-01	()	17	APP_s	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[22@@p2@@person, 21@@s@@mainstream-02, 11@@p@@incompetence, 9@@s@@play, 5@@a@@and, 7@@p@@again, 20@@m@@most, 4@@p@@_NAME_, 2@@n@@always, 14@@p@@even, 20@@b2@@strict, 6@@s@@read-01, 12@@d@@theory, 16@@p@@some, 22@@e2@@criticize-01, 17@@s@@include-91]
sentence=1	An	an	an	DT	O	_	1	_	0	IGNORE	true
2	editorial	_	editorial	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
3	in	_	in	IN	O	_	question-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
5	church-owned	_	church-owned	JJ	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	Deseret_Morning_News	_name_	News	NNP	O	(b<root> / broadcast-program  :name (n / --LEX--)  :source-of (v<mod>))	_NAME_	(mod())	2	MOD_mod	true
7	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
8	Salt_Lake_City	_name_	City	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	earlier_this_year	_name_	year	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
10	acknowledged	_	acknowledge	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	that	_	that	IN	O	_	and	_	0	IGNORE	true
12	"the	_	"the	NNP	O	_	_NAME_	_	0	IGNORE	true
13	state's	_	state's	XX	O	_	person	_	0	IGNORE	true
14	history,	_	history,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
15	a	_	a	DT	O	_	person	_	0	IGNORE	true
16	conservative	_	conservative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	belief	_	belief	NN	O	(d<root> / --LEX--)	believe-01	()	21	APP_op1	true
18	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
19	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	MOD_s	true
20	choice,	_	choice,	NNP	O	_	cause-01	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	APP_s	true
22	an	_	an	DT	O	_	thing	_	0	IGNORE	true
23	unwillingness	_	unwillingness	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	APP_op2	true
24	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
25	stir	_	stir	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-03	(s())	23	APP_s	true
26	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
27	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
28	hornet's	_	hornet's	JJ	O	_	person	_	0	IGNORE	true
29	nest	_	nest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	33	MOD_mod	true
33	media	_	medium	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
34	have	_	have	VBP	O	_	person	_	0	IGNORE	true
35	likely	_	likely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
36	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
37	contributed	_	contribute	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	35	APP_s	true
38	to	_	to	IN	O	_	thing	_	0	IGNORE	true
39	the	_	the	DT	O	_	low-04	_	0	IGNORE	true
40	kid-glove	_	kid-glove	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	approach	_	approach	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	37	APP_o	true
42	lawmakers	_	lawmaker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	legislate-01	()	43	APP_op1	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	47	APP_s	true
44	law-enforcement	_	law-enforcement	JJ	O	(g<root> / government-organization  :name (n / --LEX--))	enforce-01	()	45	APP_s	true
45	officers	_	officer	NNS	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	43	APP_op2	true
46	have	_	have	VBP	O	_	person	_	0	IGNORE	true
47	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	41	MOD_o	true
48	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
49	dealing	_	deal	VBG	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	47	MOD_mod	true
50	with	_	with	IN	O	_	-	_	0	IGNORE	true
51	polygamous	_	polygamous	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_o	true
52	communities.	_	communities.	NN	O	_	_NAME_	_	0	IGNORE	true
53	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@n@@_NAME_, 9@@n@@_NAME_, 43@@a@@and, 35@@s@@likely-01, 47@@s@@take-01, 6@@b@@broadcast-program, 37@@t@@contribute-01, 5@@n@@_NAME_, 36@@p@@all, 8@@c@@city, 19@@s@@free-04, 40@@p@@kid-glove, 32@@p@@nation, 17@@d@@believe-01, 29@@d@@nest, 42@@p2@@person, 23@@s@@unwillingness, 49@@p@@deal-01, 25@@s@@stir-up-03, 45@@p2@@officer, 44@@n@@enforce-01, 10@@s@@acknowledge-01, 21@@a@@and, 2@@d@@editorial, 6@@n@@_NAME_, 45@@h@@have-org-role-91, 51@@d@@polygamous, 42@@e2@@legislate-01, 16@@p@@conservative, 33@@b@@medium, 5@@c@@city, 41@@d@@approach-02, 44@@g@@government-organization]
sentence=1	Most	most	Most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	1	MOD_s	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	meeting	_	meet	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_o	true
8	had	_	have	VBD	O	_	person	_	0	IGNORE	true
9	grown	_	grow	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-04	(s(), o())	0	ROOT	true
10	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	Mujahedeen	_name_	Mujahedeen	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	schools	_	school	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	APP_o	true
14	in	_	in	IN	O	_	name	_	0	IGNORE	true
15	Ashraf,	_name_	ashraf,	CD	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	where	_	where	WRB	O	_	i	_	0	IGNORE	true
17	they	_	they	PRP	O	_	person	_	0	IGNORE	true
18	lived	_	live	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_mod	true
19	separated	_	separate	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
20	from	_	from	IN	O	_	-	_	0	IGNORE	true
21	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
22	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	19	APP_o	true
23	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[7@@s@@meet-02, 13@@b@@school, 4@@d@@girl, 15@@c@@city, 5@@d@@i, 18@@d@@live-01, 22@@p@@person, 19@@s@@separate-01, 2@@s@@include-91, 1@@p@@Most, 15@@n@@_NAME_, 22@@f@@parent, 9@@s@@grow-up-04, 22@@h@@have-rel-role-91, 12@@n@@_NAME_]
sentence=1	That's	that's	that's	PRP	O	_	mean-01	_	0	IGNORE	true
2	all	_	all	DT	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	4	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
4	know;	_	know;	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	0	ROOT	true
5	I've	i've	I've	NNP	O	_	cause-01	_	0	IGNORE	true
6	had	_	have	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-to-do-with-04	(o2(), s(), o())	2	APP_dom	true
7	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
8	to	_	to	TO	O	_	-	_	0	IGNORE	true
9	do	_	do	VB	O	_	cause-01	_	0	IGNORE	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@i, 7@@d@@nothing, 6@@b@@have-to-do-with-04, 2@@r@@all, 4@@s@@and, 11@@d@@it]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
4	checked,	_	checked,	VBZ	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	Satanists	_name_	Satanists	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
8	a	_	a	DT	O	_	person	_	0	IGNORE	true
9	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	MOD_s	true
10	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	to	_	to	TO	O	_	mean-01	_	0	IGNORE	true
12	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
14	catch	_	catch	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-up-04	(mod(), s(), o())	12	MOD_mod	true
15	up	_	up	RP	O	_	monetary-quantity	_	0	IGNORE	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	7	MOD_mod	true
18	death	_	death	NN	O	(d<root> / --LEX--)	die-01	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
20	destruction	_	destruction	NN	O	(d<root> / --LEX--)	destroy-01	()	19	APP_op2	true
21	dealt	_	deal	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	19	MOD_o	true
22	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
23	by	_	by	IN	O	_	name	_	0	IGNORE	true
24	self-proclaimed	_	self-proclaime	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	17	MOD_s	true
25	(though	_	(though	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
26	false)	_	false)	NNP	O	_	and	_	0	IGNORE	true
27	Christians	_name_	Christians	NNPS	O	(r<root> / religious-group  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@_NAME_, 3@@d@@i, 18@@d@@die-01, 14@@s@@catch-up-04, 7@@s@@have-03, 21@@s@@deal-out-03, 12@@s@@go-01, 20@@d@@destroy-01, 9@@s@@long-03, 6@@p@@Satanists, 17@@p@@person, 25@@p@@_NAME_, 10@@d@@way, 27@@n@@_NAME_, 2@@p@@last, 27@@r@@religious-group, 19@@a@@and]
sentence=1	Everything	everything	Everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
2	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	claim	_	claim	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
6	lie,	_	lie,	NN	O	_	thing	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	this	_	this	DT	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_op1	true
9	above	_	above	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	7	APP_op2	true
10	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@r@@this, 3@@s@@claim-01, 10@@d@@all, 1@@d@@Everything, 7@@a@@and, 9@@o@@above, 2@@d@@they]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	amazed	_	amazed	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	at	_	at	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	spiel	_	spiel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	delivered	_	deliver	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
9	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@they, 3@@s@@amazed-01, 1@@d@@i, 8@@s@@deliver-01, 6@@d@@spiel]
sentence=1	Whie	whie	whie	UH	O	_	-	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	subscribe	_	subscribe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	46	APP_snt1	true
5	to	_	to	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	30	MOD_o	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	notion	_	notion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	watch	_	watch	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	10	MOD_o	true
14	listen	_	listen	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	to	_	to	TO	O	_	-	_	0	IGNORE	true
16	have	_	have	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
17	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
18	effect	_	effect	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	on	_	on	IN	O	_	affect-01	_	0	IGNORE	true
20	our	_	our	PRP$	O	_	thing	_	0	IGNORE	true
21	behavior	_	behavior	NN	O	(d<root> / --LEX--)	behave-01	()	46	APP_snt2	true
22	(which	_	(which	.	O	_	$LEMMA$	_	0	IGNORE	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
25	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	30	APP_s	true
26	patently	_	patently	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	massive	(mod())	24	MOD_mod	true
27	rediculous),	_	rediculous),	NNP	O	_	i	_	0	IGNORE	true
28	it	_	it	PRP	O	_	i	_	0	IGNORE	true
29	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
30	bother	_	bother	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
31	me	_	I	PRP	O	_	cause-01	_	0	IGNORE	true
32	when	_	when	WRB	O	_	i	_	0	IGNORE	true
33	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	34	APP_s	true
34	single	_	single	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-out-04	(mod(), s(), o())	30	MOD_mod	true
35	out	_	out	RP	O	_	rate-entity-91	_	0	IGNORE	true
36	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	38	MOD_s	true
38	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
39	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
40	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	38	MOD_mod	true
41	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
42	pin	_	pin	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	34	MOD_mod	true
43	the	_	the	DT	O	_	he	_	0	IGNORE	true
44	blame	_	blame	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	42	APP_o	true
45	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
46	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	30	APP_o	true

nodealignment=[46@@m@@multi-sentence, 17@@explicitanon0@@-, 21@@d@@behave-01, 40@@g@@person, 10@@d@@thing, 11@@d@@we, 33@@d@@person, 2@@d@@i, 42@@r2@@pin-01, 7@@d@@notion, 3@@explicitanon0@@-, 25@@d@@person, 26@@t@@massive, 44@@d@@blame-01, 30@@s@@bother-01, 38@@d@@group, 4@@s@@subscribe-01, 12@@s@@watch-01, 34@@t@@single-out-04, 5@@s@@cause-01, 14@@s@@listen-01, 37@@s@@specific-02, 13@@a@@or, 24@@s@@think-01]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	that	_	that	IN	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
8	media	_	medium	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	having	_	have	VBG	O	_	$LEMMA$-03	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	hissy	_	hissy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	fit	_	fit	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	20	APP_op1	true
14	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	Venezuela	_name_	Venezuela	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	wanting	_	want	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	13	APP_o	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	guns,	_name_	guns,	NNP	O	_	and	_	0	IGNORE	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
21	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
22	200,000	_	200,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	25	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	guns	_	gun	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
26	Chavez	_name_	Chavez	NNP	O	_	person	_	0	IGNORE	true
27	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
30	go	_	go	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	20	APP_op2	true
31	missing	_	miss	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_o	true
32	on	_	on	IN	O	_	and	_	0	IGNORE	true
33	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
34	way	_	way	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
35	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	34	MOD_mod	true
37	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
38	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	39	MOD_mod	true
39	sus	_	sus	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
40	.	_	.	.	O	_	shit-01	_	0	IGNORE	true

nodealignment=[31@@s@@miss-01, 12@@p@@hissy, 15@@n@@_NAME_, 29@@s@@buy-01, 18@@s@@buy-01, 8@@d@@medium, 20@@a@@and, 34@@n@@way, 21@@n@@then, 15@@c@@country, 16@@c@@want-01, 5@@c@@country, 5@@n@@_NAME_, 36@@c@@country, 39@@p@@_NAME_, 6@@g2@@govern-01, 7@@a@@and, 30@@c@@go-01, 25@@d@@gun, 6@@g@@government-organization, 27@@s@@want-01, 36@@n@@_NAME_, 38@@p@@definite, 22@@explicitanon0@@_NUMBER_, 13@@s@@fit]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	picture	_	picture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	described	_	describe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	pretty	_	pretty	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
9	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@-, 5@@b@@here, 4@@s@@describe-01, 2@@d@@picture, 8@@s@@pretty-02, 3@@d@@i]
sentence=1	"The	"the	"the	DT	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
2	Prophet's	prophet's	Prophet's	NNP	O	_	_NAME_	_	0	IGNORE	true
3	guidance,"	_	guidance,"	NNP	O	_	publication-91	_	0	IGNORE	true
4	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Michael_Scheuer,	_name_	Scheuer,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
6	an	_	an	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
7	al-Qaeda	_name_	al-qaeda	JJ	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
8	analyst	_	analyst	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	analyze-01	(s(), o())	4	MOD_s	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	11	MOD_mod	true
11	retired	_	retire	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	from	_	from	IN	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
15	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	once	_	once	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	headed	_	head	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	its	_	its	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
19	Bin_Laden	_name_	Laden	NNP	O	(d<root> / --LEX--)	_NAME_	()	17	APP_o	true
20	unit,	_	unit,	.	O	_	and	_	0	IGNORE	true
21	"was	_	"was	NNP	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
22	always,	_	always,	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
23	Before	before	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	40	MOD_mod	true
24	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
25	attack	_	attack	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op1	true
26	someone,	_	someone,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	4	MOD_s	true
27	warn	_	warn	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
28	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	clearly..."	_	clearly..."	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	mean-01	(mod())	4	MOD_mod	true
31	The	the	the	DT	O	_	person	_	0	IGNORE	true
32	anthrax	_	anthrax	NN	O	(d<root> / --LEX--)	_NAME_	()	33	APP_s	true
33	mailings	_	mailing	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_s	true
34	followed	_	follow	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	pattern	_	pattern	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	34	APP_o	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	letters	_	letter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
39	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
40	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	38	MOD_s	true
41	in	_	in	IN	O	_	10	_	0	IGNORE	true
42	January_1997	_name_	1997	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	40	MOD_mod	true
43	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
44	newspaper	_	newspaper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	branches	_	branch	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
46	in	_	in	IN	O	_	i	_	0	IGNORE	true
47	Washington,	washington,	washington,	CD	O	_	_NAME_	_	0	IGNORE	true
48	D.C.	_name_	D.C.	NNP	O	_	_NAME_	_	0	IGNORE	true
49	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	45	MOD_mod	true
50	New_York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	49	APP_op1	true
51	City,	_name_	City,	NNP	O	_	and	_	0	IGNORE	true
52	as	_	as	RB	O	_	and	_	0	IGNORE	true
53	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
54	as	_	as	IN	O	_	and	_	0	IGNORE	true
55	symbolic	_	symbolic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	symbolize-01	(mod())	56	MOD_mod	true
56	targets	_	target	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_op2	true
57	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@d@@_NAME_, 27@@s@@warn-01, 10@@n@@recent, 11@@s@@retire-01, 23@@w@@before, 14@@n@@_NAME_, 7@@c2@@criminal-organization, 26@@s@@and, 44@@p@@newspaper, 24@@d@@you, 1@@n@@_NAME_, 55@@p@@symbolize-01, 56@@d@@target, 50@@n@@_NAME_, 25@@d@@attack-01, 14@@g@@government-organization, 50@@c@@city, 39@@d@@they, 36@@s@@pattern, 38@@d@@letter, 34@@s@@follow-01, 16@@n@@once, 42@@explicitanon0@@_NUMBER_, 49@@b@@and, 33@@s@@mailing-01, 7@@n@@_NAME_, 32@@d@@_NAME_, 30@@p@@mean-01, 8@@s@@analyze-01, 4@@s@@say-01, 45@@d@@branch, 17@@s@@head-01, 29@@s@@very, 40@@s@@send-01]
sentence=1	Wherever	wherever	wherever	WRB	O	_	$LEMMA$	_	0	IGNORE	true
2	he	_	he	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	is,	_	is,	VBP	O	_	and	_	0	IGNORE	true
4	authorities	_	authority	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
7	focus	_	focus	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
10	traceable	_	traceable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	trace-02	(s())	11	MOD_s	true
11	connection	_	connection	NN	O	(d<root> / --LEX--)	connect-01	()	7	APP_o	true
12	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	5	MOD_mod	true
16	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	19	APP_s	true
18	Atef	_name_	Atef	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
19	recruited	_	recruit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
20	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[10@@s@@trace-02, 5@@c@@need-01, 4@@d@@authority, 15@@p@@that, 7@@s@@focus-01, 17@@a@@or, 2@@b@@he, 18@@p@@person, 19@@s@@recruit-01, 11@@d@@connect-01, 18@@n@@_NAME_]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	October_2001,	_name_	2001,	CD	O	_	and	_	0	IGNORE	true
3	did	_	do	VBD	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	FBI	_name_	FBI	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	profilers	_	profiler	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	hack-04	(s())	7	APP_s	true
7	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	draft	_	draft	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
12	Khalid_Mohammed	_name_	Mohammed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	MOD_o	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	seized	_	seize	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	laptop	_	laptop	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
18	(from	_	(from	.	O	_	$LEMMA$	_	0	IGNORE	true
19	1995)	_	1995)	NNP	O	_	name	_	0	IGNORE	true
20	that	_	that	WDT	O	_	name	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	signed	_	sign	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
23	"Khalid	"khalid	"khalid	CD	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
24	Sheik_Bojinka"	_name_	Bojinka"	NNP	O	_	person	_	0	IGNORE	true
25	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	7	MOD_mod	true

nodealignment=[12@@p@@person, 6@@s@@hack-04, 5@@n@@_NAME_, 10@@s@@draft-01, 17@@b@@laptop, 7@@s@@know-01, 11@@d@@message-01, 13@@s@@have-03, 5@@g@@government-organization, 12@@n@@_NAME_, 16@@s@@seize-01, 22@@s@@sign-01, 25@@explicitanon0@@interrogative, 23@@d@@"khalid-01]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	Zawahiri's	zawahiri's	Zawahiri's	-RRB-	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	attorney	_	attorney	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	6	APP_s	true
4	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
5	1999	_name_	1999	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	6	MOD_mod	true
6	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	that	_	that	IN	O	_	person	_	0	IGNORE	true
8	Bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	14	APP_s	true
10	Zawahiri	_name_	Zawahiri	NNP	O	_	_NAME_	_	0	IGNORE	true
11	were	_	be	VBD	O	_	person	_	0	IGNORE	true
12	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	resort	_	resort	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
15	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	government-organization	_	0	IGNORE	true
17	biological	_	biological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	biology	(mod())	20	MOD_mod	true
18	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
19	chemical	_	chemical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	agents	_	agent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
21	they	_	they	PRP	O	_	person	_	0	IGNORE	true
22	possessed	_	possess	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
23	given	_	give	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	extradition	_	extradition	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	extradite-01	(mod())	26	MOD_mod	true
26	pressure	_	pressure	NN	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$-01	(mod())	14	MOD_mod	true
27	senior	_	senior	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	Al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	29	APP_s	true
29	leaders	_	leader	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	lead-02	(s())	30	APP_s	true
30	faced	_	face	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@n@@_NAME_, 17@@p@@biology, 28@@n@@_NAME_, 8@@p@@person, 8@@n@@_NAME_, 5@@d@@date-entity, 9@@o@@and, 28@@c2@@criminal-organization, 3@@p@@person, 6@@s@@say-01, 3@@o@@attorney, 5@@explicitanon0@@_NUMBER_, 20@@d@@agent, 2@@g@@government-organization, 3@@h@@have-org-role-91, 30@@s@@face-01, 12@@s@@likely-01, 1@@p@@even, 25@@p@@extradite-01, 19@@p@@chemical, 29@@w@@lead-02, 27@@p@@senior, 26@@r@@pressure-01, 14@@s@@resort-01, 29@@p@@person, 22@@s@@possess-01]
sentence=1	Yet	yet	yet	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	read	_	read	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	about	_	about	IN	O	_	thing	_	0	IGNORE	true
6	at	_	at	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	was	_	be	VBD	O	_	have-concession-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	arrest	_	arrest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	son	_	son	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	15	MOD_s	true
15	Ahmed_Abdul_Qadoos,	_name_	Qadoos,	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
16	who	_	who	WP	O	_	name	_	0	IGNORE	true
17	receives	_	receive	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	14	MOD_s	true
18	a	_	a	DT	O	_	-	_	0	IGNORE	true
19	stipend	_	stipend	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	from	_	from	IN	O	_	and	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	UN	_name_	UN	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	17	APP_o2	true
23	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
24	being	_	be	VBG	O	_	person	_	0	IGNORE	true
25	officially	_	officially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	official	(mod())	26	MOD_mod	true
26	low-IQ	low-iq	low-iq	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	27	MOD_mod	true
27	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	17	MOD_o	true
28	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
29	lead	_	lead	VB	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	poisoning	_	poisoning	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	poison-01	(s())	27	APP_s	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@d@@arrest-01, 22@@n@@_NAME_, 14@@h@@have-rel-role-91, 25@@p@@official, 4@@s@@read-01, 14@@b@@son, 27@@s@@cause-01, 22@@o2@@organization, 30@@s@@poison-01, 26@@p@@_NAME_, 17@@b@@receive-01, 8@@n@@time, 3@@d@@you, 2@@p@@all, 15@@n@@_NAME_, 29@@d@@lead, 19@@d@@stipend]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	request-confirmation-91	_	0	IGNORE	true
3	reasonable	_	reasonable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	credit	_	credit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
6	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
7	statement	_	statement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	state-01	(s())	5	APP_s	true
8	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	lesion	_	lesion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
14	bumping	_	bump	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op1	true
15	into	_	into	IN	O	_	-	_	0	IGNORE	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	suitcase	_	suitcase	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	carrying	_	carry	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
21	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	camp	_	camp	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	Afghanistan	_name_	Afghanistan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@n@@_NAME_, 14@@s@@bump-01, 20@@s@@carry-01, 17@@d@@suitcase, 13@@w@@after, 3@@s@@reasonable-02, 10@@s@@get-01, 25@@c@@country, 12@@d@@lesion, 7@@s@@state-01, 5@@s@@credit-01, 23@@b@@camp]
sentence=1	According	according	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	0	ROOT	true
2	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	post	_	post	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_s	true
5	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
6	made	_	make	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
7	on	_	on	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	internet,	_	internet,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
10	Aafia_Siddiqui	_name_	Siddiqui	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	expressed	_	express	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	sentiment	_	sentiment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	connection	_	connection	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	connect-01	(s(), o())	1	MOD_s	true
17	with	_	with	IN	O	_	name	_	0	IGNORE	true
18	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	appropriations	_	appropriation	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	_NAME_	(s())	16	APP_o	true
20	sought	_	seek	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	exchange	_	exchange	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
23	for	_	for	IN	O	_	name	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	extradition	_	extradition	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	extradite-01	(s(), o())	22	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	WTC_1993	_name_	1993	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
28	plotter	_	plotter	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	29	MOD_s	true
29	Ramzi_Yousef	_name_	Yousef	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
30	from	_	from	IN	O	_	person	_	0	IGNORE	true
31	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	25	APP_o	true
32	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@d@@she, 19@@s@@_NAME_, 18@@c@@country, 10@@n@@_NAME_, 14@@d@@sentiment, 29@@p@@person, 20@@s@@seek-01, 28@@s@@plotter, 31@@c@@country, 11@@s@@express-01, 13@@s@@same-01, 16@@s@@connect-01, 31@@n@@_NAME_, 4@@d@@post-01, 29@@n@@_NAME_, 27@@n@@_NUMBER_, 1@@s@@say-01, 18@@n@@_NAME_, 22@@s@@exchange-01, 25@@s@@extradite-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	save	_	save	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	$21,000	_name_	$21,000	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	6	MOD_s	true
6	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	way,	_	way,	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	cash	_	cash	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	refund	_	refund	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
12	Sun	_name_	Sun	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	giving	_	give	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	MOD_o	true
15	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	14	APP_o2	true
16	for	_	for	IN	O	_	and	_	0	IGNORE	true
17	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	server,	_	server,	NNS	O	_	cause-01	_	0	IGNORE	true
20	using	_	use	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	box	_	box	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	wasn't	_	wasn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
25	being	_	be	VBG	O	_	person	_	0	IGNORE	true
26	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_o	true
27	by	_	by	IN	O	_	-	_	0	IGNORE	true
28	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@explicitanon0@@-, 8@@s@@cause-01, 20@@l@@use-01, 2@@s@@save-01, 26@@s@@use-01, 10@@p@@cash, 22@@d@@box, 14@@b@@give-01, 7@@p@@this, 15@@c@@company, 11@@s@@refund-01, 6@@d@@money, 28@@d@@anyone, 12@@n@@_NAME_, 5@@s@@real-04, 18@@p@@other, 15@@n@@_NAME_, 1@@d@@We, 3@@explicitanon0@@_NUMBER_, 12@@p@@person]
sentence=1	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	point,	_	point,	NNS	O	_	and	_	0	IGNORE	true
4	I'd	i'd	i'd	PRP	O	_	say-01	_	0	IGNORE	true
5	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	talk	_	talk	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
8	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	diversification	_	diversification	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	strategy	_	strategy	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
12	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
13	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	detail	_	detail	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
15	--	_	--	:	O	_	possible-01	_	0	IGNORE	true
16	perhaps	_	perhaps	RB	O	_	possible-01	_	0	IGNORE	true
17	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	dinner	_	dinner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	7	MOD_mod	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	quick	_	quick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	meeting	_	meeting	NN	O	(d<root> / --LEX--)	meet-03	()	19	APP_op2	true
23	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	22	MOD_mod	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	markets	_	market	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
26	close	_	close	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op1	true
27	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[22@@d@@meet-03, 13@@s@@more, 21@@s@@quick-02, 19@@a@@or, 7@@s@@talk-01, 10@@a@@diversification, 25@@d@@market, 27@@explicitanon0@@interrogative, 23@@w@@after, 11@@d@@strategy-01, 18@@d@@dinner, 2@@p@@some, 5@@s@@like-02, 14@@t@@detail-01, 26@@s@@close-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
3	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	ability	_	ability	NN	O	(d<root> / --LEX--)	capable-01	()	3	APP_o	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	order	_	order	NN	O	_	and	_	0	IGNORE	true
8	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
9	hedge	_	hedge	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
10	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	exposure	_	exposure	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	expose-01	(s())	9	APP_o	true
12	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
14	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
15	unexercised	_	unexercise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
16	vested	_	vested	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	vest-01	(s())	17	MOD_s	true
17	options	_	option	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@d@@capable-01, 3@@s@@like-02, 15@@s@@unexercise-01, 4@@p@@that, 10@@p@@some, 11@@s@@expose-01, 9@@s@@hedge-01, 16@@s@@vest-01, 13@@s@@have-03, 17@@d@@option, 1@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
4	at	_	at	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	pullback	_	pullback	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	ENE	_name_	ENE	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	APP_o	true
14	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
15	an	_	an	DT	O	_	thing	_	0	IGNORE	true
16	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	buy	_	buy	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	true
19	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	calls	_	call	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	18	APP_s	true
22	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	sold	_	sell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@n2@@_NAME_, 7@@d@@pullback, 22@@d@@you, 18@@i@@buy-01, 21@@d@@call-02, 3@@s@@look-01, 11@@s@@think-01, 10@@a@@and, 9@@s@@state, 1@@d@@i, 23@@s@@sell-01, 13@@s@@possible-01, 16@@d@@opportunity, 6@@n@@recent]
sentence=1	Also	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
3	am	_	be	VBP	O	_	person	_	0	IGNORE	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
6	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	Matisse	_name_	Matisse	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	discussed	_	discuss	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	possible-01	(mod(), s())	12	MOD_mod	true
16	see,	_	see,	XX	O	_	and	_	0	IGNORE	true
17	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
18	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	28	APP_op1	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	artists	_	artist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
24	I	i	I	PRP	O	_	person	_	0	IGNORE	true
25	am	_	be	VBP	O	_	person	_	0	IGNORE	true
26	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	23	MOD_s	true
27	in	_	in	IN	O	_	include-91	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	APP_op2	true
31	remain	_	remain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_s	true
32	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
33	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
34	back	_	back	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	burner	_	burner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
36	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	31	MOD_o	true
37	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	36	APP_s	true
40	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@possible-01, 20@@explicitanon0@@lot, 28@@a@@and, 35@@d@@burner, 12@@s@@contrast-01, 8@@p@@person, 10@@s@@discuss-01, 23@@d@@artist, 31@@s@@remain-01, 14@@d@@you, 9@@d@@we, 1@@p@@also, 8@@n@@_NAME_, 4@@p@@still, 5@@s@@think-01, 2@@d@@i, 18@@s@@have-03, 11@@n@@before, 38@@n@@already, 30@@s@@possible-01, 22@@p@@other, 34@@p@@back, 26@@s@@interest-01, 36@@s@@cause-01, 39@@d@@have-03]
sentence=1	The	the	the	DT	O	_	-1	_	0	IGNORE	true
2	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
8	Brent	_name_	Brent	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_op2	true
9	drafted	_	draft	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
10	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	starting	_	starting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	12	MOD_mod	true
12	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	for	_	for	IN	O	_	thing	_	0	IGNORE	true
14	fundamental	_	fundamental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	operating	_	operating	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
16	standards	_	standard	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	that	_	that	IN	O	_	and	_	0	IGNORE	true
19	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
20	was	_	be	VBD	O	_	person	_	0	IGNORE	true
21	being	_	be	VBG	O	_	person	_	0	IGNORE	true
22	circulated	_	circulate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
23	(Shona	(shona	(Shona	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	22	MOD_o	true
25	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
27	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
28	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
29	Brent's	_name_	Brent's	NNP	O	_	we	_	0	IGNORE	true
30	return	_	return	VB	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-01	(s())	28	MOD_s	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	Houston)	_name_	Houston)	NNP	O	_	have-org-role-91	_	0	IGNORE	true
33	for	_	for	IN	O	_	thing	_	0	IGNORE	true
34	comments	_	comment	NNS	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
35	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
37	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
38	controllers	_	controller	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	34	APP_s	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@b@@comment-01, 19@@d@@this, 30@@p@@return-01, 9@@s@@draft-01, 23@@p@@person, 4@@s@@know-01, 24@@s@@take-04, 36@@p@@all, 38@@s@@controller, 28@@n@@after, 7@@a@@and, 11@@p@@starting-01, 3@@d@@i, 5@@w@@after, 10@@p@@this, 8@@n@@_NAME_, 23@@n@@_NAME_, 16@@o@@standard, 2@@p@@last, 14@@p@@fundamental, 8@@p@@person, 22@@s@@circulate-01, 37@@d@@business, 6@@d@@you, 12@@d@@point, 15@@p@@operating-01]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	difference	_	difference	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	0	ROOT	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_o	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
8	package	_	package	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
9	V02	_name_	V02	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
10	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[9@@p@@_NUMBER_, 4@@d@@we, 3@@s@@differ-02, 8@@d@@package, 2@@p@@only, 5@@s@@have-03]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	difference	_	difference	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	0	ROOT	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_o	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
8	package	_	package	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
9	V02	_name_	V02	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
10	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[9@@p@@_NUMBER_, 3@@s@@differ-02, 8@@d@@package, 2@@p@@only, 5@@s@@have-03, 4@@d@@we]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	difference	_	difference	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	0	ROOT	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_o	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
8	package	_	package	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
9	V02	_name_	V02	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
10	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[8@@d@@package, 2@@p@@only, 5@@s@@have-03, 4@@d@@we, 9@@p@@_NUMBER_, 3@@s@@differ-02]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
4	been	_	be	VBN	O	_	person	_	0	IGNORE	true
5	modified	_	modify	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	mark-up	_	mark-up	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	faxed	_	fax	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	13	MOD_o	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	Toni_Donohue	_name_	Donohue	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_o2	true
18	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	a_few_hours_ago	_name_	ago	RB	O	(p<root> / publication  :name (n / --LEX--)  :location-of (a<mod>))	_NAME_	(mod())	15	MOD_mod	true
20	.	_	.	.	O	_	say-01	_	0	IGNORE	true

nodealignment=[5@@s@@modify-01, 17@@p@@person, 2@@d@@document, 15@@b@@fax-01, 18@@b@@here, 8@@s@@change-01, 13@@d@@mark-up, 19@@p@@publication, 19@@n@@_NAME_, 14@@d@@you, 1@@p@@this, 17@@n@@_NAME_]
sentence=1	Is	is	be	VBZ	O	_	relevant-01	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	related	_	related	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	interrogative	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
9	having	_	have	VBG	O	_	$LEMMA$-03	_	0	IGNORE	true
10	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	6	MOD_o	true
11	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	(circulatory?)	_	(circulatory?)	ADD	O	_	_NAME_	_	0	IGNORE	true
13	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[6@@d@@problem, 2@@d@@this, 7@@d@@he, 13@@explicitanon0@@interrogative, 11@@b@@around, 10@@s@@get-05, 3@@s@@relate-01]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	use	_	use	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	file	_	file	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	opposed	_	oppose	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
8	to	_	to	IN	O	_	instead-of-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	i	_	0	IGNORE	true
10	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
12	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
13	earlier	_	earlier	RBR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	early	(mod())	12	MOD_mod	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@d@@one, 13@@e@@early, 4@@s@@new-01, 2@@h@@use-01, 5@@d@@file, 13@@m@@more, 3@@p@@this, 11@@d@@i, 2@@explicitanon0@@imperative, 1@@explicitanon0@@+, 12@@s@@send-01]
sentence=1	Meanwhile,_Arthur_Levitt	_name_	Levitt	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
3	agreed	_	agree	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	person	_	0	IGNORE	true
5	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	APP_o	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	9	(mod())	5	MOD_mod	true
10	to	_	to	TO	O	_	and	_	0	IGNORE	true
11	brainstorm	_	brainstorm	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
12	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	we've	_	we've	NN	O	_	thing	_	0	IGNORE	true
16	generated	_	generate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
18	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
20	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
21	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_s	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	23	APP_s	true
29	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
30	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	sees	_	see	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
32	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@us, 11@@s@@brainstorm-01, 9@@d@@date-entity, 16@@s@@generate-01, 23@@s@@sense-01, 14@@d@@idea, 18@@p@@also, 20@@s@@give-01, 1@@n@@_NAME_, 1@@p@@person, 25@@explicitanon0@@some, 9@@explicitanon0@@9, 31@@s@@see-01, 17@@a@@and, 5@@s@@meet-03, 3@@c@@agree-01, 28@@d@@issue-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	say-01	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	address	_	address	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_o	true
6	audit	_	audit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	right-05	(s())	5	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	LLC	_name_	LLC	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	agreement	_	agreement	NN	O	(d<root> / --LEX--)	agree-01	()	7	APP_s	true
12	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_s	true
13	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
14	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_o	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	matter	_	matter	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	anyway	_	anyway	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
19	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
22	right	_	right	NN	O	(s<root> / --LEX--  :domain (i2<dom>)  :condition-of (d<mod>))	$LEMMA$-05	(dom(), mod())	16	MOD_mod	true
23	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
24	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	APP_dom	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@s@@right-05, 17@@p@@anyway, 7@@s@@right-05, 25@@s@@have-03, 15@@explicitanon0@@-, 23@@d@@they, 11@@d@@agree-01, 14@@s@@possible-01, 13@@d@@this, 12@@s@@cause-01, 24@@n@@already, 16@@s@@matter-01, 10@@p@@_NAME_, 4@@d@@we, 6@@p@@audit-01, 2@@s@@know-01, 5@@s@@address-02, 1@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	say-01	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	address	_	address	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_o	true
6	audit	_	audit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	right-05	(s())	5	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	LLC	_name_	LLC	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	agreement	_	agreement	NN	O	(d<root> / --LEX--)	agree-01	()	7	APP_s	true
12	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_s	true
13	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
14	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_o	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	matter	_	matter	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	anyway	_	anyway	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
19	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
22	right	_	right	NN	O	(s<root> / --LEX--  :domain (i2<dom>)  :condition-of (d<mod>))	$LEMMA$-05	(dom(), mod())	16	MOD_mod	true
23	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
24	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	APP_dom	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@possible-01, 12@@s@@cause-01, 15@@explicitanon0@@-, 16@@s@@matter-01, 11@@d@@agree-01, 13@@d@@this, 24@@n@@already, 4@@d@@we, 10@@p@@_NAME_, 6@@p@@audit-01, 1@@d@@i, 5@@s@@address-02, 17@@p@@anyway, 22@@s@@right-05, 25@@s@@have-03, 2@@s@@know-01, 7@@s@@right-05, 23@@d@@they]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	say-01	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	address	_	address	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_o	true
6	audit	_	audit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	right-05	(s())	5	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	LLC	_name_	LLC	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	agreement	_	agreement	NN	O	(d<root> / --LEX--)	agree-01	()	7	APP_s	true
12	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_s	true
13	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
14	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_o	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	matter	_	matter	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	anyway	_	anyway	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
19	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
22	right	_	right	NN	O	(s<root> / --LEX--  :domain (i2<dom>)  :condition-of (d<mod>))	$LEMMA$-05	(dom(), mod())	16	MOD_mod	true
23	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
24	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	APP_dom	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@p@@anyway, 25@@s@@have-03, 23@@d@@they, 7@@s@@right-05, 15@@explicitanon0@@-, 14@@s@@possible-01, 11@@d@@agree-01, 12@@s@@cause-01, 5@@s@@address-02, 16@@s@@matter-01, 2@@s@@know-01, 13@@d@@this, 1@@d@@i, 4@@d@@we, 24@@n@@already, 6@@p@@audit-01, 10@@p@@_NAME_, 22@@s@@right-05]
sentence=1	Chris	_name_	Chris	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
3	Ben	_name_	Ben	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op2	true
4	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_s	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	marvelous	_	marvelous	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	true
7	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
9	Thanksgiving,	thanksgiving,	thanksgiving,	NN	O	_	and	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	possible-01	(mod(), s())	17	MOD_mod	true
12	testify	_	testify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
13	that	_	that	IN	O	_	and	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	was	_	be	VBD	O	_	person	_	0	IGNORE	true
16	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	16	MOD_s	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	21	MOD_s	true
20	Thanksgiv8ing	thanksgiv8ing	Thanksgiv8ing	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	high-02	(mod())	21	MOD_mod	true
21	Dinners	dinners	dinner	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
22	I've	i've	I've	VBG	O	_	$LEMMA$	_	0	IGNORE	true
23	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	MOD_s	true
25	(I	(i	(I	NNP	O	(d<root> / --LEX--)	-	()	28	APP_s	true
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	28	MOD_mod	true
27	gonna	_	gonna	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	16	MOD_s	true
28	tell	_	tell	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	APP_o	true
29	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	that,	_	that,	.	O	_	cause-01	_	0	IGNORE	true
31	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
32	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	true
33	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_o	true
34	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_s	true
36	swell	_	swell	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_s	true
37	heads)	_	heads)	ADD	O	_	cause-01	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@explicitanon0@@-, 25@@d@@-, 17@@s@@include-91, 27@@s@@gonna, 21@@d@@dinner, 35@@s@@get-01, 36@@d@@swell-01, 1@@p@@person, 26@@explicitanon0@@-, 2@@a@@and, 7@@d@@job, 3@@n@@_NAME_, 28@@s@@tell-01, 3@@p@@person, 4@@s@@do-02, 19@@b2@@good-02, 19@@m@@most, 23@@n@@ever, 20@@p@@high-02, 12@@s@@testify-01, 11@@s@@possible-01, 10@@d@@i, 24@@s@@have-03, 1@@n@@_NAME_, 6@@s@@marvelous-03, 16@@d@@one, 33@@s@@want-01]
sentence=1	With	with	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	respect	_	respect	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
3	to	_	to	IN	O	_	and	_	0	IGNORE	true
4	Deutsche_Bank	_name_	Bank	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
5	(""DB"),	(""db"),	(""DB"),	NNP	O	_	and	_	0	IGNORE	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
7	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	31	APP_op1	true
8	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	10	MOD_mod	true
9	credit	_	credit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	7	APP_o	true
11	remaining,	_	remaining,	CD	O	_	and	_	0	IGNORE	true
12	DB	_name_	DB	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
13	would	_	would	MD	O	_	thing	_	0	IGNORE	true
14	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	31	APP_op2	true
15	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	to	_	to	TO	O	_	and	_	0	IGNORE	true
17	add	_	add	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	APP_o	true
18	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
19	the	_	the	DT	O	_	name	_	0	IGNORE	true
20	Enron	_name_	Enron	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
21	trading	_	trading	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	trade-01	(mod())	22	MOD_mod	true
22	entities	_	entity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
23	DB	_name_	DB	NNP	O	_	_NAME_	_	0	IGNORE	true
24	trades	_	trade	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
25	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
26	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
27	Specified	specified	Specified	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
28	Entities	entities	Entities	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
29	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	the_ISDA_Master_Agreement	_name_	Agreement	NNP	O	(p<root> / person  :name (n / --LEX--)  :prep-under-of (i<mod>))	_NAME_	(mod())	24	MOD_mod	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
32	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	are	_	be	VBP	O	_	person	_	0	IGNORE	true
34	somewhat	_	somewhat	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	hesitant	_	hesitant	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op3	true
36	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
37	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
38	so,	_	so,	NNP	O	_	cause-01	_	0	IGNORE	true
39	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	35	MOD_o	true
40	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
41	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	39	APP_s	true
42	potentially	_	potentially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	potential	(mod())	43	MOD_mod	true
43	roll	_	roll	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	41	APP_s	true
44	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
45	swaps	_	swap	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
46	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
47	structured	_	structured	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	48	MOD_s	true
48	loan	_	loan	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	49	APP_s	true
49	transactions	_	transaction	NNS	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	transact-01	(mod(), s())	45	MOD_mod	true
50	into	_	into	IN	O	_	-	_	0	IGNORE	true
51	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
52	default	_	default	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	43	APP_o	true
53	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
54	the_ISDA_Agreement	_name_	Agreement	NNP	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	52	APP_s	true
55	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[54@@l@@law, 54@@n@@_NAME_, 42@@p@@potential, 20@@n@@_NAME_, 7@@s@@have-03, 18@@p@@all, 4@@n@@_NAME_, 6@@d@@we, 47@@s@@structured-02, 31@@a@@and, 14@@c@@like-02, 35@@d@@hesitant, 49@@i@@transact-01, 45@@d@@swap, 28@@d@@Entities, 17@@s@@add-02, 30@@n@@_NAME_, 12@@n@@_NAME_, 10@@s@@issue-02, 22@@d@@entity, 4@@c@@company, 48@@d@@loan-01, 9@@d@@credit, 43@@s@@roll-up-03, 8@@explicitanon0@@1, 24@@s@@trade-01, 21@@p@@trade-01, 41@@s@@possible-01, 27@@s@@Specified-01, 39@@s@@cause-01, 34@@s@@somewhat, 52@@s@@default, 30@@p@@person]
sentence=1	Maybe	maybe	maybe	RB	O	_	possible-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
4	ignore	_	ignore	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	sentiment	_	sentiment	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	quote	_	quote	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_poss	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
11	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
12	earlier..	_	earlier..	ADD	O	_	thing	_	0	IGNORE	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@you, 3@@s@@recommend-01, 6@@m@@sentiment, 11@@s@@send-01, 10@@d@@i, 9@@d@@quote-01, 4@@s@@ignore-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	most	(mod())	5	MOD_mod	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	do	_	do	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	4	APP_s	true
6	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
7	pass	_	pass	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-on-14	(s(), o())	5	APP_o	true
8	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	news	_	news	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	along	_	along	RB	O	_	$LEMMA$	_	0	IGNORE	true
11	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@we, 9@@d@@news, 4@@s@@possible-01, 8@@p@@this, 7@@s@@pass-on-14, 2@@p@@most, 5@@c@@do-02]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
3	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
4	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
7	tell	_	tell	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
8	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	6	MOD_mod	true

nodealignment=[4@@p@@else, 8@@explicitanon0@@interrogative, 3@@d@@anyone, 7@@s@@tell-01, 6@@s@@recommend-01, 5@@d@@we]
sentence=1	Days	days	day	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	7	MOD_mod	true
2	away:	_	away:	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	date-entity	(op2(), op1())	0	ROOT	true
3	Sept._21_through_Oct._3	_name_	3	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
4	(assuming	_	(assume	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_op2	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
6	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
7	on	_	on	IN	O	(d<root> / --LEX--)	and	()	2	APP_op1	true
8	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	day	(mod())	6	MOD_mod	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	leave	_	leave	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-15	(s())	6	APP_o	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_s	true
12	go	_	go	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-back-19	(s(), o())	11	APP_op2	true
13	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
16	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	12	MOD_mod	true
18	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	return	_	return	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op1	true
20	)	_	)	-RRB-	O	_	and	_	0	IGNORE	true

nodealignment=[7@@d@@and, 3@@d@@date-entity, 1@@m2@@multiple, 2@@a@@date-entity, 12@@g@@go-back-19, 5@@d@@you, 1@@m@@day, 17@@w@@after, 8@@n@@day, 1@@t2@@temporal-quantity, 16@@n@@day, 6@@s@@work-01, 19@@d@@return-01, 9@@d@@we, 10@@s@@leave-15, 11@@a@@and, 15@@d@@work-01, 3@@explicitanon2@@_NUMBER_, 4@@s@@(assume]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_s	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	forwarded	_	forward	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	me	_	I	PRP	O	(d<root> / --LEX--)	i	()	2	APP_o2	true
9	belongs	_	belong	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
10	to	_	to	IN	O	_	name	_	0	IGNORE	true
11	the_Mark_Taylor	_name_	Taylor	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
12	at	_	at	IN	O	_	thing	_	0	IGNORE	true
13	EI	_name_	EI	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	9	MOD_mod	true
14	(based	_	(based	NNP	O	_	_NAME_	_	0	IGNORE	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	London)	_name_	London)	NNP	O	_	name	_	0	IGNORE	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@d@@i, 2@@b@@believe-01, 11@@c@@company, 6@@s@@forward-01, 4@@d@@message-01, 5@@d@@you, 9@@s@@belong-01, 13@@c@@city, 11@@n@@_NAME_, 13@@n@@_NAME_, 1@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
2	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
3	at	_	at	IN	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	UEComm	uecomm	UEComm	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	Master	master	Master	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	29	APP_op1	true
8	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	7	APP_op2	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
10	comments--such	_	comments--such	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
11	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	29	MOD_o	true
12	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op4	true
13	name	_	name	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$	()	26	APP_op1	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	wrong,	_	wrong,	NNS	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	cross	_	cross	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	default	_	default	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	threshold	_	threshold	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
21	us	_	us	PRP	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	11	APP_s	true
23	be	_	be	VB	O	(m<root> / --LEX--  :unit-of (a<mod>))	cost-01	(mod())	29	MOD_mod	true
24	US	_name_	US	NNP	O	(d<root> / --LEX--)	_NAME_	()	26	APP_op2	true
25	$	_	$	$	O	_	dollar	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_op2	true
27	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	28	MOD_mod	true
28	AUD,	_name_	aud,	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	29	MOD_s	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
30	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
31	were	_	be	VBD	O	_	person	_	0	IGNORE	true
32	a	_	a	DT	O	_	1	_	0	IGNORE	true
33	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	questions	_	question	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_op3	true
36	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
37	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@d@@question-01, 27@@explicitanon0@@-, 21@@i@@us, 28@@s@@and, 29@@a@@and, 26@@a@@and, 22@@s@@recommend-01, 9@@explicitanon0@@some, 24@@d@@_NAME_, 10@@p@@person, 33@@explicitanon0@@few, 13@@a@@name, 8@@s@@say-01, 5@@p@@_NAME_, 13@@t@@thing, 2@@s@@look-01, 17@@p@@cross, 6@@d@@Master, 11@@s@@cause-01, 7@@a@@and, 12@@d@@our, 19@@d@@threshold, 18@@p@@default, 1@@d@@i, 23@@m@@cost-01, 10@@n@@_NAME_, 34@@p@@other]
sentence=1	Attached	attached	attach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	fax	_	fax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
5	cover	_	cover	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	pages	_	page	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Nylon	_name_	Nylon	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
13	Polykron_Deemed	_name_	deem	VBD	O	(d<root> / --LEX--)	_NAME_	()	12	APP_op2	true
14	ISDAs	_name_	ISDAs	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	true
16	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	14	MOD_o	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o2	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@s@@attach-01, 16@@p@@just, 12@@a@@and, 11@@d@@Nylon, 17@@b@@send-01, 8@@p@@each, 6@@d@@page, 14@@p@@ISDAs, 13@@d@@_NAME_, 5@@p@@cover-01, 4@@p@@fax-01, 15@@d@@i, 18@@d@@you]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	propose	_	propose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
4	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	conference	_	conference	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	call	_	call	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	2	APP_o	true
8	with	_	with	IN	O	_	i	_	0	IGNORE	true
9	Bob_Fagan	_name_	Fagan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
10	on	_	on	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	today	(mod())	2	MOD_mod	true
11	Fri_July_20	_name_	20	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
12	at	_	at	IN	O	_	today	_	0	IGNORE	true
13	1:00_pm	_name_	pm	NN	O	_	date-entity	_	0	IGNORE	true
14	Calgary	_name_	Calgary	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	10	MOD_mod	true
15	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	to	_	to	TO	O	_	date-entity	_	0	IGNORE	true
17	discuss	_	discuss	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
18	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	areas	_	area	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	concern/confusion	_	concern/confusion	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
23	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	24	MOD_s	true
24	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@n@@_NAME_, 2@@s@@propose-01, 21@@p@@concern/confusion, 24@@s@@have-03, 17@@s@@discuss-01, 7@@b@@call-03, 18@@p@@any, 14@@c@@city, 19@@d@@area, 22@@d@@you, 6@@p@@conference, 9@@n@@_NAME_, 11@@n@@_NAME_, 9@@p@@person, 3@@d@@we, 1@@d@@i, 23@@s@@possible-01, 10@@n@@today]
sentence=1	Attached	attached	attached	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	originally	_	originally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	original	(mod())	7	MOD_mod	true
7	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_o	true
8	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
10	on	_	on	IN	O	_	3	_	0	IGNORE	true
11	May_10	_name_	10	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	7	MOD_mod	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	regard	_	regard	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@s@@attached-01, 4@@d@@letter, 13@@p@@this, 14@@p@@regard, 5@@d@@i, 9@@d@@you, 11@@n@@_DATE_, 6@@p@@original, 7@@b@@send-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	draft	_	draft	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	3	APP_s	true
3	reflects	_	reflect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	changes	_	change	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	discussed	_	discuss	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	during	_	during	IN	O	_	thing	_	0	IGNORE	true
9	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	call	_	call	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-03	(mod(), s())	7	MOD_mod	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	day	_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
14	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@p@@this, 7@@s@@discuss-01, 5@@d@@change-01, 2@@t@@thing, 10@@v@@call-03, 12@@p@@other, 6@@d@@we, 3@@s@@reflect-01, 13@@n@@day, 2@@d@@draft-01]
sentence=1	I'm	i'm	i'm	PRP	O	_	cause-01	_	0	IGNORE	true
2	glad	_	glad	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	APP_op1	true
3	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	true
5	to	_	to	TO	O	_	person	_	0	IGNORE	true
6	follow-up	_	follow-up	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-00	(s())	4	APP_o	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	Steve	_name_	Steve	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
9	(I've	(i've	(i've	NN	O	_	multi-sentence	_	0	IGNORE	true
10	been	_	be	VBN	O	_	person	_	0	IGNORE	true
11	pushing	_	push	VBG	O	(c4<root> / --LEX--  :ARG1 (c2<o>)  :ARG0 (c<s>)  :subevent-of (t<mod>))	$LEMMA$-02	(mod(), s(), o())	4	MOD_mod	true
12	it)	_	it)	RB	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	I've	i've	I've	NNP	O	_	-	_	0	IGNORE	true
15	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
16	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	follow-up	_	follow-up	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
19	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	15	MOD_mod	true
20	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	15	MOD_s	true
21	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	chats	_	chat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	I	i	I	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$REPL$	(s())	13	APP_s	true
24	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	MOD_s	true
25	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the_afternoon	_name_	afternoon	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	22	MOD_mod	true
27	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	Friday	_name_	Friday	NNP	O	(d<root> / date-entity  :weekday (t / --LEX--)  :time-of (c<mod>))	$REPL$	(mod())	22	MOD_mod	true
29	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	folks	_	folk	NNS	O	(i<root> / --LEX--  :prep-with-of (l<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	post-call	_	post-call	JJ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	23	APP_s	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@d@@follow-up, 23@@s@@i, 8@@p@@person, 15@@s@@get-01, 30@@i@@folk, 2@@s@@glad-02, 6@@s@@follow-up-00, 28@@d@@date-entity, 3@@d@@they, 28@@t@@_name_, 8@@n@@_NAME_, 20@@s@@base-02, 26@@n@@_NAME_, 22@@d@@chat, 31@@n@@_NAME_, 24@@s@@have-03, 16@@explicitanon0@@some, 31@@p@@person, 13@@a@@and, 11@@c4@@push-02, 4@@c@@want-01, 19@@p@@as-well]
sentence=1	We'll	we'll	We'll	NNP	O	_	thing	_	0	IGNORE	true
2	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
4	update	_	update	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	numbers	_	number	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	offer	_	offer	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
10	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
12	to	_	to	IN	O	_	name	_	0	IGNORE	true
13	S.D.	_name_	S.D.	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
14	last_week	_name_	week	NN	O	(d<root> / --LEX--)	_NAME_	()	11	APP_s	true
15	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[4@@s@@update-01, 6@@d@@number, 9@@i@@offer-01, 13@@n@@_NAME_, 13@@p@@person, 11@@s@@make-01, 2@@c@@need-01, 14@@d@@_NAME_]
sentence=1	Let	let	let	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	4	APP_op1	true
2	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_o	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	possible-01	(s(), o())	4	APP_op2	true
7	add	_	add	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	9	APP_op1	true
8	it,	_	it,	XX	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	APP_o	true
10	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
11	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op2	true
14	you'd	_	you'd	NNS	O	_	you	_	0	IGNORE	true
15	like	_	like	UH	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	MOD_o	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
18	at	_	at	IN	O	_	thing	_	0	IGNORE	true
19	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	end	_	end	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@h@@let-01, 4@@a@@and, 17@@s@@make-01, 2@@d@@us, 5@@d@@we, 13@@s@@change-01, 19@@p@@this, 9@@a@@and, 11@@p@@any, 1@@explicitanon0@@imperative, 12@@p@@other, 8@@d@@it,, 15@@s@@like-02, 6@@s@@possible-01, 7@@s@@add-02, 20@@n@@end-01, 3@@s@@know-01]
sentence=1	With	with	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	regard	_	regard	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	annual	_name_	annual	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	year	(mod())	6	MOD_mod	true
6	review	_	review	NN	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	laws	_	law	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
13	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	comply	_	comply	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
16	with,	_	with,	NNS	O	_	and	_	0	IGNORE	true
17	do	_	do	VB	O	_	person	_	0	IGNORE	true
18	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
21	to	_	to	TO	O	_	multi-sentence	_	0	IGNORE	true
22	add	_	add	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_o	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Canadian	_name_	canadian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	25	MOD_mod	true
25	provinces	_	province	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_poss	true
26	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
27	"eligible	_	"eligible	''	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	31	MOD_s	true
28	swap	_	swap	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	31	MOD_mod	true
29	participant"	_	participant"	CD	O	_	oppose-01	_	0	IGNORE	true
30	equivalant	_	equivalant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	rules	_	rule	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	22	APP_o	true
32	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	20	MOD_mod	true

nodealignment=[12@@d@@we, 8@@p@@this, 28@@p@@swap-01, 11@@p@@law, 5@@r@@rate-entity-91, 15@@s@@comply-01, 26@@s@@new-01, 25@@d@@province, 5@@t@@temporal-quantity, 5@@d@@year, 32@@explicitanon0@@interrogative, 22@@s@@add-02, 6@@s@@review-01, 20@@c@@want-01, 19@@explicitanon0@@-, 31@@m@@rule-01, 24@@c@@country, 4@@d@@our, 24@@n@@_NAME_, 9@@d@@list, 27@@s@@"eligible, 13@@s@@need-01, 30@@p@@equivalant]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
3	think	_	think	VBP	O	(c<root> / --LEX--  :ARG0 (i<o>)  :ARG1 (y<s>)  :condition-of (w<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_o	true
10	to	_	to	TO	O	_	person	_	0	IGNORE	true
11	strengthen	_	strengthen	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
12	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
13	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	application	_	application	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	apply-01	(mod())	15	MOD_mod	true
15	file	_	file	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
16	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	year,	_	year,	NNS	O	_	and	_	0	IGNORE	true
19	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	20	MOD_mod	true
20	let	_	let	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
21	me	_	I	PRP	O	_	i	_	0	IGNORE	true
22	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	APP_o	true
23	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[9@@s@@do-02, 5@@d@@anything, 14@@p@@apply-01, 22@@s@@know-01, 17@@p@@next, 19@@explicitanon0@@+, 8@@s@@possible-01, 3@@c@@think-01, 11@@s@@strengthen-01, 2@@d@@you, 15@@d@@file-01, 20@@f@@let-01, 13@@p@@overall, 7@@d@@i, 6@@p@@else]
sentence=1	Also,	_name_	Also,	NNP	O	_	and	_	0	IGNORE	true
2	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
4	can	_	can	MD	O	(p<root> / --LEX--  :ARG1 (r<o>)  :condition-of (p3<mod>))	possible-01	(mod(), o(s()))	22	MOD_mod	true
5	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
6	of	_	of	IN	O	_	possible-01	_	0	IGNORE	true
7	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	MOD_o	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	strengthen	_	strengthen	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
14	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
15	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	application	_	application	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	apply-01	(mod())	17	MOD_mod	true
17	file	_	file	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	year,	_	year,	NNS	O	_	and	_	0	IGNORE	true
21	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	22	MOD_mod	true
22	let	_	let	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
23	me	_	I	PRP	O	_	i	_	0	IGNORE	true
24	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_o	true
25	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[3@@d@@you, 7@@d@@anything, 22@@f@@let-01, 16@@p@@apply-01, 13@@s@@strengthen-01, 17@@d@@file, 10@@s@@possible-01, 15@@p@@overall, 9@@d@@i, 5@@s@@think-01, 4@@p@@possible-01, 24@@s@@know-01, 8@@p@@else, 21@@explicitanon0@@+, 11@@s@@do-02, 19@@p@@next]
sentence=1	Also,	_name_	Also,	NNP	O	_	and	_	0	IGNORE	true
2	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
4	think	_	think	VBP	O	(c<root> / --LEX--  :ARG0 (i<o>)  :ARG1 (y<s>)  :condition-of (w<mod>))	$LEMMA$-01	(mod(), s(), o())	21	MOD_mod	true
5	of	_	of	IN	O	_	possible-01	_	0	IGNORE	true
6	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
9	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_o	true
11	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
12	strengthen	_	strengthen	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
13	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
14	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	application	_	application	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	apply-01	(mod())	16	MOD_mod	true
16	file	_	file	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	year,	_	year,	NNS	O	_	and	_	0	IGNORE	true
20	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	21	MOD_mod	true
21	let	_	let	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
22	me	_	I	PRP	O	_	i	_	0	IGNORE	true
23	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	APP_o	true
24	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[6@@d@@anything, 15@@p@@apply-01, 18@@p@@next, 9@@s@@possible-01, 23@@s@@know-01, 12@@s@@strengthen-01, 20@@explicitanon0@@+, 16@@d@@file, 4@@c@@think-01, 14@@p@@overall, 3@@d@@you, 8@@d@@i, 21@@f@@let-01, 7@@p@@else, 10@@s@@do-02]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
2	discussions	_	discussion	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	discuss-01	(s())	1	APP_op1	true
3	with	_	with	IN	O	_	-	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	commercial	_	commercial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	commerce	(mod())	6	MOD_mod	true
6	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	propose	_	propose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	redlined	_	redline	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
12	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	added	_	add	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	8	APP_o	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
18	Dynegy	_name_	Dynegy	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	agreement	_	agreement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	agree-01	(s())	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
21	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	4	_	4	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	27	MOD_mod	true
24	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
25	negotiated	_	negotiate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
26	rate	_	rate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	agreements	_	agreement	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	agree-01	(s())	20	APP_op2	true
28	we've	_	we've	NN	O	_	cause-01	_	0	IGNORE	true
29	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	27	MOD_o	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@a@@and, 24@@p@@other, 18@@c@@company, 7@@d@@i, 26@@d@@rate, 5@@p@@commerce, 14@@s@@add-02, 27@@s@@agree-01, 11@@s@@redline-01, 29@@s@@do-02, 12@@d@@language, 19@@s@@agree-01, 2@@s@@discuss-01, 1@@w@@after, 6@@d@@group, 18@@n@@_NAME_, 25@@s@@negotiate-01, 17@@s@@attach-01, 23@@explicitanon0@@_NUMBER_, 8@@s@@propose-01]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	3	MOD_mod	true
2	disregard	_	disregard	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
4	destroy	_	destroy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_op2	true
5	the	_	the	DT	O	_	you	_	0	IGNORE	true
6	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	July_2,	_name_	2,	CD	O	_	_NAME_	_	0	IGNORE	true
11	as	_	as	RB	O	_	and	_	0	IGNORE	true
12	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
13	as	_	as	IN	O	_	and	_	0	IGNORE	true
14	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	blank	_	blank	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	forms	_	form	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
17	retrieved	_	retrieve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
18	from	_	from	IN	O	_	possible-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	PEP	_name_	pep	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
22	prior	_	prior	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
23	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
25	date	_	date	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@p@@form, 7@@d@@you, 4@@s@@destroy-01, 22@@n@@prior, 8@@s@@receive-01, 14@@p@@any, 2@@explicitanon0@@imperative, 15@@s@@blank-02, 6@@d@@form, 20@@p@@_NAME_, 2@@h@@disregard-01, 17@@s@@retrieve-01, 1@@explicitanon0@@+, 3@@a@@and, 21@@d@@system]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
3	outgrowth	_	outgrowth	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	19	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	3	APP_s	true
7	Leslie	_name_	Leslie	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_op2	true
10	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
11	with	_	with	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Scott	_name_	Scott	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (u<op1>)  :op2 (b2<op2>)  :accompanier-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
14	Hunter	_name_	Hunter	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op2	true
15	a_couple_of_weeks	_name_	week	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	ago,	_	ago,	DT	O	_	_NAME_	_	0	IGNORE	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	have	_	have	VBP	O	_	person	_	0	IGNORE	true
19	begun	_	begin	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
20	work	_	work	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	APP_o	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	develop	_	develop	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_o	true
23	an	_	an	DT	O	_	thing	_	0	IGNORE	true
24	electronic	_	electronic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
28	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
29	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	and	_	0	IGNORE	true
31	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_o	true
32	ongoing	_	ongoing	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	go-on-15	(s())	33	MOD_s	true
33	summaries	_	summary	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
34	of	_	of	IN	O	_	and	_	0	IGNORE	true
35	FERC	_name_	FERC	NNP	O	(o2<root> / organization  :name (n3 / --LEX--)  :mod-of (a<mod>))	_NAME_	(mod())	36	MOD_mod	true
36	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
37	activities,	_	activities,	NNS	O	_	and	_	0	IGNORE	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_s	true
39	possibly	_	possibly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	40	MOD_s	true
40	electric	_	electric	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op2	true
41	activities,	_	activities,	NNS	O	_	thing	_	0	IGNORE	true
42	in	_	in	IN	O	_	i	_	0	IGNORE	true
43	a	_	a	DT	O	_	1	_	0	IGNORE	true
44	format	_	format	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
45	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
46	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	48	MOD_s	true
47	be	_	be	VB	O	_	person	_	0	IGNORE	true
48	linked	_	link	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	44	MOD_s	true
49	to	_	to	IN	O	_	and	_	0	IGNORE	true
50	the	_	the	DT	O	_	person	_	0	IGNORE	true
51	Fundamentals	_name_	Fundamentals	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	53	MOD_mod	true
52	intranet	_	intranet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
54	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	53	MOD_o	true
55	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
56	the	_	the	DT	O	_	person	_	0	IGNORE	true
57	traders	_	trader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	trade-01	()	54	APP_s	true
58	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@d@@we, 12@@n@@_NAME_, 6@@s@@meet-03, 8@@a@@and, 52@@p@@intranet, 19@@c@@begin-01, 46@@s@@possible-01, 9@@d@@i, 48@@s@@link-01, 15@@p@@_NAME_, 38@@a@@and, 7@@p@@person, 3@@b@@outgrowth, 12@@p@@person, 35@@o2@@organization, 31@@s@@provide-01, 20@@c@@work-01, 44@@t@@format, 14@@n@@_NAME_, 39@@s@@possible-01, 36@@d@@gas, 22@@s@@develop-02, 32@@s@@go-on-15, 33@@s@@summary-01, 14@@p@@person, 13@@a@@and, 57@@e2@@trade-01, 57@@p2@@person, 7@@n@@_NAME_, 35@@n3@@_NAME_, 24@@p@@electronic, 51@@p@@_NAME_, 53@@d@@site, 54@@s@@use-01, 28@@s@@allow-01, 25@@d@@tool, 40@@d@@electric]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
3	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	paper	_	paper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	copies	_	copy	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
9	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	8	APP_op2	true
11	are	_	be	VBP	O	_	person	_	0	IGNORE	true
12	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	13	MOD_mod	true
13	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@you, 12@@n@@current, 5@@p@@paper, 8@@a@@and, 13@@s@@get-01, 6@@d@@copy-01, 10@@d@@person, 3@@s@@replace-01, 1@@d@@this]
sentence=1	What	what	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
3	the	_	the	DT	O	_	event	_	0	IGNORE	true
4	subject	_	subject	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	matter	_	matter	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	wish	_	wish	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	visit	_	visit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
10	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	?	_	?	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@p@@subject, 5@@r@@matter, 9@@s@@visit-01, 1@@d@@amr-unknown, 7@@s@@wish-01, 6@@d@@you]
sentence=1	Anything	anything	Anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
4	do	_	do	VB	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o2(s()), o())	3	MOD_o	true
5	to	_	to	TO	O	_	i	_	0	IGNORE	true
6	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o2	true
7	further	_	further	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
8	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	9	APP_poss	true
9	goals	_	goal	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_s	true
10	would	_	would	MD	O	_	i	_	0	IGNORE	true
11	be	_	be	VB	O	_	i	_	0	IGNORE	true
12	appreciated	_	appreciate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@possible-01, 2@@d@@you, 4@@i@@do-02, 9@@m@@goal, 12@@s@@appreciate-02, 6@@s@@help-01, 1@@d@@Anything, 8@@d@@i, 7@@s@@further-01]
sentence=1	Anything	anything	Anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
4	do	_	do	VB	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o2(s()), o())	3	MOD_o	true
5	to	_	to	TO	O	_	i	_	0	IGNORE	true
6	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o2	true
7	further	_	further	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
8	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	9	APP_poss	true
9	goals	_	goal	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_s	true
10	would	_	would	MD	O	_	i	_	0	IGNORE	true
11	be	_	be	VB	O	_	i	_	0	IGNORE	true
12	appreciated	_	appreciate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@Anything, 6@@s@@help-01, 8@@d@@i, 7@@s@@further-01, 3@@s@@possible-01, 4@@i@@do-02, 2@@d@@you, 9@@m@@goal, 12@@s@@appreciate-02]
sentence=1	Do	do	Do	VBP	O	_	person	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	capable-01	_	0	IGNORE	true
6	SSD	ssd	SSD	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_o	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
9	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[3@@p@@also, 4@@s@@have-03, 10@@explicitanon0@@interrogative, 2@@d@@you, 9@@s@@use-01, 6@@d@@_NAME_, 8@@s@@possible-01, 7@@d@@we]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	copy	_	copy	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	2	APP_o	true
5	of	_	of	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	to	_	to	IN	O	_	person	_	0	IGNORE	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	tomorrow	_name_	tomorrow	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	.	_	.	.	O	_	today	_	0	IGNORE	true

nodealignment=[4@@c@@copy-01, 7@@d@@document, 4@@t@@thing, 9@@s@@possible-01, 12@@d@@you, 2@@s@@have-03, 1@@d@@i, 13@@n@@tomorrow, 10@@s@@give-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	draft	_	draft	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	7	APP_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
6	been	_	be	VBN	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	by	_	by	IN	O	_	i	_	0	IGNORE	true
9	Dan	_name_	Dan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
10	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[4@@s@@receive-01, 2@@t@@thing, 2@@d@@draft-01, 3@@d@@you, 7@@s@@approve-01, 9@@n@@_NAME_, 9@@p@@person]
sentence=1	Sara,	_name_	Sara,	NNP	O	_	say-01	_	0	IGNORE	true
2	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	trader	_	trader	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	trade-01	(mod())	6	MOD_mod	true
6	guidelines	_	guideline	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	developed	_	develop	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_o	true
9	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	UK	_name_	UK	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_op1	true
11	gas,	_	gas,	NN	O	_	mean-01	_	0	IGNORE	true
12	UK	_name_	UK	NNP	O	_	_NAME_	_	0	IGNORE	true
13	power	_	power	NN	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	14	APP_op2	true
14	and	_	and	CC	O	(o<root> / --LEX--  :op3 (t2<op3>)  :op2 (b<op2>)  :op1 (l<op1>)  :example-of (t<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	8	MOD_mod	true
15	Nordic	_name_	nordic	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op3	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@p@@trade-01, 14@@o@@and, 2@@b@@here, 8@@s@@develop-02, 13@@c@@company, 6@@d@@guideline, 10@@c@@country, 10@@n@@_NAME_, 13@@n@@_NAME_, 16@@d@@power, 7@@d@@i, 15@@n@@_NAME_]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	addresses	_	address	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_o	true
5	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
10	concerns	_	concern	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_op2	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
13	raised	_	raise	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	workshops	_	workshop	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@raise-01, 10@@d@@concern-01, 11@@d@@you, 8@@d@@issue-02, 4@@s@@address-02, 3@@d@@it, 2@@s@@believe-01, 1@@d@@We, 16@@b@@workshop, 9@@a@@and, 5@@explicitanon0@@many]
sentence=1	On	on	on	IN	O	_	i	_	0	IGNORE	true
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
3	panel,	_	panel,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	5	MOD_o	true
4	Loretta_Lynch	_name_	Lynch	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	asked	_	ask	VBD	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o(s_UNIFY_o2()))	0	ROOT	true
6	Reliant	_name_	Reliant	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o2	true
8	Duke	_name_	Duke	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_op2	true
9	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
10	supply	_	supply	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
11	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	details	_	detail	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
15	of	_	of	IN	O	_	person	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	contracts	_	contract	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	they	_	they	PRP	O	_	person	_	0	IGNORE	true
19	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
20	to	_	to	TO	O	_	person	_	0	IGNORE	true
21	sell	_	sell	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	19	MOD_mod	true
22	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
23	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	forward	_	forward	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	to	_	to	IN	O	_	-	_	0	IGNORE	true
26	marketers	_	marketer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	lend-01	(s())	21	MOD_s	true
27	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@n@@_NAME_, 8@@n@@_NAME_, 26@@s@@lend-01, 8@@p@@person, 7@@a@@and, 19@@s@@cut-02, 6@@c@@company, 23@@d@@power, 17@@d@@contract, 14@@s@@detail-01, 24@@a@@forward, 10@@s@@supply-01, 21@@i@@sell-01, 3@@s@@have-org-role-91, 4@@n@@_NAME_, 5@@w@@ask-02, 4@@p@@person]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	numbers	_	number	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	slightly	_	slightly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	slight	(mod())	5	MOD_mod	true
5	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	differ-02	(s(), o())	0	ROOT	true
6	from	_	from	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	put	_	put	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
11	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	a_few_weeks_ago	_name_	ago	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
13	.	_	.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[11@@p@@together, 2@@d@@number, 10@@s@@put-01, 9@@d@@you, 12@@p@@_NAME_, 8@@d@@one, 4@@s@@slight, 1@@p@@this, 5@@s@@differ-02]
sentence=1	Here	here	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	Job	job	Job	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	Description	description	Description	NNP	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	describe-01	(s())	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	Operational	operational	Operational	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	operation	(mod())	9	MOD_mod	true
9	Accountabilities	accountabilities	Accountabilities	NNPS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_op2	true
10	for	_	for	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	position	_	position	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
14	mentioned	_	mention	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_o	true
15	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
17	last_Sunday	_name_	Sunday	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@b@@mention-01, 6@@a@@and, 1@@b@@here, 8@@p@@operation, 9@@s@@Accountabilities, 12@@d@@position, 5@@c@@describe-01, 4@@d@@Job, 5@@t@@thing, 13@@d@@i, 16@@d@@you, 17@@n@@_NAME_]
sentence=1	(From	(from	(From	NFP	O	_	$LEMMA$	_	0	IGNORE	true
2	time	_	time	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	PA	pa	PA	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_op1	true
4	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	funded	_	fund	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	to	_	to	TO	O	_	and	_	0	IGNORE	true
8	in-service	_	in-service	NN	O	(d<root> / --LEX--)	_NAME_	()	6	APP_o	true
9	will	_	will	MD	O	_	thing	_	0	IGNORE	true
10	be	_	be	VB	O	_	monetary-quantity	_	0	IGNORE	true
11	75_days	_name_	day	NNS	O	(d<root> / --LEX--)	kilometer	()	5	APP_op2	true
12	at	_	at	RB	O	_	and	_	0	IGNORE	true
13	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	11	MOD_mod	true
14	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[5@@a@@and, 13@@p@@at-most, 11@@d@@kilometer, 4@@s@@approve-01, 6@@s@@fund-01, 8@@d@@_NAME_, 3@@d@@_NAME_, 2@@p@@time]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	central	_	central	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	question	_	question	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	behind	_	behind	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	palace	_	palace	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	coup	_	coup	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
10	Terry_Winter,	_name_	Winter,	.	O	_	have-org-role-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
12	president	_	president	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	17	APP_s	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	Independent_System	_name_	System	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
16	Operator,	operator,	operator,	CD	O	_	_NAME_	_	0	IGNORE	true
17	acted	_	act	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	APP_s	true
18	alone	_	alone	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
19	when	_	when	WRB	O	_	i	_	0	IGNORE	true
20	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	took	_	take	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
22	steps	_	step	NNS	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	17	MOD_mod	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	remove	_	remove	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
25	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
26	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_s	true
27	caps	_	cap	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	24	APP_s	true
28	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	27	MOD_s	true
29	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
30	limit	_	limit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o	true
31	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
32	amount	_	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
33	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
34	generators	_	generator	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	36	APP_s	true
35	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	36	MOD_s	true
36	charge	_	charge	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	MOD_o	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@d@@price-01, 33@@d@@power, 7@@d@@coup, 15@@g@@government-organization, 28@@f@@design-01, 3@@s@@question-01, 15@@n@@_NAME_, 12@@h@@have-org-role-91, 12@@o@@president, 4@@p@@behind, 6@@p@@_NAME_, 36@@s@@charge-01, 30@@s@@limit-01, 2@@p@@central, 32@@d@@amount, 17@@s@@act-02, 27@@s@@cap, 18@@t@@alone, 35@@s@@possible-01, 22@@s@@step-01, 34@@s@@generator, 12@@p@@person, 24@@s@@remove-01, 25@@s@@key-02]
sentence=1	What	what	what	WP	O	_	thing	_	0	IGNORE	true
2	became	_	become	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	8	MOD_s	true
3	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	2	APP_o	true
4	as	_	as	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	palace	_	palace	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	7	MOD_mod	true
7	coup	_	coup	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	began	_	begin	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
9	on	_	on	IN	O	_	gregorian	_	0	IGNORE	true
10	Oct._26	_name_	26	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	8	MOD_mod	true
11	when	_	when	WRB	O	_	12	_	0	IGNORE	true
12	ISO	_name_	iso	NN	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	14	APP_o	true
13	board	_	board	NN	O	(d<root> / --LEX--)	$FORM$	()	14	APP_s	true
14	members	_	member	NNS	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	15	APP_s	true
15	voted	_	vote	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
16	for	_	for	IN	O	_	name	_	0	IGNORE	true
17	severe	_	severe	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	restrictions	_	restriction	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	restrict-01	(s())	15	APP_o	true
19	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	APP_s	true
22	of	_	of	IN	O	_	monetary-quantity	_	0	IGNORE	true
23	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_mod	true
24	electricity	_	electricity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	producers	_	producer	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	produce-01	(s())	27	APP_s	true
26	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	true
27	charge	_	charge	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	23	MOD_o	true
28	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
29	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o2	true
30	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[10@@n@@_DATE_, 8@@s@@begin-01, 25@@p@@person, 13@@d@@board, 21@@explicitanon0@@amount, 7@@d@@coup, 3@@s@@know-02, 27@@b@@charge-01, 26@@s@@possible-01, 29@@d@@power, 23@@d@@money, 25@@w@@produce-01, 12@@o2@@organization, 24@@d@@electricity, 14@@h@@have-org-role-91, 15@@s@@vote-01, 14@@g@@member, 17@@p@@severe, 2@@o@@become-01, 6@@p@@palace, 12@@n@@_NAME_, 18@@s@@restrict-01]
sentence=1	"We	"we	"We	LS	O	_	$REPL$	_	12	IGNORE	true
2	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	action	_	action	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	act-02	(s())	7	APP_s	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
6	took	_	take	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
7	addressed	_	address	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	severe	_	severe	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	concern,''	_	concern,''	.	O	_	cause-01	_	0	IGNORE	true
11	Robinson	_name_	Robinson	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
12	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
13	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@s@@believe-01, 11@@n@@_NAME_, 5@@d@@we, 11@@p@@person, 7@@s@@address-01, 4@@s@@act-02, 9@@d@@severe, 12@@c@@say-01]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	board	_	board	NN	O	(d<root> / --LEX--)	$FORM$	()	3	APP_s	true
3	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	4	APP_s	true
4	pushed	_	push	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	APP_s	true
5	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
6	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	9	MOD_s	true
7	Winter	_name_	Winter	NNP	O	(d<root> / --LEX--)	_NAME_	()	6	APP_o	true
8	removed,	_	removed,	NNS	O	_	and	_	0	IGNORE	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
11	were	_	be	VBD	O	_	person	_	0	IGNORE	true
12	concerns	_	concern	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
13	such	_	such	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	action	_	action	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
15	would	_	would	MD	O	_	thing	_	0	IGNORE	true
16	lead	_	lead	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-03	(s())	12	APP_s	true
17	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
18	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	chaos,	_	chaos,	NNP	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	governor's	_	governor'	NNS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
22	spokesman	_	spokesman	NN	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	23	MOD_s	true
23	Maviglio	_name_	Maviglio	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
25	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[9@@s@@contrast-01, 3@@h@@have-org-role-91, 12@@s@@concern-01, 3@@o@@member, 23@@p@@person, 23@@n@@_NAME_, 6@@s@@have-04, 2@@d@@board, 22@@h@@have-org-role-91, 13@@p@@such, 24@@s@@say-01, 18@@explicitanon0@@more, 21@@n@@_NAME_, 1@@explicitanon0@@some, 14@@d@@action, 16@@s@@lead-03, 21@@o2@@organization, 4@@s@@push-02, 22@@j@@spokesman, 7@@d@@_NAME_, 3@@p@@person]
sentence=1	Accordingly,	accordingly,	Accordingly,	NFP	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-17	(s(), o())	0	ROOT	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	arbitration	_	arbitration	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	arbitrate-01	(mod())	5	MOD_mod	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
10	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	IP	ip	ip	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	_NAME_	(s(), o())	5	MOD_o	true
12	(the	_	(the	UH	O	_	thing	_	0	IGNORE	true
13	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
15	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	therefore	_	therefore	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	20	MOD_s	true
17	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	5	MOD_s	true
18	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
20	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	17	MOD_s	true
21	to	_	to	IN	O	_	thing	_	0	IGNORE	true
22	choose)	_	choose)	NNP	O	_	and	_	0	IGNORE	true
23	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
24	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	5	APP_s	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	29	MOD_mod	true
27	an	_	an	DT	O	_	thing	_	0	IGNORE	true
28	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	29	MOD_mod	true
29	hardship	_	hardship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
30	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
32	contract	_	contract	NN	O	(s2<root> / --LEX--  :prep-under-of (t<mod>))	$LEMMA$-02	(mod())	29	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@p@@only, 20@@s@@obligate-01, 29@@d@@hardship, 17@@s@@thing, 26@@explicitanon0@@-, 10@@d@@our, 28@@p@@economy, 32@@s2@@contract-02, 24@@o@@or, 19@@d@@they, 7@@o@@arbitrate-01, 3@@p@@only, 5@@s@@leave-17, 16@@s@@cause-01, 11@@t@@_NAME_, 4@@s@@issue-02]
sentence=1	By	by	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
2	Friday_December	_name_	December	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	_NAME_	()	1	APP_op1	true
3	1st,	_	1st,	XX	O	_	3	_	0	IGNORE	true
4	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	7	MOD_mod	true
7	tell	_	tell	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
8	me	_	I	PRP	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	+	_	0	IGNORE	true
10	percentages/amount	_	percentages/amount	NN	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
11	of	_	of	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	include-91	(s(), o())	4	MOD_o	true
12	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	spent	_	spend	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_o	true
15	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	East_Coast_Power	_name_	Power	NNP	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	14	APP_o2	true
17	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the_months_of_October	_name_	October	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	_NAME_	()	19	APP_op1	true
19	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
20	November	_name_	November	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	11	()	19	APP_op2	true
21	.	_	.	.	O	_	11	_	0	IGNORE	true

nodealignment=[20@@d@@date-entity, 5@@d@@you, 16@@n4@@_NAME_, 12@@d@@time, 11@@s@@include-91, 18@@explicitanon0@@_NAME_, 18@@d@@date-entity, 2@@d@@date-entity, 19@@d@@and, 4@@s@@possible-01, 7@@t@@tell-01, 13@@d@@you, 2@@explicitanon0@@_NAME_, 20@@explicitanon0@@11, 1@@w@@by, 10@@d@@_NAME_, 14@@t@@spend-01, 16@@b@@broadcast-program, 6@@explicitanon0@@+]
sentence=1	Justin,	_name_	Justin,	NNP	O	_	say-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	MOD_s	true
4	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	knowledge	_	knowledge	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	know-01	(s(), o())	15	APP_s	true
6	of	_	of	IN	O	_	-	_	0	IGNORE	true
7	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	9	MOD_s	true
9	faith	_	faith	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	actins	_	actin	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	5	APP_o	true
11	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
12	has	_	have	VBZ	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
13	pending	_	pende	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
14	inTexas	intexas	inTexas	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	will	_	will	MD	O	_	person	_	0	IGNORE	true
18	call	_	call	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_o	true
19	Richard_Sanders	_name_	Sanders	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	manages	_	manage	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	domestic	_	domestic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	litgation	_	litgation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@explicitanon0@@-, 21@@s@@manage-01, 3@@s@@have-03, 14@@c@@company, 24@@b@@here, 15@@s@@contrast-01, 23@@d@@litgation, 9@@p@@faith, 14@@n@@_NAME_, 11@@n@@_NAME_, 8@@s@@bad-07, 5@@s@@know-01, 2@@d@@i, 22@@p@@domestic, 11@@c@@company, 18@@s@@call-02, 10@@s@@actin, 19@@p@@person, 13@@s@@pende-01, 19@@n@@_NAME_, 7@@p@@any]
sentence=1	I've	i've	I've	NNP	O	_	you	_	0	IGNORE	true
2	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
3	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
4	materials	_	material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	agree	_	agree	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_op2	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_o	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	address	_	address	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	APP_o	true
13	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	14	MOD_mod	true
14	allegations	_	allegation	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	allege-01	()	12	APP_o	true
15	appropriately	_	appropriately	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	appropriate-02	(s())	12	MOD_s	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@p@@this, 12@@s@@address-02, 14@@d@@allege-01, 5@@d@@you, 14@@t@@thing, 10@@c@@need-01, 15@@s@@appropriate-02, 7@@a@@and, 8@@c@@agree-01, 2@@s@@read-01, 9@@d@@we, 6@@s@@send-01, 4@@d@@material]
sentence=1	Richard	_name_	Richard	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
2	do	_	do	VBP	O	_	person	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
4	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	MOD_o	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	7	MOD_s	true
7	faith	_	faith	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	litigation	_	litigation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	sue-02	(s())	15	APP_op1	true
9	pending	_	pende	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	insurers	_	insurer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	Texas	_name_	Texas	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
16	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	15	APP_op2	true
19	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
20	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
22	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
23	filed?	_	filed?	JJ	O	_	_NAME_	_	0	IGNORE	true
24	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	15	MOD_mod	true

nodealignment=[1@@n@@_NAME_, 20@@p@@any, 11@@p@@any, 12@@d@@insurer, 4@@s@@have-03, 15@@a@@or, 8@@s@@sue-02, 18@@s@@realize-01, 24@@explicitanon0@@interrogative, 6@@s@@bad-07, 3@@d@@you, 7@@p@@faith, 21@@c@@company, 9@@s@@pende-01, 21@@n@@_NAME_, 14@@s@@state, 14@@n2@@_NAME_, 5@@p@@any]
sentence=1	(c)	_	(c)	CD	O	_	include-91	_	0	IGNORE	true
2	Are	are	be	VBP	O	_	person	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
4	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	with	_	with	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	draft	_	draft	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	letter	_	letter	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	4	APP_s	true
9	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	Beachcrofts	_name_	Beachcrofts	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
12	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[11@@d@@i, 4@@s@@happy-01, 10@@n@@_NAME_, 7@@s@@draft-01, 12@@s@@send-01, 3@@d@@you, 14@@explicitanon0@@interrogative, 8@@s@@letter, 10@@c@@company]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	passed	_	pass	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-on-14	(o2(), s(), o())	0	ROOT	true
3	along	_	along	RP	O	_	$LEMMA$	_	0	IGNORE	true
4	to	_	to	IN	O	_	person	_	0	IGNORE	true
5	Liz_Austin	_name_	Austin	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_o2	true
6	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	request	_	request	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
8	regarding	_	regard	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
9	pleadings	_	pleading	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	A&K	_name_	A&K	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	filed	_	file	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
13	setting	_	set	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	forth	_	forth	RP	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Trustee's	_name_	trustee's	JJ	O	_	_NAME_	_	0	IGNORE	true
17	position	_	position	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	13	APP_o	true
18	in	_	in	IN	O	_	event	_	0	IGNORE	true
19	connection	_	connection	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	connect-01	(s(), o())	2	MOD_s	true
20	with	_	with	IN	O	_	-	_	0	IGNORE	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	enforcement/nonenforcement	_	enforcement/nonenforcement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	27	APP_op1	true
23	of	_	of	IN	O	_	-	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	power	_	power	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	contracts	_	contract	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
28	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
29	remedies	_	remedy	VBZ	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	Trustee	_name_	Trustee	NNP	O	_	$LEMMA$	_	0	IGNORE	true
32	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
33	seeking	_	seek	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@s@@set-01, 33@@s@@seek-01, 17@@d@@position-02, 19@@s@@connect-01, 7@@s@@request-01, 5@@n@@_NAME_, 6@@d@@your, 27@@a@@and, 5@@p@@person, 25@@p@@power, 10@@p@@person, 10@@n@@_NAME_, 29@@d@@remedy, 1@@d@@i, 26@@d@@contract, 9@@d@@pleading, 22@@s@@_NAME_, 2@@b@@pass-on-14, 12@@s@@file-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
4	paralegal	_	paralegal	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	gathering	_	gather	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	pleadings	_	pleading	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
8	Enron	_name_	Enron	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	requested	_	request	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
10	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@d@@i, 7@@d@@pleading-01, 8@@n@@_NAME_, 2@@s@@have-03, 8@@p@@person, 9@@s@@request-01, 4@@d@@paralegal, 5@@s@@gather-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
2	have	_	have	VBP	O	_	person	_	0	IGNORE	true
3	had	_	have	VBN	O	_	$LEMMA$-03	_	0	IGNORE	true
4	enthusiastic	_	enthusiastic	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	responses	_	response	NNS	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	respond-01	(s(), o())	16	APP_op1	true
6	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	companies	_	company	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	such	_	such	JJ	O	_	and	_	0	IGNORE	true
9	as	_	as	IN	O	_	and	_	0	IGNORE	true
10	AT&T,	at&t,	AT&T,	NNP	O	_	_NAME_	_	0	IGNORE	true
11	Duke	duke	Duke	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	14	APP_op1	true
12	Energy,	energy,	energy,	CD	O	_	and	_	0	IGNORE	true
13	Pitney_Bowes	_name_	Bowes	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	14	APP_op2	true
14	and	_	and	CC	O	(o<root> / --LEX--  :op3 (t2<op3>)  :op2 (b<op2>)  :op1 (l<op1>)  :example-of (t<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	7	MOD_mod	true
15	DaimlerChrysler,	_name_	DaimlerChrysler,	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	14	APP_op3	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
18	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
19	be	_	be	VB	O	_	person	_	0	IGNORE	true
20	pleased	_	pleased	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_op2	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	answer	_	answer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_s	true
23	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	questions	_	question	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
25	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	MOD_s	true
27	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
28	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	focal	_	focal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	center	(mod())	31	MOD_mod	true
31	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
32	for	_	for	IN	O	_	thing	_	0	IGNORE	true
33	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
34	educational	_	educational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	educate-01	(mod())	31	MOD_mod	true
35	efforts.	_	efforts.	NN	O	_	$LEMMA$	_	0	IGNORE	true
36	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	16	MOD_mod	true

nodealignment=[36@@explicitanon0@@interrogative, 15@@n@@_NAME_, 5@@t@@respond-01, 1@@d@@We, 13@@c@@company, 29@@p@@this, 11@@n@@_NAME_, 14@@o@@and, 20@@s@@pleased-02, 23@@p@@any, 13@@n@@_NAME_, 26@@s@@possible-01, 4@@t@@enthusiastic, 16@@a@@and, 11@@c@@company, 31@@d@@point, 34@@p@@educate-01, 24@@s@@question-01, 30@@p@@center, 25@@d@@you, 7@@d@@company, 15@@c@@company, 22@@s@@answer-01]
sentence=1	The	the	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
2	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	3	MOD_s	true
3	purpose	_	purpose	NN	O	(d<root> / --LEX--)	have-$LEMMA$-91	()	9	APP_s	true
4	of	_	of	IN	O	_	thing	_	0	IGNORE	true
5	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
6	call,	_	call,	NNP	O	_	resemble-01	_	0	IGNORE	true
7	however,	_	however,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	related	_	relate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	0	ROOT	true
10	to	_	to	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	services	_	service	NNS	O	(d<root> / --LEX--)	serve-01	()	9	APP_o	true
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	will	_	will	MD	O	_	thing	_	0	IGNORE	true
15	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	support	_	support	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
18	the	_	the	DT	O	_	government-organization	_	0	IGNORE	true
19	aspirational	_	aspirational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	statements	_	statement	NNS	O	(t2<root> / thing  :ARG1-of (d / --LEX--  :ARG0 (t<s>)))	state-01	(s())	17	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	Protocol	_name_	Protocol	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[20@@d@@state-01, 17@@s@@support-01, 20@@t2@@thing, 13@@d@@we, 19@@p@@aspirational, 23@@d@@Protocol, 9@@s@@relate-01, 15@@s@@provide-01, 3@@d@@have-purpose-91, 12@@d@@serve-01, 2@@s@@real-04]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	4	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
4	kids	_	kid	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	will	_	will	MD	O	_	person	_	0	IGNORE	true
7	destroy	_	destroy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	society,	_	society,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
9	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
10	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	crapfest	_	crapfest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	the	_	the	DT	O	_	name	_	0	IGNORE	true
14	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
17	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
18	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	post	_	post	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
21	hippie	_	hippie	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
22	culture,	_	culture,	NNP	O	_	and	_	0	IGNORE	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
25	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@s@@cause-01, 21@@p@@hippie, 17@@s@@become-01, 12@@d@@crapfest, 4@@r@@kid, 14@@n@@_NAME_, 7@@s@@destroy-01, 1@@d@@this, 24@@s@@hear-01, 14@@c@@country, 25@@p@@again, 23@@d@@you, 20@@n@@post, 15@@d@@family]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	expressive	_	0	IGNORE	true
4	insidious	_	insidious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	conspiracy	_	conspiracy	NN	O	(r<root> / --LEX--  :domain (q<dom>))	conspire-01	(dom())	0	ROOT	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	call	_	call	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	"Mommism"	"mommism"	"Mommism"	NNP	O	_	thing	_	0	IGNORE	true
9	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@r@@conspire-01, 4@@p@@insidious, 1@@d@@this, 7@@s@@call-01, 6@@d@@i]
sentence=1	One	one	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	tool	_	tool	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	detect	_	detect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	damage	_	damage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
9	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	thermal-protective	_	thermal-protective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	protect-01	(mod())	12	MOD_mod	true
12	tile	_	tile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	while	_	while	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
15	orbit	_	orbit	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
16	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
17	something	_	something	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Columbia	_name_	Columbia	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	crew	_	crew	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
21	would	_	would	MD	O	_	have-org-role-91	_	0	IGNORE	true
22	have	_	have	VB	O	_	person	_	0	IGNORE	true
23	welcomed	_	welcome	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@s@@special-02, 1@@d@@one, 8@@s@@damage-01, 20@@d@@crew, 12@@d@@tile, 11@@p@@protect-01, 19@@n@@_NAME_, 5@@r@@tool, 7@@s@@detect-01, 23@@s@@welcome-01, 15@@b@@orbit-01]
sentence=1	"All	"all	"all	XX	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_s	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	preparation	_	preparation	NN	O	(d<root> / --LEX--)	prepare-02	()	5	APP_op2	true
10	I	i	I	PRP	O	_	$REPL$	_	34	IGNORE	true
11	did	_	do	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
12	leading	_	lead	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-05	(s(), o())	9	MOD_s	true
13	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	trip	_	trip	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	12	APP_o	true
17	gave	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
18	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	indication	_	indication	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	indicate-01	(s(), o())	34	APP_o	true
20	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
21	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
22	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	bears	_	bear	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	Soper_[River]	_name_	[river]	XX	O	_	_NAME_	_	0	IGNORE	true
27	valley	_	valley	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	where	_	where	WRB	O	_	location	_	0	IGNORE	true
29	we	_	we	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
30	were	_	be	VBD	O	_	person	_	0	IGNORE	true
31	canoeing,"	_	canoeing,"	NNP	O	_	expressive	_	0	IGNORE	true
32	Dr.	dr.	Dr.	NNP	O	_	_NAME_	_	0	IGNORE	true
33	Fortier	_name_	Fortier	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@explicitanon0@@-, 23@@d@@bear, 19@@s@@indicate-01, 29@@b@@we, 33@@p@@person, 6@@p@@all, 9@@d@@prepare-02, 1@@explicitanon0@@"all, 34@@s@@say-01, 12@@s@@lead-up-05, 27@@b@@valley, 16@@d@@trip-03, 5@@a@@and, 4@@d@@research-01, 33@@n@@_NAME_]
sentence=1	Bill_Hewlett	_name_	Hewlett	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
3	Dave_Packard	_name_	Packard	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op2	true
4	tossed	_	toss	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	person	_	0	IGNORE	true
6	coin	_	coin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	to	_	to	TO	O	_	name	_	0	IGNORE	true
8	decidewhether	_	decidewhether	VB	O	_	slash	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
11	they	_	they	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
12	founded	_	found	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	would	_	would	MD	O	_	name	_	0	IGNORE	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_o2	true
16	Hewlett-Packard	_name_	Hewlett-Packard	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	Packard-Hewlett	_name_	Packard-Hewlett	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@p@@person, 10@@d@@company, 12@@s@@found-01, 18@@n@@_NAME_, 3@@n@@_NAME_, 11@@b@@they, 2@@a@@and, 6@@d@@coin, 4@@b@@toss-01, 15@@s@@call-01, 1@@p@@person, 16@@n@@_NAME_, 17@@d@@or, 1@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	graphics	_	graphic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
5	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	s$LEMMA$y-01	(mod())	19	MOD_mod	true
6	doubt	_	doubt	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	amoung	_	amoung	NN	O	_	have-polarity-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	11	MOD_s	true
11	graphics	_	graphic	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	19	APP_op1	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
16	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
17	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	game	_	game	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
20	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
21	have	_	have	VBP	O	_	person	_	0	IGNORE	true
22	been	_	be	VBN	O	_	person	_	0	IGNORE	true
23	gaming	_	game	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op2	true
24	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
25	the_MUD_days	_name_	day	NNS	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	24	APP_op1	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@n@@_NAME_, 12@@d@@i, 10@@m@@most, 25@@w@@war, 10@@b2@@good-02, 18@@o@@game, 4@@explicitanon0@@-, 6@@s@@doubt-01, 17@@p@@any, 14@@n@@ever, 24@@w@@since, 19@@a@@and, 11@@r@@graphic, 23@@d@@game-01, 15@@s@@see-01, 5@@explicitanon0@@say-01, 2@@d@@graphic]
sentence=1	It's	it's	it's	PRP	O	_	say-01	_	0	IGNORE	true
2	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	time	_	time	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	3	APP_mod	true
6	together	_	together	RB	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@about, 6@@d@@together, 4@@d@@we, 3@@p@@time, 5@@s@@get-05]
sentence=1	Also,	_name_	Also,	NNP	O	_	say-01	_	0	IGNORE	true
2	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	3	MOD_mod	true
3	pass	_	pass	VB	O	(t<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG2 (i2<o2>)  :ARG1 (i<o>)  :ARG0 (d<s>))	$LEMMA$-05	(o2(), s(), o())	0	ROOT	true
4	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
9	know,	_	know,	NNP	O	_	include-91	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o2	true
11	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	email	_	email	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	contacts	_	contact	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
16	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[10@@a@@and, 15@@d@@contact, 3@@explicitanon0@@imperative, 7@@d@@everyone, 3@@t@@pass-05, 2@@explicitanon0@@+, 14@@p@@email, 4@@d@@this, 8@@d@@you, 11@@p@@all]
sentence=1	Here	here	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	emails	_	email	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	MOD_s	true
7	sent,	_	sent,	NNS	O	_	_NAME_	_	0	IGNORE	true
8	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	flyer	_	flyer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
12	for	_	for	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	4	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Benefit	_name_	Benefit	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	fund	_	fund	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
16	raiser	_	raiser	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$	(mod(), s())	11	MOD_mod	true
17	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	are	_	be	VBP	O	_	person	_	0	IGNORE	true
19	holding	_	hold	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	16	MOD_s	true
20	in	_	in	IN	O	_	after	_	0	IGNORE	true
21	June,	_name_	June,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	information	_	information	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$	(mod(), s())	6	MOD_mod	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@p@@June,, 24@@d@@your, 15@@d@@fund-01, 3@@explicitanon0@@some, 25@@b@@information, 4@@s@@email, 5@@d@@we, 14@@p@@Benefit, 1@@b@@here, 12@@s@@thing, 19@@s@@hold-04, 11@@d@@flyer, 6@@s@@have-03, 22@@p@@just, 16@@i@@raiser]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
3	can	_	can	MD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	possible-01	(mod(), s())	8	MOD_mod	true
4	pass	_	pass	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	info	_	info	NN	O	(d<root> / --LEX--)	$LEMMA$rmation	()	4	APP_o	true
7	along,	_	along,	NNP	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	21	APP_o	true
9	ask	_	ask	VB	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o(s_UNIFY_o2()))	8	APP_op2	true
10	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	forward	_	forward	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	contacts,	_	contacts,	CD	O	_	and	_	0	IGNORE	true
19	etc,	_	etc,	NN	O	_	et-cetera	_	0	IGNORE	true
20	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
21	may	_	may	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	possible-01	(s(), o())	0	ROOT	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	a	_	a	DT	O	_	thing	_	0	IGNORE	true
24	shot	_	shot	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	shoot-01	(o(s()))	21	APP_s	true
25	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	pulling	_	pull	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-off-03	(s(), o())	24	APP_o	true
27	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
28	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[5@@p@@this, 14@@s@@forward-01, 26@@s@@pull-off-03, 8@@a@@and, 9@@w@@ask-02, 6@@d@@information, 20@@d@@we, 21@@s@@possible-01, 24@@c@@shoot-01, 4@@s@@pass-01, 3@@o@@possible-01, 10@@d@@everyone, 27@@d@@this, 12@@s@@know-01, 2@@d@@you]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	will	_	will	MD	O	_	i	_	0	IGNORE	true
3	attach	_	attach	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	explaining	_	explain	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	benefit	_	benefit	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	are	_	be	VBP	O	_	person	_	0	IGNORE	true
11	sponsoring	_	sponsor	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@sponsor-01, 9@@d@@we, 5@@d@@letter, 6@@s@@explain-01, 8@@d@@benefit-01, 3@@s@@attach-01, 1@@d@@i]
sentence=1	Her	her	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	grant	_	grant	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_s	true
3	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	life	_	life	NN	O	(d<root> / --LEX--)	live-01	()	6	APP_o	true
6	saving	_	saving	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_s	true
7	treatments	_	treatment	NNS	O	(d<root> / --LEX--)	treat-03	()	2	APP_s	true
8	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
9	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
11	run	_	run	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op1	true
12	out,	_	out,	RB	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	13	APP_op2	true
16	to	_	to	TO	O	_	and	_	0	IGNORE	true
17	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	to	_	to	TO	O	_	and	_	0	IGNORE	true
20	continue	_	continue	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	17	APP_o	true
21	to	_	to	TO	O	_	person	_	0	IGNORE	true
22	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	24	MOD_mod	true
24	treatments	_	treatment	NNS	O	(d<root> / --LEX--)	treat-03	()	22	APP_o	true
25	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[14@@d@@we, 7@@d@@treat-03, 20@@c@@continue-01, 22@@s@@receive-01, 9@@s@@need-01, 2@@s@@grant-01, 5@@d@@live-01, 11@@s@@run-01, 24@@d@@treat-03, 17@@s@@help-01, 15@@c@@need-01, 6@@s@@saving-03, 13@@a@@and, 23@@p@@this, 8@@d@@she]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	say-01	_	0	IGNORE	true
3	an	_	an	DT	O	_	say-01	_	0	IGNORE	true
4	event	_	event	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	want	_	want	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	to	_	to	IN	O	_	-	_	0	IGNORE	true
9	miss!	_	miss!	NNS	O	_	_NAME_	_	0	IGNORE	true
10	!	_	!	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[5@@d@@you, 1@@d@@this, 4@@r@@event, 6@@explicitanon0@@-, 7@@s@@want-01]
sentence=1	Eurasia	_name_	Eurasia	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
2	Group,	_name_	Group,	NNP	O	_	include-91	_	0	IGNORE	true
3	a	_	a	DT	O	_	base-01	_	0	IGNORE	true
4	New_York-based	_name_	york-based	JJ	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	firm	_	firm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	5	MOD_mod	true
8	analysts,	_	analysts,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
9	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	its	_	its	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
11	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	experts	_	expert	NNS	O	(p<root> / person  :ARG1-of (p2 / --LEX--  :ARG2 (g<s>)))	$LEMMA$-01	(s())	13	APP_s	true
13	worked	_	work	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-02	(s(), o())	9	APP_o	true
14	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
15	that	_	that	IN	O	_	and	_	0	IGNORE	true
16	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
19	such	_	such	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	an	_	an	DT	O	_	1	_	0	IGNORE	true
21	inflated	_	inflated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	18	APP_o	true
23	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
24	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
25	investment	_	investment	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	invest-01	(s())	22	APP_s	true
26	in	_	in	IN	O	_	person	_	0	IGNORE	true
27	Brazil	_name_	Brazil	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
28	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	cost	_	cost	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	38	MOD_o	true
31	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
32	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	9	MOD_o	true
33	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
34	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	ended	_	end	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-up-03	(s())	33	MOD_s	true
36	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
37	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
38	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	9	MOD_s	true
39	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	43	MOD_mod	true
40	times	_	time	NNS	O	_	product-of	_	0	IGNORE	true
41	the	_	the	DT	O	_	product-of	_	0	IGNORE	true
42	market	_	market	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	32	MOD_s	true
44	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[27@@c@@country, 39@@explicitanon0@@3, 11@@d@@oil, 1@@n@@_NAME_, 32@@s@@person, 38@@s@@person, 7@@p@@politics, 9@@s@@say-01, 43@@t@@thing, 4@@n@@_NAME_, 19@@p@@such, 22@@c@@price-01, 35@@s@@end-up-03, 16@@n@@_NAME_, 33@@d@@oil, 21@@s@@inflated-01, 22@@t@@thing, 13@@s@@work-out-02, 18@@s@@pay-01, 42@@p@@market, 43@@c@@price-01, 4@@c@@city, 5@@d@@firm, 12@@p@@person, 27@@n@@_NAME_, 16@@c@@country, 30@@s@@cost-01, 12@@p2@@expert-01, 25@@s@@invest-01]
sentence=1	Another	another	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	try	_	try	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
6	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@d@@thing, 1@@p@@another, 4@@s@@possible-01, 5@@s@@try-01, 3@@d@@you]
sentence=1	Imagine	imagine	imagine	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	you're	_	you're	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	sitting	_	sit	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	9	APP_op1	true
4	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
5	top	_	top	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	mountain,	_	mountain,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
10	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	it's	_	it's	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	peaceful	_	peaceful	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
16	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	MOD_s	true
18	think	_	think	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
19	of	_	of	IN	O	_	thing	_	0	IGNORE	true
20	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@p@@peaceful, 9@@a@@and, 1@@s@@imagine-01, 18@@s@@think-01, 5@@d@@top, 13@@s@@most, 15@@d@@place, 17@@s@@possible-01, 3@@s@@sit-01]
sentence=1	Yes,	yes,	yes,	UH	O	_	expressive	_	0	IGNORE	true
2	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	and	_	0	IGNORE	true
4	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_s	true
8	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	APP_o	true
12	they	_	they	PRP	O	_	person	_	0	IGNORE	true
13	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_mod	true
14	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
15	will	_	will	MD	O	_	thing	_	0	IGNORE	true
16	vote	_	vote	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
17	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the_Supreme_Court	_name_	Court	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
19	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[18@@p@@person, 7@@d@@person, 8@@explicitanon0@@-, 14@@d@@he, 16@@s@@vote-01, 13@@s@@think-01, 11@@t@@way, 6@@p@@some, 9@@s@@like-01, 4@@s@@true-01, 18@@n@@_NAME_]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	5	APP_o	true
4	do	_	do	VBP	O	_	person	_	0	IGNORE	true
5	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	1	APP_o	true
8	they	_	they	PRP	O	_	person	_	0	IGNORE	true
9	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_mod	true
10	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	will	_	will	MD	O	_	thing	_	0	IGNORE	true
12	vote,	_	vote,	NNP	O	_	thing	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_s	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	who	_	who	WP	O	_	person	_	0	IGNORE	true
17	favor	_	favor	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_o	true
18	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
20	to	_	to	TO	O	_	person	_	0	IGNORE	true
21	outnumber	_	outnumber	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_s	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	who	_	who	WP	O	_	person	_	0	IGNORE	true
25	oppose	_	oppose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
26	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[19@@s@@seem-01, 5@@s@@like-01, 3@@d@@person, 1@@s@@contrast-01, 2@@p@@other, 9@@s@@think-01, 10@@d@@he, 25@@s@@oppose-01, 13@@a@@and, 21@@d@@outnumber-01, 7@@t@@way, 17@@s@@favor-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	basic	_	basic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	idea	_	idea	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_op2	true
5	behind	_	behind	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the_Checks_and_Balances	_name_	Balances	NNPS	O	(a<root> / --LEX--  :topic-of (w<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_o	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
12	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	13	MOD_mod	true
13	branch	_	branch	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	17	APP_s	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Government	_name_	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	13	APP_poss	true
17	goes	_	go	VBZ	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-08	(mod(), s())	22	MOD_mod	true
18	crazy,	_	crazy,	NNP	O	_	and	_	0	IGNORE	true
19	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
20	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
21	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	23	APP_s	true
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	APP_dom	true
23	hold	_	hold	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_s	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[6@@a@@_NAME_, 21@@t@@thing, 21@@explicitanon0@@2, 23@@s@@hold-01, 16@@g@@government-organization, 22@@s@@possible-01, 7@@d@@we, 8@@s@@have-03, 16@@g2@@govern-01, 13@@h@@branch, 1@@a@@and, 20@@p@@other, 3@@p@@basic, 17@@o@@go-08, 4@@r@@idea, 12@@explicitanon0@@1]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	want	_	want	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
4	to	_	to	TO	O	_	event	_	0	IGNORE	true
5	help,	_	help,	NNS	O	_	and	_	0	IGNORE	true
6	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	7	MOD_mod	true
7	send	_	send	VB	O	(t<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG2 (i2<o2>)  :ARG1 (i<o>)  :ARG0 (d<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	who	_	who	WP	O	_	i	_	0	IGNORE	true
14	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	read	_	read	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
17	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@d@@everyone, 7@@t@@send-01, 8@@d@@they, 3@@o@@want-01, 2@@d@@you, 14@@s@@need-01, 6@@explicitanon0@@+, 7@@explicitanon0@@imperative, 16@@s@@read-01, 12@@s@@know-01]
sentence=1	Below	below	below	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	pasted	_	paste	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
6	text,	_	text,	CD	O	_	$LEMMA$	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	APP_op2	true
10	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
11	link	_	link	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	to	_	to	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	automatically	_	automatically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	17	MOD_mod	true
17	plays	_	play	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
18	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	song	_	song	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	author	_	author	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	$LEMMA$-01	(s())	25	APP_s	true
22	of	_	of	IN	O	_	person	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	created	_	create	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@p@@this, 11@@s@@link-01, 17@@s@@play-01, 21@@w@@author-01, 5@@d@@email-01, 9@@s@@have-03, 3@@s@@paste-01, 25@@s@@create-01, 7@@a@@and, 2@@d@@i, 16@@t@@automatic, 19@@d@@song, 21@@p@@person, 14@@d@@website, 24@@d@@email, 1@@b@@below]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	Civet	_name_	Civet	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	Cat	cat	Cat	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	while	_	while	IN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
11	ago,	_	ago,	JJ	O	_	and	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	tonight,	_	tonight,	ADD	O	_	and	_	0	IGNORE	true
14	when	_	when	WRB	O	_	i	_	0	IGNORE	true
15	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
16	Mom	mom	Mom	NNP	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	17	APP_s	true
17	emailed	_	email	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
18	me	_	I	PRP	O	_	be-temporally-at-91	_	0	IGNORE	true
19	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	it,	_	it,	XX	O	_	and	_	0	IGNORE	true
21	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
22	re-read	_	re-read	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_op1	true
23	it,	_	it,	PRP	O	_	and	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_op2	true
25	went	_	go	VBD	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	24	APP_op2	true
26	to	_	to	IN	O	_	i	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
29	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	song	_	song	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	author	_	author	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	$LEMMA$-01	(s())	37	APP_s	true
34	of	_	of	IN	O	_	i	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_s	true
37	created	_	create	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_o	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@h@@have-rel-role-91, 16@@f@@Mom, 37@@s@@create-01, 2@@s@@read-01, 31@@y@@song, 4@@p@@Civet, 33@@w@@author-01, 5@@p@@Cat, 9@@p@@little, 1@@d@@i, 22@@d@@re-read-01, 16@@p@@person, 24@@a@@and, 36@@d@@email-01, 28@@d@@website, 33@@p@@person, 10@@explicitanon0@@while, 25@@p@@go-02, 6@@d@@story, 12@@a@@and, 17@@v@@email-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	my	_	my	PRP$	O	_	and	_	0	IGNORE	true
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	6	MOD_mod	true
5	time	_	time	NN	O	_	multi-sentence	_	0	IGNORE	true
6	posting	_	post	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_s	true
7	to	_	to	IN	O	_	post-01	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	list,	_	list,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
10	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
12	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
13	somewhat	_	somewhat	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	embarrassed	_	embarrassed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
15	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
16	"promoting"	_	"promoting"	NNP	O	_	-	_	0	IGNORE	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	song	_	song	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	wrote,	_	wrote,	NNP	O	_	thing	_	0	IGNORE	true
21	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	10	MOD_s	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	fitting	_	fitting	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
27	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	26	MOD_o	true
28	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
30	directly	_	directly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	direct-02	(s())	31	MOD_s	true
31	tied	_	tie	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	27	APP_s	true
32	to	_	to	IN	O	_	thing	_	0	IGNORE	true
33	extreme	_	extreme	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	animal	_	animal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
35	suffering	_	suffering	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	suffer-01	(s())	31	APP_s	true
36	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
37	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
38	result	_	result	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	31	MOD_o	true
39	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
40	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
41	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_s	true
42	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
43	empathy,	_	empathy,	NNS	O	_	and	_	0	IGNORE	true
44	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	35	MOD_s	true
45	an	_	an	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
46	abundance	_	abundance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
47	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
48	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
49	greed	_	greed	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_o	true
50	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[41@@s@@lack-01, 40@@d@@human, 26@@d@@fitting, 10@@s@@cause-01, 4@@explicitanon0@@1, 49@@d@@greed, 12@@s@@feel-01, 38@@s@@result-01, 44@@s@@contrast-01, 11@@d@@i, 48@@p@@human, 30@@s@@direct-02, 35@@s@@suffer-01, 46@@p@@abundance, 4@@o@@ordinal-entity, 21@@s@@contrast-01, 13@@s@@somewhat, 14@@s@@embarrassed-01, 33@@p@@extreme, 1@@d@@this, 6@@s@@post-01, 27@@s@@cause-01, 18@@d@@song, 23@@s@@think-01, 31@@s@@tie-01, 36@@s@@cause-01, 34@@d@@animal]
sentence=1	To	to	to	TO	O	_	cause-01	_	0	IGNORE	true
2	promote	_	promote	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	15	MOD_mod	true
3	one	_	one	CD	O	(d<root> / --LEX--)	1	()	2	APP_s	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	3	MOD_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	trivial	_	trivial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	interests	_	interest	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	2	APP_o	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	have,	_	have,	VBZ	O	_	multi-sentence	_	0	IGNORE	true
11	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000	(mod())	13	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	tormented	_	torment	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
16	for	_	for	IN	O	_	and	_	0	IGNORE	true
17	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	lives.	_	lives.	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	"	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[15@@s@@torment-01, 9@@d@@we, 2@@s@@promote-02, 8@@t@@thing, 3@@d@@1, 6@@s@@most, 18@@p@@whole, 8@@c@@interest-01, 11@@explicitanon0@@1000, 4@@s@@include-91, 13@@d@@animal, 11@@m@@multiple, 7@@p@@trivial]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
2	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
3	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	on	_	on	IN	O	_	i	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	bulletin	_	bulletin	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	board	_	board	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_op2	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	try	_	try	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
12	it:	_	it:	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	8	MOD_s	true
13	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	care	_	care	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
16	about	_	about	IN	O	_	thing	_	0	IGNORE	true
17	the	_	the	DT	O	_	-	_	0	IGNORE	true
18	useless	_	useless	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	use-01	(s())	20	MOD_s	true
19	pre-fabricated	_	pre-fabricated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
20	crap	_	crap	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	15	APP_s	true
21	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
23	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	24	MOD_mod	true
24	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@a@@and, 2@@s@@find-01, 22@@d@@message-01, 21@@p@@this, 24@@s@@say-01, 7@@b@@board, 3@@d@@this, 14@@explicitanon0@@-, 19@@s@@pre-fabricated-01, 15@@s@@care-01, 11@@s@@try-01, 9@@c@@decide-01, 23@@p@@usual, 20@@d@@crap-01, 1@@d@@i, 20@@t@@thing, 18@@s@@use-01, 12@@s@@and, 6@@p@@bulletin]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	is,	_	is,	NNP	O	_	thing	_	0	IGNORE	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	works	_	work	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	3	APP_o	true
7	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@s@@work-09, 2@@d@@i, 5@@d@@it, 3@@s@@say-01, 1@@p@@all]
sentence=1	Change	change	change	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
2	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	try	_	try	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
8	to	_	to	TO	O	_	you	_	0	IGNORE	true
9	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
10	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	article	_	article	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	13	MOD_mod	true
13	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-10	(s(), o())	9	MOD_s	true
14	to	_	to	IN	O	_	thing	_	0	IGNORE	true
15	original	_	original	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	as	_	as	IN	O	_	most	_	0	IGNORE	true
17	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@article, 4@@s@@need-01, 1@@explicitanon0@@imperative, 9@@s@@keep-01, 1@@h@@change-01, 12@@s@@equal, 3@@d@@you, 13@@s@@close-10, 2@@d@@anything, 17@@s@@possible-01, 15@@d@@original, 7@@s@@try-01, 10@@p@@this, 6@@s@@contrast-01]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
4	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
5	200,	_	200,	CD	O	(d<root> / --LEX--)	and	()	3	APP_o	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	remember,	_	remember,	NNS	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	more	_	more	RBR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	post,	_	post,	VBZ	O	_	shit	_	0	IGNORE	true
12	the	_	the	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	monetary-quantity	(mod())	6	APP_o	true
13	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_mod	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	make!	_	make!	NNP	O	_	contrast-01	_	0	IGNORE	true
17	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[12@@explicitanon0@@monetary-quantity, 2@@d@@you, 9@@explicitanon0@@more, 1@@p@@all, 6@@s@@contrast-01, 3@@s@@need-01, 5@@d@@and, 14@@d@@money, 13@@explicitanon0@@more]
sentence=1	NOTE:	_name_	NOTE:	NNP	O	_	say-01	_	0	IGNORE	true
2	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_s	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	retain	_	retain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
7	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	name	_	name	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
10	address	_	address	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	to	_	to	IN	O	_	thing	_	0	IGNORE	true
13	you,	_	you,	NNS	O	_	thing	_	0	IGNORE	true
14	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	on	_	on	IN	O	_	except-01	_	0	IGNORE	true
16	a	_	a	DT	O	_	thing	_	0	IGNORE	true
17	computer	_	computer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
19	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	copy	_	copy	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op2	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_o	true
22	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
23	the	_	the	DT	O	_	and	_	0	IGNORE	true
24	notes	_	note	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	26	APP_s	true
26	send	_	send	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
27	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@d@@person, 18@@a@@or, 2@@d@@You, 8@@t@@thing, 6@@s@@retain-01, 10@@d@@address, 20@@d@@copy-01, 22@@s@@keep-01, 3@@s@@possible-01, 21@@a@@and, 7@@p@@every, 9@@a@@and, 17@@d@@computer, 24@@d@@note, 4@@c@@want-01, 19@@s@@hard-02, 8@@a@@name, 26@@s@@send-01, 11@@s@@send-01]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	6	APP_op1	true
4	to	_	to	IN	O	_	thing	_	0	IGNORE	true
5	do,	_	do,	NN	O	_	obligate-01	_	0	IGNORE	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
7	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	Really	really	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	9	MOD_s	true
9	works!!	_	works!!	ADD	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op3	true
10	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[7@@d@@It, 9@@d@@works!!, 3@@s@@obligate-01, 1@@p@@all, 6@@a@@and, 8@@s@@real-04, 2@@d@@you]
sentence=1	"All	"all	"All	``	O	_	$LEMMA$	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	do	_	do	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	3	APP_o	true
6	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
7	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
8	at	_	at	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	photographs,"	_	photographs,"	NNP	O	_	name	_	0	IGNORE	true
11	Ed_Bangs,	_name_	bangs,	NN	O	_	_NAME_	_	0	IGNORE	true
12	wolf	_	wolf	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	recovery	_	recovery	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
14	coordinator	_	coordinator	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	coordinate-01	(s(), o())	16	MOD_s	true
15	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
16	the_U.S._Fish_and_Wildlife_Service,	_name_	Service,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
17	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
18	UPI's_Blue_Planet	_name_	Planet	NNP	O	(p<root> / publication  :name (n / --LEX--))	_NAME_	()	17	APP_o2	true
19	,	_	,	,	O	_	say-01	_	0	IGNORE	true

nodealignment=[14@@s@@coordinate-01, 5@@c@@do-02, 16@@p@@_NAME_, 2@@d@@you, 12@@d@@wolf, 18@@p@@publication, 18@@n@@_NAME_, 13@@s@@recovery-01, 3@@o@@obligate-01, 7@@s@@look-01, 17@@b@@tell-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
4	10_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	of	_	of	IN	O	_	date-interval	_	0	IGNORE	true
6	DNA	dna	dna	NN	O	(n2<root> / nucleic-acid  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	testing	_	testing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	test-01	(s())	3	APP_op1	true
8	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
9	northern	_	northern	JJ	O	(b<root> / --LEX--  :location-of (h<mod>))	north	(mod())	10	MOD_mod	true
10	Rockies	rockies	Rockies	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	wolves,	_	wolves,	NNP	O	_	and	_	0	IGNORE	true
12	scientists	_	scientist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	strain	_	strain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	did	_	do	VBD	O	_	person	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	belong	_	belong	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	MOD_s	true
23	to	_	to	IN	O	_	person	_	0	IGNORE	true
24	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	22	MOD_mod	true
25	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	24	MOD_s	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	wolves	_	wolf	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o2	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	agency	_	agency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	released	_	release	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_o	true
31	--	_	--	:	O	_	person	_	0	IGNORE	true
32	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	22	APP_o	true
33	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
34	descendants	_	descendant	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	descend-01	()	32	APP_op2	true
35	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[15@@s@@find-01, 14@@explicitanon0@@-, 25@@s@@include-91, 6@@n2@@nucleic-acid, 10@@b@@_NAME_, 27@@d@@wolf, 34@@h@@have-rel-role-91, 34@@p@@person, 6@@n@@_NAME_, 17@@s@@single-02, 1@@d@@He, 4@@explicitanon0@@year, 3@@w@@after, 22@@b@@belong-01, 21@@explicitanon0@@-, 34@@f@@descend-01, 18@@d@@strain, 2@@s@@say-01, 4@@t2@@temporal-quantity, 7@@s@@test-01, 30@@s@@release-01, 12@@d@@scientist, 24@@explicitanon0@@1, 9@@b@@north, 32@@a@@or, 29@@d@@agency]
sentence=1	Scientists	scientists	scientist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	APP_s	true
3	argue	_	argue	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_s	true
4	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	25	MOD_s	true
6	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
9	many	_	many	JJ	O	_	cause-01	_	0	IGNORE	true
10	degrees	_	degree	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	Celsius	celsius	celsius	NN	O	(d<root> / --LEX--)	$REPL$	()	13	APP_op1	true
12	--	_	--	:	O	_	thing	_	0	IGNORE	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op2 (v<op2>)  :op1 (a2<op1>)  :mod-of (c<mod>))	$LEMMA$	(op2(), op1(), mod())	19	MOD_mod	true
14	Fahrenheit	fahrenheit	fahrenheit	CD	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	--	_	--	:	O	_	mean-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	planet	_	planet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	warming	_	warm	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
21	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	trend	_	trend	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	true
24	portends,	_	portends,	NNS	O	_	thing	_	0	IGNORE	true
25	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
26	meanwhile	_	meanwhile	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
27	Earth's_plants,	_name_	plants,	NNP	O	_	contrast-01	_	0	IGNORE	true
28	insects	_	insect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_s	true
30	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op2	true
31	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	true
33	waiting	_	wait	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	25	APP_o	true
34	for	_	for	IN	O	_	thing	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	outcome	_	outcome	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@s@@wait-01, 1@@d@@scientist, 2@@s@@possible-01, 17@@d@@planet, 30@@d@@animal, 29@@a@@and, 25@@s@@contrast-01, 14@@d@@fahrenheit, 3@@c@@argue-01, 5@@s@@person, 32@@explicitanon0@@-, 11@@d@@celsius, 28@@d@@insect, 4@@p@@all, 36@@d@@outcome, 13@@a@@or, 26@@n@@meanwhile, 6@@s@@want-01, 23@@s@@trend, 20@@a@@and, 19@@s@@warm-01]
sentence=1	Half	half	half	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1/2	(mod())	8	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	1	MOD_s	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	300	_	300	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
5	phenophases	_	phenophase	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	Leopold	_name_	Leopold	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	tracked	_	track	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	showed	_	show	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	a	_	a	DT	O	_	product-of	_	0	IGNORE	true
10	response	_	response	NN	O	(d<root> / --LEX--)	respond-01	()	8	APP_o	true
11	consistent	_	consistent	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	with	_	with	IN	O	_	thing	_	0	IGNORE	true
13	warming	_	warming	NN	O	(d<root> / --LEX--)	warm-01	()	11	APP_o	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@show-01, 11@@s@@consistent-01, 5@@d@@phenophase, 10@@d@@respond-01, 6@@n@@_NAME_, 13@@d@@warm-01, 1@@explicitanon0@@1/2, 6@@p@@person, 4@@explicitanon0@@_NUMBER_, 7@@s@@track-01, 2@@s@@include-91]
sentence=1	In	in	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
4	press,	_	press,	NNP	O	_	and	_	0	IGNORE	true
5	commentators	_	commentator	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	6	APP_s	true
6	predict	_	predict	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
8	Katrina	_name_	Katrina	NNP	O	(n<root> / natural-disaster  :name (n2 / --LEX--))	_NAME_	()	13	APP_s	true
9	will	_	will	MD	O	_	-1	_	0	IGNORE	true
10	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	profound	_	profound	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	change	_	change	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
14	in	_	in	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	APP_o	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	perceived	_	perceive	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_mod	true
21	at	_	at	IN	O	_	1	_	0	IGNORE	true
22	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	20	MOD_mod	true
24	abroad,	_	abroad,	NNP	O	_	and	_	0	IGNORE	true
25	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
27	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	he	(s(), o())	6	MOD_o	true
28	scenes	_	scene	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
30	poverty	_	poverty	NN	O	(d<root> / --LEX--)	poor	()	31	APP_op1	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	28	MOD_mod	true
32	racial	_	racial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	race	(mod())	33	MOD_mod	true
33	divisions	_	division	NNS	O	(d<root> / --LEX--)	divide-02	()	31	APP_op2	true
34	they	_	they	PRP	O	_	person	_	0	IGNORE	true
35	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
38	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
39	revealed	_	reveal	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[39@@s@@reveal-01, 3@@d@@world, 8@@n2@@_NAME_, 10@@s@@make-01, 5@@p2@@person, 27@@s@@he, 35@@s@@believe-01, 33@@d@@divide-02, 18@@n@@_NAME_, 5@@e2@@commentator, 6@@s@@predict-01, 12@@p@@profound, 16@@t@@way, 20@@s@@perceive-01, 30@@d@@poor, 13@@s@@change-01, 18@@c@@country, 23@@b@@and, 22@@d@@home, 32@@p@@race, 25@@p@@especially, 28@@d@@scene, 31@@a@@and, 37@@d@@disaster, 8@@n@@natural-disaster, 26@@s@@follow-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
3	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	interesting	_	interesting	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	0	ROOT	true
5	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
6	spin	_	spin	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	4	APP_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	press	_	press	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	will	_	will	MD	O	_	thing	_	0	IGNORE	true
10	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
11	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@n@@always, 8@@d@@press, 10@@s@@take-01, 4@@s@@interesting, 6@@d@@spin-03]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	6	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	0	ROOT	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	things	_	thing	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	4	APP_s	true
7	I've	i've	i've	ADD	O	_	thing	_	0	IGNORE	true
8	been	_	be	VBN	O	_	person	_	0	IGNORE	true
9	wondering..	_	wondering..	ADD	O	_	-	_	0	IGNORE	true
10	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@some, 4@@s@@include-91, 6@@r@@thing, 1@@d@@this]
sentence=1	Ironically	ironically	ironically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ironic	(mod())	4	MOD_mod	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	burst	_	burst	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-out-03	(o(s()))	7	APP_op1	true
5	out	_	out	RP	O	_	and	_	0	IGNORE	true
6	laughing	_	laugh	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
10	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	7	APP_op2	true
13	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	APP_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	13	APP_o	true
16	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	mirth	_	mirth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	barely	_	barely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	bare	(s())	22	MOD_s	true
22	controlled	_	control	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
23	smirk	_	smirk	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_o	true
24	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[6@@s@@laugh-01, 10@@p@@all, 21@@s@@bare, 22@@s@@control-01, 3@@p@@almost, 7@@a@@and, 15@@s@@keep-04, 17@@d@@mirth, 12@@f@@possible-01, 13@@s@@do-02, 2@@d@@he, 1@@p@@ironic, 23@@d@@smirk-01, 4@@o@@burst-out-03]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	is	_	be	VBZ	O	_	2	_	0	IGNORE	true
3	the_year	_name_	year	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	you'll	_	you'll	PRP	O	_	mean-01	_	0	IGNORE	true
5	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	take	_	take	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
8	stock	_	stock	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op1	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	career	_	career	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
13	ask	_	ask	VB	O	(a<root> / --LEX--  :ARG2 (y<s>  :ARG0-of a)  :ARG1 (q<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
14	yourself	_	yourself	PRP	O	_	say-01	_	0	IGNORE	true
15	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
16	you're	_	you're	PRP	O	_	thing	_	0	IGNORE	true
17	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_o	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
24	for	_	for	IN	O	_	thing	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	rest	_	rest	NN	O	(r<root> / --LEX--  :part-of (c4<poss>)  :duration-of (p2<mod>))	$LEMMA$	(mod(), poss())	23	MOD_mod	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	your	_	your	PRP$	O	_	cause-01	_	0	IGNORE	true
29	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_poss	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@r@@rest, 1@@p@@this, 13@@a@@ask-01, 17@@s@@do-02, 21@@s@@want-01, 19@@d@@work-01, 11@@d@@career, 5@@c@@want-01, 29@@d@@life, 8@@s@@stock-01, 3@@e@@event, 3@@n@@_NAME_, 12@@a@@and, 23@@s@@do-02]
sentence=1	Your	your	Your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	cycle	_	cycle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
3	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
4	learning	_	learn	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	2	MOD_mod	true
5	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	knocks	_	knock	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
12	come	_	come	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	APP_op1	true
13	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
14	an	_	an	DT	O	_	1	_	0	IGNORE	true
15	end,	_	end,	NN	O	_	mean-01	_	0	IGNORE	true
16	Gemini,	gemini,	gemini,	NN	O	_	and	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
18	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
19	you're	_	you're	PRP	O	_	person	_	0	IGNORE	true
20	going	_	go	VBG	O	_	name	_	0	IGNORE	true
21	to	_	to	TO	O	_	and	_	0	IGNORE	true
22	start	_	start	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
23	reaping	_	reap	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	rewards	_	reward	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
26	these	_	these	DT	O	(d<root> / --LEX--)	this	()	29	APP_s	true
27	"lessons"	_	"lessons"	NNS	O	_	thing	_	0	IGNORE	true
28	have	_	have	VBP	O	_	person	_	0	IGNORE	true
29	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-12	(s(), o())	25	MOD_o	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
32	wake	_	wake	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@a@@and, 22@@s@@start-01, 26@@d@@this, 25@@d@@reward-01, 12@@s@@come-04, 32@@b@@wake, 2@@d@@cycle, 4@@p@@learn-01, 18@@n@@now, 29@@s@@leave-12, 9@@s@@hard-02, 7@@p@@school, 23@@s@@reap-01, 10@@p@@knock]
sentence=1	Yet,	_name_	Yet,	NNP	O	_	and	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
4	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	comparison	_	comparison	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	compare-01	(s(), o())	12	APP_op1	true
6	to	_	to	IN	O	_	resemble-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	advancements	_	advancement	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	you'll	_	you'll	PRP	O	_	thing	_	0	IGNORE	true
10	make	_	make	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	overall,	_	overall,	JJ	O	_	cause-01	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the_end_of_2005,	_name_	2005,	CD	O	_	_NAME_	_	0	IGNORE	true
15	you'll	_	you'll	PRP	O	_	thing	_	0	IGNORE	true
16	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
17	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	sheer	_	sheer	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	wonder	_	wonder	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
22	happiness	_	happiness	NN	O	(d<root> / --LEX--)	happy-01	()	21	APP_op2	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@p@@sheer, 10@@s@@make-01, 8@@d@@advancement, 4@@explicitanon0@@-, 21@@a@@and, 22@@d@@happy-01, 16@@s@@look-01, 2@@d@@this, 20@@d@@wonder-01, 5@@s@@compare-01, 17@@a@@back, 12@@a@@and]
sentence=1	And,	and,	and,	XX	O	_	and	_	0	IGNORE	true
2	a	_	a	DT	O	_	thing	_	0	IGNORE	true
3	relationship	_	relationship	NN	O	(d<root> / --LEX--)	relation-03	()	8	APP_s	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	begin	_	begin	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
6	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	will	_	will	MD	O	_	thing	_	0	IGNORE	true
8	last	_	last	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	MOD_s	true
12	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
14	like,	_	like,	NNS	O	_	mean-01	_	0	IGNORE	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	rest	_	rest	NN	O	(r<root> / --LEX--  :part-of (c4<poss>)  :duration-of (p2<mod>))	$LEMMA$	(mod(), poss())	8	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_poss	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@long-03, 20@@d@@life, 12@@d@@time, 10@@s@@very, 8@@s@@last-01, 3@@d@@relation-03, 5@@s@@begin-01, 6@@n@@now, 17@@r@@rest, 4@@d@@you]
sentence=1	Overall,	overall,	overall,	CD	O	_	say-01	_	0	IGNORE	true
2	2005	_name_	2005	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	8	APP_dom	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	be	_	be	VB	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	year	_	year	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	4	APP_s	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	won't	_	won't	UH	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	forget	_	forget	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[8@@r@@year, 2@@explicitanon0@@_NUMBER_, 2@@d@@date-entity, 11@@s@@forget-01, 10@@explicitanon0@@-, 9@@d@@you, 4@@s@@sure-02]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
3	awaited	_	await	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	relief	_	relief	NN	O	(d<root> / --LEX--)	relieve-01	()	12	APP_op1	true
5	you've	_	you've	NN	O	_	_NAME_	_	0	IGNORE	true
6	needed	_	need	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	in	_	in	IN	O	_	after	_	0	IGNORE	true
8	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	love	_	love	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	life	_	life	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	15	APP_op1	true
12	around	_	around	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	11	APP_s	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	corner,	_	corner,	NNS	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
16	by	_	by	IN	O	_	year	_	0	IGNORE	true
17	the_end_of_the_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	20	MOD_mod	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	will	_	will	MD	O	_	thing	_	0	IGNORE	true
20	feel	_	feel	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	APP_op2	true
21	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	clearer	_	clear	JJR	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	clear-06	(s(), o())	20	APP_o	true
23	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
25	partnerships	_	partnership	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	in	_	in	IN	O	_	event	_	0	IGNORE	true
27	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@be-located-at-91, 2@@s@@long-03, 18@@d@@you, 9@@p@@love, 22@@s@@clear-06, 6@@s@@need-01, 21@@s@@much, 12@@o@@around, 17@@n@@_NAME_, 15@@a@@and, 4@@d@@relieve-01, 25@@d@@partnership, 20@@c@@feel-01, 3@@s@@await-01, 10@@b@@life, 27@@s@@general-02]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	easy	_	easy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	note	_	note	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	uneasiness	_	uneasiness	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	McCartney	_name_	McCartney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
10	when	_	when	WRB	O	_	i	_	0	IGNORE	true
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	sings:	_	sings:	XX	O	_	and	_	0	IGNORE	true
13	"I've	"i've	"I've	NNP	O	_	person	_	0	IGNORE	true
14	got	_	get	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	3	MOD_mod	true
15	a	_	a	DT	O	_	thing	_	0	IGNORE	true
16	feeling,	_	feeling,	NNS	O	_	mean-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
18	feeling	_	feeling	NN	O	(d<root> / --LEX--)	feel-01	()	14	APP_o	true
19	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	3	MOD_mod	true
20	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
21	hide..."	_	hide..."	NNP	O	_	cause-01	_	0	IGNORE	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	front	_	front	NN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	in-$LEMMA$-of	(op1(), mod())	14	MOD_mod	true
24	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
25	Yoko	_name_	Yoko	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	23	APP_op1	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	film	_	film	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@note-01, 18@@d@@feel-01, 25@@p@@person, 9@@p@@person, 7@@s@@uneasiness, 3@@s@@easy-05, 14@@t@@get-02, 19@@p@@i, 23@@b@@in-front-of, 28@@b@@film, 20@@explicitanon0@@-, 25@@n@@_NAME_, 9@@n@@_NAME_]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	37	MOD_o	true
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	trauma	_	trauma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
6	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
7	homosexual	_	homosexual	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	relation	_	relation	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	12	APP_s	true
9	with	_	with	IN	O	_	i	_	0	IGNORE	true
10	Brian_Epstein	_name_	Epstein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
11	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
12	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-12	(s(), o())	4	MOD_o	true
13	him,	_	him,	NNS	O	_	and	_	0	IGNORE	true
14	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	37	APP_op1	true
16	lyrics	_	lyric	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
18	as:	_	as:	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	"You	"you	"You	''	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	can	_	can	MD	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	possible-01	(mod(), s())	16	MOD_mod	true
21	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_s	true
22	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	collar	_	collar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	MOD_op1	true
25	a	_	a	DT	O	_	et-cetera	_	0	IGNORE	true
26	tie,	_	tie,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	37	APP_op2	true
27	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	28	MOD_mod	true
28	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
29	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
30	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
31	hide	_	hide	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
32	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
33	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
34	you're	_	you're	PRP$	O	_	have-concession-91	_	0	IGNORE	true
35	crippled	_	cripple	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	31	MOD_mod	true
36	inside"	_	inside"	NFP	O	_	$LEMMA$	_	0	IGNORE	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
38	gave	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
39	declarations	_	declaration	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	37	APP_op3	true
40	to	_	to	IN	O	_	and	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	"Rolling	"rolling	"rolling	CD	O	(s<root> / --LEX--  :ARG0 (y<s>))	_NAME_	(s())	44	MOD_s	true
43	Stone"	_name_	Stone"	NNP	O	_	and	_	0	IGNORE	true
44	magazine	_	magazine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_o	true
45	saying	_	say	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	MOD_s	true
46	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
47	"sometimes	_	"sometimes	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
48	he	_	he	PRP	O	(n<root> / --LEX--  :op1 (explicitanon1<op1>)  :name-of (p<mod>))	$LEMMA$	(op1(), mod())	37	MOD_mod	true
49	wore	_	wear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_o	true
50	Texan	_name_	texan	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	51	MOD_mod	true
51	boots	_	boot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
52	to	_	to	TO	O	_	name	_	0	IGNORE	true
53	feel	_	feel	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	49	MOD_mod	true
54	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
55	secure	_	secure	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	53	APP_s	true
56	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
57	a	_	a	DT	O	_	1	_	0	IGNORE	true
58	man"	_	man"	NN	O	_	$LEMMA$	_	0	IGNORE	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@r@@possible-01, 44@@d@@magazine, 42@@s@@_NAME_, 21@@s@@wear-01, 15@@s@@make-01, 49@@s@@wear-01, 16@@d@@lyric, 1@@s@@cause-01, 7@@d@@homosexual, 53@@i@@feel-01, 29@@d@@you, 10@@n@@_NAME_, 50@@n@@_NAME_, 23@@d@@collar, 28@@d@@thing, 26@@s@@and, 50@@w@@world-region, 4@@d@@trauma, 37@@a@@and, 8@@s@@relate-01, 12@@s@@leave-12, 55@@d@@secure-02, 47@@p@@"sometimes, 27@@explicitanon0@@1, 54@@s@@more, 19@@d@@"You, 24@@a@@and, 31@@s@@hide-01, 35@@s@@cripple-01, 30@@explicitanon0@@-, 45@@s@@say-01, 39@@s@@declaration-01, 51@@d@@boot, 10@@p@@person, 48@@n@@he]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	result	_	result	NN	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	dramatic	_	dramatic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	escalation	_	escalation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_s	true
8	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
9	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
11	civilian	_	civilian	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	casualties,	_	casualties,	.	O	_	and	_	0	IGNORE	true
13	US	_name_	US	NNP	O	_	_NAME_	_	0	IGNORE	true
14	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
15	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	required	_	require	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	25	APP_op1	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	bunker	_	bunker	VB	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-01	(s())	17	APP_o	true
20	themselves	_	themselves	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	further	_	further	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	into	_	into	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	2	APP_o	true
23	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	bases,	_	bases,	NNS	O	_	and	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_o	true
26	US	_name_	US	NNP	O	_	have-org-role-91	_	0	IGNORE	true
27	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
28	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
29	find	_	find	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	25	APP_op2	true
30	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
31	required	_	require	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	29	APP_o	true
32	to	_	to	TO	O	_	and	_	0	IGNORE	true
33	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	APP_o	true
34	the	_	the	DT	O	_	and	_	0	IGNORE	true
35	very	_	very	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	33	APP_o	true
37	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	finished	_	finish	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	MOD_s	true
40	helping	_	help	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	36	MOD_s	true
41	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
42	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@p@@very, 31@@o@@require-01, 17@@o@@require-01, 42@@d@@power, 33@@s@@fight-01, 2@@h@@result-01, 36@@g2@@govern-01, 14@@d@@force, 9@@n@@_NAME_, 21@@s@@further, 9@@c@@country, 39@@s@@finish-02, 10@@a@@and, 6@@p@@dramatic, 36@@g@@government-organization, 11@@d@@civilian, 19@@r@@bunker-01, 25@@a@@and, 22@@s@@into, 7@@s@@escalation, 40@@t@@help-01, 27@@d@@force, 38@@p@@just, 29@@c@@find-01]
sentence=1	14	_	14	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
2	-	_	-	HYPH	O	_	hyperlink$LEMMA$91	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	carbon	_	carbon	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	dioxide	_	dioxide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	emissions	_	emission	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	emit-01	(s())	8	APP_s	true
7	will	_	will	MD	O	_	thing	_	0	IGNORE	true
8	increase	_	increase	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the_next_10_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	Bush's	_name_	Bush's	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	8	MOD_o	true
13	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
14	global-warming	_	global-warming	NN	O	(d<root> / --LEX--)	_NAME_	()	15	APP_s	true
15	plan	_	plan	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
16	(an	_	(an	NFP	O	_	thing	_	0	IGNORE	true
17	increase	_	increase	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	30	_	30	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	_NUMBER_	()	17	APP_o	true
20	per	_	per	NN	O	_	between	_	0	IGNORE	true
21	cent	_	cent	NN	O	(d<root> / --LEX--)	opium	()	8	APP_o	true
22	above	_	above	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	1990	_name_	1990	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	21	MOD_mod	true
25	levels)	_	levels)	NNS	O	_	thing	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@explicitanon1@@_NUMBER_, 4@@p@@carbon, 3@@p@@percentage, 21@@d@@opium, 24@@d@@date-entity, 12@@s@@_NAME_, 17@@s@@increase-01, 6@@s@@emit-01, 8@@s@@increase-01, 1@@explicitanon0@@_NUMBER_, 19@@p@@percentage-entity, 14@@d@@_NAME_, 10@@b@@_NAME_, 5@@d@@dioxide, 24@@explicitanon0@@_NUMBER_, 15@@v@@plan-01]
sentence=1	$44m-	_	$44m-	NNP	O	_	_NAME_	_	0	IGNORE	true
2	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	the	_	the	DT	O	_	name	_	0	IGNORE	true
4	Bush-Cheney	bush-cheney	Bush-Cheney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	2000	_name_	2000	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
6	campaign	_	campaign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
8	the_Republican_National_Committee	_name_	Committee	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	7	APP_op2	true
9	received	_	receive	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	MOD_o	true
10	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
11	contributions	_	contribution	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	contribute-01	(s())	9	APP_o2	true
12	from	_	from	IN	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	fossil	_	fossil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
15	fuel,	_	fuel,	NNP	O	_	and	_	0	IGNORE	true
16	chemical,	_	chemical,	NNP	O	_	and	_	0	IGNORE	true
17	timber,	_	timber,	NNP	O	_	and	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	20	MOD_op1	true
19	mining	_	mining	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op3	true
20	industries	_	industry	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
21	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@explicitanon2@@_NUMBER_, 20@@d@@industry, 8@@o2@@organization, 5@@d@@date-entity, 8@@n@@_NAME_, 2@@d@@amount, 4@@n@@_NAME_, 4@@p@@person, 19@@d@@mining, 11@@s@@contribute-01, 14@@d@@fossil, 9@@b@@receive-01, 7@@a@@and, 18@@a@@and, 6@@s@@campaign-01]
sentence=1	63	_	63	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	oil	_	oil	NN	O	(d<root> / --LEX--)	$FORM$	()	3	APP_mod	true
6	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	imported	_	import	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	in	_	in	IN	O	_	and	_	0	IGNORE	true
9	2003,	_	2003,	CD	O	_	cause-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	record	_	record	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	high	_	high	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@p@@record, 12@@s@@high-02, 3@@explicitanon0@@percentage, 7@@s@@import-01, 6@@c@@country, 5@@d@@oil, 1@@explicitanon0@@_NUMBER_, 6@@n@@_NAME_]
sentence=1	750,000	_	750,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
2	-	_	-	HYPH	O	_	say$LEMMA$01	_	0	IGNORE	true
3	Tons	tons	ton	NNS	O	(m<root> / mass-quantity  :unit (k / --LEX--)  :quant-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	toxic	_	toxic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	waste	_	waste	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	12	MOD_mod	true
9	military,	_	military,	NNS	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	world's	_	world'	NNS	O	_	_NAME_	_	0	IGNORE	true
12	biggest	_	big	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	big	(mod())	14	MOD_mod	true
13	polluter,	_	polluter,	NNS	O	_	_NAME_	_	0	IGNORE	true
14	generates	_	generate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
15	around	_	around	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
18	each	_	each	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_s	true
19	year	_	year	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	18	APP_s	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@c@@country, 19@@m@@year, 15@@b@@around, 19@@t@@temporal-quantity, 3@@k@@ton, 6@@d@@waste, 17@@d@@world, 3@@m@@mass-quantity, 12@@t@@big, 14@@s@@generate-01, 5@@p@@toxic, 8@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 18@@s@@each, 12@@m@@most]
sentence=1	$1m	_	$1m	LS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
2	-	_	-	HYPH	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
3	Estimated	estimated	estimate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	value	_	value	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	a	_	a	DT	O	_	hyperlink-91	_	0	IGNORE	true
7	painting	_	painting	NN	O	(d<root> / --LEX--)	paint-02	()	4	APP_s	true
8	the_Bush_Presidential_Library_in_College_Station,_Texas,	_name_	texas,	CD	O	_	cause-01	_	0	IGNORE	true
9	received	_	receive	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
10	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	Prince_Bandar,_Saudi_Arabia's	_name_	Arabia's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_o2	true
12	ambassador	_	ambassador	NN	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	9	APP_o	true
13	to	_	to	IN	O	_	person	_	0	IGNORE	true
14	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	2	MOD_mod	true
16	Bush	_name_	Bush	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
17	family	_	family	NN	O	(d<root> / --LEX--)	$FORM$	()	18	APP_s	true
18	friend	_	friend	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	15	APP_op2	true
19	.	_	.	.	O	(d<root> / --LEX--)	multi-sentence	()	2	APP_op1	true

nodealignment=[2@@a@@-, 15@@a@@and, 11@@p@@person, 14@@c@@country, 9@@b@@receive-01, 4@@s@@value-01, 19@@d@@multi-sentence, 17@@d@@family, 7@@d@@paint-02, 3@@s@@estimate-01, 16@@n@@_NAME_, 18@@h@@have-rel-role-91, 18@@b@@friend, 11@@n@@_NAME_, 12@@h2@@have-org-role-91, 1@@d@@$1m, 14@@n@@_NAME_, 12@@m@@ambassador]
sentence=1	$10m-_Amount_Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	from	_	from	IN	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	INS's	_name_	ins'	NNS	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
6	existing	_	exist	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	terrorism	_	terrorism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
8	budget	_	budget	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
9	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@s@@exist-01, 2@@s@@cut-02, 1@@n@@_NAME_, 5@@g@@government-organization, 5@@n@@_NAME_, 8@@s@@budget-01, 1@@p@@person, 7@@d@@terrorism]
sentence=1	$3,500	_	$3,500	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Reward	reward	reward	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	group	_	group	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	APP_s	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	veterans	_	veteran	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	offered	_	offer	VBN	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
9	in	_	in	IN	O	_	person	_	0	IGNORE	true
10	2000	_name_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	8	MOD_mod	true
11	for	_	for	IN	O	_	person	_	0	IGNORE	true
12	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
13	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
14	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	confirm	_	confirm	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	Bush's_Alabama	_name_	Alabama	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
17	guard	_	guard	NN	O	(d<root> / --LEX--)	_NAME_	()	18	APP_s	true
18	service	_	service	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	serve-01	(s(), o())	15	APP_o	true
19	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[10@@d@@date-entity, 14@@s@@possible-01, 1@@explicitanon2@@_NUMBER_, 18@@s@@serve-01, 10@@explicitanon0@@_NUMBER_, 17@@d@@_NAME_, 16@@g@@government-organization, 12@@d@@anyone, 7@@d@@veteran, 1@@d@@date-entity, 3@@s@@reward-01, 16@@n@@_NAME_, 5@@s@@group, 8@@t@@offer-01, 15@@s@@confirm-01]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	minutes	_	minute	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	that	_	that	WDT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_s	true
7	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	9	MOD_s	true
8	Bush,	_name_	Bush,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	5	MOD_s	true
9	Vice-President	vice-president	Vice-President	NNP	O	(p<root> / person  :name (n / --LEX--))	president	()	14	APP_o	true
10	Dick_Cheney,	_name_	Cheney,	NNP	O	_	mean-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Defence	defence	Defence	NNP	O	(a<root> / --LEX--  :topic-of (w<mod>))	defend-01	(mod())	9	MOD_mod	true
13	Secretary,	secretary,	Secretary,	NNP	O	_	mean-01	_	0	IGNORE	true
14	Donald	donald	Donald	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	20	MOD_s	true
15	Rumsfeld,	rumsfeld,	Rumsfeld,	NNP	O	_	mean-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	assistant	_	assistant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	assist-01	(mod())	20	MOD_mod	true
18	Defence	defence	Defence	NNP	O	(a<root> / --LEX--  :topic-of (w<mod>))	defend-01	(mod())	20	MOD_mod	true
19	Secretary,	secretary,	Secretary,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
20	Paul	paul	Paul	NNP	O	(d<root> / --LEX--)	_NAME_	()	31	APP_op2	true
21	Wolfowitz,	wolfowitz,	Wolfowitz,	VBD	O	_	have-org-role-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	chairman	_	chairman	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	20	MOD_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Defence	defence	Defence	NNP	O	(d<root> / --LEX--)	defend-01	()	28	APP_s	true
28	Policy	policy	Policy	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
29	Board,	board,	Board,	NNP	O	_	mean-01	_	0	IGNORE	true
30	Richard_Perle,	_name_	perle,	NN	O	_	_NAME_	_	0	IGNORE	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	6	APP_o	true
32	the_White_House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
33	Chief	chief	Chief	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	31	APP_op3	true
34	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
35	Staff,_Karl_Rove_-_the	_name_	the	DT	O	_	person	_	0	IGNORE	true
36	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	proponents	_	proponent	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	$LEMMA$	(s())	31	APP_op1	true
38	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
39	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	3	MOD_o	true
40	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
41	in	_	in	IN	O	_	after	_	0	IGNORE	true
42	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	40	MOD_mod	true
43	-served	_	-served	:	O	(d<root> / --LEX--)	multi-sentence	()	39	APP_s	true
44	in	_	in	IN	O	_	i	_	0	IGNORE	true
45	combat	_	combat	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	43	MOD_mod	true
46	(combined)	_	(combined)	NN	O	_	cause-01	_	0	IGNORE	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[39@@s@@person, 14@@s@@Donald, 9@@p@@person, 7@@p2@@president, 3@@explicitanon0@@number, 37@@w@@proponent, 45@@b@@combat-01, 7@@h@@have-org-role-91, 40@@d@@war, 43@@d@@multi-sentence, 18@@a@@defend-01, 9@@n@@president, 37@@p@@person, 36@@p@@main, 31@@a@@and, 6@@s@@that, 8@@s@@Bush,, 33@@p2@@Chief, 24@@g@@chairman, 42@@c@@country, 12@@a@@defend-01, 32@@g@@government-organization, 5@@d@@minute, 42@@n@@_NAME_, 33@@h@@have-org-role-91, 28@@s@@Policy-01, 27@@d@@defend-01, 32@@n@@_NAME_, 24@@h@@have-org-role-91, 17@@p@@assist-01, 23@@n@@former, 1@@explicitanon0@@_NUMBER_, 20@@d@@_NAME_]
sentence=1	$80,000	_	$80,000	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	firm	_	firm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	spent	_	spend	VBN	O	(o<root> / --LEX--  :ARG3 (p<o2>)  :ARG0 (w<s>)  :ARG1 (u<o>))	$LEMMA$-01	(o2(), o(s()))	3	MOD_o2	true
8	(using	_	(using	.	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	_NAME_	(mod(), s())	7	MOD_mod	true
9	Saddam's	saddam's	saddam's	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	confiscated	_	confiscate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
11	funds)	_	funds)	NN	O	_	and	_	0	IGNORE	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	build	_	build	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
16	factory,	_	factory,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
18	delays	_	delay	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_s	true
19	prevented	_	prevent	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	17	APP_op1	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	firm	_	firm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	from	_	from	IN	O	_	-	_	0	IGNORE	true
24	starting	_	start	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	APP_o2	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@i@@build-01, 19@@t@@prevent-01, 3@@d@@amount-01, 18@@d@@delay-01, 21@@n@@_NAME_, 5@@n@@_NAME_, 15@@s@@same-01, 24@@s@@start-01, 22@@d@@firm, 7@@o@@spend-01, 1@@explicitanon0@@_NUMBER_, 6@@d@@firm, 21@@c@@country, 5@@c@@country, 10@@s@@confiscate-01, 8@@b@@_NAME_, 9@@n@@_NAME_, 17@@w@@after]
sentence=1	37	_	37	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
2	-	_	-	HYPH	O	_	date-interval	_	0	IGNORE	true
3	Death	death	death	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	die-01	(mod())	4	MOD_mod	true
4	toll	_	toll	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
5	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
6	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	soldiers	_	soldier	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	in	_	in	IN	O	_	person	_	0	IGNORE	true
9	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	in	_	in	IN	O	_	12	_	0	IGNORE	true
11	May_2003,_the_month	_name_	month	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
12	combat	_	combat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
13	operations	_	operation	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	"officially"	_	"officially"	NNP	O	_	and	_	0	IGNORE	true
15	ended	_	end	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@n@@_NAME_, 6@@c@@country, 11@@p@@_NAME_, 3@@p@@die-01, 4@@s@@toll-01, 15@@s@@end-01, 7@@d@@soldier, 13@@n@@operation, 12@@p@@combat-01, 6@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 9@@c@@country]
sentence=1	$0	_	$0	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	Amount	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	allocated	_	allocate	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
6	for	_	for	IN	O	_	person	_	0	IGNORE	true
7	port	_	port	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	security	_	security	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	APP_o2	true
9	in	_	in	IN	O	_	person	_	0	IGNORE	true
10	2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	5	MOD_mod	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@p@@person, 5@@b@@allocate-01, 1@@explicitanon0@@_NUMBER_, 3@@d@@Amount, 8@@s@@security, 7@@d@@port, 10@@d@@date-entity, 10@@explicitanon0@@_NUMBER_, 4@@n@@_NAME_]
sentence=1	$42,000	_	$42,000	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Average	average	average	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	MOD_s	true
4	savings	_	saving	NNS	O	(d<root> / --LEX--)	save-01	()	0	ROOT	true
5	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	9	APP_s	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	Bush's	_name_	Bush's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_poss	true
8	cabinet	_	cabinet	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_s	true
9	received	_	receive	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	9	MOD_mod	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	result	_	result	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
15	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
16	cuts	_	cut	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_s	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	capital	_	capital	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	gains	_	gain	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_s	true
21	dividends	_	dividend	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
22	taxes	_	taxis	NNS	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	16	APP_s	true
23	.	_	.	.	O	_	monetary-quantity	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 8@@m@@cabinet, 4@@d@@save-01, 5@@o@@member, 1@@explicitanon0@@_NUMBER_, 21@@d@@dividend, 5@@h@@have-org-role-91, 7@@p@@person, 5@@p@@person, 16@@s@@cut-02, 14@@s@@result-01, 9@@s@@receive-01, 3@@s@@average-03, 19@@d@@gain, 11@@d@@date-entity, 18@@p@@capital, 22@@l@@taxis-01, 20@@a@@and, 11@@explicitanon0@@_NUMBER_]
sentence=1	$113m	_	$113m	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	APP_dom	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	total	_	total	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
6	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	the	_	the	DT	O	_	name	_	0	IGNORE	true
9	Bush-Cheney	_name_	Bush-Cheney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
10	2000	_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	11	MOD_mod	true
11	campaign	_	campaign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
12	received,	_	received,	NNS	O	_	mean-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	record	_	record	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@r@@record, 7@@d@@money, 6@@s@@hard-02, 9@@p@@person, 11@@s@@campaign-01, 10@@d@@date-entity, 1@@explicitanon0@@_NAME_, 9@@n@@_NAME_, 3@@explicitanon0@@amount, 10@@explicitanon0@@_NUMBER_, 5@@p@@total-01]
sentence=1	$30,858	_	$30,858	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	Amount	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	himself	_	himself	PRP	O	_	person	_	0	IGNORE	true
6	saved	_	save	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	in	_	in	IN	O	_	monetary-quantity	_	0	IGNORE	true
8	taxes	_	taxis	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	6	MOD_mod	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@n@@_NAME_, 4@@p@@person, 1@@d@@date-entity, 1@@explicitanon2@@_NUMBER_, 10@@explicitanon0@@_NUMBER_, 10@@d@@date-entity, 6@@s@@save-01, 8@@s@@taxis-01, 3@@d@@Amount]
sentence=1	$205m	_	$205m	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
4	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
5	CEO	ceo	CEO	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	6	MOD_s	true
6	Kenneth_Lay	_name_	Lay	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	earned	_	earn	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	stock	_	stock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	option	_	option	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	APP_s	true
11	profits	_	profit	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_o2	true
12	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	7	MOD_mod	true
14	four-year	_	four-year	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	year	(mod())	16	MOD_mod	true
15	period	_	period	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	7	MOD_mod	true

nodealignment=[7@@b@@earn-01, 14@@t@@temporal-quantity, 1@@explicitanon0@@_NAME_, 11@@s@@profit-01, 4@@c@@company, 5@@g@@CEO, 14@@y@@year, 9@@d@@stock, 3@@d@@amount, 6@@n@@_NAME_, 5@@h@@have-org-role-91, 4@@n@@_NAME_, 6@@p@@person, 10@@s@@option, 13@@explicitanon0@@1, 16@@p@@and]
sentence=1	$101m_-_Amount_Lay	_name_	Lay	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	selling	_	sell	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
5	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
6	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	shares	_	share	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	APP_o	true
8	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
12	went	_	go	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
13	bankrupt	_	bankrupt	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_op1	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@company, 7@@s@@share, 9@@w@@before, 6@@n@@_NAME_, 1@@n@@_NAME_, 4@@l@@sell-01, 13@@d@@bankrupt-01, 1@@p@@person, 8@@p@@just, 6@@c@@company, 2@@s@@make-01]
sentence=1	15	_	15	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Average	average	average	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	MOD_s	true
4	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
5	of	_	of	IN	O	_	1	_	0	IGNORE	true
6	minutes	_name_	minute	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_mod	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	spent	_	spend	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o2(s()), o())	6	MOD_o	true
9	reviewing	_	review	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o2	true
10	capital	_	capital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	punishment	_	punishment	NN	O	(d<root> / --LEX--)	punish-01	()	12	APP_s	true
12	cases	_	case	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	APP_o	true
13	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
14	governor	_	governor	NN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$	(mod(), s(), o())	9	MOD_mod	true
15	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
16	Texas	_name_	Texas	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
17	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[16@@n@@_NAME_, 8@@i@@spend-02, 7@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 12@@s@@case-03, 7@@p@@person, 4@@explicitanon0@@number, 14@@t@@governor, 16@@s@@state, 11@@d@@punish-01, 9@@s@@review-01, 6@@d@@minute, 10@@p@@capital, 3@@s@@average-03]
sentence=1	$66b_-_Amount	_name_	amount	NN	O	(n2<root> / --LEX--  :name-of (p4 / person  :mod-of (g<mod>)))	_NAME_	(mod())	2	MOD_mod	true
2	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	spent	_	spend	VBN	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	on	_	on	IN	O	_	name	_	0	IGNORE	true
5	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	aid	_	aid	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
8	diplomacy	_	diplomacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	in	_	in	IN	O	_	person	_	0	IGNORE	true
10	1949	_name_	1949	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@aid-01, 5@@p@@international, 2@@n@@_NAME_, 2@@c@@country, 7@@a@@and, 8@@d@@diplomacy, 10@@explicitanon2@@_NUMBER_, 1@@p4@@person, 1@@n2@@_NAME_, 3@@g@@spend-01, 10@@d@@date-entity]
sentence=1	$23.8b	_	$23.8b	LS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	spent	_	spend	VBN	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	aid	_	aid	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o2	true
10	diplomacy	_	diplomacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	in	_	in	IN	O	_	person	_	0	IGNORE	true
12	2002	_name_	2002	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	5	MOD_mod	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@amount, 4@@c@@country, 8@@d@@aid-01, 5@@t@@spend-01, 12@@d@@date-entity, 7@@p@@international, 4@@n@@_NAME_, 10@@d@@diplomacy, 9@@a@@and, 1@@p@@_NAME_, 12@@explicitanon0@@_NUMBER_]
sentence=1	28	_	28	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
2	-	_	-	HYPH	O	_	date-interval	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	vacation	_	vacation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	days	_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
9	in	_	in	RP	O	_	i	_	0	IGNORE	true
10	August_2003,	_name_	2003,	CD	O	_	_NAME_	_	0	IGNORE	true
11	the	_	the	DT	O	_	1	_	0	IGNORE	true
12	second-longest	_	second-long	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	vacation	_	vacation	NN	O	(p<root> / --LEX--  :poss (h<poss>)  :time-of (a<mod>))	$LEMMA$-01	(mod(), poss())	3	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	president	_	president	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	13	APP_poss	true
17	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
18	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	history	_	history	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@c@@country, 15@@p@@any, 3@@explicitanon0@@Number, 8@@s@@take-01, 16@@e@@president, 12@@t@@_NAME_, 6@@d@@day, 19@@n@@history, 16@@h@@have-org-role-91, 1@@explicitanon0@@_NUMBER_, 18@@n@@_NAME_, 7@@p@@person, 16@@p@@person, 7@@n@@_NAME_, 12@@m@@most, 13@@p@@vacation-01, 5@@p@@vacation-01]
sentence=1	13	_	13	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	vacation	_	vacation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	days	_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
7	the	_	the	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	person	(mod())	3	MOD_mod	true
8	average	_	average	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	7	MOD_s	true
9	American	_name_	American	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	receives	_	receive	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	each_Year	_name_	year	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	_NAME_	()	10	APP_o	true
12	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[6@@d@@day, 9@@c@@country, 8@@s@@average-04, 11@@t@@temporal-quantity, 9@@n@@_NAME_, 11@@m@@_NAME_, 3@@explicitanon0@@Number, 5@@p@@vacation-01, 10@@s@@receive-01, 7@@explicitanon0@@person, 1@@explicitanon0@@_NUMBER_]
sentence=1	28	_	28	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	vacation	_	vacation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	days	_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
9	in	_	in	RP	O	_	after	_	0	IGNORE	true
10	August_2001,_the_month	_name_	month	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_mod	true
13	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
14	6_August	_name_	August	NNP	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	10	(mod())	17	MOD_mod	true
15	Presidential	presidential	Presidential	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	president	(mod())	17	MOD_mod	true
16	Daily	daily	Daily	NNP	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	17	MOD_mod	true
17	Briefing	briefing	Briefing	NNP	O	(d<root> / --LEX--)	brief-01	()	12	APP_o	true
18	headed	_	head	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
19	"Osama_bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
20	Determined	determined	determine	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	18	MOD_s	true
21	to	_	to	TO	O	_	name	_	0	IGNORE	true
22	Strike	strike	strike	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	US	us	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
24	Targets.	targets.	Targets.	NNP	O	_	_NAME_	_	0	IGNORE	true
25	"	_	"	''	O	_	name	_	0	IGNORE	true

nodealignment=[14@@t@@temporal-quantity, 18@@s@@head-01, 19@@n@@_NAME_, 17@@d@@brief-01, 16@@t@@temporal-quantity, 15@@p@@president, 16@@r@@rate-entity-91, 23@@n@@_NAME_, 16@@d@@day, 19@@p@@person, 3@@explicitanon0@@Number, 5@@p@@vacation-01, 23@@c@@country, 13@@explicitanon0@@1, 12@@s@@receive-01, 6@@n@@day, 14@@y@@10, 1@@explicitanon0@@_NUMBER_, 7@@n@@_NAME_, 20@@c@@determine-01, 8@@s@@take-01, 22@@s@@strike-01, 7@@p@@person, 10@@n@@_NAME_, 11@@d@@he]
sentence=1	$64.2m	_	$64.2m	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	8	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	The	the	the	DT	O	_	person	_	0	IGNORE	true
4	Amount	amount	Amount	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
5	Pioneers	pioneers	Pioneers	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
7	Rangers	_name_	Rangers	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	had	_	have	VBD	O	(d<root> / --LEX--)	person	()	4	APP_mod	true
9	raised	_	raise	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
10	for	_	for	IN	O	_	name	_	0	IGNORE	true
11	Bush-Cheney	_name_	Bush-Cheney	NNP	O	(p2<root> / person  :name (n / --LEX--)  :beneficiary-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	as	_	as	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
13	of	_	of	IN	O	_	3	_	0	IGNORE	true
14	March_2004	_name_	2004	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	2006	()	12	APP_op1	true
15	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NAME_, 14@@explicitanon0@@2006, 11@@n@@_NAME_, 11@@p2@@person, 6@@a@@and, 8@@d@@person, 9@@s@@raise-01, 7@@d@@Rangers, 14@@d@@date-entity, 4@@explicitanon0@@Amount, 5@@d@@Pioneers, 12@@w@@as]
sentence=1	Go	go	go	VB	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	10	APP_s	true
2	onto	_	onto	IN	O	_	$LEMMA$	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	UCAS	_name_	UCAS	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	1	APP_o	true
5	website,	_	website,	NNP	O	_	and	_	0	IGNORE	true
6	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	10	APP_op1	true
7	onto	_	onto	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	course	_	course	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	search	_	search	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	search	_	search	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	for	_	for	IN	O	_	you	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	courses	_	course	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
16	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@want-01, 1@@g@@go-02, 9@@s@@search-01, 11@@h@@search-01, 14@@d@@course, 10@@a@@and, 8@@d@@course, 11@@explicitanon0@@imperative, 6@@g@@go-02, 4@@n@@_NAME_, 15@@d@@you, 4@@o2@@organization, 18@@s@@do-02]
sentence=1	They'll	they'll	They'll	NNP	O	_	i	_	0	IGNORE	true
2	give	_	give	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	comprehensive	_	comprehensive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	universities	_	university	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	courses	_	course	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	want,	_	want,	NNP	O	_	and	_	0	IGNORE	true
17	plus	_	plus	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	add-02	(op2())	2	APP_o	true
18	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
21	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
23	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
24	apply	_	apply	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@p@@all, 12@@s@@do-02, 18@@p@@all, 24@@o@@apply-01, 10@@d@@university, 17@@a@@add-02, 5@@p@@comprehensive, 22@@s@@need-01, 20@@d@@information, 2@@b@@give-01, 14@@d@@course, 6@@s@@list-01, 3@@d@@you]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	5	MOD_mod	true
3	Philippines	_name_	Philippines	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	famous	_	famous	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	fame-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_o	true
9	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	8	MOD_s	true
10	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	11	MOD_mod	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_o	true
12	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	13	APP_s	true
13	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
14	whose	_	whose	WP$	O	_	thing	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	filipinos	_	filipino	NNS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	5	MOD_s	true
18	helping	_	help	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Philippines	_name_	Philippines	NNPS	O	_	_NAME_	_	0	IGNORE	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	plunge	_	plunge	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	pit	_	pit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	18	MOD_o	true
27	they	_	they	PRP	O	_	person	_	0	IGNORE	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	the	_	the	DT	O	_	he	_	0	IGNORE	true
30	rot	_	rot	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	26	APP_s	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	he	_	0	IGNORE	true
33	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@c@@country, 15@@explicitanon0@@-, 13@@s@@mention-01, 3@@n@@_NAME_, 2@@p@@in-fact, 5@@o@@fame-01, 33@@d@@country, 22@@s@@plunge-01, 30@@s@@rot, 12@@d@@i, 26@@s@@cause-01, 9@@s@@resemble-01, 25@@d@@pit, 17@@s@@contrast-01, 11@@d@@person, 16@@n@@_NAME_, 10@@p@@this, 18@@s@@help-01, 7@@s@@accept-01, 8@@d@@person, 16@@c@@country]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	myTouch	mytouch	myTouch	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
3	4G	4g	4g	NN	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	crashes	_	crash	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	with	_	with	IN	O	_	i	_	0	IGNORE	true
6	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	custom	_	custom	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	ROMs	roms	rom	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	install	_	install	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[4@@s@@crash-01, 10@@s@@install-01, 6@@explicitanon0@@most, 3@@c@@company, 3@@n@@_NAME_, 9@@d@@i, 8@@m@@rom, 2@@p@@product, 7@@s@@custom-02, 2@@n@@_NAME_]
sentence=1	Take	take	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
3	photo	_	photo	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	light	_	light	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	9	MOD_s	true
8	plain	_	plain	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
9	subject	_	subject	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
10	close	_	close	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	9	MOD_s	true
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	lens	_	lens	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	using	_	use	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
15	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	16	MOD_s	true
16	exposure	_	exposure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
18	smallest	_	small	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	small	(mod())	19	MOD_mod	true
19	aperture	_	aperture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
21	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
22	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
23	over	_	over	RP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
24	expose	_	expose	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
25	by	_	by	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	1	MOD_o	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	couple	_	couple	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	stop	_	stop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
30	s	_	s	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[29@@d@@stop, 6@@s@@very, 7@@s@@light-06, 16@@d@@exposure, 24@@s@@expose-01, 13@@d@@lens, 25@@s@@by, 17@@a@@and, 27@@explicitanon0@@couple, 20@@d@@you, 9@@d@@subject, 18@@t@@small, 21@@s@@have-03, 3@@s@@photo-01, 15@@s@@long-03, 23@@p@@over, 1@@s@@take-01, 10@@s@@close-06, 14@@l@@use-01, 19@@d@@aperture, 18@@m@@most, 8@@s@@plain]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	an	_	an	DT	O	_	loc$LEMMA$tion	_	0	IGNORE	true
5	inside/outside	_	inside/outside	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	cat	_	cat	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_s	true
7	(only	_	(only	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
8	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	owned	_	own	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
11	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
12	rest	_	rest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	1	APP_o	true
15	100	_	100	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
16	0nside	_	0nside	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	cats)	_	cats)	NNS	O	_	and	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@r@@cat, 10@@s@@own-01, 2@@d@@he, 14@@s@@person, 9@@d@@i, 16@@p@@0nside, 1@@h@@contrast-01, 5@@p@@inside/outside, 15@@explicitanon0@@_NUMBER_, 7@@p@@(only, 12@@d@@rest]
sentence=1	http://www.solutions.com/jump.jsp?itemID=1361&itemType=PRODUCT&path=1%2C3%2C477&iProductID=1361	http://www.solutions.com/jump.jsp?itemid=1361&itemtype=product&path=1%2c3%2c477&iproductid=1361	http://www.solutions.com/jump.jsp?itemid=1361&itemtype=product&path=1%2c3%2c477&iproductid=1361	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	0	ROOT	true
3	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
6	has	_	have	VBZ	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	15	MOD_mod	true
7	a	_	a	DT	O	_	sl$LEMMA$sh	_	0	IGNORE	true
8	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
9	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
10	lingering	_	linger	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	fragrance	_	fragrance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_s	true
14	bother	_	bother	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op1	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	13	APP_s	true
16	potentially	_	potentially	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	potential	(s())	17	MOD_s	true
17	injure	_	injure	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[14@@s@@bother-01, 11@@d@@fragrance, 3@@d@@anything, 4@@d@@you, 6@@m@@have-03, 16@@s@@potential, 5@@s@@use-01, 8@@s@@strong-02, 9@@d@@or, 13@@s@@possible-01, 2@@s@@have-condition-91, 1@@p@@http://www.solutions.com/jump.jsp?itemid=1361&itemtype=product&path=1%2c3%2c477&iproductid=1361, 17@@s@@injure-01, 15@@a@@or, 19@@d@@bird, 10@@s@@linger-01]
sentence=1	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	2	APP_s	true
2	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	buy	_	buy	VB	O	(b<root> / --LEX--  :ARG1 (d<o>)  :ARG0 (h<s>)  :ARG3 (b2<o3>)  :ARG2 (o<o2>))	$LEMMA$-01	(o2(), s(), o3(), o())	2	APP_o	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	laptop	_	laptop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
9	girlfriend	_	girlfriend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	4	APP_o2	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	ireland,would	_	ireland,would	NN	O	_	name	_	0	IGNORE	true
12	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	be	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
14	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	APP_o3	true
15	to	_	to	TO	O	_	possible-01	_	0	IGNORE	true
16	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op1	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	dongle	_	dongle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	uses	_	use	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	for	_	for	IN	O	_	thing	_	0	IGNORE	true
23	her	_	she	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
24	pc	_	pc	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
26	put	_	put	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op2	true
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	straight	_	straight	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	26	MOD_s	true
29	in	_	in	IN	O	_	i	_	0	IGNORE	true
30	the	_	the	DT	O	_	he	_	0	IGNORE	true
31	laptop	_	laptop	NN	O	_	$LEMMA$	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
33	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	work	_	work	VBP	O	(d<root> / --LEX--)	$LEMMA$-09	()	32	APP_op2	true
35	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	26	MOD_s	true
36	normall	_	normall	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	_NAME_	(mod())	34	MOD_mod	true
37	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	32	MOD_mod	true

nodealignment=[9@@p@@person, 14@@s@@possible-01, 16@@p@@just, 26@@d@@put-01, 35@@s@@resemble-01, 24@@d@@pc, 6@@d@@laptop, 4@@b@@buy-01, 34@@d@@work-09, 2@@c@@want-01, 25@@a@@and, 32@@a@@and, 37@@explicitanon0@@interrogative, 28@@s@@straight-04, 9@@f@@girlfriend, 19@@d@@dongle, 9@@h@@have-rel-role-91, 17@@s@@use-01, 21@@s@@use-01, 1@@d@@i, 36@@t@@_NAME_]
sentence=1	When	when	when	WRB	O	_	be-temporally-at-91	_	0	IGNORE	true
2	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
7	drinks	_	drink	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
9	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	included	_	include	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	11	APP_s	true
13	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[12@@t@@thing, 7@@d@@drink, 5@@d@@food, 9@@s@@get-01, 11@@s@@include-01, 2@@explicitanon0@@most, 12@@explicitanon0@@2, 6@@a@@or, 8@@d@@i, 10@@p@@only]
sentence=1	So	so	so	RB	O	_	infer-01	_	0	IGNORE	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	somebody	_	somebody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	5	MOD_mod	true
5	list	_	list	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
6	ALL	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
12	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
13	game	_	game	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	pieces,	_	pieces,	NNP	O	_	mean-01	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	11	APP_s	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	APP_op2	true
18	of	_	of	IN	O	_	number	_	0	IGNORE	true
19	game	_	game	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_mod	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
23	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
24	THAT	that	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
25	FOOD	food	FOOD	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[4@@explicitanon0@@+, 20@@d@@piece, 22@@s@@get-01, 3@@d@@somebody, 17@@explicitanon0@@number, 2@@s@@possible-01, 25@@p@@FOOD, 21@@d@@you, 6@@p@@all, 11@@s@@include-01, 5@@s@@list-01, 15@@a@@and, 19@@p@@game, 9@@d@@food, 13@@p@@game]
sentence=1	scroll	_	scroll	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_op1	true
2	down	_	down	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	shows	_	show	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_op2	true
7	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	(	_	(	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
13	:	_	:	:	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@a@@and, 1@@d@@scroll-01, 6@@s@@show-01, 5@@d@@website, 10@@s@@possible-01, 9@@d@@you, 7@@p@@each, 11@@s@@buy-01, 8@@d@@thing, 2@@a@@down, 4@@p@@this]
sentence=1	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
2	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	APP_op1	true
4	,	_	,	,	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	and	(op2(s()), op1(s()))	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
7	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	have	_	have	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	3	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	another	_	another	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	,	_	,	,	O	_	and	_	0	IGNORE	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_op2	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_s	true
18	,	_	,	,	O	_	and	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	pour	_	pour	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	APP_op1	true
22	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	wheel	_	wheel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
27	,	_	,	,	O	_	and	_	0	IGNORE	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
29	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	put	_	put	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	28	APP_op2	true
31	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	rubber	_	rubber	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	it's	_	it's	PRP$	O	_	mean-01	_	0	IGNORE	true
35	edges	_	edge	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o2	true
36	,	_	,	,	O	_	mean-01	_	0	IGNORE	true
37	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
38	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
39	that	_	that	WDT	O	_	i	_	0	IGNORE	true
40	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
41	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	MOD_s	true
42	the	_	the	DT	O	_	person	_	0	IGNORE	true
43	noise	_	noise	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_o	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@do-02, 3@@s@@sure-02, 10@@s@@buy-01, 11@@d@@another, 5@@d@@you, 2@@s@@quite, 43@@d@@noise, 29@@p@@even, 32@@d@@rubber, 6@@explicitanon0@@-, 35@@d@@edge, 4@@a@@and, 15@@s@@need-01, 41@@s@@make-01, 31@@p@@some, 22@@explicitanon0@@some, 28@@a@@or, 26@@d@@wheel, 23@@d@@oil, 13@@p@@all, 8@@o@@obligate-01, 30@@b@@put-01, 38@@d@@part, 7@@p@@even, 21@@s@@pour-01]
sentence=1	How	how	how	WRB	O	(t<root> / --LEX--  :manner-of (h<mod>))	amr-unknown	(mod())	4	MOD_mod	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	change	_	change	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
5	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	boarding	_	boarding	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	station	_	station	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	ticket	_	ticket	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
11	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
12	booked	_	book	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	a_month	_name_	month	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	back	_	back	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	counter	_	counter	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[4@@s@@change-01, 7@@d@@station, 10@@p@@ticket, 6@@p@@boarding-01, 1@@t@@amr-unknown, 13@@p@@month, 16@@s@@counter, 12@@s@@book-01, 14@@n@@back, 3@@d@@i, 2@@s@@possible-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	expressive	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	cage	_	cage	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	APP_s	true
7	whhich	_	whhich	VBN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	_NAME_	(mod())	4	MOD_mod	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-much	(mod())	10	MOD_mod	true
10	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	IMPOSSIBLE	impossible	impossible	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	possible-01	(o(s()))	0	ROOT	true
12	to	_	to	TO	O	_	-	_	0	IGNORE	true
13	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_o	true
14	from	_	from	IN	O	_	-	_	0	IGNORE	true
15	:	_	:	:	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@d@@i, 11@@o@@possible-01, 10@@p@@much, 13@@s@@escape-01, 7@@explicitanon0@@_NAME_, 6@@s@@have-03, 9@@s@@pretty-much, 4@@r@@cage, 1@@d@@this]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	3	MOD_mod	true
2	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reviews	_	review	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	on	_	on	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	three	_	three	CD	O	(d<root> / --LEX--)	3	()	3	APP_s	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
9	earlier	_	earlier	RBR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	early	(mod())	8	MOD_mod	true
10	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@review-01, 9@@m@@more, 2@@p@@only, 1@@explicitanon0@@+, 6@@d@@3, 9@@e@@early, 8@@s@@mention-01, 7@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	have	_	have	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
3	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	4	MOD_mod	true
4	eaten	_	eat	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
5	at	_	at	IN	O	_	-	_	0	IGNORE	true
6	the	_	the	DT	O	_	-	_	0	IGNORE	true
7	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	have	_	have	VBP	O	_	-	_	0	IGNORE	true
10	listed	_	list	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	nor	_	nor	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	-	(op2(), op1())	0	ROOT	true
12	do	_	do	VBP	O	_	person	_	0	IGNORE	true
13	I	i	I	PRP	O	_	-	_	0	IGNORE	true
14	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
18	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@d@@one, 1@@d@@i, 16@@d@@anyone, 4@@s@@eat-01, 10@@s@@list-01, 3@@n@@ever, 14@@s@@know-01, 8@@d@@you, 11@@a@@-, 2@@explicitanon0@@-]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	will	_	will	MD	O	_	and	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	have	_	have	VB	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
6	be	_	be	VB	O	_	and	_	0	IGNORE	true
7	wary	_	wary	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
8	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
9	mold	_	mold	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	forming	_	form	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
11	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	toys	_	toy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
15	hide-aways	_	hide-away	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	MOD_s	true
18	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	14	MOD_o	true
19	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[12@@p@@any, 10@@s@@form-01, 15@@d@@hide-away, 3@@p@@also, 16@@d@@he, 7@@s@@wary-01, 18@@s@@have-03, 9@@d@@mold, 4@@h@@obligate-01, 14@@a@@or, 13@@d@@toy, 1@@d@@You, 17@@s@@possible-01]
sentence=1	Overall,	overall,	overall,	JJ	O	_	and	_	0	IGNORE	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
5	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
6	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_s	true
7	solution,	_	solution,	.	O	_	contrast-01	_	0	IGNORE	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_o	true
11	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	APP_op1	true
12	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	healthy	_	healthy	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	10	APP_s	true
15	pull	_	pull	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-off-03	(s())	14	APP_op2	true
16	it	_	it	PRP	O	_	$LEMMA$	_	8	IGNORE	true
17	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
18	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	take	_	take	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
25	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	care	_	care	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	24	APP_s	true
29	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	will	_	will	MD	O	_	thing	_	0	IGNORE	true
31	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
32	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	31	MOD_o	true
33	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
34	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@a@@and, 28@@d@@care-03, 27@@p@@extra, 8@@s@@contrast-01, 24@@s@@give-01, 6@@s@@good-02, 20@@m@@take-01, 22@@d@@time, 10@@s@@possible-01, 13@@d@@healthy, 31@@s@@need-01, 15@@s@@pull-off-03, 4@@explicitanon0@@-, 32@@s@@cause-01, 9@@d@@you, 11@@s@@keep-02, 2@@d@@it]
sentence=1	(Because	(because	(because	XX	O	(d<root> / --LEX--)	_NAME_	()	5	APP_o	true
2	apparently	_	apparently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	apparent	(s())	9	MOD_s	true
3	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
4	mom	_	mom	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	9	APP_s	true
5	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	i	(s(), o())	7	MOD_s	true
6	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
7	picky,	_	picky,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	0	ROOT	true
8	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	APP_o	true
13	get	_	get	VB	O	_	cause-01	_	0	IGNORE	true
14	sick	_	sick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	12	APP_s	true
15	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	eat	_	eat	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
19	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	7	MOD_s	true
20	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	18	MOD_s	true
21	food)	_	food)	NN	O	_	multi-sentence	_	0	IGNORE	true
22	IS	is	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	APP_s	true
23	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
24	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
27	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	29	APP_s	true
28	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	29	MOD_s	true
29	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
30	at	_	at	IN	O	_	thing	_	0	IGNORE	true
31	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	pet	_	pet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	shop	_	shop	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
34	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	26	MOD_mod	true

nodealignment=[4@@h@@have-rel-role-91, 18@@o@@eat-01, 32@@p@@pet, 26@@d@@food, 4@@f@@mom, 28@@s@@possible-01, 17@@explicitanon0@@-, 14@@s@@sick-05, 34@@explicitanon0@@interrogative, 33@@b@@shop, 11@@d@@bird, 4@@p@@person, 2@@s@@apparent, 29@@s@@find-01, 9@@s@@say-01, 20@@s@@right-03, 6@@s@@very, 12@@s@@possible-01, 31@@p@@any, 1@@d@@_NAME_, 5@@s@@i, 19@@s@@contrast-01, 24@@p@@any, 22@@s@@possible-01, 7@@s@@-, 27@@d@@i, 25@@s@@specific-02]
sentence=1	If	if	if	IN	O	(d<root> / --LEX--)	have-condition-91	()	0	ROOT	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
3	knew	_	know	VBD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	1	MOD_mod	true
4	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
5	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
6	of	_	of	RB	O	_	thing	_	0	IGNORE	true
7	"meat"	_	"meat"	NNP	O	_	thing	_	0	IGNORE	true
8	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	put	_	put	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_s	true
10	in	_	in	RP	O	_	th$LEMMA$g	_	0	IGNORE	true
11	canned	_	canned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
12	cat	_	cat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
14	you'd	_	you'd	NNS	O	_	thing	_	0	IGNORE	true
15	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
16	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@s@@understand-01, 1@@d@@have-condition-91, 2@@d@@you, 5@@p@@kind, 8@@d@@they, 11@@s@@canned-01, 3@@o@@know-01, 12@@p@@cat, 13@@d@@food, 16@@d@@this, 9@@b@@put-01]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	0	ROOT	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	differences	_	difference	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	2	APP_s	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	product	_	0	IGNORE	true
10	HD	hd	HD	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	video,	_	video,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
12	longer	_	longer	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	13	MOD_s	true
13	battery	_	battery	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
14	life,	_	life,	NNS	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
16	faster	_	fast	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	fast-02	(s())	17	MOD_s	true
17	processor	_	processor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	the_NOOK_Tablet	_name_	Tablet	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
20	boasts	_	boast	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_o	true
21	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@some, 12@@b@@long-03, 15@@a@@and, 20@@s@@boast-01, 10@@p@@HD, 7@@s@@see-01, 16@@m@@more, 5@@s@@differ-02, 16@@b@@fast-02, 6@@d@@i, 17@@d@@processor, 2@@s@@include-91, 12@@m@@more, 4@@s@@major-02, 19@@n@@_NAME_, 19@@p@@product, 13@@d@@battery]
sentence=1	Add	add	add	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
2	aquasafe	_	aquasafe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
3	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	put	_	put	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@h@@add-02, 6@@d@@you, 1@@explicitanon0@@imperative, 7@@s@@put-01, 5@@d@@water, 2@@d@@aquasafe]
sentence=1	...	_	...	NFP	O	_	$LEMMA$	_	0	IGNORE	true
2	Fishing,_Jet_skies,	_name_	skies,	NNP	O	(d<root> / --LEX--)	and	()	0	ROOT	true
3	snorkeling,	_	snorkeling,	NNP	O	_	and	_	0	IGNORE	true
4	diving	_	diving	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	dive-01	(s())	2	MOD_s	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_s	true
8	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
9	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
12	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_o	true
13	for	_	for	IN	O	_	and	_	0	IGNORE	true
14	fun	_	fun	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@and, 9@@d@@thing, 4@@s@@dive-01, 10@@d@@you, 7@@s@@include-91, 6@@explicitanon0@@some, 11@@s@@possible-01, 14@@b@@fun-01, 12@@s@@do-02]
sentence=1	Unless	unless	unless	IN	O	_	-	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	19	MOD_mod	true
4	a	_	a	DT	O	_	-	_	0	IGNORE	true
5	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	skill	_	skill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
9	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
11	firm	_	firm	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
12	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	offer	_	offer	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
14	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
15	going	_	go	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_op1	true
16	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
17	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	19	APP_s	true
18	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
19	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
20	twice	_	twice	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[17@@d@@i, 6@@d@@skill, 3@@m@@have-03, 13@@s@@offer-01, 12@@d@@job, 10@@a@@and, 8@@s@@need-01, 5@@p@@particular, 2@@d@@you, 7@@d@@they, 19@@s@@think-01, 15@@d@@go-02, 14@@w@@before, 20@@t@@twice, 11@@s@@firm-02]
sentence=1	Ive	_name_	Ive	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_op1	true
3	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	for	_	for	IN	O	_	thing	_	0	IGNORE	true
5	35_years	_name_	year	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	oldest	_	old	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	old	(mod())	9	MOD_mod	true
9	cat	_	cat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
10	I've	i've	I've	NNP	O	_	-	_	0	IGNORE	true
11	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
13	was	_	be	VBD	O	_	year	_	0	IGNORE	true
14	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	18	(mod())	6	MOD_mod	true
15	23_year_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	16	MOD_mod	true
16	female	_	female	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	6	APP_op2	true
18	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	exceptional	_	exceptional	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op3	true
21	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[2@@s@@have-03, 12@@s@@have-03, 11@@n@@ever, 9@@d@@cat, 5@@t@@temporal-quantity, 8@@t@@old, 3@@d@@cat, 15@@t@@temporal-quantity, 1@@d@@Ive, 20@@d@@exceptional, 16@@d@@female, 8@@m@@most, 6@@a@@and, 17@@a@@and, 15@@y@@year, 14@@explicitanon0@@18, 5@@y@@year]
sentence=1	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	3	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	reading	_	read	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	package	_	package	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	tank	_	tank	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	heater	_	heater	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	bought	_	buy	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	dollar	_	0	IGNORE	true
14	40	_	40	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
15	gallon	_	gallon	NN	O	(v<root> / volume-quantity  :unit (g / --LEX--)  :mod-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	tank	_	tank	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	for	_	for	IN	O	_	thing	_	0	IGNORE	true
18	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
19	snake	_	snake	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op2	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	APP_s	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	put	_	put	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
27	under	_	under	IN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	tank	_	tank	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	APP_s	true
31	on	_	on	IN	O	_	thing	_	0	IGNORE	true
32	the	_	the	DT	O	_	thing	_	0	IGNORE	true
33	side	_	side	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
34	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[30@@a@@or, 24@@s@@possible-01, 14@@explicitanon0@@_NUMBER_, 27@@d@@under, 8@@p@@tank, 15@@g@@gallon, 20@@a@@and, 16@@o@@tank, 5@@d@@package, 26@@s@@put-01, 33@@d@@side, 1@@d@@i, 19@@o@@snake, 9@@o@@heater, 3@@s@@read-01, 22@@s@@say-01, 11@@s@@buy-01, 15@@v@@volume-quantity]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	gonna	_	gonna	VB	O	_	thing	_	0	IGNORE	true
4	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-06	(s(), o())	9	APP_s	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	dinner	_	dinner	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	party	_	party	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
8	that_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
11	cousin	_	cousin	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	14	APP_s	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	having	_	have	VBG	O	_	$LEMMA$-03	_	0	IGNORE	true
14	Having	having	have	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	9	APP_o	true
15	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	bridal	_	bridal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	shower	_	shower	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
18	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	17	MOD_s	true
19	brunch	_	brunch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	9	MOD_s	true
23	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
24	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_dom	true
26	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
27	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	denny's	_	denny's	JJ	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	30	APP_op1	true
30	and	_	and	CC	O	(o<root> / --LEX--  :op1 (g<op1>)  :op2 (b<op2>)  :domain (a<dom>))	$LEMMA$	(op2(), op1(), dom())	22	APP_o	true
31	ihop	_	ihop	JJ	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	30	APP_op2	true
32	.	_	.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[11@@f@@cousin, 19@@d@@brunch, 11@@h@@have-rel-role-91, 31@@n@@_NAME_, 31@@c@@company, 18@@s@@cause-01, 6@@p@@dinner, 17@@d@@shower-01, 27@@s@@know-01, 30@@o@@and, 9@@s@@contrast-01, 16@@p@@bridal, 14@@s@@have-03, 11@@p@@person, 8@@n@@night, 7@@d@@party-01, 24@@p@@only, 29@@c@@company, 22@@s@@contrast-01, 29@@n@@_NAME_, 1@@d@@i, 25@@d@@place, 4@@s@@have-06]
sentence=1	What	what	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	5	APP_dom	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	fun	_	fun	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	things	_	thing	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_o	true
9	while	_	while	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
11	Japan	_name_	Japan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
12	?	_	?	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@d@@amr-unknown, 11@@n@@_NAME_, 6@@d@@i, 3@@explicitanon0@@some, 5@@r@@thing, 8@@s@@do-02, 11@@c@@country, 7@@s@@possible-01, 4@@s@@fun-01]
sentence=1	I'll	i'll	I'll	NNP	O	_	bind-01	_	0	IGNORE	true
2	be	_	be	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-located-at-91	(s())	7	APP_s	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	Okinawa	_name_	Okinawa	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
5	for	_	for	IN	O	_	and	_	0	IGNORE	true
6	about_a_week	_name_	week	NN	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	_NAME_	(mod())	2	MOD_mod	true
7	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
8	I	i	I	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	7	MOD_mod	true
9	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
10	wondering	_	wonder	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
11	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	18	APP_s	true
12	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
13	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	fun	_	fun	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	APP_s	true
18	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_s	true
19	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[4@@c@@city, 10@@s@@wonder-01, 15@@d@@thing, 7@@s@@cause-01, 8@@explicitanon0@@1, 13@@explicitanon0@@some, 2@@s@@be-located-at-91, 4@@n@@_NAME_, 6@@m2@@multiple, 6@@t2@@temporal-quantity, 6@@m@@_NAME_, 14@@s@@fun-01, 18@@s@@do-02, 11@@d@@amr-unknown, 17@@s@@possible-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	3	MOD_s	true
3	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
6	do	_	do	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	5	APP_s	true
7	in	_	in	IN	O	_	say-01	_	0	IGNORE	true
8	Okinawa	_name_	Okinawa	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	6	APP_o	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	beach	_	beach	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@c@@country, 8@@n@@_NAME_, 2@@b2@@good-02, 3@@p@@thing, 14@@d@@beach, 4@@d@@you, 11@@g@@go-02, 6@@c@@do-02, 5@@s@@possible-01, 2@@m@@most]
sentence=1	The	the	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
2	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	5	APP_s	true
5	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	MOD_o	true
6	there	_	there	EX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	is	_	be	VBZ	O	_	have-concession-91	_	0	IGNORE	true
8	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	0	ROOT	true
9	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	beach	_	beach	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@g@@go-02, 2@@p@@main, 4@@d@@person, 11@@d@@beach, 3@@d@@thing, 6@@b@@there, 5@@s@@do-02]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	screw-up	_	screw-up	NN	O	(d<root> / --LEX--)	$LEMMA$-04	()	9	APP_s	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	things	_	thing	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
9	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
10	happen	_	happen	VBN	O	_	event	_	0	IGNORE	true
11	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	have	_	have	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-03	(mod(), s(), o())	7	MOD_mod	true
14	bean-counters	_	bean-counter	NNS	O	(d<root> / --LEX--)	_NAME_	()	13	APP_o	true
15	(and	_	(and	NNP	O	_	have-org-role-91	_	0	IGNORE	true
16	McNamara	_name_	McNamara	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	nothing	_	nothing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
19	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
20	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
21	a	_	a	DT	O	_	contrast-01	_	0	IGNORE	true
22	bean-counter)	_	bean-counter)	NN	O	_	contrast-01	_	0	IGNORE	true
23	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	13	MOD_s	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	soldiers	_	soldier	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	in	_	in	IN	O	_	except-01	_	0	IGNORE	true
27	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-08	(s(), o())	25	MOD_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	military	_	military	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@d@@you, 9@@s@@have-03, 27@@s@@charge-08, 25@@d@@soldier, 14@@d@@_NAME_, 30@@p@@military, 20@@explicitanon0@@-, 13@@t@@have-03, 2@@d@@screw-up-04, 16@@p@@person, 18@@p@@nothing, 23@@s@@instead-of-91, 16@@n@@_NAME_, 7@@p@@thing, 5@@p@@kind]
sentence=1	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	taller	_	tall	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	young	(s())	3	MOD_s	true
3	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
5	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	mean	_	mean	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	a	_	a	DT	O	_	-	_	0	IGNORE	true
8	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[8@@d@@horse, 6@@s@@mean-01, 2@@b@@young, 11@@s@@handle-01, 2@@m@@more, 5@@n@@always, 3@@d@@horse, 4@@explicitanon0@@-, 10@@explicitanon0@@-, 9@@d@@you]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	3	APP_s	true
3	lay	_	lie	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	0	ROOT	true
4	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	eggs	_	egg	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
6	inside	_	inside	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	cave	_	cave	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	for	_	for	IN	O	_	thing	_	0	IGNORE	true
12	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@d@@you, 3@@l@@lie-01, 10@@s@@make-01, 2@@t@@thing, 8@@b@@cave, 5@@m@@egg, 6@@b@@inside, 2@@explicitanon0@@2]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	are	_	be	VBP	O	_	say-01	_	0	IGNORE	true
5	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	worried,	_	worried,	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	7	APP_s	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	16	APP_dom	true
9	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	to	_	to	IN	O	_	-	_	0	IGNORE	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	vet	_	vet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	16	MOD_s	true
16	thing	_	thing	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_o	true
17	you	_	you	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	7	MOD_o	true
18	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	7	MOD_s	true
19	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_o	true
20	for	_	for	IN	O	_	and	_	0	IGNORE	true
21	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@you, 16@@r@@thing, 15@@b2@@good-02, 6@@s@@and, 5@@s@@very, 17@@s@@you, 7@@s@@contrast-01, 8@@s@@get-05, 18@@f@@possible-01, 2@@s@@know-01, 15@@m@@most, 1@@d@@i, 12@@d@@vet, 19@@s@@do-02]
sentence=1	I've	i've	I've	NNP	O	_	$LEMMA$-03	_	0	IGNORE	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	shots	_	shot	NNS	O	(d<root> / --LEX--)	shoot-02	()	7	APP_s	true
7	ruined	_	ruin	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
8	myself	_	myself	PRP	O	_	cause-01	_	0	IGNORE	true
9	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
10	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
11	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the	_	the	DT	O	_	event	_	0	IGNORE	true
15	background	_	background	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	notice	_	notice	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
19	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
20	first	_name_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	at-$LEMMA$	(mod())	18	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@shoot-02, 9@@s@@cause-01, 15@@b@@background, 7@@s@@ruin-01, 18@@s@@notice-01, 17@@explicitanon0@@-, 12@@d@@something, 2@@s@@have-03, 4@@explicitanon0@@few, 20@@n@@at-first, 5@@p@@great]
sentence=1	The	the	the	DT	O	_	include-91	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	notable	_	notable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
4	difference	_	difference	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	0	ROOT	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
7	noticed	_	notice	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	south	_	south	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	21	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	Ireland	_name_	Ireland	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	one_night	_name_	night	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	wake	_	wake	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_poss	true
19	is	_	be	VBZ	O	_	1	_	0	IGNORE	true
20	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	4	APP_s	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	chapel	_	chapel	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	the_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	funeral,	_	funeral,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	tradition	_	tradition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
31	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
32	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	31	MOD_mod	true
33	the	_	the	DT	O	_	name	_	0	IGNORE	true
34	civil	_	civil	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
36	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[18@@d@@wake, 21@@s@@hold-04, 2@@p@@only, 3@@s@@notable-02, 4@@s@@differ-02, 7@@s@@notice-01, 26@@n@@before, 20@@o@@often, 15@@p@@night, 29@@p@@this, 35@@d@@war, 14@@n@@_NAME_, 32@@w@@after, 30@@d@@tradition, 34@@p@@civil, 12@@h@@south, 31@@s@@start-01, 24@@b@@chapel, 25@@n@@night, 14@@c@@country, 5@@d@@i]
sentence=1	the	_	the	DT	O	(explicitanon1<root> / Britain  :op1-of (n / --LEX--  :name-of (c<mod>)))	name	(mod())	5	MOD_mod	true
2	irish	_	irish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	country	(mod())	3	MOD_mod	true
3	customs	_	custom	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_o	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	in	_	in	IN	O	_	member	_	0	IGNORE	true
7	our	_	our	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
8	family	_	family	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	are;	_	are;	NNP	O	_	and	_	0	IGNORE	true
10	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_dom	true
12	sinnel	_	sinnel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	cake	_	cake	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	for	_	for	IN	O	_	and	_	0	IGNORE	true
15	easter	_	easter	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
16	,barn	_	,barn	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	brack	_	brack	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
19	col-cannon	_	col-cannon	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_op2	true
20	for	_	for	IN	O	_	and	_	0	IGNORE	true
21	Halloween	_name_	Halloween	NNP	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@p@@,barn, 8@@b@@family, 5@@s@@have-03, 4@@d@@we, 12@@p@@sinnel, 1@@explicitanon1@@Britain, 11@@s@@make-01, 18@@a@@and, 2@@p@@country, 21@@o@@Halloween, 19@@p@@person, 1@@n@@name, 13@@d@@cake, 19@@n@@_NAME_, 17@@d@@brack, 15@@n@@_NAME_, 3@@r@@custom]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	horses	_	horse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
3	I've	i've	I've	NNP	O	_	$LEMMA$-01	_	0	IGNORE	true
4	had	_	have	VBD	O	_	person	_	0	IGNORE	true
5	delivered	_	deliver	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
6	to	_	to	IN	O	_	thing	_	0	IGNORE	true
7	me	_	I	PRP	O	_	i	_	0	IGNORE	true
8	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
9	then	_	then	RB	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
10	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
11	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
13	healthy	_	healthy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	APP_op2	true
14	when	_	when	WRB	O	_	he	_	0	IGNORE	true
15	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	arrive	_	arrive	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@horse, 16@@s@@arrive-01, 12@@a@@and, 5@@s@@deliver-01, 11@@s@@happy-01, 13@@s@@healthy, 9@@d@@then, 8@@w@@since, 1@@p@@all]
sentence=1	Make	make	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
2	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	en$LEMMA$-01	(s())	0	ROOT	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	trailer	_	trailer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	service	_	service	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	bonded/insured	_	bonded/insure	VBN	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	insure-02	(s())	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_s	true
11	knows	_	know	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	about	_	about	IN	O	_	thing	_	0	IGNORE	true
14	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	15	MOD_mod	true
15	aid	_	aid	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[14@@explicitanon0@@1, 10@@a@@and, 12@@d@@something, 11@@s@@know-01, 9@@explicitanon0@@-, 4@@p@@trailer, 15@@a@@aid, 7@@s@@use-01, 14@@o@@ordinal-entity, 2@@s@@ensure-01, 5@@d@@service, 9@@p@@insure-02, 6@@d@@you]
sentence=1	Second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	2	(mod())	5	MOD_mod	true
2	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
3	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	0	ROOT	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	sort	_	sort	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-of	(mod())	9	MOD_mod	true
8	of	_	of	RB	O	_	event	_	0	IGNORE	true
9	customize	_	customize	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_mod	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	wanna	_	wanna	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	11	MOD_o	true
15	to	_	to	IN	O	_	name	_	0	IGNORE	true
16	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[12@@d@@you, 14@@g@@go-02, 5@@t@@way, 9@@s@@customize-01, 4@@p@@any, 1@@explicitanon0@@2, 16@@explicitanon0@@interrogative, 7@@p@@sort-of, 13@@s@@wanna-01, 11@@d@@place]
sentence=1	so	_	so	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	price	_	price	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	find,	_	find,	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	1	APP_s	true
6	DOUBLE	double	DOUBLE	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
7	IT	it	it	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	figure,	_	figure,	NNS	O	_	and	_	0	IGNORE	true
9	$40K	$40k	$40K	NNP	O	(d<root> / --LEX--)	90000	()	11	APP_op1	true
10	at	_	at	IN	O	_	and	_	0	IGNORE	true
11	least	_	least	JJS	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :frequency-of (c<mod>))	at-$LEMMA$	(op1(), mod())	5	MOD_mod	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@DOUBLE-01, 7@@d@@it, 2@@p@@any, 1@@s@@cause-01, 3@@s@@price-01, 4@@d@@you, 11@@s@@at-least, 5@@s@@and, 9@@d@@90000]
sentence=1	Yes,but	yes,but	Yes,but	LS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
2	be	_	be	VB	O	_	and	_	0	IGNORE	true
3	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	chickens	_	chicken	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o2	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	hens(I	hens(i	hens(I	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	mean	_	mean	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_o	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
12	roosters),Roosters	roosters),roosters	roosters),rooster	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	APP_o	true
14	attack	_	attack	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
15	rabbits	_	rabbit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op1	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
17	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
18	they	_	they	PRP	O	_	person	_	0	IGNORE	true
19	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	moving,so	_	moving,so	NNP	O	_	-	_	0	IGNORE	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	23	MOD_s	true
23	of	_	of	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	thing	(s(), o())	3	MOD_o	true
24	that,hens	_	that,hen	NNS	O	(d<root> / --LEX--)	_NAME_	()	26	APP_s	true
25	are	_	be	VBP	O	_	person	_	0	IGNORE	true
26	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	APP_o	true
27	with	_	with	IN	O	_	-	_	0	IGNORE	true
28	almost	_	almost	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	kinds	_	kind	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	of	_	of	IN	O	_	name	_	0	IGNORE	true
32	pets	_	pet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
33	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@-, 32@@d@@pet, 6@@d@@chicken, 16@@a@@or, 22@@s@@realize-01, 24@@d@@_NAME_, 9@@d@@hens(I, 29@@p@@all, 3@@s@@sure-02, 10@@b@@mean-01, 15@@d@@rabbit, 17@@d@@anything, 26@@s@@friendly-01, 23@@s@@thing, 13@@s@@possible-01, 12@@d@@roosters),rooster, 30@@p@@kind, 14@@s@@attack-01, 5@@d@@your, 8@@p@@all, 28@@s@@almost, 1@@explicitanon0@@-, 19@@s@@see-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	have	_	have	VBP	O	_	person	_	0	IGNORE	true
3	melted	_	melt	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_s	true
4	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	amounts	_	amount	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
7	bronze	_	bronze	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	in	_	in	IN	O	_	thing	_	0	IGNORE	true
9	a	_	a	DT	O	_	person	_	0	IGNORE	true
10	crucible	_	crucible	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	propane	_	propane	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	torch	_	torch	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
16	(much	_	(much	.	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	15	MOD_mod	true
18	than	_	than	IN	O	_	more	_	0	IGNORE	true
19	the	_	the	DT	O	_	more	_	0	IGNORE	true
20	plumbers	_	plumber	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	torch,	_	torch,	NNS	O	_	and	_	0	IGNORE	true
22	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	APP_o	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	run	_	run	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	30	MOD_mod	true
29	propane	_	propane	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	cylinders	_	cylinder	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
32	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	33	MOD_s	true
33	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_o	true
34	for	_	for	IN	O	_	or	_	0	IGNORE	true
35	a	_	a	DT	O	_	1	_	0	IGNORE	true
36	gas	_	gas	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
37	grill)	_	grill)	NNS	O	_	mean-01	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@amount, 28@@p@@that, 10@@b@@crucible, 24@@s@@possible-01, 13@@p@@large, 17@@f2@@large, 36@@p@@gas, 22@@s@@contrast-01, 17@@m@@more, 26@@s@@run-01, 33@@s@@buy-01, 7@@d@@bronze, 29@@p@@propane, 4@@p@@small, 14@@p@@propane, 3@@s@@melt-01, 31@@d@@you, 15@@m@@torch, 32@@s@@possible-01, 16@@explicitanon0@@(much, 30@@d@@cylinder, 1@@d@@i, 20@@p@@plumber]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	propane	_	propane	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	blower	_	blower	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (u<op1>)  :op2 (b2<op2>)  :accompanier-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	2	MOD_mod	true
8	a	_	a	DT	O	_	missile	_	0	IGNORE	true
9	burner	_	burner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
10	I	i	I	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$REPL$	(s(), o())	2	MOD_s	true
11	built	_	build	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
12	http://www.mikegigi.com/meltmetl.htm	_	http://www.mikegigi.com/meltmetl.htm	ADD	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
14	http://www.mikegigi.com/firehole.ht	_	http://www.mikegigi.com/firehole.ht	UH	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	m	_	m	XX	O	(explicitanon1<root> / --LEX--  :value-of (s / string-entity  :mod-of (w<mod>)))	$FORM$	(mod())	2	MOD_mod	true

nodealignment=[9@@d@@burner, 12@@n@@_NAME_, 13@@a@@and, 11@@s@@build-01, 1@@d@@i, 2@@s@@use-01, 7@@a@@and, 14@@d@@http://www.mikegigi.com/firehole.ht, 6@@d@@blower, 15@@s@@string-entity, 15@@explicitanon1@@m, 12@@t@@thing, 3@@d@@propane, 10@@s@@i]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
2	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
3	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	excited	_	excited	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	about	_	about	IN	O	_	thing	_	0	IGNORE	true
6	anybody	_	anybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@s@@excited-01, 1@@d@@He, 8@@s@@see-01, 6@@d@@anybody, 3@@s@@really]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	would	_	would	MD	O	_	+	_	0	IGNORE	true
3	be	_	be	VB	O	_	person	_	0	IGNORE	true
4	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
6	walk-in	_	walk-in	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
7	basis	_	basis	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	base-02	(s(), o())	0	ROOT	true
8	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_s	true
11	to	_	to	TO	O	_	have-condition-91	_	0	IGNORE	true
12	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	freedom	_	freedom	NN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	free-04	(o(s()))	10	APP_o	true
15	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	finding	_	find	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
21	good	_	good	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_o	true
22	(Not	(not	(Not	NNP	O	_	-	_	0	IGNORE	true
23	relying	_	rely	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
24	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
25	pictures	_	picture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	from	_	from	IN	O	_	and	_	0	IGNORE	true
27	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
28	internet)	_	internet)	NN	O	_	and	_	0	IGNORE	true
29	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	7	MOD_s	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	a	_	a	DT	O	_	thing	_	0	IGNORE	true
33	spot	_	spot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
34	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@cause-01, 14@@f@@free-04, 1@@d@@this, 20@@s@@look-02, 23@@s@@rely-01, 21@@d@@good-02, 9@@d@@we, 30@@s@@be-located-at-91, 33@@d@@spot, 10@@c@@want-01, 16@@s@@find-01, 6@@d@@walk-in, 18@@d@@place, 7@@s@@base-02, 35@@s@@like-01, 25@@d@@picture]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	Agra	_name_	Agra	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
3	I've	i've	i've	NN	O	_	_NAME_	_	0	IGNORE	true
4	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
6	a	_	a	DT	O	_	person	_	0	IGNORE	true
7	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	APP_s	true
8	fellow	_	fellow	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	travellers	_	traveller	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	travel-01	()	7	APP_mod	true
10	recommended,	_	recommended,	NNP	O	_	and	_	0	IGNORE	true
11	they	_	they	PRP	O	_	person	_	0	IGNORE	true
12	found	_	find	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the_Rough_Guide	_name_	Guide	NNP	O	(p<root> / publication  :name (n / --LEX--)  :medium-of (u<mod>))	_NAME_	(mod())	12	MOD_mod	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@p@@fellow, 15@@p@@publication, 15@@n@@_NAME_, 4@@s@@stay-01, 12@@s@@find-01, 9@@p2@@person, 7@@b@@place, 2@@c@@city, 2@@n@@_NAME_, 9@@e2@@travel-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	32	APP_snt1	true
3	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	normal	_	normal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
6	budget	_	budget	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	hotel	_	hotel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	for	_	for	IN	O	_	cost-01	_	0	IGNORE	true
9	Rs	rs	r	NNS	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	dollar	()	11	APP_s	true
10	1000	_	1000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
11	per	_	per	IN	O	(c<root> / --LEX--  :ARG2 (d<o>)  :ARG1 (s<s>)  :mod-of (e<mod>))	rate-entity-91	(mod(), s(), o())	3	MOD_mod	true
12	night	_	night	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	11	APP_o	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
15	cities	_	city	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
16	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	mentioned,	_	mentioned,	VBP	O	_	and	_	0	IGNORE	true
18	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
19	links	_	link	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	below	_	below	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	32	APP_snt2	true
22	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_s	true
23	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
25	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
26	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	hotels	_	hotel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	Delhi	_name_	Delhi	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	30	APP_op1	true
30	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	27	MOD_mod	true
31	Agra	_name_	Agra	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	30	APP_op2	true
32	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true

nodealignment=[26@@s@@good-02, 15@@b@@city, 7@@d@@hotel, 32@@m@@multi-sentence, 9@@d2@@dollar, 12@@t@@temporal-quantity, 9@@m2@@monetary-quantity, 11@@c@@rate-entity-91, 6@@p@@budget, 12@@m@@night, 31@@n@@_NAME_, 10@@explicitanon0@@_NUMBER_, 30@@b@@and, 29@@c@@city, 29@@n@@_NAME_, 31@@c@@city, 27@@d@@hotel, 5@@s@@normal-02, 19@@d@@link, 3@@s@@find-01, 22@@s@@help-01, 25@@s@@find-01, 1@@d@@You, 21@@s@@possible-01, 2@@s@@possible-01, 20@@b@@below]
sentence=1	Also	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	depends	_	depend	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	on	_	on	IN	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_o	true
5	space	_	space	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	2	APP_s	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
7	have,	_	have,	VBD	O	_	$LEMMA$	_	0	IGNORE	true
8	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
9	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	monetary-quantity	(mod())	2	MOD_mod	true
10	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	9	MOD_s	true
13	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	pet,	_	pet,	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
17	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	monetary-quantity	(mod())	2	APP_o	true
18	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_mod	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
21	spend,	_	spend,	NNS	O	_	and	_	0	IGNORE	true
22	etc	_	etc	FW	O	(d<root> / --LEX--)	et-cetera	()	4	APP_s	true
23	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[13@@s@@handle-01, 1@@p@@also, 9@@explicitanon0@@monetary-quantity, 2@@s@@depend-01, 17@@explicitanon0@@monetary-quantity, 6@@d@@you, 20@@s@@possible-01, 22@@d@@et-cetera, 12@@f@@possible-01, 5@@m@@space, 10@@b@@time, 4@@s@@and, 18@@d@@money]
sentence=1	Get	get	Get	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
2	plenty	_	plenty	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	of	_	of	IN	O	_	you	_	0	IGNORE	true
4	sleep	_	sleep	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_o	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	make	_	make	VB	O	_	cause-01	_	0	IGNORE	true
7	sure	_	sure	JJ	O	(l<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (i<o>)  :ARG0 (y<s>))	en$LEMMA$-01	(o(s()))	5	APP_op2	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	take	_	take	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	9	MOD_mod	true
14	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	enjoy	_	enjoy	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@imperative, 9@@s@@take-01, 7@@l@@ensure-01, 17@@s@@enjoy-01, 14@@explicitanon0@@some, 15@@d@@thing, 4@@d@@sleep-01, 10@@d@@time, 2@@explicitanon0@@plenty, 1@@h@@Get-01, 8@@d@@you, 1@@explicitanon0@@imperative, 5@@a@@and, 13@@s@@do-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	know	_	know	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	that	_	that	IN	O	_	-	_	0	IGNORE	true
5	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
6	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	register	_	register	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
8	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
11	ridiculous	_	ridiculous	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	APP_o	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	paperwork	_	paperwork	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_mod	true
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
16	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
17	filled	_	fill	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
18	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	hospital	_	hospital	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	APP_op2	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	go	_	go	VB	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	24	APP_s	true
27	to	_	to	IN	O	_	-	_	0	IGNORE	true
28	city	_	city	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	29	MOD_mod	true
29	hall	_	hall	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
30	within	_	within	IN	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	90_days	_name_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@fill-01, 1@@d@@i, 6@@explicitanon0@@-, 26@@p@@go-02, 14@@d@@paperwork, 21@@b@@hospital, 2@@explicitanon0@@-, 3@@c@@know-01, 30@@b@@within, 30@@n@@now, 28@@p@@city, 7@@s@@register-01, 11@@s@@ridiculous-02, 31@@n@@day, 12@@explicitanon0@@amount, 24@@s@@suppose-02, 22@@a@@and, 29@@d@@hall]
sentence=1	None,	_name_	None,	NNP	O	_	and	_	0	IGNORE	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	walk	_	walk	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	to	_	to	IN	O	_	you	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	service	_	service	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
10	present	_	present	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op2	true
11	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	identification	_	identification	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
15	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	MOD_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	prove	_	prove	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
18	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
19	identity	_	identity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@a@@and, 15@@s@@have-03, 10@@s@@present-01, 11@@p@@all, 7@@p@@service, 3@@t@@walk-01, 14@@d@@you, 19@@d@@identity, 8@@d@@office, 13@@d@@identification, 2@@p@@just, 17@@s@@prove-01]
sentence=1	-AND	-and	-and	NN	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	JUST	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	MORE	more	MORE	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	STUFF	stuff	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op2	true
5	YOU	you	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	LIKED	liked	like	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	OVERAL	overal	OVERAL	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
8	L	l	L	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[2@@p@@just, 5@@d@@you, 3@@explicitanon0@@MORE, 6@@s@@like-01, 4@@d@@stuff, 1@@a@@-and, 7@@p@@_NAME_]
sentence=1	remember	_	remember	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
2	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
3	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
4	him	_	he	PRP	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	feel	_	feel	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
16	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
17	rush	_	rush	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op1	true
18	it,	_	it,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
20	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	will	_	will	MD	O	_	thing	_	0	IGNORE	true
22	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
23	afraid	_	afraid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fear-01	(s())	19	APP_op2	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	house	_	house	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
28	for	_	for	IN	O	_	or	_	0	IGNORE	true
29	a	_	a	DT	O	_	-	_	0	IGNORE	true
30	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	23	MOD_s	true
31	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@give-01, 1@@c@@remember-01, 13@@d@@room, 23@@s@@fear-01, 6@@d@@time, 10@@i@@feel-01, 27@@d@@house, 19@@a@@and, 17@@d@@rush-01, 26@@p@@whole, 8@@s@@need-01, 30@@s@@long-03]
sentence=1	...but	_	...but	NFP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
2	basically,	_	basically,	NNP	O	_	and	_	0	IGNORE	true
3	what	_	what	WP	O	_	thing	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
5	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	MOD_s	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	(d<root> / --LEX--)	thing	()	9	APP_dom	true
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
9	thing	_	thing	NN	O	(p2<root> / --LEX--  :ARG0 (p<s>)  :domain (t<dom>))	$LEMMA$	(dom(), s())	0	ROOT	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	APP_o	true
12	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	be-located-at-91	_	0	IGNORE	true
14	puppy...lots	_	puppy...lot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	of	_	of	IN	O	_	name	_	0	IGNORE	true
16	patience,	_	patience,	NNP	O	_	and	_	0	IGNORE	true
17	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	time,	_	time,	CD	O	_	and	_	0	IGNORE	true
20	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	praise,	_	praise,	JJ	O	(d<root> / --LEX--)	and	()	9	APP_s	true
23	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	treats,	_	treats,	NNS	O	_	and	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	MOD_op1	true
27	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	repition....Right	repition....right	repition....right	CD	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
30	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	11	MOD_mod	true

nodealignment=[27@@explicitanon0@@lot, 4@@d@@i, 26@@a@@and, 22@@d@@and, 7@@d@@thing, 8@@s@@same-01, 14@@d@@puppy...lot, 1@@explicitanon0@@-, 11@@s@@do-02, 5@@s@@do-02, 17@@explicitanon0@@lot, 30@@explicitanon0@@interrogative, 9@@p2@@thing, 29@@d@@repition....right, 20@@explicitanon0@@lot, 23@@explicitanon0@@lot]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
3	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	tricks	_	trick	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
7	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[3@@p@@any, 8@@explicitanon0@@interrogative, 6@@s@@possible-01, 5@@d@@i, 7@@s@@use-01, 4@@d@@trick]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
3	wait,	_	wait,	NNPS	O	_	and	_	0	IGNORE	true
4	would	_	would	MD	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	tours	_	tour	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_dom	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
9	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	for	_	for	IN	O	_	and	_	0	IGNORE	true
11	less	_	less	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	money	_	money	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	be	_	be	VB	O	_	monetary-quantity	_	0	IGNORE	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
16	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	tours	_	tour	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
19	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	8	MOD_mod	true

nodealignment=[11@@s@@less, 12@@o@@money, 15@@s@@same-01, 6@@d@@tour, 19@@explicitanon0@@interrogative, 9@@b@@there, 17@@p@@type, 16@@p@@quality, 2@@d@@i, 18@@r@@tour, 8@@s@@find-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	done	_	do	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
4	Yoga	yoga	Yoga	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	riders	_	rider	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	for	_	for	IN	O	_	or	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	while,	_	while,	NNS	O	_	and	_	0	IGNORE	true
10	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	3	MOD_mod	true
11	20_minute	_name_	minute	NN	O	(d<root> / distance-quantity  :unit (i / --LEX--)  :mod-of (p2<mod>))	minute	(mod())	12	MOD_mod	true
12	routine	_	routine	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	3	MOD_s	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	found	_	find	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
16	YouTube	_name_	YouTube	NNP	O	(p<root> / publication  :name (n / --LEX--)  :medium-of (u<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	(I	(i	(I	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	think	_	think	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	MOD_s	true
19	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
20	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	APP_o	true
21	"Yoga	"yoga	"Yoga	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
23	horse	_	horse	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
25	riding"	_	riding"	NNS	O	_	and	_	0	IGNORE	true
26	hosted	_	host	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
27	by	_	by	IN	O	_	and	_	0	IGNORE	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	man)	_	man)	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	helped	_	help	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	42	APP_s	true
32	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
33	noticing	_	notice	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
34	slight	_	slight	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	differences	_	difference	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	33	APP_s	true
36	in	_	in	IN	O	_	i	_	0	IGNORE	true
37	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
38	balance	_	balance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	35	APP_s	true
40	weight	_	weight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
41	distribution	_	distribution	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	distribute-01	(s())	39	APP_op2	true
42	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	3	APP_o2	true
43	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	42	MOD_mod	true
44	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	47	MOD_s	true
45	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
46	the	_	the	DT	O	_	thing	_	0	IGNORE	true
47	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	42	APP_o	true
48	I	i	I	PRP	O	_	1	_	0	IGNORE	true
49	use	_	use	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_mod	true
50	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
51	legs	_	leg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op1	true
52	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_s	true
53	back	_	back	RB	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op2	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@n@@_NAME_, 6@@o@@rider, 18@@c@@think-01, 53@@d@@back, 11@@d@@distance-quantity, 24@@p@@back, 38@@d@@balance, 41@@s@@distribute-01, 4@@d@@Yoga, 43@@explicitanon0@@-, 3@@b@@do-02, 21@@d@@"Yoga, 40@@d@@weight, 52@@a@@and, 39@@a@@and, 51@@d@@leg, 10@@explicitanon0@@3, 44@@s@@real-04, 16@@p@@publication, 35@@s@@differ-02, 20@@s@@call-01, 42@@s@@contrast-01, 14@@s@@find-01, 12@@s@@routine, 26@@s@@host-01, 1@@d@@i, 23@@p@@horse, 31@@s@@help-01, 11@@i@@minute, 34@@p@@slight, 47@@t@@way, 17@@b@@(I, 33@@s@@notice-01, 49@@s@@use-01]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	seems	_	seem	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	hate	_	hate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
6	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	whenever	_	whenever	WRB	O	_	i	_	0	IGNORE	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_o	true
9	ask	_	ask	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-out-04	(mod(), s(), o())	5	MOD_mod	true
10	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
12	on	_	on	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
14	date,	_	date,	NNP	O	_	and	_	0	IGNORE	true
15	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	point	_	point	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_s	true
18	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
20	stop	_	stop	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_s	true
21	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[2@@p@@also, 8@@d@@i, 5@@s@@hate-01, 3@@s@@seem-01, 19@@s@@say-01, 20@@d@@stop-01, 17@@s@@point, 1@@d@@She, 9@@t@@ask-out-04]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	articles	_	article	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	read	_	read	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
6	seemed	_	seem	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	contrary	_	contrary	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
11	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@s@@seem-01, 1@@s@@contrast-01, 3@@d@@article, 4@@d@@i, 8@@s@@say-01, 5@@s@@read-01, 10@@d@@contrary-01]
sentence=1	Everybody	everybody	Everybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
4	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
5	university	_	university	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
6	intends	_	intend	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	stay	_	stay	VB	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	uni	_	uni	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
13	long	_	long	RB	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$-03	(mod())	8	MOD_mod	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	possible	_	possible	JJ	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
16	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
17	there	_	there	EX	O	_	thing	_	0	IGNORE	true
18	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
19	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	21	MOD_s	true
20	jobs	_	job	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	16	APP_op1	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@b@@university, 8@@s@@stay-01, 21@@s@@available-02, 10@@d@@uni, 2@@d@@i, 6@@c@@intend-01, 16@@w@@until, 1@@d@@Everybody, 3@@s@@know-01, 13@@b@@long-03, 15@@p@@possible-01, 19@@s@@actual-02, 20@@d@@job]
sentence=1	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
2	male	_	male	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	hurting	_	hurt	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_op1	true
5	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	put	_	put	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
8	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
13	biting	_	bite	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_dom	true
14	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	scruff	_	scruff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
17	dominance	_	dominance	NN	O	(r<root> / --LEX--  :domain (q<dom>))	dominate-01	(dom())	18	APP_op2	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
19	biting	_	bite	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
20	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
21	belly	_	belly	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	a	_	a	DT	O	_	thing	_	0	IGNORE	true
24	move	_	move	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_op3	true
25	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
26	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
27	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
28	hunting	_	hunt	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	hunt-01	(mod(), s())	26	MOD_mod	true
29	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	pull	_	pull	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	26	MOD_mod	true
32	the	_	the	DT	O	_	he	_	0	IGNORE	true
33	guts	_	gut	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
34	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	of	_	of	IN	O	_	person	_	0	IGNORE	true
36	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
37	prey	_	prey	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@r2@@pull-01, 4@@s@@hurt-01, 18@@a@@and, 24@@s@@move-02, 19@@s@@bite-01, 33@@d@@gut, 37@@d@@prey, 7@@r2@@put-01, 26@@s@@use-01, 21@@d@@belly, 28@@v@@hunt-01, 2@@m@@male, 25@@d@@cat, 11@@d@@place, 15@@d@@scruff, 13@@s@@bite-01, 17@@r@@dominate-01, 1@@d@@your]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	give	_	give	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	troops	_	troop	NNS	O	(d<root> / --LEX--)	troop	()	7	APP_mod	true
10	they	_	they	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
11	requested	_	request	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@number, 4@@b@@give-01, 10@@p@@they, 11@@s@@request-01, 9@@d@@troop, 3@@explicitanon0@@-, 5@@d@@they, 1@@d@@He]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	had	_	have	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
6	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	victory	_	victory	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	win-01	(mod())	5	MOD_mod	true
10	was	_	be	VBD	O	_	have-concession-91	_	0	IGNORE	true
11	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	military	_	military	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
14	to	_	to	TO	O	_	and	_	0	IGNORE	true
15	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
16	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	Laos	_name_	Laos	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
19	Cambodia	_name_	Cambodia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	18	APP_op2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	APP_o	true
21	finish	_	finish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-off-02	(s(), o())	20	APP_op2	true
22	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	shattered	_	shattered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
25	Communist	_name_	communist	JJ	O	(p2<root> / political-movement  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	26	MOD_mod	true
26	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[15@@g@@go-01, 11@@s@@allow-01, 25@@n@@_NAME_, 19@@c@@country, 5@@s@@do-02, 2@@d@@he, 9@@o@@win-01, 19@@n@@_NAME_, 13@@d@@military, 1@@p@@all, 8@@s@@complete-02, 17@@c@@country, 3@@o@@obligate-01, 17@@n@@_NAME_, 18@@a@@and, 24@@s@@shattered-01, 25@@p2@@political-movement, 20@@a@@and, 26@@d@@force, 21@@s@@finish-off-02]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_s	true
4	were	_	be	VBD	O	_	person	_	0	IGNORE	true
5	NOT	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	having	_	have	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	APP_op1	true
7	any	_	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	it,	_	it,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	elected	_	elect	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	10	APP_op2	true
12	Richard_Nixon	_name_	Nixon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
13	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
14	fix	_	fix	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_o2	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	mess	_	mess	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	LBJ	_name_	LBJ	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
18	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
19	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
20	(not	_	(not	ADD	O	_	$LEMMA$	_	0	IGNORE	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	surrender	_	surrender	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_o	true
23	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	19	MOD_s	true
24	the	_	the	DT	O	_	oppose-01	_	0	IGNORE	true
25	antiwar	_	antiwar	JJ	O	(d<root> / --LEX--)	war	()	26	APP_s	true
26	movement	_	movement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	18	APP_s	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	demanding)	_	demanding)	JJ	O	_	-	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@c@@country, 6@@s@@have-03, 3@@d@@person, 5@@explicitanon0@@-, 12@@n@@_NAME_, 10@@a@@and, 11@@t@@elect-01, 12@@p@@person, 22@@d@@surrender-01, 17@@n@@_NAME_, 26@@s@@movement-07, 16@@d@@mess, 2@@n@@_NAME_, 18@@s@@cause-01, 14@@s@@fix-02, 7@@d@@any, 17@@p@@person, 23@@s@@resemble-01, 25@@d@@war, 19@@s@@make-01]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	question	_	question	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
5	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	mean	_	mean	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
7	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	gives	_	give	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	him	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
10	not	_	not	RB	O	_	$LEMMA$	_	0	IGNORE	true
11	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	heat,	_	heat,	NNS	O	_	and	_	0	IGNORE	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	8	MOD_s	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	"sun	_	"sun	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
17	rays"	_	rays"	ADD	O	_	thing	_	0	IGNORE	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
20	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	6	MOD_mod	true

nodealignment=[7@@d@@it, 6@@s@@mean-01, 8@@s@@give-01, 14@@s@@contrast-01, 20@@explicitanon0@@interrogative, 5@@d@@that, 11@@p@@only, 16@@d@@"sun, 19@@s@@need-01, 2@@s@@question-01, 9@@d@@he]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	4	APP_dom	true
2	are	_	be	VBP	O	_	expressive	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	steps	_	step	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@r@@step, 6@@s@@use-01, 5@@d@@i, 1@@d@@this]
sentence=1	THEN	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	eggs	_	egg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
6	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	treated	_	treat	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
8	a_couple_of_days	_name_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	treatment	_	treatment	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	treat-03	(s())	7	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	left	_	leave	VBD	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-14	(o(s()))	14	APP_op2	true
16	open	_	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	15	APP_o	true
17	to	_	to	IN	O	_	and	_	0	IGNORE	true
18	"breathe"	_	"breathe"	NNP	O	_	and	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@f@@leave-14, 8@@n@@day, 13@@s@@treat-03, 6@@d@@water, 16@@s@@open-05, 4@@d@@egg, 9@@n@@before, 1@@n@@then, 7@@s@@treat-01, 2@@s@@put-01, 14@@a@@and, 12@@d@@water]
sentence=1	Disney	_name_	Disney	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	cruises	_	cruise	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	offer	_	offer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
4	24-hour	_	24-hour	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	hour	(mod())	5	MOD_mod	true
5	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	services,	_	services,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	the	_	the	DT	O	_	company	_	0	IGNORE	true
9	crews	_	crew	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	ready	_	ready	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	7	APP_op2	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	serve	_	serve	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@s@@like-02, 9@@d@@crew, 4@@p@@hour, 7@@a@@and, 13@@t@@serve-01, 2@@d@@cruise, 5@@d@@room, 11@@o@@ready-02, 3@@s@@offer-01, 14@@d@@you, 1@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
5	posted	_	post	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
6	about_a_couple_weeks_ago	_name_	ago	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
7	with	_	with	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-03	(s(), o())	13	MOD_s	true
8	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
9	atrophied	_	atrophied	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
10	cheek	_	cheek	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	muscles	_	muscle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	down	_	down	RB	O	(d<root> / --LEX--)	$LEMMA$-03	()	0	ROOT	true
14	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
15	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	ordinal-entity	(mod())	17	MOD_mod	true
17	resort	_	resort	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
18	for	_	for	IN	O	_	thing	_	0	IGNORE	true
19	life	_	life	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@have-03, 16@@p@@ordinal-entity, 13@@d@@down-03, 19@@b@@life, 9@@s@@atrophied-01, 11@@d@@muscle, 6@@p@@_NAME_, 5@@s@@post-01, 2@@d@@horse, 17@@s@@resort-01, 3@@d@@i, 10@@p@@cheek]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
2	am	_	be	VBP	O	_	i	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
4	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	go	_	go	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-05	(o(s()))	0	ROOT	true
7	pick	_	pick	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	6	APP_o	true
8	up	_	up	RP	O	_	thing	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	afford	_	afford	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[13@@s@@afford-01, 6@@c@@go-05, 7@@s@@pick-up-02, 3@@explicitanon0@@-, 1@@d@@i, 10@@d@@horse, 12@@explicitanon0@@-]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	difference	_	difference	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	differ-02	(s(), o())	0	ROOT	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	noticed	_	notice	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
6	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
7	that	_	that	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	name	_	0	IGNORE	true
9	EPM	_name_	EPM	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	horses	_	horse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
11	seemed	_	seem	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_o	true
14	worse	_	worse	RBR	O	(d<root> / --LEX--)	$LEMMA$n-01	()	11	APP_s	true
15	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	smaller	_	small	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	small	(mod())	18	MOD_mod	true
18	tracks	_	track	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	after	_	after	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[19@@n@@after, 17@@f2@@small, 17@@m@@more, 2@@p@@only, 13@@s@@do-02, 9@@p@@_NAME_, 14@@d@@worsen-01, 4@@d@@we, 3@@s@@differ-02, 18@@b@@track, 11@@s@@seem-01, 10@@d@@horse, 5@@s@@notice-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
3	rate	_	rate	VB	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_op3	true
4	Fran	_name_	Fran	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	pcs	_	pcs	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	an	_	an	DT	O	_	1	_	0	IGNORE	true
7	A+	a+	a+	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
9	the	_	the	DT	O	_	company	_	0	IGNORE	true
10	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	lower	_	low	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	low-04	(s())	8	APP_s	true
13	than	_	than	IN	O	_	that	_	0	IGNORE	true
14	everyone	_	everyone	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	else,	_	else,	NNP	O	_	multi-sentence	_	0	IGNORE	true
16	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
17	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op1	true
18	my	_	my	PRP$	O	_	product	_	0	IGNORE	true
19	computer	_	computer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	back	_	back	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
23	day,	_	day,	NN	O	_	and	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
25	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
26	professionalism	_	professionalism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_dom	true
27	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	showed	_	show	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
29	was	_	be	VBD	O	_	person	_	0	IGNORE	true
30	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	24	APP_op2	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@a@@and, 3@@s@@rate-01, 22@@p@@next, 5@@d@@pcs, 1@@d@@i, 14@@p@@everyone, 12@@m@@more, 20@@p@@back, 28@@s@@show-01, 4@@explicitanon0@@_NAME_, 8@@s@@cause-01, 27@@d@@he, 30@@r@@great, 12@@b@@low-04, 19@@d@@computer, 26@@d@@professionalism, 17@@s@@get-01, 10@@d@@price-01]
sentence=1	I've	i've	I've	NNP	O	_	multi-sentence	_	0	IGNORE	true
2	referred	_	refer	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
3	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
5	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
6	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
9	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op2	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	same	_	same	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
13	way!	_	way!	NNS	O	_	thing	_	0	IGNORE	true
14	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[8@@d@@they, 3@@d@@everyone, 6@@b@@here, 10@@s@@feel-01, 12@@d@@same-01, 7@@a@@and, 5@@s@@know-02, 2@@s@@refer-01, 9@@p@@all]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	have	_	have	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	9	APP_op1	true
4	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	3	_	3	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	6	APP_op1	true
6	to	_	to	TO	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	year	(op2(), op1(), mod())	9	MOD_mod	true
7	4	_	4	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	24	MOD_mod	true
8	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
10	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	15	MOD_mod	true
11	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
13	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	served	_	serve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
15	seems	_	seem	VBZ	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	9	APP_op2	true
16	warmed	_	warm	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	15	APP_s	true
17	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	cooked	_	cooked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
20	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	19	MOD_mod	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	order	_	order	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	APP_op1	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	(d<root> / --LEX--)	and	()	9	APP_op3	true

nodealignment=[12@@d@@food, 19@@s@@cooked-01, 1@@d@@i, 13@@d@@they, 21@@d@@you, 16@@s@@warm-up-02, 4@@d@@here, 10@@r@@rate-entity-91, 22@@s@@order-01, 6@@b2@@year, 3@@s@@be-located-at-91, 5@@t@@temporal-quantity, 20@@w@@after, 14@@s@@serve-01, 5@@explicitanon0@@_NUMBER_, 18@@explicitanon0@@-, 15@@f@@seem-01, 7@@p@@_NUMBER_, 9@@a@@and, 24@@d@@and]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	15	APP_op1	true
3	less	_	less	JJR	O	_	$LEMMA$-than	_	0	IGNORE	true
4	than	_	than	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	less-$LEMMA$	(op1(), mod())	15	MOD_mod	true
5	half	_	half	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	15	MOD_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	6	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	cheapest	_	cheap	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	cheap-02	(s())	12	MOD_s	true
12	quote	_	quote	UH	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	APP_s	true
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
14	got,	_	got,	VBP	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
16	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_dom	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	top	_	top	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	notch	_	notch	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	15	APP_op2	true
21	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[8@@c@@price-01, 12@@s@@quote-01, 17@@d@@work-01, 4@@s@@less-than, 8@@t@@thing, 15@@a@@and, 1@@d@@He, 11@@m@@most, 19@@p@@top, 11@@b2@@cheap-02, 2@@s@@be-located-at-91, 13@@d@@we, 6@@s@@include-91, 20@@r@@notch]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	car	_	car	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_o	true
4	number	_	number	NN	O	_	$LEMMA$	_	0	IGNORE	true
5	3	_	3	CD	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	_NUMBER_	(mod())	3	MOD_mod	true
6	we've	_	we've	NN	O	_	and	_	0	IGNORE	true
7	purchased	_	purchase	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@_NUMBER_, 3@@r@@car, 9@@d@@they, 5@@o@@ordinal-entity, 1@@d@@this, 7@@s@@purchase-01]
sentence=1	The	the	the	DT	O	_	-	_	0	IGNORE	true
2	salespeople	_	salesperson	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	are	_	be	VBP	O	_	-	_	0	IGNORE	true
4	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	11	MOD_mod	true
5	available,	_	available,	NNPS	O	_	-	_	0	IGNORE	true
6	the	_	the	DT	O	_	-	_	0	IGNORE	true
7	lines	_	line	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	are	_	be	VBP	O	_	-	_	0	IGNORE	true
9	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	long,	_	long,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_s	true
16	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
17	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	sale	_	sale	NN	O	(d<root> / --LEX--)	sell-01	()	16	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@p@@all, 12@@a@@and, 11@@s@@-, 4@@n@@ever, 16@@s@@want-01, 19@@d@@sell-01, 7@@b@@line, 2@@d@@salesperson, 10@@s@@too, 9@@n@@always, 15@@d@@person]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	location	_	location	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	has	_	have	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-03	(o(s()))	1	APP_s	true
5	the	_	the	DT	O	_	-	_	0	IGNORE	true
6	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-02	(s())	8	MOD_s	true
7	weekend	_	weekend	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	staff	_	staff	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
9	I've	i've	i've	NN	O	_	-	_	0	IGNORE	true
10	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	EVER	ever	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@m@@most, 7@@n@@weekend, 4@@c@@have-03, 3@@d@@location, 6@@b2@@bad-02, 11@@n@@ever, 2@@p@@this, 1@@s@@contrast-01, 8@@s@@staff-01, 10@@s@@see-01]
sentence=1	It's	it's	it's	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	thing	_	0	IGNORE	true
3	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	4	MOD_s	true
4	meal	_	meal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	for	_	for	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	money	_	money	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
10	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	metro	_	metro	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	10	MOD_mod	true
15	Atlanta	_name_	Atlanta	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	14	APP_poss	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[15@@n@@_NAME_, 7@@o@@money, 14@@h@@metro, 3@@m@@most, 12@@p@@all, 8@@d@@you, 3@@b2@@good-02, 15@@c@@city, 4@@d@@meal, 10@@s@@find-01]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	say	_	say	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_s	true
5	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
6	that	_	that	IN	O	_	and	_	0	IGNORE	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	am	_	be	VBP	O	_	say-01	_	0	IGNORE	true
9	glad	_	glad	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	4	APP_o	true
10	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
11	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	APP_o	true
12	in	_	in	RP	O	_	i	_	0	IGNORE	true
13	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[4@@c@@say-01, 3@@s@@possible-01, 9@@c@@glad-02, 2@@d@@i, 1@@p@@all, 11@@s@@go-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
5	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	that	_	that	IN	O	_	have-03	_	0	IGNORE	true
7	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	21	APP_op1	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	type	_	type	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	repair	_	repair	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	14	MOD_mod	true
17	I	i	I	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$REPL$	(s(), o())	3	MOD_o	true
18	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
19	(a	_	(a	CD	O	_	$LEMMA$	_	0	IGNORE	true
20	reball)	_	reball)	VB	O	_	mean-01	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	9	APP_s	true
22	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
23	me	_	I	PRP	O	_	i	_	0	IGNORE	true
24	the	_	the	DT	O	_	more	_	0	IGNORE	true
25	longest	_	long	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	long-03	(s())	26	MOD_s	true
26	warranty	_	warranty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_o	true
28	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	lower	_	low	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	low-04	(s())	31	MOD_s	true
31	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op2	true
32	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[25@@b2@@long-03, 21@@a@@and, 11@@s@@do-02, 31@@d@@price-01, 30@@m@@more, 25@@m@@most, 28@@p@@even, 16@@p@@repair-01, 1@@d@@i, 3@@s@@like-01, 9@@s@@possible-01, 26@@d@@warranty, 13@@s@@specific-02, 14@@d@@type, 30@@b@@low-04, 18@@s@@want-01, 7@@d@@he, 2@@p@@just, 17@@s@@i, 27@@a@@and, 22@@s@@give-01]
sentence=1	Someone	someone	Someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
2	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
7	they	_	they	PRP	O	_	person	_	0	IGNORE	true
8	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	6	APP_o	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_s	true
10	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
12	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
13	to	_	to	TO	O	_	i	_	0	IGNORE	true
14	charge	_	charge	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op1	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	more	_	more	RBR	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
18	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
19	me	_	I	PRP	O	_	and	_	0	IGNORE	true
20	less	_	less	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	warranty	_	warranty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@a@@and, 14@@s@@charge-01, 2@@p@@else, 6@@s@@say-01, 9@@s@@do-02, 11@@s@@contrast-01, 18@@s@@give-01, 10@@d@@it, 8@@s@@possible-01, 3@@d@@i, 1@@d@@Someone, 16@@d@@more, 20@@s@@less, 12@@s@@want-01, 4@@s@@find-01, 21@@d@@warranty]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
5	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	be	_	be	VB	O	_	deserve-01	_	0	IGNORE	true
7	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	4	APP_s	true
8	than	_	than	IN	O	_	1	_	0	IGNORE	true
9	the	_	the	DT	O	_	and	_	0	IGNORE	true
10	pair	_	pair	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	I	i	I	PRP	O	_	1	_	0	IGNORE	true
12	have	_	have	VBP	O	_	1	_	0	IGNORE	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
15	this_past_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
16	!	_	!	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	expressive	(mod())	2	MOD_mod	true

nodealignment=[7@@m@@more, 5@@p@@even, 4@@s@@possible-01, 3@@d@@they, 16@@explicitanon0@@expressive, 1@@d@@i, 15@@n@@_NAME_, 2@@s@@think-01, 7@@b@@good-02, 10@@p@@pair, 14@@s@@use-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	more	_	0	IGNORE	true
5	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	6	MOD_s	true
6	tea	_	tea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_o2	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	had,	_	had,	VBP	O	_	and	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
11	at	_	at	RB	O	_	resemble-01	_	0	IGNORE	true
12	all	_	all	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	at-$LEMMA$	(mod())	13	MOD_mod	true
13	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	6	MOD_s	true
14	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
15	junk	_	junk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	get	_	get	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	15	MOD_o	true
18	at	_	at	IN	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	-	_	0	IGNORE	true
20	grocery	_	grocery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	stores,	_	stores,	NNS	O	_	multi-sentence	_	0	IGNORE	true
22	I	i	I	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$REPL$	(mod())	13	MOD_mod	true
23	stock	_	stock	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-up-02	(s())	34	MOD_s	true
24	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
25	when	_	when	WRB	O	_	he	_	0	IGNORE	true
26	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
27	there	_	there	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	23	MOD_o	true
29	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	3	MOD_o	true
31	closed	_	close	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_s	true
32	in	_	in	IN	O	_	after	_	0	IGNORE	true
33	the_winter	_name_	winter	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	31	MOD_mod	true
34	.	_	.	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	multi-sentence	(mod())	3	MOD_mod	true

nodealignment=[22@@explicitanon0@@i, 7@@d@@i, 12@@s@@at-all, 1@@d@@They, 27@@n@@there, 16@@d@@you, 13@@s@@resemble-01, 30@@s@@be-located-at-91, 34@@p@@multi-sentence, 23@@s@@stock-up-02, 15@@d@@junk, 3@@s@@have-03, 33@@n@@_NAME_, 2@@p@@also, 5@@m@@most, 8@@n@@ever, 17@@b@@get-01, 6@@d@@tea, 26@@n@@ever, 31@@d@@close-01, 28@@s@@cause-01, 5@@b2@@good-02, 20@@p@@grocery, 10@@explicitanon0@@-]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	visited	_	visit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
3	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
4	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	Chicago	_name_	Chicago	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	lighting	_	lighting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	showroom	_	showroom	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	2	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	I	i	I	PRP	O	_	1	_	0	IGNORE	true
11	have	_	have	VBP	O	(d<root> / --LEX--)	obligate-01	()	8	APP_op2	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
15	WOW!	_name_	wow!	ADD	O	_	i	_	0	IGNORE	true
16	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[11@@d@@obligate-01, 3@@d@@they, 13@@s@@say-01, 5@@c@@city, 7@@m@@showroom, 6@@p@@lighting, 2@@s@@visit-01, 9@@p@@all, 4@@p@@huge, 8@@a@@and, 5@@n@@_NAME_, 1@@d@@i]
sentence=1	Everything	everything	Everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	ordered	_	order	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
4	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
5	prepared	_	prepared	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_op1	true
6	to	_	to	IN	O	_	thing	_	0	IGNORE	true
7	perfection,	_	perfection,	CD	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	presented	_	present	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op2	true
11	perfectly	_	perfectly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	perfect-02	(s())	10	MOD_s	true
12	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[2@@d@@we, 10@@s@@present-01, 11@@s@@perfect-02, 5@@s@@prepared-02, 8@@a@@and, 3@@s@@order-01, 1@@d@@Everything]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	asparagus,	_	asparagus,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
3	seared	_	sear	VBD	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
4	tuna,	_	tuna,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
6	lobster	_	lobster	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	tail	_	tail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
8	were	_	be	VBD	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	most	_	0	IGNORE	true
10	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	0	ROOT	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_o	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@tail, 3@@d@@sear, 12@@n@@ever, 11@@d@@we, 10@@m@@most, 10@@b2@@good-02, 5@@a@@and, 6@@p@@lobster, 13@@s@@have-03]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	the	_	the	DT	O	_	$LEMMA$n	_	0	IGNORE	true
3	desserts	_	dessert	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
4	came,	_	came,	NNP	O	_	then	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	were	_	be	VBD	O	_	concern-02	_	0	IGNORE	true
8	hands	_	hand	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	down	_	down	RP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	12	MOD_s	true
12	dessert	_	dessert	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	12	MOD_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@a@@and, 15@@s@@have-03, 9@@p@@down, 13@@d@@we, 3@@d@@dessert, 12@@d@@dessert, 8@@p@@hand, 14@@n@@ever, 11@@b2@@good-02, 1@@n@@then, 11@@m@@most]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	6	MOD_s	true
5	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	have	_	have	VBP	O	_	thing	_	0	IGNORE	true
9	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	MOD_o	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@b2@@good-02, 9@@n@@ever, 6@@d@@food, 4@@m@@most, 5@@c@@country, 10@@s@@have-03, 7@@d@@i, 5@@n@@_NAME_]
sentence=1	James_Bateman	_name_	Bateman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
2	came	_	come	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	6	APP_op1	true
3	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	2	APP_o	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
7	fixed	_	fix	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	APP_op2	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	7	MOD_s	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
12	efficiently	_	efficiently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	efficient-01	(s())	7	MOD_s	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@d@@i, 2@@g@@come-01, 3@@n@@day, 11@@a@@and, 9@@d@@problem, 5@@s@@call-02, 6@@a@@and, 10@@s@@quick-02, 1@@p@@person, 1@@n@@_NAME_, 12@@s@@efficient-01, 7@@s@@fix-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	preferred	_	prefer	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	more	_	0	IGNORE	true
5	one-on-one	_	one-on-one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	service	_	service	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	to	_	to	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	experiences	_	experience	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
11	I've	i've	I've	VBG	O	_	person	_	0	IGNORE	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_s	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	bigger	_	big	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	big	(mod())	16	MOD_mod	true
15	offices	_	office	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
17	firms	_	firm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
18	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[2@@s@@much, 6@@d@@service, 17@@d@@firm, 15@@d@@office, 3@@b@@prefer-01, 1@@d@@i, 7@@b@@here, 10@@d@@experience, 16@@a@@and, 5@@p@@_NAME_, 12@@s@@have-03, 14@@f2@@big, 14@@m@@more]
sentence=1	The	the	the	DT	O	_	multi-sentence	_	0	IGNORE	true
2	pizza	_	pizza	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_dom	true
3	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
4	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	9	MOD_mod	true
5	pretty	_	pretty	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
6	good,	_	good,	NNS	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
8	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
9	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	18	MOD_s	true
10	one	_	one	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	28	APP_o	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
13	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(s(), o())	28	MOD_o	true
14	on	_	on	IN	O	_	thing	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	Friday	_name_	Friday	NNP	O	(d<root> / date-entity  :weekday (t / --LEX--)  :time-of (c<mod>))	$REPL$	(mod())	12	MOD_mod	true
17	night	_name_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_s	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
22	to	_	to	TO	O	_	and	_	0	IGNORE	true
23	be	_	be	VB	O	_	and	_	0	IGNORE	true
24	cooked	_	cook	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
25	a	_	a	DT	O	_	more	_	0	IGNORE	true
26	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
27	more,	_	more,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
28	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
31	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@we, 26@@s@@little, 21@@s@@need-01, 16@@d@@date-entity, 24@@d@@cook-01, 5@@s@@pretty, 12@@s@@get-01, 10@@r@@one, 32@@s@@good-02, 9@@s@@bad-07, 16@@t@@_name_, 4@@p@@usual, 20@@p@@just, 28@@s@@contrast-01, 31@@p@@still, 18@@a@@and, 13@@s@@be-temporally-at-91, 17@@d@@date-entity, 8@@p@@only, 17@@m@@night, 2@@d@@pizza]
sentence=1	Their	their	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_poss	true
2	BBQ	bbq	BBQ	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	chicken	_	chicken	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	pizza	_	pizza	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_s	true
5	is	_	be	VBZ	O	_	endanger-01	_	0	IGNORE	true
6	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
7	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	10	MOD_s	true
10	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
12	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
13	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_o	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@b@@good-02, 14@@s@@have-03, 3@@p@@chicken, 4@@m@@pizza, 10@@d@@one, 11@@d@@i, 9@@m@@more, 13@@n@@ever, 7@@s@@include-91, 1@@d@@they, 2@@p@@BBQ]
sentence=1	IT	it	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
2	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
3	NOT	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
4	A	a	a	DT	O	_	person	_	0	IGNORE	true
5	HIGH	high	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	END	end	end	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	STEAK	steak	steak	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	HOUSE,	house,	house,	XX	O	_	and	_	0	IGNORE	true
9	MORE	more	MORE	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	OF	of	of	IN	O	_	include-91	_	0	IGNORE	true
11	THE	the	the	DT	O	_	thing	_	0	IGNORE	true
12	CUISINE	cuisine	CUISINE	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
13	BRETT	brett	BRETT	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
14	ENJOYS	enjoys	enjoy	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
15	IN	in	in	IN	O	_	i	_	0	IGNORE	true
16	MISSISSIPPI	_name_	MISSISSIPPI	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@s@@enjoy-01, 13@@p@@person, 3@@explicitanon0@@-, 16@@s@@state, 1@@d@@it, 7@@r@@steak, 5@@s@@high-02, 9@@explicitanon0@@MORE, 6@@p@@end, 13@@n@@_NAME_, 16@@n2@@_NAME_, 12@@p@@CUISINE]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
2	interviewed	_	interview	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_op1	true
3	me,	_	me,	NN	O	_	and	_	15	IGNORE	true
4	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op2	true
5	me	_	I	PRP	O	_	and	_	0	IGNORE	true
6	tests	_	test	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	software	_	software	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	included	_	include	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
14	resume,	_	resume,	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
16	placed	_	place	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_op3	true
17	me	_	I	PRP	O	_	i	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	position	_	position	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_o	true
21	that	_	that	WDT	O	_	name	_	0	IGNORE	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	kept	_	keep	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	for	_	for	IN	O	_	and	_	0	IGNORE	true
25	several_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@include-01, 15@@a@@and, 9@@l@@software, 2@@s@@interview-01, 23@@s@@keep-01, 20@@d@@position-02, 25@@b@@_NAME_, 6@@d@@test-01, 1@@d@@They, 4@@s@@give-01, 16@@s@@place-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	helpful	_	helpful	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-04	(o(s()))	13	APP_op1	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	finding	_	find	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	MOD_s	true
10	dog	_	dog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	for	_	for	IN	O	_	thing	_	0	IGNORE	true
12	me	_	I	PRP	O	_	i	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	care	_	care	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	20	APP_dom	true
16	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
17	pup	_	pup	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	outstanding	_	outstanding	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_op2	true
21	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@d@@care-03, 18@@s@@receive-01, 20@@r@@outstanding, 13@@a@@and, 17@@d@@pup, 10@@d@@dog, 9@@s@@right-03, 4@@s@@very, 7@@s@@find-01, 5@@o@@helpful-04, 2@@d@@staff]
sentence=1	Dr.	dr.	Dr.	NNP	O	_	_NAME_	_	0	IGNORE	true
2	Chao	_name_	Chao	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	i	_	0	IGNORE	true
6	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	7	MOD_s	true
7	dentist	_	dentist	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
9	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_o	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@you, 11@@s@@have-03, 7@@r@@dentist, 6@@b2@@good-02, 6@@m@@most, 8@@d@@i, 2@@n@@_NAME_, 10@@n@@ever]
sentence=1	A	a	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
2	lack	_	lack	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	organisation,	_	organisation,	NNS	O	_	and	_	0	IGNORE	true
5	coupled	_	couple	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	distain	_	distain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	for	_	for	IN	O	_	have-03	_	0	IGNORE	true
10	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
11	customers,	_	customers,	NNS	O	_	i	_	0	IGNORE	true
12	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
13	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_dom	true
14	the	_	the	DT	O	_	-	_	0	IGNORE	true
15	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	17	MOD_s	true
16	rental	_	rental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	rent-02	(mod())	17	MOD_mod	true
17	agency	_	agency	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	12	APP_o	true
18	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	20	APP_s	true
19	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
20	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_o	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@p@@rent-02, 15@@b2@@bad-07, 18@@d@@i, 5@@s@@couple-01, 17@@r@@agency, 2@@d@@lack-01, 20@@s@@use-01, 8@@d@@distain, 15@@m@@most, 12@@s@@make-02, 13@@d@@this]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
3	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
4	initial	_	initial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	selection	_	selection	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$	()	6	APP_s	true
6	satisfactory	_	satisfactory	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	APP_o	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
9	wine	_	wine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	flight	_	flight	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	fly-01	(s())	16	APP_s	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	chose	_	choose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
13	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	7	APP_o	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	poorly	_	poorly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	poor	(mod())	16	MOD_mod	true
16	composed	_	compose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@t@@thing, 9@@d@@wine, 12@@s@@choose-01, 11@@d@@we, 10@@s@@fly-01, 2@@s@@find-01, 1@@d@@i, 7@@s@@contrast-01, 4@@p@@initial, 6@@s@@satisfactory-02, 16@@s@@compose-01, 13@@s@@thing, 15@@t@@poor, 5@@d@@selection]
sentence=1	Easiest	easiest	easy	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	easy-05	(s())	2	MOD_s	true
2	Time	time	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_o	true
6	purchasing	_	purchase	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[3@@d@@i, 1@@m@@most, 8@@d@@car, 4@@n@@ever, 6@@t@@purchase-01, 2@@d@@time, 5@@s@@have-03, 1@@b2@@easy-05]
sentence=1	Excellent	excellent	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
2	service,	_	service,	NNP	O	_	and	_	0	IGNORE	true
3	Not	not	not	RB	O	_	-	_	0	IGNORE	true
4	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
5	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
12	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
13	win	_	win	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
14	in	_	in	IN	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	after	(mod())	16	MOD_mod	true
15	48_hours	_name_	hour	NNS	O	(m<root> / --LEX--  :unit-of (a<mod>))	dollar	(mod())	13	MOD_mod	true
16	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	sales	_	sale	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	sell-01	(mod())	19	MOD_mod	true
19	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-11	(s(), o())	16	APP_o	true
22	me	_	I	PRP	O	_	i	_	0	IGNORE	true
23	out	_	out	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
24	to	_	to	IN	O	_	and	_	0	IGNORE	true
25	lunch	_	lunch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@p@@sell-01, 14@@n@@now, 15@@m@@dollar, 16@@s@@contrast-01, 20@@p@@also, 14@@b@@after, 11@@d@@i, 23@@a@@out, 7@@s@@get-01, 6@@d@@they, 21@@s@@take-out-11, 19@@d@@man, 10@@d@@car, 1@@s@@excellent-02, 9@@p@@exact, 12@@s@@want-01, 25@@d@@lunch, 13@@s@@win-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	4	MOD_mod	true
4	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	12	APP_op1	true
5	to	_	to	TO	O	(o<root> / --LEX--  :op1 (b<op1>))	-	(op1())	0	ROOT	true
6	wait	_	wait	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	6	MOD_s	true
8	for	_	for	IN	O	_	and	_	0	IGNORE	true
9	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	5	MOD_mod	true
10	yearly	_	yearly	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	year	(mod())	11	MOD_mod	true
11	inspection	_	inspection	NN	O	(d<root> / --LEX--)	inspect-01	()	6	APP_o	true
12	sticker...and	_	sticker...and	NFP	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
13	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	14	MOD_mod	true
14	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_op1	true
15	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
16	usual	_	usual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	excuses	_	excuse	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
18	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	shops	_	shop	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	17	MOD_o	true
22	me..."the	_	me..."the	JJ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	_NAME_	(mod())	17	MOD_mod	true
23	inspection	_	inspection	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	inspect-01	(s())	24	MOD_s	true
24	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o2	true
25	isn't	_	isn't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
26	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
27	today"....for	_	today"....for	NNP	O	_	person	_	0	IGNORE	true
28	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	exemplify-01	(s())	14	MOD_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@wait-01, 13@@n@@ever, 9@@explicitanon0@@1, 5@@o@@-, 12@@w@@sticker...and, 22@@explicitanon0@@_NAME_, 2@@p@@also, 10@@d@@year, 23@@s@@inspect-01, 28@@s@@exemplify-01, 19@@d@@shop, 1@@d@@i, 18@@p@@other, 3@@n@@ever, 24@@d@@guy, 14@@s@@get-01, 10@@t@@temporal-quantity, 10@@r@@rate-entity-91, 11@@d@@inspect-01, 26@@b@@here, 16@@p@@usual, 7@@s@@long-03, 25@@explicitanon0@@-, 4@@o@@obligate-01, 20@@n@@always, 17@@d@@excuse-01, 21@@b@@give-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	3	MOD_s	true
3	value	_	value	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
4	I've	i've	i've	NN	O	_	$LEMMA$	_	0	IGNORE	true
5	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	from	_	from	IN	O	_	and	_	0	IGNORE	true
7	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
8	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	restaurant	_	restaurant	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[5@@s@@find-01, 2@@b2@@good-02, 3@@d@@value-01, 8@@c@@country, 9@@s@@restaurant, 8@@n@@_NAME_, 2@@m@@most]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
3	reccomend	_	reccomend	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
4	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	go	_	go	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-05	(o(s()))	3	APP_o2	true
7	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
8	Jana_Kueck	_name_	Kueck	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
10	Robin_Talley	_name_	Talley	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_op2	true
11	to	_	to	TO	O	_	and	_	0	IGNORE	true
12	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	6	MOD_mod	true
13	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	procedures	_	procedure	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	20	MOD_s	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	offer	_	offer	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
21	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[13@@p@@all, 10@@p@@person, 10@@n@@_NAME_, 9@@a@@and, 16@@d@@procedure, 3@@t@@reccomend-01, 12@@s@@see-01, 7@@s@@see-01, 20@@s@@offer-01, 8@@p@@person, 4@@d@@anyone, 8@@n@@_NAME_, 6@@c@@go-05, 18@@s@@obligate-01, 15@@explicitanon0@@many, 1@@d@@i]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
3	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	thank	_	thank	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_o	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	for	_	for	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	roofing	_	roofing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
13	on	_	on	IN	O	_	thing	_	0	IGNORE	true
14	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_poss	true
15	home	_	home	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	12	MOD_mod	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@you, 12@@s@@do-02, 3@@c@@like-02, 5@@b@@thank-01, 9@@p@@roofing-01, 15@@w@@home, 14@@d@@our, 10@@d@@job, 1@@d@@We]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	liked	_	like	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	have-manner-91	_	0	IGNORE	true
5	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
7	Ray	_name_	Ray	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	checked	_	check	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
9	on	_	on	IN	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	everyday	_	everyday	NN	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	1	(mod())	8	MOD_mod	true
13	.	_	.	.	O	_	day	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 1@@d@@We, 12@@d@@1, 2@@p@@also, 12@@r@@rate-entity-91, 7@@p@@person, 3@@s@@like-01, 12@@t@@temporal-quantity, 11@@d@@job, 8@@s@@check-01]
sentence=1	Their	their	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
2	Food	_name_	Food	NNP	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_s	true
3	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
4	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	0	ROOT	true
5	then	_	then	RB	O	_	say-01	_	0	IGNORE	true
6	anything	_	anything	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	had	_	have	VBD	O	_	-	_	0	IGNORE	true
9	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	tasted	_	taste	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@n@@ever, 2@@m@@Food, 7@@d@@i, 4@@m@@more, 6@@p@@anything, 4@@b@@good-02, 1@@d@@they, 10@@s@@taste-01]
sentence=1	Even	even	even	RB	O	_	contrast-01	_	0	IGNORE	true
2	though	_	though	IN	O	_	have-concession-91	_	0	IGNORE	true
3	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	charge	_	charge	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	APP_s	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	days	_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	booked	_	book	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	won't	_	won't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
13	use,	_	use,	NN	O	_	-	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
16	worth	_	worth	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	11	APP_o	true
17	the	_	the	DT	O	_	thing	_	0	IGNORE	true
18	get	_	get	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	16	APP_s	true
19	the	_	the	DT	O	_	expressive	_	0	IGNORE	true
20	hell	_	hell	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	out	_	out	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-06	(s())	18	APP_s	true
22	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	crap	_	crap	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	25	MOD_mod	true
25	hole	_	hole	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[24@@p@@crap-01, 20@@p@@hell, 4@@p@@still, 21@@s@@out-06, 25@@d@@hole, 5@@b@@charge-01, 11@@s@@contrast-01, 12@@explicitanon0@@-, 6@@d@@you, 16@@s@@worth-02, 10@@s@@book-01, 8@@d@@day, 3@@d@@they, 23@@p@@this, 18@@s@@get-05]
sentence=1	Auto_Towing	_name_	Towing	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	8	MOD_s	true
7	towing	_	towing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	services	_	service	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
11	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@s@@towing-01, 6@@b2@@good-02, 1@@d@@_NAME_, 4@@s@@include-91, 8@@d@@service, 11@@s@@use-01, 9@@d@@i, 6@@m@@most]
sentence=1	The	the	the	DT	O	_	have-frequency-91	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	11	MOD_mod	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	used	_	use	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
6	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
8	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	time	_	time	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	on-$LEMMA$	(mod())	8	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	towed	_	tow	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	APP_op2	true
13	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	destination	_	destination	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@t@@use-01, 20@@s@@need-01, 11@@a@@and, 2@@explicitanon0@@1, 13@@d@@car, 6@@d@@they, 18@@d@@destination, 10@@t@@on-time, 8@@s@@arrive-01, 2@@o@@ordinal-entity, 7@@d@@they, 12@@b@@tow-01, 4@@d@@i]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	auto	_	auto	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	mechanics	_	mechanic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
4	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
5	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
6	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	Auto_Towing	_name_	Towing	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	13	APP_op1	true
12	informative	_	informative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	11	APP_op2	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	answered	_	answer	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	question	_	question	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	true
18	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@informative, 5@@s@@work-01, 2@@p@@auto, 7@@c@@company, 10@@s@@friendly-01, 11@@a@@and, 14@@s@@answer-01, 13@@a@@and, 17@@d@@i, 7@@n@@_NAME_, 15@@p@@any, 16@@s@@question-01, 3@@d@@mechanic, 9@@s@@very]
sentence=1	Not	not	not	RB	O	_	-	_	0	IGNORE	true
2	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
6	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	cut	_	cut	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_s	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	my	_	my	PRP$	O	_	include-91	_	0	IGNORE	true
10	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
12	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	11	APP_op2	true
13	comment	_	comment	VBP	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	8	APP_o	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
16	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	13	MOD_mod	true
18	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$REPL$	(mod())	8	MOD_mod	true
20	leave...saying	_	leave...saye	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
21	it's	_	it's	PRP	O	_	person	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	24	MOD_s	true
24	look	_	look	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_s	true
25	I've	i've	i've	JJ	O	_	-	_	0	IGNORE	true
26	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	24	MOD_s	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@hair, 19@@explicitanon0@@i, 17@@r@@rate-entity-91, 26@@n@@ever, 10@@f@@wife, 23@@m@@most, 10@@h@@have-rel-role-91, 12@@h@@have-rel-role-91, 7@@s@@cut-02, 13@@g@@comment-01, 4@@d@@it, 11@@a@@and, 24@@d@@look-02, 8@@s@@contrast-01, 23@@b2@@good-02, 6@@s@@good-02, 12@@p@@person, 10@@p@@person, 12@@f@@friend, 20@@s@@leave...saye-01, 27@@s@@have-03]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	incredibly	_	incredibly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	incredible	(mod())	4	MOD_mod	true
4	informative	_	informative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cooperate-01	(s(), o())	0	ROOT	true
5	about	_	about	IN	O	_	thing	_	0	IGNORE	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	options	_	option	NNS	O	(d<root> / --LEX--)	opt-01	()	4	APP_o	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_o2	true
9	had,	_	had,	VBP	O	_	and	_	0	IGNORE	true
10	giving	_	give	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	opinions	_	opinion	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	opine-01	(s())	10	APP_o	true
13	on	_	on	IN	O	_	i	_	0	IGNORE	true
14	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	15	MOD_s	true
15	treatments	_	treatment	NNS	O	(d<root> / --LEX--)	treat-03	()	12	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	choose	_	choose	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
19	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[4@@s@@cooperate-01, 10@@b@@give-01, 8@@d@@i, 12@@s@@opine-01, 7@@d@@opt-01, 1@@d@@He, 3@@s@@incredible, 14@@s@@differ-02, 15@@d@@treat-03, 17@@s@@choose-01]
sentence=1	First	_name_	first	JJ	O	(o<root> / ordinal-entity  :value (explicitanon0 / --LEX--))	1	()	2	APP_op1	true
2	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
3	Last	last	last	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
4	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
5	we'll	_	we'll	NN	O	_	mean-01	_	0	IGNORE	true
6	eat	_	eat	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
7	ther	_	ther	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	e	_	e	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@1, 2@@d@@and, 3@@d@@last, 6@@d@@eat-01, 1@@o@@ordinal-entity]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	kept	_	keep	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
4	trying	_	try	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_o	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	liked	_	like	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@d@@We, 4@@c@@try-01, 9@@s@@like-01, 2@@p@@both, 7@@d@@something, 6@@s@@find-01, 3@@c@@keep-02]
sentence=1	The	the	the	DT	O	_	include-91	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
6	edible	_	edible	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	33	MOD_s	true
9	potato	_	potato	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	wedges,	_	wedges,	.	O	_	and	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	33	APP_snt1	true
12	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	13	MOD_mod	true
13	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-07	(s(), o())	14	APP_op1	true
14	up,	_	up,	NNS	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	33	APP_snt2	true
15	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	kept	_	keep	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	13	APP_o	true
17	trying	_	try	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	true
18	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	found	_	find	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op2	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	fried	_	fried	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
23	wantons	_	wanton	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
24	to	_	to	TO	O	_	and	_	0	IGNORE	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	OK	ok	ok	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$ay-04	(s())	20	APP_s	true
27	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
28	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
29	Mongolian	_name_	mongolian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	bowl	_	bowl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_dom	true
31	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
32	awful	_	awful	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	33	APP_snt3	true
33	.	_	.	.	O	(m<root> / --LEX--  :snt2 (s<snt2>)  :snt3 (c2<snt3>)  :snt1 (c<snt1>))	multi-sentence	(snt2(), snt1(), snt3())	0	ROOT	true

nodealignment=[8@@s@@and, 30@@d@@bowl, 29@@c@@country, 9@@d@@potato, 14@@a@@and, 5@@s@@find-01, 11@@d@@i, 20@@s@@find-01, 23@@d@@wanton, 2@@p@@only, 13@@s@@give-up-07, 29@@n@@_NAME_, 17@@s@@try-01, 33@@m@@multi-sentence, 15@@d@@he, 3@@d@@thing, 12@@p@@final, 22@@s@@fried-01, 6@@p@@edible, 26@@s@@okay-04, 16@@c@@keep-02, 32@@r@@awful, 4@@d@@i]
sentence=1	The	the	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	9	MOD_mod	true
2	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	support	_	support	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_dom	true
5	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	provide	_	provide	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	1	MOD_s	true
9	great!!	_	great!!	XX	O	(r<root> / --LEX--  :domain (q<dom>))	and	(dom())	0	ROOT	true
10	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[9@@r@@and, 5@@d@@they, 1@@p@@thing, 2@@p@@kind, 4@@d@@support-01, 8@@s@@simple-02, 6@@s@@provide-01]
sentence=1	Hands-down	hands-down	Hands-down	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	5	MOD_s	true
4	pasta	_	pasta	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
6	gnocchi	_	gnocchi	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
7	I've	i've	I've	VBG	O	_	thing	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	eaten	_	eat	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	(and	_	(and	.	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	5	APP_op3	true
11	I've	i've	I've	NNP	O	_	1	_	0	IGNORE	true
12	eaten	_	eat	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op1	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	lot)	_	lot)	NN	O	_	and	_	0	IGNORE	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@b2@@good-02, 10@@o@@(and, 8@@n@@ever, 4@@d@@pasta, 6@@d@@gnocchi, 5@@a@@and, 1@@p@@Hands-down, 9@@s@@eat-01, 12@@d@@eat-01, 3@@m@@most]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_o	true
2	have	_	have	VBP	O	_	person	_	0	IGNORE	true
3	been	_	be	VBN	O	_	person	_	0	IGNORE	true
4	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	5	MOD_mod	true
5	pleased	_	pleased	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	with	_	with	IN	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	signs	_	sign	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
10	pop-up	_	pop-up	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	banners	_	banner	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
12	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
14	supplied	_	supply	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_o	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	me	_	I	PRP	O	_	i	_	0	IGNORE	true
17	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	and	_	0	IGNORE	true
19	years_-_a_truly	_name_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	before	(s())	21	MOD_s	true
20	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	21	MOD_mod	true
21	class	_	class	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	family	_	family	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
24	run	_	run	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_o	true
25	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
26	Tina	_name_	Tina	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_s	true
28	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
29	husband	_	husband	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	30	MOD_s	true
30	Chris	_name_	Chris	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	27	APP_op2	true
31	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[26@@n@@_NAME_, 1@@d@@i, 10@@p@@pop-up, 22@@p@@family, 20@@o@@ordinal-entity, 30@@p@@person, 30@@n@@_NAME_, 14@@b@@supply-01, 9@@a@@and, 26@@p@@person, 21@@p@@class, 29@@b@@husband, 4@@s@@extreme, 5@@s@@pleased-01, 27@@a@@and, 29@@h@@have-rel-role-91, 24@@s@@run-01, 11@@d@@banner, 23@@d@@business, 20@@explicitanon0@@1, 19@@s@@before, 8@@d@@sign, 12@@d@@she]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	enough	_	enough	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	about	_	about	IN	O	_	thing	_	0	IGNORE	true
8	Karla	_name_	Karla	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	MOD_s	true
12	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
13	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
15	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_s	true
16	for	_	for	IN	O	_	or	_	0	IGNORE	true
17	me	_	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
19	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
20	dog	_	dog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	Gracee	_name_	Gracee	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@good-02, 12@@d@@thing, 2@@explicitanon0@@-, 3@@s@@say-01, 4@@explicitanon0@@enough, 21@@d@@Gracee, 1@@d@@i, 11@@s@@wonderful-03, 8@@p@@person, 8@@n@@_NAME_, 20@@d@@dog, 6@@d@@thing, 18@@a@@and, 9@@a@@and, 15@@s@@do-02]
sentence=1	Worst	worst	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	2	MOD_s	true
2	Service	service	service	NN	O	(d<root> / --LEX--)	serve-01	()	0	ROOT	true
3	I've	i've	i've	NN	O	_	-	_	0	IGNORE	true
4	Ever	ever	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	Experience	experience	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
6	d	_	d	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true

nodealignment=[2@@d@@serve-01, 5@@s@@experience-01, 6@@p@@d, 4@@n@@ever, 1@@m@@most, 1@@b2@@bad-07]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	atmosphere	_	atmosphere	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	alone	_	alone	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	deserves	_	deserve	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	4	_	4	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
6	stars	_	star	NNS	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	4	APP_o	true
7	but,	_	but,	RB	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	and	_	0	IGNORE	true
9	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	up	_	up	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	4	MOD_o	true
13	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
14	par	_	par	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	12	MOD_mod	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
17	price	_	price	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
18	tag	_	tag	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
20	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
21	reputation	_	reputation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	restaurant	_	restaurant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	carries	_	carry	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@par-01, 3@@p@@alone, 11@@explicitanon0@@-, 24@@s@@carry-01, 6@@d2@@star, 21@@d@@reputation, 12@@s@@up, 4@@s@@deserve-01, 9@@d@@food, 6@@m2@@monetary-quantity, 19@@a@@and, 2@@d@@atmosphere, 23@@d@@restaurant, 5@@explicitanon0@@_NUMBER_, 18@@d@@tag-01, 17@@p@@price-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	server	_	server	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	6	APP_dom	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_o	true
5	was	_	be	VBD	O	_	person	_	0	IGNORE	true
6	knowledgeable	_	knowledgeable	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	understand-01	(dom())	7	APP_s	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
11	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	12	MOD_mod	true
12	proper	_	proper	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	as	_	as	IN	O	_	equal	_	0	IGNORE	true
14	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	should	_	should	MD	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	recommend-01	(mod(), s())	12	MOD_mod	true
16	have	_	have	VB	O	_	thing	_	0	IGNORE	true
17	been,	_	been,	NNS	O	_	and	_	0	IGNORE	true
18	acting	_	act	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
19	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
20	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	18	APP_s	true
23	to	_	to	IN	O	_	and	_	0	IGNORE	true
24	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
25	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	22	APP_s	true
26	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	22	MOD_s	true
27	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	true
28	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
29	customers	_	customer	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	26	APP_o	true
30	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[10@@explicitanon0@@-, 18@@s@@act-01, 25@@h@@have-rel-role-91, 4@@s@@have-03, 25@@f@@friend, 3@@d@@we, 12@@d@@proper, 29@@f@@customer, 2@@p2@@person, 11@@s@@equal, 22@@s@@talk-01, 25@@p@@person, 2@@e2@@server, 29@@p@@person, 26@@s@@instead-of-91, 7@@s@@contrast-01, 15@@b@@recommend-01, 6@@r@@understand-01, 29@@h@@have-rel-role-91]
sentence=1	While	while	while	IN	O	_	contrast-01	_	0	IGNORE	true
2	it's	_	it's	PRP	O	_	contrast-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
4	cheap,	_	cheap,	NNP	O	_	contrast-01	_	0	IGNORE	true
5	Alto	alto	Alto	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	will	_	will	MD	O	_	have-concession-91	_	0	IGNORE	true
7	give	_	give	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
9	an	_	an	DT	O	_	thing	_	0	IGNORE	true
10	experience	_	experience	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	you'll	_	you'll	PRP	O	_	-	_	0	IGNORE	true
12	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	13	MOD_mod	true
13	forget	_	forget	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	.	_	.	.	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true

nodealignment=[8@@d@@you, 10@@d@@experience, 13@@s@@forget-01, 7@@b@@give-01, 5@@n@@_NAME_, 12@@n@@ever, 14@@explicitanon0@@-, 3@@explicitanon0@@-, 5@@p@@person]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	crew	_	crew	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
3	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	The_Creative_Workshop	_name_	Workshop	NNP	O	(n2<root> / --LEX--  :name-of (o / organization  :location-of (s<mod>)))	_NAME_	(mod())	2	MOD_mod	true
5	went	_	go	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
6	over	_	over	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	above	_	above	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	call	_	call	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
11	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	duty	_	duty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	MOD_s	true
21	drive	_	drive	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
22	anywhere	_	anywhere	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
23	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
24	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	25	MOD_mod	true
25	enjoy	_	enjoy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	owning	_	own	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
27	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@p@@over, 10@@s@@call-01, 12@@d@@duty, 16@@p@@back, 20@@s@@possible-01, 21@@s@@drive-01, 13@@a@@and, 18@@d@@car, 14@@s@@give-01, 4@@o@@organization, 24@@p@@final, 4@@n2@@_NAME_, 25@@s@@enjoy-01, 2@@d@@crew, 26@@s@@own-01, 22@@b@@anywhere, 5@@s@@go-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
3	listed	_	list	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	hot	_	hot	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	9	MOD_s	true
9	breakfast	_	breakfast	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
11	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	meant	_	mean	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	that	_	that	IN	O	_	and	_	0	IGNORE	true
16	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	added	_	add	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	13	APP_o	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	waffle	_	waffle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	maker	_	maker	NN	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	make-01	(s())	17	APP_o	true
21	to	_	to	IN	O	_	thing	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	continental	_	continental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	affair	_	affair	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	17	APP_o2	true
26	at	_	at	IN	O	_	thing	_	0	IGNORE	true
27	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	cheap	_	cheap	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	29	MOD_s	true
29	hotels	_	hotel	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@list-01, 8@@s@@hot-05, 13@@s@@mean-01, 1@@d@@It, 20@@t3@@thing, 9@@d@@breakfast, 25@@d@@affair-02, 10@@s@@contrast-01, 27@@explicitanon0@@most, 11@@p@@all, 20@@t@@make-01, 24@@p@@continental, 28@@s@@cheap-02, 23@@p@@common, 29@@b@@hotel, 12@@d@@this, 16@@d@@they, 17@@b@@add-02, 19@@d@@waffle]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	0	ROOT	true
4	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
5	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
8	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
9	authentic	_	authentic	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	Jamaican	_name_	jamaican	JJ	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
11	food,	_	food,	NNS	O	_	and	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
13	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_o	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	pepper	_	pepper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@s@@do-02, 15@@p@@whole, 7@@s@@make-01, 10@@d@@_NAME_, 13@@s@@add-02, 9@@s@@authentic-02, 1@@p@@all, 16@@explicitanon0@@lot, 3@@s@@obligate-01, 2@@d@@you, 18@@d@@pepper, 8@@d@@it]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	finest	_	fine	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	4	MOD_s	true
3	Christmas	_name_	Christmas	NNP	O	(f<root> / festival  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	Trees	trees	Trees	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	i've	_	i've	:	O	_	-	_	0	IGNORE	true
6	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@f@@festival, 4@@d@@Trees, 7@@s@@see-01, 2@@b2@@good-02, 3@@n@@_NAME_, 6@@n@@ever, 2@@m@@most]
sentence=1	Eagle_Transmission	_name_	Transmission	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	determined	_	determine	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	thing	_	0	IGNORE	true
4	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	dealer	_	dealer	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	deal-01	()	10	APP_s	true
10	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
11	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
15	was	_	be	VBD	O	_	monetary-quantity	_	0	IGNORE	true
16	unneccesary	_	unneccesary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
18	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
19	needed	_	need	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	17	APP_op2	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	be	_	be	VB	O	_	thing	_	0	IGNORE	true
22	fixed	_	fix	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_o	true
23	was	_	be	VBD	O	_	monetary-quantity	_	0	IGNORE	true
24	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	$400!	_	$400!	CD	O	(m<root> / --LEX--  :unit-of (a<mod>))	i	(mod())	19	MOD_mod	true
26	!	_	!	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@explicitanon0@@much, 11@@s@@need-01, 14@@s@@do-02, 22@@s@@fix-02, 2@@s@@determine-01, 7@@d@@work-01, 19@@c@@need-01, 24@@p@@only, 9@@p2@@person, 16@@s@@-, 17@@a@@and, 10@@s@@say-01, 1@@n@@_NAME_, 9@@e2@@deal-01, 1@@g@@government-organization, 25@@m@@i]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	feel	_	feel	VBP	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	3	MOD_mod	true
6	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
7	being	_	be	VBG	O	_	person	_	0	IGNORE	true
8	condescending	_	condescending	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	to	_	to	IN	O	_	-	_	0	IGNORE	true
10	someone,	_	someone,	NNS	O	_	i	_	0	IGNORE	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	is	_	be	VBZ	O	(d<root> / --LEX--)	i	()	3	APP_mod	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
14	going	_	go	VBG	O	_	i	_	0	IGNORE	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	me!!!!!	_	me!!!!!	VBN	O	_	expressive	_	0	IGNORE	true
18	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[3@@n@@time, 4@@d@@you, 12@@d@@i, 8@@s@@condescending-01, 5@@s2@@feel-01, 2@@p@@next, 13@@explicitanon0@@-]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	flowers	_	flower	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
3	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	19	MOD_s	true
4	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	19	APP_op3	true
7	hoped	_	hope	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
8	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	would	_	would	MD	O	_	thing	_	0	IGNORE	true
10	be,	_	be,	XX	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	19	MOD_s	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
12	have	_	have	VBP	O	_	person	_	0	IGNORE	true
13	attended	_	attend	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
14	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	funerals	_	funeral	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
17	late	_	late	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	unfortunately	_	unfortunately	RB	O	(explicitanon0<root> / -  :polarity-of (f / --LEX--  :ARG2 (r<s>)))	fortunate-01	(s())	13	MOD_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	flowers	_	flower	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
22	I	i	I	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	recieved	_	recieve	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	Ana	_name_	Ana	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	outshone	_	outshine	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	APP_op2	true
27	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@p@@all, 15@@d@@funeral, 18@@explicitanon0@@-, 17@@n@@late, 7@@s@@hope-01, 6@@d@@i, 28@@p@@all, 3@@s@@person, 25@@n@@_NAME_, 18@@f@@fortunate-01, 21@@d@@flower, 10@@s@@multi-sentence, 23@@s@@recieve-01, 11@@d@@i, 2@@d@@flower, 13@@s@@attend-01, 22@@explicitanon0@@I, 26@@s@@outshine-01, 19@@a@@and, 14@@explicitanon0@@several]
sentence=1	Whether	whether	whether	IN	O	_	interrogative	_	0	IGNORE	true
2	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	pay	_	pay	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_o	true
4	me	_	I	PRP	O	_	-	_	0	IGNORE	true
5	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
6	not,	_	not,	XX	O	_	and	_	0	IGNORE	true
7	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
8	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	10	APP_s	true
10	get	_	get	VBP	O	(m<root> / --LEX--  :ARG1 (i<s>)  :ARG2 (y<o>)  :condition-of (k<mod>))	$LEMMA$-05	(mod(), s(), o())	23	MOD_mod	true
11	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
13	accident,	_	accident,	NNP	O	_	and	_	0	IGNORE	true
14	stuck	_	stick	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	traffic,	_	traffic,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
17	etc.	_	etc.	FW	O	_	et-cetera	_	0	IGNORE	true
18	THE	the	the	DT	O	_	-	_	0	IGNORE	true
19	LAST	last	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
20	THING	thing	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
21	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	25	APP_s	true
22	WOULD	would	WOULD	MD	O	_	contrast-01	_	0	IGNORE	true
23	DO	do	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
24	IS	is	be	VBZ	O	_	contrast-01	_	0	IGNORE	true
25	LET	let	let	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_s	true
26	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
27	CHILD	child	child	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
28	GET	get	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	23	MOD_s	true
29	RAPED	raped	rape	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_o	true
30	BECAUSE	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	25	MOD_o	true
31	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	WASN'T	wasn't	WASN'T	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	true
33	PAID	paid	pay	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_s	true
34	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[19@@p@@last, 9@@h@@have-rel-role-91, 33@@d@@pay-01, 9@@f@@parent, 29@@s@@rape-01, 27@@d@@child, 3@@s@@pay-01, 25@@s@@let-01, 21@@d@@i, 14@@s@@stick-01, 28@@s@@cause-01, 20@@d@@thing, 30@@s@@cause-01, 32@@explicitanon0@@-, 23@@s@@do-02, 2@@d@@they, 9@@p@@person, 10@@m@@get-05]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op1	true
3	in	_	in	RP	O	_	i	_	0	IGNORE	true
4	for	_	for	IN	O	_	and	_	0	IGNORE	true
5	alterations	_	alteration	NNS	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
6	(free,	_	(free,	.	O	_	shit	_	0	IGNORE	true
7	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
9	way)	_	way)	NNP	O	_	and	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	APP_op2	true
12	her	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
13	about	_	about	IN	O	_	thing	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	stain	_	stain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
16	I	i	I	PRP	O	_	thing	_	0	IGNORE	true
17	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
18	on	_	on	IN	O	_	-	_	0	IGNORE	true
19	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
20	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
21	leather	_	leather	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	purse	_	purse	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
23	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[1@@d@@i, 20@@s@@new-01, 22@@b@@purse, 11@@b@@tell-01, 10@@a@@and, 5@@b@@alteration-01, 2@@s@@come-01, 15@@d@@stain-01, 21@@p@@leather, 12@@d@@she]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	0	ROOT	true
3	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	a	_	a	DT	O	_	reason	_	0	IGNORE	true
5	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_s	true
6	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_s	true
9	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
10	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@s@@so, 11@@b@@there, 7@@explicitanon0@@many, 5@@s@@reason, 2@@s@@infer-01, 9@@s@@like-01, 10@@d@@it, 8@@d@@person]
sentence=1	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
2	finding	_	find	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op1	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	6	APP_s	true
6	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	took	_	take	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	0	ROOT	true
9	the	_	the	DT	O	_	and	_	0	IGNORE	true
10	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	to	_	to	TO	O	_	date-interval	_	0	IGNORE	true
12	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_op1	true
13	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	step	_	step	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	8	APP_o2	true
17	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	16	APP_op2	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	8	MOD_mod	true
20	painless	_	painless	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	as	_	as	IN	O	_	most	_	0	IGNORE	true
22	possible	_	possible	JJ	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$-01	(mod())	20	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@each, 12@@s@@go-01, 15@@d@@step, 5@@d@@i, 22@@p@@possible-01, 2@@s@@find-01, 4@@d@@car, 17@@s@@make-02, 10@@d@@time, 8@@i@@take-01, 6@@s@@want-01, 7@@d@@they, 20@@d@@painless, 16@@a@@and, 19@@s@@equal, 1@@w@@after]
sentence=1	Liberty	liberty	Liberty	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	construction	_	construction	NN	O	(d<root> / --LEX--)	construct-01	()	3	APP_s	true
3	shows	_	show	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	5	APP_op2	true
4	up	_	up	RP	O	(s<root> / --LEX--  :ARG1 (p<s>))	have-rel-role-91	(s())	20	MOD_s	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	MOD_op1	true
6	it's	_	it's	PRP$	O	_	and	_	0	IGNORE	true
7	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	14	MOD_mod	true
8	guys...all	_	guys...all	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	year	(mod())	10	MOD_mod	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
11	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	20	MOD_s	true
12	100%	_	100%	CD	O	_	year	_	0	IGNORE	true
13	sales	_	sale	NNS	O	(d<root> / --LEX--)	sell-01	()	14	APP_s	true
14	pitch	_	pitch	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
15	"We're	"we're	"We're	NNP	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	best...we're	_	best...we're	NNP	O	_	slash	_	0	IGNORE	true
18	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
19	50	_	50	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	18	MOD_mod	true
20	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
22	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	20	APP_o	true
23	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	20	APP_s	true
24	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	22	APP_s	true
25	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	right...look	_	right...look	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-00	(s(), o())	24	MOD_o	true
27	at	_	at	IN	O	_	name	_	0	IGNORE	true
28	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	30	MOD_mod	true
30	certificates	_	certificate	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	say	_	say	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
33	we're	_	we're	NN	O	_	person	_	0	IGNORE	true
34	great"	_	great"	ADD	O	_	and	_	0	IGNORE	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@show-up-02, 18@@d@@number, 30@@b@@certificate, 19@@explicitanon0@@_NUMBER_, 5@@a@@and, 13@@d@@sell-01, 29@@p@@this, 26@@s@@right...look-00, 1@@p@@person, 20@@s@@cause-01, 7@@explicitanon0@@2, 25@@d@@something, 9@@d@@i, 32@@s@@say-01, 24@@s@@do-02, 21@@d@@we, 23@@s@@person, 14@@r@@pitch-01, 8@@p@@year, 10@@s@@get-01, 22@@s@@obligate-01, 4@@s@@have-rel-role-91, 28@@p@@all, 2@@d@@construct-01, 11@@s@@person, 1@@n@@_NAME_]
sentence=1	Find	find	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	trust	_	trust	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
5	that	_	that	WDT	O	_	i	_	0	IGNORE	true
6	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	7	MOD_s	true
7	hears	_	hear	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	MOD_s	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	wants	_	want	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	APP_o	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	right	_	right	RB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-06	(s())	12	MOD_s	true
16	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[3@@d@@you, 10@@c@@want-01, 4@@s@@trust-02, 6@@s@@actual-02, 7@@s@@hear-01, 12@@s@@do-02, 14@@d@@job, 1@@s@@find-01, 15@@s@@right-06, 2@@d@@someone]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	3	APP_s	true
3	warned	_	warn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op1	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_dom	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	10	MOD_s	true
10	salsa	_	salsa	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	3	APP_o	true
11	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
12	would	_	would	MD	O	_	thing	_	0	IGNORE	true
13	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	had,	_	had,	RB	O	_	event	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
16	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	right	_	right	JJ	O	(d<root> / --LEX--)	$LEMMA$-06	()	15	APP_op2	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@warn-01, 2@@p2@@person, 10@@r@@salsa, 15@@a@@and, 2@@e2@@own-01, 9@@m@@most, 6@@d@@it, 18@@d@@right-06, 13@@n@@ever, 9@@b2@@good-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	waiting	_	wait	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
4	longer	_	longer	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	3	MOD_s	true
5	at	_	at	IN	O	_	university	_	0	IGNORE	true
6	BNA	_name_	BNA	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
9	pickups	_	pickup	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
11	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	I	i	I	PRP	O	_	1	_	0	IGNORE	true
14	parked	_	park	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op2	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	them,	_	them,	NNP	O	_	and	_	0	IGNORE	true
17	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	lost	_	lose	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op3	true
19	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
20	car	_	car	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	key	_	key	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@p@@last, 3@@s@@wait-01, 14@@d@@park-01, 20@@p@@car, 6@@c@@city, 4@@b@@long-03, 1@@d@@i, 10@@a@@and, 9@@d@@pickup, 18@@s@@lose-02, 6@@n@@_NAME_, 4@@m@@more, 21@@d@@key]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	arrived	_	arrive	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
3	Sunday	_name_	Sunday	NNP	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	2	MOD_mod	true
4	at	_	at	IN	O	_	year	_	0	IGNORE	true
5	about	_	about	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o	true
6	230	_	230	CD	O	(d<root> / --LEX--)	_NUMBER_	()	5	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op2	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	do	_	do	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	liked	_	like	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@s@@like-01, 7@@a@@and, 3@@t@@_name_, 2@@g@@arrive-01, 1@@d@@We, 10@@d@@do, 5@@o@@about, 12@@s@@really, 8@@s@@find-01, 6@@d@@_NUMBER_, 3@@d@@date-entity]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	place	_	place	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_op1	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_op3	true
7	have	_	have	VBP	O	_	-	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	eaten	_	eat	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
11	been	_	be	VBN	O	_	and	_	0	IGNORE	true
12	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	leave	_	leave	VB	O	(d<root> / --LEX--)	$LEMMA$-11	()	12	APP_s	true
15	because	_	because	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	12	MOD_o	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	19	APP_s	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	waiting	_	wait	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@d@@leave-11, 17@@d@@person, 10@@a@@and, 1@@d@@this, 9@@s@@eat-01, 12@@s@@tell-01, 16@@p@@other, 19@@s@@wait-01, 6@@d@@i, 5@@r@@place, 4@@p@@only, 15@@s@@cause-01, 8@@n@@ever]
sentence=1	When	when	when	WRB	O	_	i	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	4	MOD_mod	true
4	found	_	find	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
5	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	desk	_	desk	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	speak	_	speak	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
12	English,	english,	English,	NFP	O	_	and	_	0	IGNORE	true
13	they	_	they	PRP	O	_	$LEMMA$	_	17	IGNORE	true
14	moved	_	move	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
15	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	room,	_	room,	NNS	O	_	and	_	0	IGNORE	true
17	but	_	but	CC	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	contrast-01	(o2(), s(), o())	0	ROOT	true
18	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o2	true
19	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
20	did	_	do	VBD	O	_	person	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
25	queen	_	queen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	had	_	have	VBD	O	_	person	_	0	IGNORE	true
28	"reserved	_	"reserve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
29	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[28@@s@@"reserve-01, 19@@p@@still, 2@@d@@i, 3@@n@@final, 21@@explicitanon0@@-, 25@@d@@queen, 4@@t@@find-01, 17@@b@@contrast-01, 5@@d@@someone, 24@@s@@single-02, 15@@d@@our, 11@@s@@speak-01, 22@@s@@receive-01, 18@@d@@we, 8@@b@@desk, 10@@s@@possible-01, 14@@t@@move-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_s	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	6	MOD_s	true
6	businesses	_	business	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	to	_	to	TO	O	_	and	_	0	IGNORE	true
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
12	estimates	_	estimate	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
13	,	_	,	,	O	_	and	_	0	IGNORE	true
14	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	weren't	_	weren't	RB	O	_	-	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	cheapest	_	cheap	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	cheap-02	(s())	20	MOD_s	true
18	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
19	found	_	find	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	reasonable	_	reasonable	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_o	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@call-02, 1@@d@@i, 21@@s@@very, 6@@d@@business, 5@@s@@differ-02, 17@@b2@@cheap-02, 22@@d@@reasonable-02, 19@@s@@find-01, 9@@b@@area, 11@@s@@get-01, 4@@explicitanon0@@few, 12@@d@@estimate-01, 20@@s@@contrast-01, 17@@m@@most]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	3	MOD_s	true
3	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
6	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	0	ROOT	true
7	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
8	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	bathroom	_	bathroom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
10	remodeled	_	remodel	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	APP_o	true
11	for	_	for	IN	O	_	thing	_	0	IGNORE	true
12	about	_	about	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o2	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	company's	_	company'	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	were	_	be	VBD	O	_	person	_	0	IGNORE	true
20	quoting	_	quote	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
21	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	fix	_	fix	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	20	MOD_mod	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	shower	_	shower	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	tile	_	tile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_o	true
28	fixtures	_	fixture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@p@@other, 23@@s@@fix-02, 2@@m@@most, 5@@d@@i, 15@@d@@price-01, 8@@p@@whole, 10@@b@@remodel-01, 12@@s@@about, 20@@s@@quote-01, 2@@b2@@good-02, 3@@d@@part, 18@@d@@company', 27@@a@@and, 21@@p@@just, 26@@d@@tile, 25@@p@@shower, 14@@s@@same-01, 9@@d@@bathroom, 28@@d@@fixture, 6@@s@@get-04]
sentence=1	Best	best	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	2	MOD_s	true
2	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
3	I've	i've	i've	JJ	O	_	dollar	_	0	IGNORE	true
4	spent	_	spend	VBN	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	remodeling	_	remodeling	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
7	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@n@@ever, 1@@m@@most, 6@@d@@remodeling-01, 4@@s@@spend-01, 2@@d@@money, 1@@b2@@good-02]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	night	_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
4	drove	_	drive	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
5	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	home,	_	home,	NNP	O	_	and	_	0	IGNORE	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	rear	_	rear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	window	_	window	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
13	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_s	true
14	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	leakage	_	leakage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
16	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@v@@drive-01, 12@@d@@window, 15@@s@@leakage-01, 14@@explicitanon0@@some, 5@@a@@back, 13@@s@@have-03, 2@@d@@date-entity, 11@@p@@rear, 8@@s@@find-01, 3@@d@@i, 2@@m@@night]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	dental	_	dental	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
3	surgeon,	_	surgeon,	NNS	O	_	mean-01	_	0	IGNORE	true
4	Dr.	dr.	Dr.	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	11	MOD_s	true
5	Lucy_Nichols	_name_	Nichols	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_dom	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	10	MOD_s	true
8	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
9	dental	_	dental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	perfectionist	_	perfectionist	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	13	MOD_s	true
13	proud	_	proud	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	pride-01	(s())	11	APP_op2	true
14	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op1	true
18	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	reputation	_	reputation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
23	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
25	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
26	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[12@@s@@clear-06, 5@@p@@person, 5@@n@@_NAME_, 9@@p@@dental, 2@@d@@dental, 17@@d@@work-01, 25@@s@@establish-01, 10@@r@@perfectionist, 13@@s@@pride-01, 19@@s@@do-02, 22@@d@@reputation, 4@@s@@_NAME_, 20@@a@@and, 11@@a@@and, 7@@s@@clear-06]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
4	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	5	MOD_mod	true
5	ounce	_	ounce	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
7	caring	_	care	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
8	involved	_	involved	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
10	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
13	warn	_	warn	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	MOD_o	true
14	about	_	about	IN	O	_	monetary-quantity	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o2	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	service	_	service	NN	O	(d<root> / --LEX--)	serve-01	()	17	APP_s	true
20	will	_	will	MD	O	_	thing	_	0	IGNORE	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	warned	_	warn	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op2	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@d@@anyone, 13@@b@@warn-01, 8@@s@@involved-01, 9@@a@@and, 7@@d@@care-01, 12@@s@@possible-01, 17@@s@@lack-01, 4@@explicitanon0@@1, 5@@explicitanon0@@ounce, 16@@s@@complete-02, 3@@explicitanon0@@-, 11@@d@@i, 19@@d@@serve-01, 22@@s@@warn-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	negative	_	negative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_o	true
6	abou	_	abou	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	is	_	be	VBZ	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	parking	_	parking	NN	O	(d<root> / --LEX--)	house-01	()	3	APP_s	true
12	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[2@@p@@only, 4@@d@@i, 8@@d@@place, 5@@s@@have-03, 7@@p@@this, 11@@d@@house-01, 3@@s@@negative-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	would	_	would	MD	O	_	thing	_	0	IGNORE	true
9	seat	_	seat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_o	true
12	they	_	they	PRP	O	_	person	_	0	IGNORE	true
13	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	13	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@i, 9@@s@@seat-01, 5@@d@@it, 4@@s@@take-01, 6@@s@@cause-01, 13@@s@@know-01, 2@@s@@possible-01, 14@@explicitanon0@@1, 3@@p@@only, 14@@o@@ordinal-entity, 11@@d@@person, 7@@d@@they]
sentence=1	Well,	_name_	Well,	NNP	O	_	and	_	0	IGNORE	true
2	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	much	_	much	RB	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
6	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
7	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	I'm	i'm	i'm	PRP	O	_	thing	_	0	IGNORE	true
9	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	disappointed	_	disappointed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	disappoint-01	(s())	7	APP_s	true
11	with	_	with	IN	O	_	i	_	0	IGNORE	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	experience	_	experience	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_s	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@except-01, 5@@s@@possible-01, 4@@d@@i, 10@@s@@disappoint-01, 9@@s@@very, 12@@p@@this, 13@@d@@experience-01, 6@@s@@say-01, 2@@explicitanon0@@-, 3@@d@@much]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	13	APP_s	true
4	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
5	waste	_	waste	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_o	true
6	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
7	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	routes	_	route	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
10	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
11	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
12	children,	_	children,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	9	MOD_mod	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
17	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
18	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-09	(s())	16	APP_s	true
19	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
20	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	strain	_	strain	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
27	myself	_	myself	PRP	O	_	i	_	0	IGNORE	true
28	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
29	exhaustion	_	exhaustion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@s@@handle-01, 2@@explicitanon0@@-, 18@@s@@take-on-09, 12@@p@@and, 29@@d@@exhaustion, 26@@r2@@strain-01, 1@@d@@i, 9@@d@@route, 24@@p@@just, 13@@s@@contrast-01, 20@@d@@something, 15@@explicitanon0@@-, 3@@c@@want-01, 16@@s@@want-01, 5@@b@@waste-01, 10@@s@@set-02, 22@@explicitanon0@@-, 7@@d@@time]
sentence=1	Not	not	not	RB	O	_	-	_	0	IGNORE	true
2	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	am	_	be	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	cause-01	(mod())	17	MOD_mod	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	being	_	be	VBG	O	_	person	_	0	IGNORE	true
6	bilked	_	bilk	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
7	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
8	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
12	owe,	_	owe,	VB	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	office	_	office	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	rude	_	rude	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
18	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	boot	_	boot	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@d@@staff, 8@@d@@money, 4@@d@@i, 19@@p@@boot-01, 17@@s@@rude, 3@@p@@cause-01, 6@@s@@bilk-01, 11@@explicitanon0@@-, 14@@p@@office]
sentence=1	Grimy	grimy	grimy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
4	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	MOD_o	true
6	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[5@@s@@do-02, 1@@p@@grimy, 3@@d@@you, 2@@s@@work-01, 4@@p@@guy]
sentence=1	I've	i've	I've	NNP	O	_	cause-01	_	0	IGNORE	true
2	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
3	at	_	at	IN	O	_	thing	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	fabulous	_	fabulous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	motel	_	motel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	two_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
9	running,	_	running,	NNP	O	_	_NAME_	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	10	APP_op2	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
15	it's	_	it's	PRP$	O	_	include-91	_	0	IGNORE	true
16	one	_	one	CD	O	_	1	_	0	IGNORE	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	10	MOD_s	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	21	MOD_s	true
20	lodging	_	lodging	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	experiences	_	experience	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
22	I've	i've	I've	VBG	O	_	thing	_	0	IGNORE	true
23	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	21	MOD_o	true
25	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	coast...and	_	coast...and	NN	O	(c<root> / country-region  :name (n / --LEX--)  :location-of (r<mod>))	_NAME_	(mod())	24	MOD_mod	true
28	I'm	i'm	i'm	PRP	O	(d<root> / --LEX--)	person	()	10	APP_s	true
29	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	comparing	_	compare	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
31	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	to	_	to	IN	O	_	thing	_	0	IGNORE	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	resorts	_	resort	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
36	I've	i've	i've	PRP	O	_	thing	_	0	IGNORE	true
37	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	MOD_s	true
38	at	_	at	IN	O	_	i	_	0	IGNORE	true
39	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[7@@d@@motel, 17@@s@@include-91, 14@@s@@say-01, 29@@p@@even, 27@@n@@_NAME_, 2@@s@@stay-01, 24@@s@@have-03, 37@@s@@stay-01, 19@@b2@@good-02, 10@@a@@and, 34@@p@@big, 27@@c@@country-region, 20@@d@@lodging, 23@@n@@ever, 5@@p@@fabulous, 4@@p@@this, 12@@o@@obligate-01, 8@@n@@year, 19@@m@@most, 21@@s@@experience-01, 6@@p@@little, 28@@d@@person, 30@@s@@compare-01, 35@@d@@resort]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	cant	_	cant	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	speak	_	speak	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
4	for	_	for	IN	O	_	and	_	0	IGNORE	true
5	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	tests	_	test	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_op1	true
9	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
10	appointments	_	appointment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	likely-01	(mod())	18	MOD_mod	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	best	_	good	JJS	O	(m2<root> / most  :degree-of (g / --LEX--  :ARG1 (c<s>)))	good-02	(s())	18	MOD_s	true
18	interests	_	interest	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	23	APP_op1	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	us	_	us	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	(the	_	(the	ADD	O	_	_NAME_	_	0	IGNORE	true
22	patient)	_	patient)	NNS	O	_	cause-01	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
24	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
25	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
26	the	_	the	DT	O	_	-	_	0	IGNORE	true
27	ability	_	ability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	capable-01	(s())	23	APP_op2	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	decline	_	decline	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_s	true
30	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
31	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	suggest	_	suggest	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
34	to	_	to	IN	O	_	and	_	0	IGNORE	true
35	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@speak-01, 14@@p@@likely-01, 24@@d@@you, 5@@d@@they, 11@@d@@they, 18@@s@@interest-01, 12@@s@@recommend-01, 9@@a@@or, 30@@d@@anything, 29@@s@@decline-01, 2@@explicitanon0@@-, 20@@p@@us, 33@@s@@suggest-01, 1@@d@@i, 10@@d@@appointment, 6@@s@@contrast-01, 7@@p@@any, 8@@d@@test-01, 17@@g@@good-02, 27@@s@@capable-01, 17@@m2@@most, 23@@a@@and]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	5	APP_op1	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	talking	_	talk	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_o	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	5	APP_op2	true
8	me	_	I	PRP	O	_	i	_	0	IGNORE	true
9	set	_	set	VB	O	(d<root> / --LEX--)	$LEMMA$-up-03	()	7	APP_o	true
10	up	_	up	RP	O	_	operate-01	_	0	IGNORE	true
11	and	_	and	CC	O	_	$LEMMA$	_	5	IGNORE	true
12	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	5	MOD_mod	true
13	test	_	test	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	drove	_	drive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	APP_op1	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	Craig	_name_	Craig	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_op3	true
18	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	fell	_	fall	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	17	APP_op2	true
20	head	_	head	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	heels	_	heel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	car	_	car	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
26	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	I	i	I	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	5	MOD_mod	true
28	kept	_	keep	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
29	saying,	_	saying,	NNPS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	5	MOD_s	true
30	"	_	"	''	O	_	and	_	0	IGNORE	true
31	was	_	be	VBD	O	_	person	_	0	IGNORE	true
32	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
33	gotta	_	gotta	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	29	APP_o	true
34	have	_	have	VB	O	(d<root> / --LEX--)	$LEMMA$-03	()	33	APP_s	true
35	it!	_	it!	ADD	O	_	$LEMMA$	_	0	IGNORE	true
36	"	_	"	''	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@a@@car, 33@@s@@obligate-01, 1@@d@@We, 34@@d@@have-03, 6@@d@@he, 17@@a@@and, 12@@p@@i, 14@@s@@drive-01, 4@@d@@talk-01, 13@@s@@test-01, 26@@p@@all, 2@@s@@get-05, 20@@s@@head, 5@@a@@and, 24@@p@@this, 29@@s@@and, 28@@s@@keep-02, 22@@d@@heel, 27@@explicitanon0@@1, 19@@s@@fall-07, 9@@d@@set-up-03, 16@@p@@person, 16@@n@@_NAME_, 7@@s@@get-04]
sentence=1	The	the	the	DT	O	_	product	_	0	IGNORE	true
2	sweet	_	sweet	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	potato	_	potato	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	tempura	_	tempura	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	roll	_	roll	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_dom	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	12	MOD_s	true
8	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	surprise:	_	surprise:	NN	O	_	and	_	0	IGNORE	true
11	cheap	_	cheap	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	12	APP_op1	true
12	and	_	and	CC	O	(o<root> / --LEX--  :op1 (g<op1>)  :op2 (b<op2>)  :domain (a<dom>))	$LEMMA$	(op2(), op1(), dom())	0	ROOT	true
13	delicious,	_	delicious,	NNS	O	_	and	_	0	IGNORE	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	tried	_	try	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	true
21	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
22	say	_	say	VB	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
23	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
24	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	worth	_	worth	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	27	APP_op1	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	22	APP_o	true
28	a	_	a	DT	O	_	thing	_	0	IGNORE	true
29	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	value	_	value	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op2	true
31	(and	_	(and	NN	O	_	-	_	0	IGNORE	true
32	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
33	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	34	MOD_mod	true
34	get	_	get	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op3	true
35	vegetarian	_	vegetarian	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
36	rolls)	_	rolls)	NNP	O	_	-	_	0	IGNORE	true
37	.	_	.	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	multi-sentence	(s())	12	APP_op2	true

nodealignment=[15@@p@@only, 5@@d@@roll, 12@@o@@and, 24@@p@@well, 22@@c2@@say-01, 3@@p@@potato, 33@@n@@ever, 25@@d@@worth-02, 29@@p@@great, 2@@s@@sweet-02, 9@@p@@great, 37@@s@@multi-sentence, 4@@p@@tempura, 34@@s@@get-01, 16@@d@@thing, 30@@d@@value-01, 7@@s@@actual-02, 18@@s@@try-01, 11@@d@@cheap-02, 35@@d@@vegetarian, 20@@d@@i, 17@@d@@we, 27@@a@@and]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	quality	_	quality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	starts	_	start	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	at	_	at	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	receptionist	_	receptionist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	APP_o	true
8	desk,	_	desk,	NNP	O	_	include-91	_	0	IGNORE	true
9	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
11	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_dom	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	impatient	_	impatient	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	patient-01	(dom())	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_mod	true
16	lack	_	lack	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	efficiency	_	efficiency	NN	O	(d<root> / --LEX--)	efficient-01	()	16	APP_s	true
19	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	21	APP_s	true
20	once	_	once	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	loved	_	love	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
22	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	office	_	office	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@r@@patient-01, 11@@d@@staff, 7@@p@@receptionist, 20@@n@@once, 16@@s@@lack-01, 21@@s@@love-01, 13@@s@@very, 18@@d@@efficient-01, 19@@d@@i, 24@@b@@office, 2@@p@@poor, 15@@a@@and, 4@@s@@start-01, 3@@d@@quality]
sentence=1	When	when	when	WRB	O	_	he	_	0	IGNORE	true
2	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
3	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
5	(2	_	(2	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
6	hours_later	_name_	later	RB	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	40	(mod())	4	MOD_mod	true
7	than	_	than	IN	O	_	1	_	0	IGNORE	true
8	agreed)	_	agreed)	CD	O	_	and	_	0	IGNORE	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	that	_	that	IN	O	_	and	_	0	IGNORE	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	10	APP_o	true
14	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
15	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
16	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	the	_	the	DT	O	_	and	_	0	IGNORE	true
18	tolls	_	toll	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	payed	_	pay	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
21	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
22	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	Brooklyn	_name_	Brooklyn	NNP	O	(c<root> / city  :name (n2 / --LEX--)  :source-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
25	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	$100	_	$100	NNP	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	24	APP_op2	true
27	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
28	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	to	_	to	TO	O	_	and	_	0	IGNORE	true
30	drive	_	drive	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	26	MOD_mod	true
31	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
32	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
34	destination	_	destination	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
35	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[20@@s@@pay-01, 15@@s@@pay-01, 34@@s@@destination, 3@@d@@guy, 16@@p@@all, 9@@d@@they, 18@@d@@toll, 26@@explicitanon0@@_NUMBER_, 12@@d@@you, 31@@a@@back, 23@@c@@city, 25@@p@@extra, 5@@explicitanon0@@_NUMBER_, 21@@s@@come-01, 13@@o@@obligate-01, 6@@explicitanon0@@40, 10@@s@@tell-01, 30@@o@@drive-01, 26@@m2@@monetary-quantity, 24@@a@@and, 23@@n2@@_NAME_, 4@@s@@arrive-01]
sentence=1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	got	_	get	VBD	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-05	(mod(), s(), o())	10	MOD_mod	true
6	to	_	to	IN	O	_	monetary-quantity	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	budget	_	budget	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
9	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	10	APP_s	true
10	told	_	tell	VBD	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
11	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
13	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	10	APP_o	true
14	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	13	APP_o	true
15	with,	_	with,	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	10	APP_o2	true
16	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
17	was	_	be	VBD	O	_	possible-01	_	0	IGNORE	true
18	basically	_	basically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	basic	(mod())	20	MOD_mod	true
19	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	design	_	design	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
21	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[9@@d@@i, 20@@d@@design-01, 15@@s@@and, 5@@b@@get-05, 10@@w@@tell-01, 8@@d@@budget-01, 13@@f@@possible-01, 14@@s@@work-01, 4@@d@@we, 18@@p@@basic, 19@@explicitanon0@@-]
sentence=1	It's	it's	it's	PRP	O	_	have-polarity-91	_	0	IGNORE	true
2	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	doubt,	_	doubt,	NNS	O	_	i	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	8	MOD_s	true
7	service	_	service	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	serve-01	(mod())	8	MOD_mod	true
8	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op1	true
9	I've	i've	i've	JJ	O	_	-	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
13	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	to	_	to	TO	O	_	and	_	0	IGNORE	true
15	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	12	MOD_s	true
16	clear,	_	clear,	NNP	O	_	-	_	0	IGNORE	true
17	the	_	the	DT	O	_	thing	_	0	IGNORE	true
18	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o2	true
19	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	charged	_	charge	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
21	me	_	I	PRP	O	_	i	_	0	IGNORE	true
22	was	_	be	VBD	O	_	monetary-quantity	_	0	IGNORE	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	same	_	same	JJ	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o2(), s(), o())	12	APP_op2	true
25	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
26	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
27	tire	_	tire	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
29	in	_	in	IN	O	(d<root> / --LEX--)	i	()	12	APP_s	true
30	Nashville's	nashville's	Nashville's	NNP	O	_	thing	_	0	IGNORE	true
31	price	_	price	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
32	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
33	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	true
34	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
37	rear	_	rear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	tire	_	tire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
39	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[29@@d@@i, 20@@s@@charge-01, 24@@c@@same-01, 18@@d@@price-01, 12@@a@@and, 7@@p@@serve-01, 2@@explicitanon0@@-, 33@@s@@put-01, 36@@p@@other, 10@@n@@ever, 19@@d@@he, 6@@m@@most, 28@@d@@guy, 38@@d@@tire, 37@@p@@rear, 15@@s@@and, 27@@p@@tire, 11@@s@@have-03, 6@@b2@@good-02, 8@@s@@experience-01, 31@@s@@price-01, 13@@p@@just]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	chose	_	choose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
3	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
4	later,	_	later,	NNS	O	(d<root> / --LEX--)	contrast-01	()	2	APP_o	true
5	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
6	approached	_	approach	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	front	_	front	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	desk	_	desk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	about	_	about	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	hotel	_	hotel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	policy	_	policy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
14	to	_	to	TO	O	_	and	_	0	IGNORE	true
15	push	_	push	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-02	(mod(), s(), o())	13	MOD_mod	true
16	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
17	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	responsibilities	_	responsibility	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	responsible-03	()	15	APP_o	true
19	on	_	on	IN	O	_	-	_	0	IGNORE	true
20	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
21	authorities,	_	authorities,	NNS	O	_	and	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	mention	_	mention	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	nights	_	night	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	sleep	_	sleep	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
29	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	paid	_	pay	VBD	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	28	MOD_s	true
31	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
32	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	5	MOD_s	true
33	didnt	_	didnt	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	34	MOD_mod	true
34	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
35	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[32@@s@@contrast-01, 18@@d@@responsible-03, 27@@p@@night, 5@@s@@contrast-01, 6@@s@@approach-01, 1@@d@@i, 33@@explicitanon0@@-, 18@@t@@thing, 15@@r2@@push-02, 20@@s@@local-02, 13@@s@@policy-01, 34@@s@@get-01, 4@@d@@contrast-01, 28@@d@@sleep-01, 9@@d@@desk, 2@@s@@choose-01, 8@@p@@front, 26@@s@@good-02, 30@@l@@pay-01, 22@@explicitanon0@@-, 12@@d@@hotel, 24@@s@@mention-01]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	5	MOD_mod	true
3	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	notice	_	notice	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
7	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	arrive	_	arrive	VBP	O	(g<root> / --LEX--  :ARG4 (s<o>)  :ARG1 (y<s>)  :time-of (p2<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
9	on	_	on	IN	O	_	have-mod-91	_	0	IGNORE	true
10	location	_	location	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
12	that	_	that	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
14	waiting	_	wait	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	line	_	line	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
16	literally	_	literally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	literal	(mod())	17	MOD_mod	true
17	goes	_	go	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
18	out	_	out	IN	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
19	the	_	the	DT	O	_	and	_	0	IGNORE	true
20	door	_	door	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
22	spills	_	spill	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
23	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	parking	_	parking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@g@@arrive-01, 25@@p@@parking, 22@@s@@spill-01, 2@@o@@ordinal-entity, 26@@d@@lot, 20@@d@@door, 5@@s@@notice-01, 14@@s@@wait-01, 4@@d@@you, 17@@g@@go-01, 10@@d@@location, 15@@d@@line, 3@@p@@thing, 2@@explicitanon0@@1, 21@@a@@and, 18@@a@@out, 16@@p@@literal]
sentence=1	After	after	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
2	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op1	true
3	at	_	at	IN	O	_	thing	_	0	IGNORE	true
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
5	menu	_	menu	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
7	seeing	_	see	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op2	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
10	menu	_	menu	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	items	_	item	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_s	true
12	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_poss	true
13	had,	_	had,	VBP	O	_	cause-01	_	0	IGNORE	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	treat	_	treat	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_o	true
22	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[9@@s@@new-01, 14@@d@@we, 21@@d@@treat-01, 2@@s@@look-01, 15@@s@@know-01, 10@@p@@menu, 1@@n@@after, 7@@s@@see-01, 11@@m@@item, 12@@d@@they, 5@@d@@menu, 6@@a@@and]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	price	_	price	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	5	APP_s	true
3	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	monetary-quantity	(s())	18	MOD_s	true
4	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	5	MOD_s	true
5	lower	_	low	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	low-04	(s())	18	APP_op1	true
6	than	_	than	IN	O	_	thing	_	0	IGNORE	true
7	what	_	what	WP	O	_	and	_	0	IGNORE	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
9	had	_	have	VBD	O	_	thing	_	0	IGNORE	true
10	anticipated	_	anticipate	VBN	O	(w<root> / --LEX--  :ARG0 (t<s>)  :compared-to-of (m<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
11	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op4	true
12	used	_	use	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	3	MOD_s	true
13	to	_	to	IN	O	_	thing	_	0	IGNORE	true
14	compared	_	compare	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
15	to	_	to	IN	O	_	thing	_	0	IGNORE	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	places,	_	places,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
18	plus	_	plus	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
19	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	showed	_	show	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op3	true
21	me	_	I	PRP	O	_	i	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_o	true
24	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
26	when	_	when	WRB	O	_	i	_	0	IGNORE	true
27	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
28	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	20	MOD_mod	true
29	into	_	into	IN	O	_	i	_	0	IGNORE	true
30	pick	_	pick	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-04	(s())	28	APP_s	true
31	up	_	up	RP	O	_	thing	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@a@@plus, 30@@s@@pick-up-04, 16@@p@@other, 33@@d@@car, 5@@m@@more, 17@@d@@places,, 23@@d@@work-01, 10@@w@@anticipate-01, 19@@d@@he, 3@@s@@monetary-quantity, 28@@s@@come-01, 25@@s@@do-02, 12@@s@@use-02, 4@@s@@actual-02, 5@@b@@low-04, 8@@d@@i, 2@@a@@price-01, 11@@d@@and, 2@@t@@thing, 20@@s@@show-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	4	MOD_mod	true
4	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	took	_	take	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-10	(s())	0	ROOT	true
7	3	_	3	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
8	tries	_	try	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
9	to	_	to	TO	O	_	and	_	0	IGNORE	true
10	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
11	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	towels	_	towel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
15	linens	_	linen	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	requested	_	request	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@_NUMBER_, 14@@a@@and, 10@@s@@get-01, 8@@s@@try-01, 3@@explicitanon0@@2, 3@@o@@ordinal-entity, 15@@d@@linen, 4@@b@@room, 13@@d@@towel, 16@@d@@we, 6@@s@@take-10, 17@@s@@request-01, 11@@p@@all]
sentence=1	The	the	the	DT	O	(s<root> / --LEX--  :degree-of (t<mod>))	person	(mod())	2	MOD_mod	true
2	Worst	worst	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	0	ROOT	true
3	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	1	MOD_mod	true
4	I've	i've	i've	JJ	O	_	name	_	0	IGNORE	true
5	Ever	ever	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	Ha	ha	ha	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
7	d	_	d	ADD	O	_	expressive	_	0	IGNORE	true

nodealignment=[5@@n@@ever, 1@@s@@person, 2@@b2@@bad-07, 2@@m@@most, 3@@n@@_NAME_, 6@@d@@ha, 3@@c@@country]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
5	the	_	the	DT	O	_	-	_	0	IGNORE	true
6	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	8	MOD_s	true
7	chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
8	food	_	food	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
10	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
11	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_o	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 6@@m@@most, 11@@n@@ever, 8@@r@@food, 9@@d@@i, 6@@b2@@bad-07, 1@@d@@this, 4@@s@@far, 12@@s@@have-03, 7@@c@@country]
sentence=1	One	one	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	include-91	(s())	0	ROOT	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-02	(s())	5	MOD_s	true
5	experiences	_	experience	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_s	true
6	I've	i've	I've	VBG	O	_	-	_	0	IGNORE	true
7	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_o	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
11	auto	_	auto	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	repair	_	repair	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
13	shop	_	shop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@n@@ever, 4@@m@@most, 12@@i@@repair-01, 2@@s@@include-91, 13@@d@@shop, 4@@b2@@bad-02, 5@@d@@experience-01, 8@@s@@have-03, 11@@d@@auto]
sentence=1	Well,	_name_	Well,	NNP	O	_	expressive	_	0	IGNORE	true
2	unless	_	unless	IN	O	_	-	_	0	IGNORE	true
3	of	_	of	IN	O	_	-	_	0	IGNORE	true
4	course	_	course	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	of-$LEMMA$	(mod())	13	MOD_mod	true
5	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	third	_name_	third	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	7	MOD_mod	true
7	compressor	_	compressor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
8	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	put	_	put	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	7	MOD_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
13	goes	_	go	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-17	(s())	0	ROOT	true
14	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@o@@ordinal-entity, 12@@d@@car, 4@@p@@of-course, 7@@d@@compressor, 8@@d@@he, 9@@b@@put-01, 6@@explicitanon0@@3, 13@@s@@go-out-17]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
6	copy	_	copy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	dropped	_	drop	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-off-03	(s())	8	MOD_s	true
11	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@possible-01, 2@@s@@ask-01, 1@@d@@i, 8@@d@@piece, 4@@d@@they, 10@@s@@drop-off-03, 6@@s@@copy-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	would	_	would	MD	O	_	thing	_	0	IGNORE	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
7	exactly	_	exactly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	exact	(mod())	8	MOD_mod	true
8	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	6	MOD_s	true
9	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
10	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
12	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@d@@They, 6@@s@@make-01, 7@@p@@exact, 11@@d@@i, 8@@s@@resemble-01, 3@@d@@it, 14@@s@@replace-01, 10@@d@@one, 2@@s@@say-01, 12@@s@@need-01]
sentence=1	However,	_name_	However,	LS	O	_	expressive	_	0	IGNORE	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	asked	_	ask	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	have-concession-91	_	0	IGNORE	true
6	amend	_	amend	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	APP_o	true
7	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
8	return	_	return	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	apply	_	apply	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	6	MOD_mod	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	credit	_	credit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
15	just	_	just	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	become	_	become	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	12	MOD_s	true
17	eligible	_	eligible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	qualify-02	(s())	12	MOD_s	true
18	for	_	for	IN	O	_	-	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@n@@then, 3@@d@@i, 17@@s@@qualify-02, 6@@c@@amend-01, 12@@d@@credit, 15@@n@@just, 8@@s@@return-01, 10@@s@@apply-02, 16@@s@@become-01, 4@@c@@ask-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	bought	_	buy	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	about	_	about	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o2	true
4	half	_	half	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	true
5	of	_	of	IN	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	include-91	(o2(), s(), o())	2	MOD_s	true
6	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	he	(mod())	2	MOD_mod	true
7	furniture	_	furniture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
9	own	_	own	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	from	_	from	IN	O	_	thing	_	0	IGNORE	true
11	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	place	_	place	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
13	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[7@@d@@furniture, 5@@c@@include-91, 9@@s@@own-01, 2@@b@@buy-01, 4@@d@@half, 11@@p@@this, 1@@d@@i, 6@@p@@he, 3@@o@@about, 12@@s@@place]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
3	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	with	_	with	IN	O	_	-	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	receipt	_	receipt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	Ahmed	_name_	Ahmed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
8	had	_	have	VBD	O	_	person	_	0	IGNORE	true
9	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
11	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
12	purchase,	_	purchase,	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	up-to	(mod())	9	MOD_mod	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	21	APP_s	true
17	forever	_	forever	RB	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	16	APP_o	true
18	to	_	to	TO	O	_	multiple	_	0	IGNORE	true
19	copy	_	copy	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
20	it	_	it	PRP	O	_	i	_	0	IGNORE	true
21	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	13	APP_op2	true
22	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
23	that	_	that	IN	O	_	and	_	0	IGNORE	true
24	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	would	_	would	MD	O	_	thing	_	0	IGNORE	true
26	take	_	take	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
27	care	_	care	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	APP_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	he	_	0	IGNORE	true
30	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@a@@back, 1@@d@@i, 27@@s@@care-03, 19@@s@@copy-01, 22@@s@@say-01, 30@@d@@situation, 9@@s@@provide-01, 15@@d@@guy, 6@@d@@receipt, 13@@a@@and, 17@@t@@temporal-quantity, 7@@p@@person, 21@@s@@contrast-01, 12@@n@@up-to, 7@@n@@_NAME_, 2@@s@@come-01, 17@@m@@forever, 16@@s@@take-10]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	trust	_	trust	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op1	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
5	believe	_	believe	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	APP_op2	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	you'll	_	you'll	PRP	O	_	i	_	0	IGNORE	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	able	_	able	JJ	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	5	APP_o	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
12	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	MOD_op1	true
14	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	13	APP_op2	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	reciprocate	_	reciprocate	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
22	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[13@@a@@and, 16@@s@@obligate-01, 4@@a@@and, 14@@p@@all, 3@@d@@you, 21@@d@@reciprocate-01, 2@@s@@trust-01, 1@@d@@i, 12@@d@@this, 5@@c@@believe-01, 11@@s@@handle-01, 9@@f@@possible-01]
sentence=1	Everything	everything	Everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	have	_	have	VBP	O	_	thing	_	0	IGNORE	true
4	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
5	there	_	there	EX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
7	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	authentic	_	authentic	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	12	MOD_s	true
12	tasting	_	tasting	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op2	true
13	than	_	than	IN	O	_	thing	_	0	IGNORE	true
14	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	restaurant	_	restaurant	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	name	_	0	IGNORE	true
20	San_Antonio	_name_	Antonio	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	we	_	we	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
23	have	_	have	VBP	O	_	person	_	0	IGNORE	true
24	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
25	to--and	_	to--and	NNP	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	10	MOD_mod	true
26	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	25	APP_op2	true
27	me	_	I	PRP	O	_	i	_	0	IGNORE	true
28	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	have	_	have	VBP	O	_	person	_	0	IGNORE	true
30	been	_	be	VBN	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	26	APP_s	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	a	_	a	DT	O	_	thing	_	0	IGNORE	true
33	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@any, 16@@c@@country, 16@@n@@_NAME_, 30@@d@@be-located-at-91, 11@@m@@more, 20@@n@@_NAME_, 1@@d@@Everything, 12@@s@@tasting-02, 21@@b@@area, 2@@d@@we, 15@@p@@other, 9@@s@@authentic-02, 11@@b@@good-02, 25@@b@@to--and, 5@@b@@there, 8@@s@@more, 33@@explicitanon0@@lot, 22@@b@@we, 10@@a@@and, 4@@s@@get-01, 26@@s@@trust-01, 17@@p@@restaurant]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	7	MOD_s	true
5	Egg	egg	Egg	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	Drop	drop	Drop	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	Soup	soup	Soup	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
9	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	tasted	_	taste	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@taste-01, 6@@p@@Drop, 4@@b2@@good-02, 7@@d@@Soup, 4@@m@@most, 1@@d@@They, 5@@p@@Egg, 10@@n@@ever, 8@@d@@i, 2@@s@@have-03]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	entree	_	entree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
6	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
8	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	APP_op2	true
9	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@a@@and, 2@@p@@every, 4@@d@@we, 3@@d@@entree, 8@@s@@perfect-02, 6@@s@@order-01]
sentence=1	Their	their	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	prices	_	price	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	5	APP_s	true
3	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
4	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	5	MOD_mod	true
5	reasonable	_	reasonable	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	APP_o	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_mod	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	receive	_	receive	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[12@@s@@receive-01, 2@@t@@thing, 11@@d@@you, 10@@d@@food, 2@@c@@price-01, 4@@s@@extreme, 5@@s@@reasonable-02, 1@@d@@they, 8@@explicitanon0@@amount]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	figure	_	figure	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
4	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
5	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	want	_	want	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	21	MOD_mod	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	fix	_	fix	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	9	MOD_mod	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	fence	_	fence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	installed	_	instal	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
19	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
20	I'll	i'll	I'll	NNP	O	_	person	_	0	IGNORE	true
21	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
25	let	_	let	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	23	MOD_mod	true
26	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
27	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
28	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
29	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
30	about	_	about	IN	O	_	thing	_	0	IGNORE	true
31	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
32	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	treat	_	treat	VBP	O	(t<root> / thing  :ARG2-of (r / --LEX--  :ARG1 (g<o>)  :ARG0 (g2<s>)))	$LEMMA$-01	(s(), o())	25	APP_o	true
34	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
35	once	_	once	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
36	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-03	(mod(), s())	33	MOD_mod	true
38	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
39	money!!	_	money!!	NNS	O	_	i	_	0	IGNORE	true
40	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[13@@i@@fix-02, 9@@s@@take-01, 5@@d@@they, 18@@s@@instal-01, 15@@d@@fence, 11@@d@@time, 25@@s@@let-01, 35@@n@@once, 29@@s@@know-01, 26@@d@@everyone, 33@@t@@thing, 38@@d@@your, 21@@s@@take-01, 23@@d@@time, 33@@r@@treat-01, 6@@explicitanon0@@-, 1@@s@@cause-01, 2@@d@@i, 7@@d@@want-01, 34@@d@@customer, 3@@s@@figure-01, 28@@s@@possible-01, 37@@s@@have-03]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	salatim	_	salatim	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	salads	_	salads	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	smallest	_	small	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	small	(mod())	7	MOD_mod	true
7	plates	_	plate	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	19	APP_o	true
8	I've	i've	i've	JJ	O	_	-	_	0	IGNORE	true
9	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
11	placed	_	place	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	front	_	front	NN	O	(d<root> / --LEX--)	in-$LEMMA$-of	()	11	APP_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	me	_	I	PRP	O	_	and	_	0	IGNORE	true
16	(you	_	(you	VBD	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
17	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
18	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	likely	_	likely	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
20	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_s	true
21	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	condiments	_	condiment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	if	_	if	IN	O	_	i	_	0	IGNORE	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	weren't	_	weren't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	true
27	explained	_	explain	VBD	O	(m<root> / --LEX--  :ARG1 (i<s>)  :ARG2 (y<o>)  :condition-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
28	to	_	to	IN	O	_	-	_	0	IGNORE	true
29	you)	_	you)	NNP	O	_	-	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@t@@small, 10@@s@@see-01, 20@@s@@think-01, 3@@d@@salads, 9@@n@@ever, 27@@m@@explain-01, 19@@s@@likely-01, 23@@d@@condiment, 11@@s@@place-01, 26@@explicitanon0@@-, 13@@d@@in-front-of, 7@@r@@plate, 6@@m@@most, 2@@p@@_NAME_, 16@@d@@(you, 18@@s@@most]
sentence=1	The	the	the	DT	O	_	describe-01	_	0	IGNORE	true
2	duck	_	duck	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
3	was	_	be	VBD	O	_	foot	_	0	IGNORE	true
4	a	_	a	DT	O	_	foot	_	0	IGNORE	true
5	65%	_	65%	JJ	O	_	foot	_	0	IGNORE	true
6	glob	_	glob	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	of	_	of	IN	O	_	name	_	0	IGNORE	true
8	chewy	_	chewy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	fat	_	fat	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
11	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	resemblance	_	resemblance	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	6	MOD_s	true
13	to	_	to	IN	O	_	resemble-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
15	juicy,	_	juicy,	NNP	O	_	product	_	0	IGNORE	true
16	crispy	_	crispy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	delicacy	_	delicacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	20	MOD_mod	true
20	represents	_	represent	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
21	at	_	at	IN	O	_	thing	_	0	IGNORE	true
22	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	establishments	_	establishment	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@p@@chewy, 19@@p@@usual, 22@@p@@other, 12@@s@@resemble-01, 9@@g@@fat, 6@@r@@glob, 11@@explicitanon0@@-, 23@@b@@establishment, 2@@d@@duck, 20@@s@@represent-01, 16@@p@@crispy, 17@@d@@delicacy]
sentence=1	Somehow,	somehow,	Somehow,	NFP	O	_	cause-01	_	0	IGNORE	true
2	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	supposedly	_	supposedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	suppose-01	(s())	6	MOD_s	true
5	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
7	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	names	_	name	NNS	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	6	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	designers/dresses,	_	designers/dresses,	NNS	O	_	_NAME_	_	0	IGNORE	true
11	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	35	MOD_mod	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	27	APP_s	true
13	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
14	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	describe-01	_	0	IGNORE	true
16	designer	_	designer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
18	dress	_	dress	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	was	_	be	VBD	O	_	person	_	0	IGNORE	true
25	comparing,	_	comparing,	NNP	O	_	and	_	0	IGNORE	true
26	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op1	true
28	"exactly	_	"exactly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	know-01	(mod())	27	MOD_mod	true
29	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
30	dress"	_	dress"	:	O	_	thing	_	0	IGNORE	true
31	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
32	was	_	be	VBD	O	_	person	_	0	IGNORE	true
33	referring	_	refer	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
34	to	_	to	IN	O	_	instead-of-91	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	2	APP_o	true
36	disagreed	_	disagree	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_op2	true
37	with	_	with	IN	O	_	-	_	0	IGNORE	true
38	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
39	observation;	_	observation;	NNP	O	_	and	_	0	IGNORE	true
40	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op3	true
42	that	_	that	IN	O	_	and	_	0	IGNORE	true
43	the	_	the	DT	O	_	thing	_	0	IGNORE	true
44	bodice	_	bodice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
45	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
46	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	41	APP_s	true
47	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	cause-01	(mod())	48	MOD_mod	true
48	low	_	low	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	46	MOD_s	true
49	as	_	as	IN	O	_	equal	_	0	IGNORE	true
50	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
51	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
52	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
53	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	51	MOD_s	true
54	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
55	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@p@@any, 2@@s@@cause-01, 8@@a@@name-01, 3@@d@@she, 16@@d@@designer, 47@@s@@cause-01, 44@@d@@bodice, 5@@explicitanon0@@-, 35@@a@@and, 33@@s@@refer-01, 6@@s@@know-01, 8@@t@@thing, 11@@w@@after, 19@@d@@name, 36@@d@@disagree-01, 12@@d@@i, 53@@s@@have-03, 48@@s@@low-04, 4@@s@@suppose-01, 27@@s@@know-01, 18@@p@@dress, 41@@s@@say-01, 51@@p@@one, 17@@a@@and, 22@@p@@one, 13@@s@@tell-01, 28@@t@@know-01, 46@@s@@come-03]
sentence=1	Unless	unless	unless	IN	O	_	-	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	want	_	want	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
4	to	_	to	TO	O	_	have-condition-91	_	0	IGNORE	true
5	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
6	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	mean-01	(s())	16	APP_op2	true
7	"tell	_	"tell	XX	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
10	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
11	wrong	_	wrong	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	7	APP_o	true
12	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	APP_o	true
15	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	APP_op2	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	force	_	force	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	dress	_	dress	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
22	she's	_	she's	NN	O	_	include-91	_	0	IGNORE	true
23	obviously	_	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	30	MOD_s	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
25	loving"	_	loving"	:	O	_	and	_	0	IGNORE	true
26	approach	_	approach	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	APP_o	true
27	which	_	which	WDT	O	_	i	_	0	IGNORE	true
28	will	_	will	MD	O	_	thing	_	0	IGNORE	true
29	likely	_	likely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	26	MOD_s	true
31	you...	_	you...	NFP	O	_	expressive	_	0	IGNORE	true
32	uh...	_	uh...	RB	O	_	-	_	0	IGNORE	true
33	nowhere	_	nowhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@force-01, 24@@explicitanon0@@-, 29@@s@@likely-01, 5@@s@@take-01, 6@@s@@mean-01, 30@@s@@get-04, 3@@m@@want-01, 7@@s@@"tell-01, 14@@a@@and, 11@@d@@wrong-02, 12@@d@@she, 21@@d@@dress, 16@@a@@and, 2@@d@@you, 9@@d@@customer, 15@@c@@try-01, 33@@d@@nowhere, 23@@s@@obvious-01, 26@@s@@approach-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	felt	_	feel	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	2	MOD_s	true
6	Wedding_Gallery	_name_	Gallery	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	being	_	be	VBG	O	_	slash	_	0	IGNORE	true
9	dishonest	_	dishonest	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	honest-01	(s())	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	wouldn't	_	wouldn't	CD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	trust	_	trust	VBP	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-01	(s(s_UNIFY_o()))	10	APP_op2	true
14	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	to	_	to	TO	O	_	-	_	0	IGNORE	true
16	lace	_	lace	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	13	APP_s	true
17	me	_	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	gown	_	gown	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
22	let	_	let	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
23	alone	_	alone	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	let-$LEMMA$	(mod())	24	MOD_mod	true
24	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	13	APP_o	true
25	them	_	they	PRP	O	_	person	_	0	IGNORE	true
26	with	_	with	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	gown	_	gown	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
29	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
30	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
31	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	day	_	day	NN	O	(p<root> / --LEX--  :poss (h<poss>)  :time-of (a<mod>))	$LEMMA$	(mod(), poss())	31	MOD_mod	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	my	_	my	PRP$	O	_	1	_	0	IGNORE	true
39	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_poss	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@p@@important, 26@@explicitanon0@@-, 23@@p@@let-alone, 36@@p@@day, 5@@s@@resemble-01, 21@@d@@gown, 3@@s@@very, 6@@p@@person, 6@@n@@_NAME_, 28@@d@@gown, 10@@a@@and, 20@@p@@another, 12@@explicitanon0@@-, 16@@s@@lace-up-02, 1@@d@@i, 13@@s@@trust-01, 2@@s@@feel-01, 39@@d@@life, 4@@s@@much, 34@@s@@most, 24@@s@@trust-02, 9@@p@@honest-01, 9@@explicitanon0@@-, 31@@s@@wear-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	would	_	would	MD	O	_	mean-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
5	gone	_	go	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	7	APP_s	true
6	back,	_	back,	NNP	O	_	and	_	0	IGNORE	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	couldn't	_	couldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	find	_	find	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	tire	_	tire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	they'd	_	they'd	RB	O	_	cause-01	_	0	IGNORE	true
15	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
16	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
17	stock	_	stock	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	anywhere	_	anywhere	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
20	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[1@@d@@i, 3@@explicitanon0@@-, 13@@d@@tire, 12@@p@@particular, 19@@p@@else, 18@@b@@anywhere, 10@@s@@find-01, 5@@s@@go-02, 7@@s@@contrast-01, 15@@s@@use-01, 17@@b@@stock, 9@@explicitanon0@@-]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	will	_	will	MD	O	_	-	_	0	IGNORE	true
3	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	4	MOD_mod	true
4	return	_	return	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
5	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	again	_	again	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	(and	_	(and	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
8	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
9	have	_	have	VBP	O	_	obligate-01	_	0	IGNORE	true
10	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	serious	_	serious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	doubts	_	doubt	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
13	about	_	about	IN	O	_	-	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	quality	_	quality	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	12	APP_s	true
16	of	_	of	IN	O	_	name	_	0	IGNORE	true
17	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_poss	true
18	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	20	MOD_s	true
20	performed	_	perform	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_o	true
21	on	_	on	IN	O	_	-	_	0	IGNORE	true
22	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
23	car)	_	car)	NN	O	_	i	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@perform-02, 4@@o@@return-01, 3@@n@@ever, 7@@d@@(and, 11@@s@@serious-02, 5@@b@@there, 12@@s@@doubt-01, 6@@explicitanon0@@again, 10@@explicitanon0@@some, 19@@s@@actual-02, 15@@m@@quality, 8@@n@@now, 17@@d@@work-01, 1@@d@@i, 18@@d@@they]

