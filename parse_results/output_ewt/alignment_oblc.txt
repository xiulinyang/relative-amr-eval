sentence=1	Azzaman	_name_	Azzaman	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	newspaper	_	newspaper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	announcement	_	announcement	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	announce-01	()	3	APP_o	true
6	signed	_	sign	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
7	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	Abdul_Aziz_bin_Muqrin,	_name_	Muqrin,	NNP	O	_	_NAME_	_	0	IGNORE	true
9	an	_	an	DT	O	_	include-91	_	0	IGNORE	true
10	Al-Qaeda	_name_	Al-Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
11	operative	_	operative	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	6	APP_s	true
12	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	Saudi_Arabia	_name_	Arabia	NNP	O	(n<root> / --LEX--  :name-of (c2 / country  :location-of (c<mod>)))	_NAME_	(mod())	11	MOD_mod	true
14	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	an	_	an	DT	O	_	person	_	0	IGNORE	true
16	Islamic	_name_	islamic	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	website	_	website	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
18	'the	_	'the	NNP	O	_	have-org-role-91	_	0	IGNORE	true
19	voice	_	voice	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	Jihad',	_name_	jihad',	NN	O	_	_NAME_	_	0	IGNORE	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
24	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	stated	_	state	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
26	that	_	that	IN	O	_	name	_	0	IGNORE	true
27	"although	_	"although	``	O	(d<root> / --LEX--)	_NAME_	()	34	APP_s	true
28	mutilating	_	mutilate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_o	true
29	dead	_	dead	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	die-01	(s())	30	MOD_s	true
30	bodies	_	body	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	34	MOD_mod	true
33	originally	_	originally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	original	(mod())	34	MOD_mod	true
34	permitted	_	permit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_o	true
35	in	_	in	IN	O	_	and	_	0	IGNORE	true
36	Islam,	islam,	islam,	CD	O	_	and	_	0	IGNORE	true
37	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	25	MOD_s	true
38	in	_	in	IN	O	_	contrast-01	_	0	IGNORE	true
39	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
40	case	_	case	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-03	(mod(), s())	43	MOD_mod	true
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
43	allowed	_	allow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_o	true
44	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
45	Muslims	_name_	Muslims	NNPS	O	(d<root> / --LEX--)	person	()	46	APP_s	true
46	use	_	use	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	43	APP_s	true
47	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
48	against	_	against	IN	O	_	-	_	0	IGNORE	true
49	infidels	_	infidel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_o	true
50	to	_	to	TO	O	_	person	_	0	IGNORE	true
51	deter	_	deter	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	46	MOD_mod	true
52	them	_	they	PRP	O	_	person	_	0	IGNORE	true
53	from	_	from	IN	O	_	-	_	0	IGNORE	true
54	committing	_	commit	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	51	APP_s	true
55	criminal	_	criminal	JJ	O	(d<root> / --LEX--)	$LEMMA$-03	()	54	APP_s	true
56	actions"	_	actions"	XX	O	_	and	_	0	IGNORE	true
57	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[49@@d@@infidel, 30@@d@@body, 11@@o@@operative, 40@@o@@case-03, 11@@h@@have-org-role-91, 19@@b@@voice, 10@@n@@_NAME_, 33@@p@@original, 10@@c2@@criminal-organization, 34@@s@@permit-01, 54@@s@@commit-02, 51@@i@@deter-01, 27@@d@@_NAME_, 28@@s@@mutilate-01, 13@@c2@@country, 5@@d@@announce-01, 13@@n@@_NAME_, 55@@d@@criminal-03, 11@@p@@person, 32@@explicitanon0@@-, 3@@s@@mention-01, 17@@b@@website, 29@@s@@die-01, 39@@d@@this, 1@@n@@_NAME_, 45@@d@@person, 16@@n@@_NAME_, 46@@s@@use-01, 5@@t@@thing, 43@@s@@allow-01, 2@@d@@newspaper, 25@@s@@state-01, 16@@r@@religious-group, 37@@s@@contrast-01, 6@@s@@sign-01]
sentence=1	One	one	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	0	ROOT	true
3	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	2	_	0	IGNORE	true
5	the_Rest_and_Recuperation	_name_	Recuperation	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	2	APP_s	true
6	Program,	program,	program,	NN	O	_	include-91	_	0	IGNORE	true
7	wherein	_	wherein	WRB	O	_	cause-01	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	child	_	child	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_mod	true
11	come	_	come	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	10	APP_s	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	a_few_weeks	_name_	week	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
17	in	_	in	IN	O	_	after	_	0	IGNORE	true
18	the_summer	_name_	summer	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	11	MOD_mod	true
19	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@g@@come-01, 14@@n@@_NAME_, 10@@s@@possible-01, 9@@d@@child, 16@@n@@_NAME_, 18@@c@@city, 14@@c@@country, 18@@n@@_NAME_, 5@@n@@_NAME_, 2@@s@@include-91]
sentence=1	Musharraf	_name_	Musharraf	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	held	_	hold	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	14	APP_s	true
3	elections	_	election	NNS	O	(d<root> / --LEX--)	elect-01	()	2	APP_o	true
4	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
5	October	_name_	October	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	10	(mod())	2	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	2002,	_	2002,	CD	O	_	and	_	0	IGNORE	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	which	_	which	WDT	O	_	name	_	0	IGNORE	true
10	center-right	_	center-right	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	parties	_	party	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_o	true
13	well,	_	well,	NNS	O	_	and	_	0	IGNORE	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
15	in	_	in	IN	O	_	name	_	0	IGNORE	true
16	which	_	which	WDT	O	_	name	_	0	IGNORE	true
17	nearly	_	nearly	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	near	(op1(), mod())	23	MOD_mod	true
18	20	_	20	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	_NUMBER_	()	17	APP_op1	true
19	percent	_	percent	NN	O	_	person	_	0	IGNORE	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	parliament	_	parliament	NN	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
22	seats	_	seat	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	23	APP_s	true
23	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-10	(s(), o())	14	APP_o	true
24	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	fundamentalist	_	fundamentalist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
28	party	_	party	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
29	coalition,	_	coalition,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
30	MMA	mma	MMA	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
31	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[1@@p@@person, 30@@n@@_NAME_, 21@@g@@government-organization, 18@@p@@percentage-entity, 21@@n@@_NAME_, 17@@s@@near, 5@@explicitanon0@@10, 1@@n@@_NAME_, 28@@d@@party, 23@@s@@go-10, 10@@p@@_NAME_, 5@@d@@date-entity, 18@@explicitanon1@@_NUMBER_, 12@@s@@do-02, 11@@d@@party, 2@@s@@hold-04, 3@@d@@elect-01, 27@@p@@religious, 22@@s@@seat, 26@@p@@fundamentalist, 14@@s@@contrast-01]
sentence=1	An	an	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	APP_s	true
3	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
4	which	_	which	WDT	O	_	name	_	0	IGNORE	true
5	armed	_	armed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	arm-01	(s())	9	MOD_s	true
6	fundamentalist	_	fundamentalist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	nationalist	_	nationalist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	militias	_	militia	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	proliferate	_	proliferate	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_mod	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	inevitably	_	inevitably	RB	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	possible-01	(s())	15	MOD_s	true
13	a	_	a	DT	O	_	-	_	0	IGNORE	true
14	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	worry	_	worry	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
16	for	_	for	IN	O	_	thing	_	0	IGNORE	true
17	Israel	_name_	Israel	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	15	APP_o	true
18	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[12@@explicitanon0@@-, 2@@n@@_NAME_, 5@@s@@arm-01, 8@@p@@nationalist, 10@@s@@proliferate-01, 17@@n@@_NAME_, 6@@p@@fundamentalist, 15@@s@@worry-02, 2@@c@@country, 14@@p@@security, 17@@c@@country, 12@@p@@possible-01, 9@@d@@militia]
sentence=1	With	with	with	IN	O	_	have-03	_	0	IGNORE	true
2	luck,	_	luck,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
3	the_Kashmir_Valley	_name_	Valley	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	attract	_	attract	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
6	investment	_	investment	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	invest-01	(s())	5	APP_o	true
7	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the_Middle_East	_name_	East	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
10	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	locations	_	location	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	APP_op2	true
12	where	_	where	WRB	O	_	person	_	0	IGNORE	true
13	Muslims	_name_	Muslims	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	are	_	be	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	4	MOD_o	true
15	dominant	_	dominant	JJ	O	(d<root> / --LEX--)	dominate-01	()	11	APP_mod	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	MOD_op1	true
17	become	_	become	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	tourist,	_	tourist,	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_mod	true
22	services	_	service	NNS	O	(d<root> / --LEX--)	serve-01	()	21	APP_op2	true
23	haven	_	haven	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	APP_s	true
24	within	_	within	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
25	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	24	APP_op1	true
26	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[15@@d@@dominate-01, 8@@w@@world-region, 8@@n2@@_NAME_, 6@@s@@invest-01, 20@@d@@educate-01, 9@@a@@and, 16@@a@@and, 24@@b@@within, 11@@b@@location, 14@@s@@person, 3@@c@@company, 23@@p@@haven, 10@@p@@other, 22@@d@@serve-01, 25@@n@@_NAME_, 5@@s@@attract-01, 21@@a@@and, 13@@n@@_NAME_, 13@@r@@religious-group, 4@@s@@possible-01, 17@@s@@become-01, 3@@n@@_NAME_, 25@@c@@country]
sentence=1	Despite	despite	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
2	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	wrinkles,	_	wrinkles,	NNP	O	_	and	_	0	IGNORE	true
4	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	remains	_	remain	VBZ	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
6	a	_	a	DT	O	_	have-concession-91	_	0	IGNORE	true
7	part-democracy	_	part-democracy	NN	O	(p<root> / political-party  :name (n / --LEX--))	democracy	()	5	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	merely	_	merely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	signing	_	sign	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-04	(s())	25	APP_s	true
11	on	_	on	RP	O	_	cause-01	_	0	IGNORE	true
12	to	_	to	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
16	paper	_	paper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	calls	_	call	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	14	MOD_s	true
19	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
20	an	_	an	DT	O	_	1	_	0	IGNORE	true
21	independent	_	independent	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	depend-01	(s())	22	MOD_s	true
22	Kashmir	_name_	Kashmir	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	18	APP_o	true
23	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
25	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	8	APP_op2	true
26	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
27	into	_	into	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
29	trouble	_	trouble	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	25	APP_o	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	writing	_	write	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_o	true
32	an	_	an	DT	O	_	resemble-01	_	0	IGNORE	true
33	op-ed	_	op-ed	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	sense-02	(s())	34	MOD_s	true
34	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	against	_	against	IN	O	_	oppose-01	_	0	IGNORE	true
36	Sonia_Gandhi	_name_	Gandhi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	37	APP_op1	true
37	or	_	or	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	34	MOD_mod	true
38	Atal_Behari_Vajpayee	_name_	Vajpayee	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	37	APP_op2	true
39	would	_	would	MD	O	_	name	_	0	IGNORE	true
40	instantly	_	instantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	instant	(s())	31	MOD_s	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@p@@paper, 18@@s@@call-03, 22@@w@@world-region, 5@@s@@remain-01, 38@@n@@_NAME_, 38@@p@@person, 33@@s@@sense-02, 4@@n@@_NAME_, 22@@n2@@_NAME_, 25@@s@@get-04, 24@@explicitanon0@@-, 4@@c@@country, 34@@d@@piece, 21@@s@@depend-01, 8@@a@@and, 37@@a@@or, 7@@n@@democracy, 14@@d@@piece, 7@@p@@political-party, 2@@explicitanon0@@many, 9@@p@@merely, 10@@s@@sign-on-04, 36@@p@@person, 36@@n@@_NAME_, 40@@s@@instant, 31@@s@@write-01, 29@@s@@trouble, 26@@d@@you]
sentence=1	Four	four	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	3	MOD_mod	true
2	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	months,	_	months,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	took	_	take	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_mod	true
8	advantage	_	advantage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	little-known,	_	little-known,	JJ	O	_	so	_	0	IGNORE	true
12	little-invoked	_	little-invoked	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	provoke-01	(s())	13	MOD_s	true
13	regulation	_	regulation	NN	O	(d<root> / --LEX--)	regulate-01	()	7	APP_o2	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	allowed	_	allow	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	desert	_	desert	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
19	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	"band	_	"band	XX	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	of	_	of	IN	O	_	person	_	0	IGNORE	true
22	brothers"	_	brothers"	CD	O	_	mean-01	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@d@@"band, 2@@p@@whole, 12@@n@@provoke-01, 15@@s@@allow-01, 3@@p@@months,, 8@@d@@advantage, 12@@explicitanon0@@-, 1@@explicitanon0@@4, 7@@b@@take-01, 4@@n@@after, 13@@d@@regulate-01, 6@@d@@he, 18@@s@@desert-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	1970	_name_	1970	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
3	evaluation	_	evaluation	NN	O	(d<root> / --LEX--)	evaluate-01	()	4	APP_s	true
4	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	“clearly	_	“clearly	RB	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	stands	_	stand	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-06	(s(), o())	16	APP_op1	true
8	out	_	out	RP	O	_	rate-entity-91	_	0	IGNORE	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	top	_	top	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	notch	_	notch	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	fighter	_	fighter	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	fight-01	(s())	14	MOD_s	true
14	interceptor	_	interceptor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
15	pilot”	_	pilot”	XX	O	_	person	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	“a	_name_	“a	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	20	MOD_mod	true
19	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	20	MOD_s	true
20	leader	_	leader	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	16	APP_op2	true
21	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
22	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
23	contemporaries	_	contemporary	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	24	APP_s	true
24	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
25	to	_	to	IN	O	_	name	_	0	IGNORE	true
26	for	_	for	IN	O	_	name	_	0	IGNORE	true
27	leadership.	_	leadership.	NN	O	_	have-rel-role-91	_	0	IGNORE	true
28	”	_	"	.	O	_	person	_	0	IGNORE	true

nodealignment=[16@@a@@and, 13@@s@@fight-01, 20@@p2@@person, 4@@s@@say-01, 2@@explicitanon2@@_NUMBER_, 6@@n@@_NAME_, 23@@e2@@contemporary, 5@@p@@person, 12@@p@@notch, 7@@s@@stand-out-06, 19@@s@@natural-03, 14@@d@@interceptor, 2@@d@@date-entity, 20@@e2@@lead-02, 11@@p@@top, 5@@n@@_NAME_, 23@@p2@@person, 18@@p@@name, 24@@s@@look-01, 3@@d@@evaluate-01]
sentence=1	Third	_name_	third	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	2	MOD_mod	true
2	ranking	_	ranking	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
3	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
4	officer,	_	officer,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
5	Briggs	_name_	Briggs	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	signed	_	sign	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	declaration	_	declaration	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	state-01	(o(s()))	6	APP_o	true
9	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	February	_name_	February	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	2	(mod())	6	MOD_mod	true
11	3rd,	_	3rd,	NN	O	_	3	_	0	IGNORE	true
12	1983,	_	1983,	XX	O	_	and	_	0	IGNORE	true
13	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	November	_name_	November	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	11	(mod())	20	MOD_mod	true
16	8th,	_	8th,	CD	O	_	1	_	0	IGNORE	true
17	1982,	_	1982,	JJ	O	_	and	_	0	IGNORE	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	had	_	have	VBD	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
20	authorized	_	authorize	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	search	_	search	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	25	APP_poss	true
25	records	_	record	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	22	APP_s	true
26	"for	_	"for	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
29	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
31	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	pertains	_	pertain	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
34	to	_	to	IN	O	_	and	_	0	IGNORE	true
35	Edwin_P._Wilson,	_name_	wilson,	CD	O	_	_NAME_	_	0	IGNORE	true
36	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	MOD_op1	true
37	the	_	the	DT	O	_	he	_	0	IGNORE	true
38	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	allegations	_	allegation	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	36	APP_op2	true
40	concerning	_	concern	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
41	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
42	activities	_	activity	NNS	O	(d<root> / --LEX--)	$LEMMA$-06	()	39	APP_s	true
43	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	39	MOD_mod	true
44	February_28th,	_name_	28th,	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	_NAME_	(mod())	43	MOD_mod	true
45	1971,	_	1971,	CD	O	_	and	_	0	IGNORE	true
46	when	_	when	WRB	O	_	i	_	0	IGNORE	true
47	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
48	retired	_	retire	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	43	APP_op1	true
49	from	_	from	IN	O	_	-	_	0	IGNORE	true
50	the	_	the	DT	O	_	person	_	0	IGNORE	true
51	CIA.	cia.	cia.	NN	O	_	_NAME_	_	0	IGNORE	true
52	"	_	"	''	O	_	and	_	0	IGNORE	true

nodealignment=[43@@w@@after, 24@@g@@government-organization, 24@@n@@_NAME_, 33@@s@@pertain-01, 2@@s@@ranking-01, 38@@p@@various, 48@@d@@retire-01, 20@@s@@authorize-01, 10@@explicitanon0@@2, 31@@p@@any, 1@@o@@ordinal-entity, 27@@p@@any, 10@@d@@date-entity, 5@@n@@_NAME_, 22@@s@@search-01, 15@@explicitanon1@@11, 6@@c@@sign-01, 25@@m@@record, 3@@n@@_NAME_, 1@@explicitanon0@@3, 8@@c@@state-01, 28@@d@@material, 3@@g@@government-organization, 39@@s@@allege-01, 42@@d@@activity-06, 44@@explicitanon1@@_NAME_, 36@@a@@or]
sentence=1	While	while	while	IN	O	_	contrast-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	name	_	0	IGNORE	true
3	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_poss	true
4	army	_	army	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	12	APP_s	true
5	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
6	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	APP_op1	true
7	rock-solid	_	rock-solid	JJ	O	(d<root> / --LEX--)	man	()	6	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	western	_	western	JJ	O	(n2<root> / --LEX--  :name-of (w2 / world-region  :mod-of (w<mod>)))	_NAME_	(mod())	6	MOD_mod	true
11	front,	_	front,	NNS	O	_	and	_	0	IGNORE	true
12	and	_	and	CC	O	(a2<root> / --LEX--  :op2 (p2<op2>)  :op1 (s2<op1>)  :time-of (a<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	27	MOD_mod	true
13	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
14	developed	_	develop	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	12	APP_op2	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	capability	_	capability	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	capable-01	(o(s()))	14	APP_o	true
17	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	withstanding	_	withstand	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
19	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	Pakistani	_name_	pakistani	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
21	adventure	_	adventure	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	18	APP_o	true
22	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
23	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	sector,	_	sector,	NNS	O	_	and	_	0	IGNORE	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
27	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
28	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	29	MOD_mod	true
29	vulnerable	_	vulnerable	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	its	_	its	PRP$	O	_	mean-01	_	0	IGNORE	true
32	eastern	_	eastern	JJ	O	(b<root> / --LEX--  :location-of (h<mod>))	east	(mod())	29	MOD_mod	true
33	sector,	_	sector,	NNS	O	_	include-91	_	0	IGNORE	true
34	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
35	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	enemy	_	enemy	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	41	APP_dom	true
37	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
38	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	42	MOD_mod	true
39	a	_	a	DT	O	_	1	_	0	IGNORE	true
40	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	41	MOD_mod	true
41	army	_	army	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	48	APP_op1	true
42	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	27	MOD_s	true
43	a	_	a	DT	O	_	contrast-01	_	0	IGNORE	true
44	multitude	_	multitude	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	secessionist,	_	secessionist,	NNP	O	_	oppose-01	_	0	IGNORE	true
47	terrorist	_	terrorist	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_op2	true
48	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_s	true
49	drug-running	_	drug-running	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	50	MOD_s	true
50	militants	_	militant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_o	true
51	operating	_	operate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	50	MOD_s	true
52	between	_	between	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	27	MOD_mod	true
53	Southeast_Asia	_name_	Asia	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	52	APP_op1	true
54	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
55	northeastern	_	northeastern	JJ	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	northeast	(mod(), poss())	51	MOD_mod	true
56	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	55	APP_poss	true
57	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
58	Bangladesh	_name_	Bangladesh	NNP	O	(n2<root> / --LEX--  :name-of (c2 / country  :path-of (s3<mod>)))	_NAME_	(mod())	51	MOD_mod	true
59	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[48@@a@@and, 50@@d@@militant, 44@@explicitanon0@@multitude, 58@@n2@@_NAME_, 32@@b@@east, 3@@c@@country, 20@@n@@_NAME_, 52@@b@@between, 55@@h@@northeast, 28@@s@@high, 10@@w2@@world-region, 27@@s@@become-01, 19@@p@@any, 56@@c@@country, 53@@n2@@_NAME_, 12@@a2@@and, 6@@s@@become-01, 53@@w@@world-region, 20@@c@@country, 41@@r@@army, 14@@c@@develop-02, 51@@s@@operate-01, 16@@o@@capable-01, 38@@explicitanon0@@-, 58@@c2@@country, 42@@s@@contrast-01, 36@@p@@person, 40@@p@@nation, 29@@d@@vulnerable, 10@@n2@@_NAME_, 4@@m@@army, 7@@d@@man, 3@@n@@_NAME_, 21@@s@@adventure, 18@@s@@withstand-01, 49@@s@@drug-running-01, 47@@d@@terrorist, 36@@f@@enemy, 36@@h@@have-rel-role-91, 56@@n@@_NAME_]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	islands	_	island	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	sit	_	sit	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	aside	_	aside	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	vital	_	vital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	lanes	_	lane	NNS	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	3	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the_Strait_of_Malacca,	_name_	malacca,	CD	O	_	_NAME_	_	0	IGNORE	true
11	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
13	300	_	300	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
14	tankers	_	tanker	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
16	merchant	_	merchant	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	ships	_	ship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	pass	_	pass	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	APP_mod	true
19	daily,	_	daily,	NNP	O	_	person	_	0	IGNORE	true
20	bringing	_	bringing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_o	true
21	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	for	_	for	IN	O	_	and	_	0	IGNORE	true
24	the_Far_East	_name_	East	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
26	Southeast_Asia	_name_	Asia	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	25	APP_op2	true
27	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[4@@p@@aside, 3@@s@@sit-01, 24@@w@@world-region, 2@@d@@island, 6@@p@@vital, 25@@a@@and, 7@@p@@sea, 13@@explicitanon0@@_NUMBER_, 14@@d@@tanker, 26@@n2@@_NAME_, 1@@p@@this, 22@@d@@oil, 24@@n2@@_NAME_, 8@@t@@lane, 18@@s@@pass-02, 17@@d@@ship, 26@@w@@world-region, 16@@p@@merchant, 20@@s@@bringing-01, 15@@a@@and]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	pattern	_	pattern	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	arrests	_	arrest	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
6	seizures	_	seizure	NNS	O	(d<root> / --LEX--)	seize-01	()	5	APP_op2	true
7	indicate	_	indicate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	arms	_	arm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
10	are	_	be	VBP	O	_	person	_	0	IGNORE	true
11	brought	_	bring	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	7	APP_o	true
12	by	_	by	IN	O	_	date-interval	_	0	IGNORE	true
13	the	_	the	DT	O	_	name	_	0	IGNORE	true
14	LTTE	_name_	LTTE	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
15	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	Laos,_Cambodia	_name_	Cambodia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o2	true
18	Thailand	_name_	Thailand	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
19	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	Chittagong,	_name_	chittagong,	CD	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	7	MOD_mod	true
21	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
23	they	_	they	PRP	O	_	person	_	0	IGNORE	true
24	are	_	be	VBP	O	_	person	_	0	IGNORE	true
25	transported	_	transport	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
26	northward	_	northward	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
27	by	_	by	IN	O	_	thing	_	0	IGNORE	true
28	land	_	land	NN	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	to	_	to	IN	O	_	thing	_	0	IGNORE	true
30	Bhutan	_name_	Bhutan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	25	APP_o	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[30@@n@@_NAME_, 25@@s@@transport-01, 18@@n@@_NAME_, 16@@n@@_NAME_, 17@@a@@and, 9@@d@@arm, 2@@s@@pattern, 6@@d@@seize-01, 30@@c@@country, 4@@d@@arrest-01, 28@@t@@land, 16@@c@@country, 26@@a@@northward, 14@@n@@_NAME_, 11@@b@@bring-01, 7@@s@@indicate-01, 18@@c@@country, 5@@a@@and, 14@@o2@@organization, 20@@b@@_NAME_]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	4	MOD_mod	true
4	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	0	ROOT	true
5	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
6	Alabama	_name_	Alabama	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	where	_	where	WRB	O	_	have-org-role-91	_	0	IGNORE	true
8	Mr.	mr.	Mr.	NNP	O	_	governor	_	0	IGNORE	true
9	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
10	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	present	_	present	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_mod	true
12	nearly	_	nearly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	day:	_	day:	NN	O	_	mean-01	_	0	IGNORE	true
15	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	4	MOD_mod	true
16	headquarters	_	headquarters	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	15	MOD_mod	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	Montgomery	_name_	Montgomery	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	US_Senate	_name_	Senate	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	candidate	_	candidate	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	Winton	_name_	Winton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
23	"Red"	"red"	"Red"	.	O	_	have-org-role-91	_	0	IGNORE	true
24	Blount	_name_	Blount	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_poss	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@1, 24@@n@@_NAME_, 15@@p@@person, 6@@s@@state, 11@@s@@present-02, 6@@n2@@_NAME_, 24@@p@@person, 12@@p@@nearly, 16@@w@@headquarters, 9@@n@@_NAME_, 13@@p@@every, 9@@p@@person, 20@@p@@_NAME_, 21@@p@@candidate, 4@@b@@place, 22@@n@@_NAME_, 18@@c@@city, 18@@n@@_NAME_]
sentence=1	GOODWYN:_Archibald	_name_	Archibald	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	frequency	_	frequency	NN	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	13	APP_dom	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
7	Mr.	mr.	Mr.	NNP	O	_	governor	_	0	IGNORE	true
8	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	discussed	_	discuss	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_mod	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	subject	_	subject	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	off-putting	_	off-putting	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	-	(dom())	2	APP_o	true
14	to	_	to	IN	O	_	-	_	0	IGNORE	true
15	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[4@@o@@frequency, 9@@s@@discuss-01, 11@@d@@subject, 1@@p@@person, 8@@n@@_NAME_, 8@@p@@person, 2@@s@@say-01, 1@@n@@_NAME_, 13@@r@@-]
sentence=1	This_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
2	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	4	MOD_mod	true
3	newspaper	_	newspaper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	claimed	_	claim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	7	MOD_mod	true
6	UK	_name_	UK	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	firms	_	firm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	were	_	be	VBD	O	_	person	_	0	IGNORE	true
9	involved	_	involve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
10	in	_	in	IN	O	_	name	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
13	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
14	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
15	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000	(mod())	17	MOD_mod	true
16	of	_	of	IN	O	_	and	_	0	IGNORE	true
17	guns	_	gun	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
18	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
19	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	forces	_	force	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	were	_	be	VBD	O	_	person	_	0	IGNORE	true
22	re-routed	_	re-route	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
23	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
24	al-Qaeda	al-qaeda	al-Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
25	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@d@@newspaper, 1@@n@@_NAME_, 4@@s@@claim-01, 5@@explicitanon0@@2, 6@@c@@country, 9@@s@@involve-01, 22@@s@@re-route-01, 7@@d@@firm, 6@@n@@_NAME_, 2@@explicitanon0@@1, 15@@m@@multiple, 24@@n@@_NAME_, 24@@c2@@criminal-organization, 19@@n@@_NAME_, 12@@s@@deal-01, 15@@explicitanon0@@1000, 19@@c@@country, 17@@d@@gun, 20@@i@@force]
sentence=1	"The	"the	"The	``	O	_	name	_	0	IGNORE	true
2	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	3	MOD_s	true
3	race	_	race	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
6	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	23	APP_o	true
7	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	devil	_	devil	NN	O	(d<root> / --LEX--)	_NAME_	()	16	APP_s	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	able	_	able	JJ	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	6	MOD_mod	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	bring	_	bring	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
17	evil	_	evil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
18	unto	_	unto	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	earth,"	_	earth,"	JJ	O	_	$LEMMA$	_	0	IGNORE	true
21	Jeffs	_name_	Jeffs	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	23	APP_s	true
22	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
23	said	_	say	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
24	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
25	cited	_	cite	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	23	MOD_o	true
26	by	_	by	IN	O	_	and	_	0	IGNORE	true
27	the_Southern_Poverty_Law_Center's	_name_	Center's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
28	"Intelligence	"intelligence	"intelligence	CD	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o2	true
29	Report.	report.	Report.	NNP	O	_	-	_	0	IGNORE	true
30	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[12@@n@@always, 27@@p@@person, 21@@p@@person, 16@@s@@bring-01, 14@@i@@possible-01, 23@@s@@say-01, 28@@d@@"intelligence, 10@@d@@_NAME_, 27@@n@@_NAME_, 21@@n@@_NAME_, 6@@r@@person, 25@@b@@cite-01, 17@@d@@evil, 3@@d@@race, 2@@s@@black-05]
sentence=1	Most	most	Most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	1	MOD_s	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	meeting	_	meet	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_o	true
8	had	_	have	VBD	O	_	person	_	0	IGNORE	true
9	grown	_	grow	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-04	(s(), o())	0	ROOT	true
10	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	Mujahedeen	_name_	Mujahedeen	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	schools	_	school	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	APP_o	true
14	in	_	in	IN	O	_	name	_	0	IGNORE	true
15	Ashraf,	_name_	ashraf,	CD	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	where	_	where	WRB	O	_	i	_	0	IGNORE	true
17	they	_	they	PRP	O	_	person	_	0	IGNORE	true
18	lived	_	live	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_mod	true
19	separated	_	separate	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
20	from	_	from	IN	O	_	-	_	0	IGNORE	true
21	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
22	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	19	APP_o	true
23	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[9@@s@@grow-up-04, 12@@n@@_NAME_, 15@@c@@city, 7@@s@@meet-02, 18@@d@@live-01, 4@@d@@girl, 22@@f@@parent, 1@@p@@Most, 22@@h@@have-rel-role-91, 2@@s@@include-91, 5@@d@@i, 19@@s@@separate-01, 13@@b@@school, 15@@n@@_NAME_, 22@@p@@person]
sentence=1	When	when	when	WRB	O	_	he	_	0	IGNORE	true
2	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	invaded	_	invade	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
4	Kuwait,	kuwait,	kuwait,	CD	O	_	and	_	0	IGNORE	true
5	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	18	MOD_s	true
7	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	8	MOD_mod	true
8	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	transported	_	transport	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	Jordan	_name_	Jordan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	smuggled	_	smuggle	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	--	_	--	:	O	_	mean-01	_	0	IGNORE	true
20	Germany,	germany,	Germany,	NNP	O	_	and	_	0	IGNORE	true
21	France,	france,	france,	CD	O	_	and	_	0	IGNORE	true
22	Canada,	canada,	canada,	CD	O	_	and	_	0	IGNORE	true
23	Denmark,	denmark,	denmark,	NN	O	_	and	_	0	IGNORE	true
24	England,	england,	england,	CD	O	_	_NAME_	_	0	IGNORE	true
25	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
26	--	_	--	:	O	_	$LEMMA$	_	0	IGNORE	true
27	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
28	they	_	they	PRP	O	_	person	_	0	IGNORE	true
29	were	_	be	VBD	O	_	person	_	0	IGNORE	true
30	raised	_	raise	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	25	MOD_o	true
31	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
32	guardians	_	guardian	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	30	APP_s	true
33	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
34	were	_	be	VBD	O	_	person	_	0	IGNORE	true
35	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	37	MOD_mod	true
36	Mujahedeen	_name_	Mujahedeen	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	37	APP_o	true
37	supporters	_	supporter	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	support-01	(s(), o())	32	MOD_s	true
38	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[37@@s@@support-01, 3@@v@@invade-01, 6@@s@@include-91, 30@@s@@raise-03, 25@@n@@_NAME_, 2@@n@@_NAME_, 35@@p@@usual, 10@@s@@transport-01, 18@@d@@country, 15@@s@@smuggle-01, 32@@e2@@guardian, 14@@n@@then, 7@@p@@this, 32@@p2@@person, 12@@c@@country, 36@@o2@@organization, 8@@d@@girl, 17@@p@@various, 36@@n@@_NAME_, 5@@explicitanon0@@many, 2@@c@@country, 13@@a@@and, 25@@c@@country, 12@@n@@_NAME_]
sentence=1	Reporting	reporting	report	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	report-01	(s())	0	ROOT	true
2	from	_	from	IN	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	town	_	town	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
6	Susan_Polk's	_name_	polk's	NN	O	_	_NAME_	_	0	IGNORE	true
7	trial	_	trial	NN	O	(d<root> / --LEX--)	try-02	()	9	APP_s	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-15	(s())	1	APP_s	true
10	on	_	on	RP	O	_	cause-01	_	0	IGNORE	true
11	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@s@@report-01, 4@@s@@town, 9@@s@@go-on-15, 7@@d@@try-02]
sentence=1	"As	"as	"As	LS	O	_	cause-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
3	know,	_	know,	.	O	_	and	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	6	MOD_mod	true
6	provide	_	provide	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	MOD_o	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	scientific	_	scientific	JJ	O	(d<root> / --LEX--)	science	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_o2	true
10	technological	_	technological	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	"entertainment"	_	"entertainment"	NNP	O	_	thing	_	0	IGNORE	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	meetings,	_	meetings,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	21	MOD_o	true
15	but,	_	but,	NN	O	_	and	_	0	IGNORE	true
16	on	_	on	IN	O	_	contrast-01	_	0	IGNORE	true
17	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	occasion,	_	occasion,	NNS	O	_	and	_	0	IGNORE	true
19	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	Chairman	chairman	Chairman	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	21	APP_s	true
21	suggested	_	suggest	VBD	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
22	that	_	that	IN	O	_	and	_	0	IGNORE	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	present	_	present	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	APP_o	true
25	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
26	own	_	own	JJ	O	_	person	_	0	IGNORE	true
27	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
28	view	_	view	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	24	APP_o	true
29	on	_	on	IN	O	_	thing	_	0	IGNORE	true
30	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	the	_	the	DT	O	_	thing	_	0	IGNORE	true
33	part	_	part	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	30	MOD_mod	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_poss	true
37	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	which	_	which	WDT	O	_	i	_	0	IGNORE	true
39	I	i	I	PRP	O	_	person	_	0	IGNORE	true
40	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@h@@part, 14@@s@@and, 5@@p@@usual, 9@@a@@and, 17@@p@@this, 6@@b@@provide-01, 20@@h@@have-org-role-91, 24@@c@@present-01, 20@@p@@person, 10@@d@@technological, 2@@d@@you, 36@@d@@world, 40@@s@@come-01, 27@@s@@personal-02, 19@@d@@our, 28@@s@@view-02, 21@@w@@suggest-01, 20@@o@@Chairman, 8@@d@@science, 4@@d@@i, 30@@d@@event]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	mass	_	mass	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	murder	_	murder	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_s	true
4	happening	_	happen	VBG	O	_	event	_	0	IGNORE	true
5	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	Sudan,	sudan,	sudan,	NN	O	_	mean-01	_	0	IGNORE	true
9	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	name	_	0	IGNORE	true
11	Arab	_name_	Arab	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
12	Moslem	_name_	Moslem	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	regime	_	regime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	massacring	_	massacre	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
16	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
17	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	18	MOD_s	true
18	Christian	_name_	christian	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	15	MOD_mod	true
19	citizens,	_	citizens,	NN	O	_	mean-01	_	0	IGNORE	true
20	has	_	have	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-to-do-with-04	(o2(), s(), o())	0	ROOT	true
21	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o2	true
22	to	_	to	TO	O	_	name	_	0	IGNORE	true
23	do	_	do	VB	O	_	person	_	0	IGNORE	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	Israel	_name_	Israel	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@n@@_NAME_, 6@@n@@now, 12@@p@@_NAME_, 25@@n@@_NAME_, 20@@b@@have-to-do-with-04, 15@@s@@massacre-01, 25@@c@@country, 17@@s@@black-05, 21@@d@@nothing, 11@@n@@_NAME_, 11@@e@@ethnic-group, 3@@d@@murder-01, 13@@d@@regime, 2@@p@@mass, 5@@p@@right, 18@@r@@religious-group]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	APP_s	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_mod	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
8	"popular"	_	"popular"	``	O	_	oppose-01	_	0	IGNORE	true
9	weapon	_	weapon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	identical	_	identical	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	to	_	to	IN	O	_	resemble-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	APP_o	true
16	in	_	in	IN	O	_	thing	_	0	IGNORE	true
17	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	fight	_	fight	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_mod	true
20	organized	_	organized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	organize-01	(s())	21	MOD_s	true
21	crime	_	crime	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	22	APP_op1	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
23	pirates	_	pirate	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	on	_	on	IN	O	_	-	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
27	seas:	_	seas:	NNS	O	_	mean-01	_	0	IGNORE	true
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
29	offensive	_	offensive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	offend-01	(mod())	30	MOD_mod	true
30	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@only, 9@@d@@weapon, 11@@s@@identical-01, 2@@p@@only, 30@@t@@way, 21@@d@@crime-02, 20@@s@@organize-01, 19@@s@@fight-01, 22@@a@@or, 18@@d@@you, 23@@d@@pirate, 29@@p@@offend-01, 5@@s@@fight-01, 7@@s@@new-01, 3@@t@@way, 6@@p@@this, 26@@s@@high-02, 15@@t@@way]
sentence=1	Al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
3	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_o	true
4	anthrax,	_	anthrax,	.	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	raw	_	raw	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	seed	_	seed	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	product	_	product	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
9	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
10	its	_	its	PRP$	O	_	military	_	0	IGNORE	true
11	unweaponized	_	unweaponized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	call-01	(s())	12	MOD_s	true
12	form,	_	form,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	8	MOD_mod	true
13	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
14	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
15	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	13	MOD_mod	true
16	1997,	_	1997,	CD	O	_	and	_	0	IGNORE	true
17	when	_	when	WRB	O	_	and	_	0	IGNORE	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	purchased	_	purchase	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
21	by	_	by	IN	O	_	and	_	0	IGNORE	true
22	Bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
23	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the_Moro_Islamic_Liberation_Front	_name_	Front	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
25	("Moro	("moro	("Moro	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
26	Front"	front"	Front"	NNPS	O	_	mean-01	_	0	IGNORE	true
27	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
28	"MILF")	"milf")	"milf")	NN	O	_	mean-01	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@p@@thing, 3@@s@@have-03, 24@@n@@_NAME_, 24@@c2@@criminal-organization, 1@@n@@_NAME_, 25@@n@@_NAME_, 1@@c2@@criminal-organization, 22@@n@@_NAME_, 22@@p@@person, 15@@p@@at-least, 7@@p@@seed, 20@@s@@purchase-01, 11@@s@@call-01, 13@@w@@since, 8@@d@@product, 6@@p@@raw]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	allegedly	_	allegedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	3	MOD_s	true
3	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
4	at	_	at	IN	O	_	1	_	0	IGNORE	true
5	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	3	APP_o	true
7	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	meetings	_	meeting	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	meet-03	(mod())	3	MOD_mod	true
9	in	_	in	IN	O	_	12	_	0	IGNORE	true
10	the_Summer_of_2001	_name_	2001	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	3	MOD_mod	true
11	in	_	in	IN	O	_	after	_	0	IGNORE	true
12	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
13	at	_	at	IN	O	_	name	_	0	IGNORE	true
14	which	_	which	WDT	O	_	date-entity	_	0	IGNORE	true
15	KSM	_name_	KSM	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_s	true
17	Sufaat	_name_	Sufaat	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_op2	true
18	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
19	present	_	present	JJ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-02	(mod(), s())	8	MOD_mod	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[16@@a@@and, 2@@s@@allege-01, 12@@c@@country, 8@@n@@meet-03, 6@@o@@or, 15@@p@@person, 7@@explicitanon0@@more, 17@@n@@_NAME_, 5@@d@@one, 10@@d@@date-entity, 15@@n@@_NAME_, 17@@p@@person, 12@@n@@_NAME_, 1@@d@@He, 19@@s@@present-02, 10@@explicitanon2@@_NAME_, 3@@s@@be-located-at-91]
sentence=1	Two	two	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	2	MOD_mod	true
2	bombs	_	bomb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	were	_	be	VBD	O	_	person	_	0	IGNORE	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	name	_	0	IGNORE	true
7	Leavenworth,	leavenworth,	leavenworth,	CD	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	5	APP_o	true
8	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
9	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
10	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
11	WTC_1993	_name_	1993	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	defendant	_	defendant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	imprisoned,	_	imprisoned,	NNP	O	_	person	_	0	IGNORE	true
15	addressed	_	address	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	APP_mod	true
16	to	_	to	IN	O	_	thing	_	0	IGNORE	true
17	"Parole	"parole	"parole	CD	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	Officer.	_name_	Officer.	NNP	O	_	_NAME_	_	0	IGNORE	true
19	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@2, 7@@b@@_NAME_, 10@@s@@key-02, 12@@d@@defendant, 5@@s@@send-01, 11@@p@@_NAME_, 15@@s@@address-01, 17@@d@@"parole, 2@@d@@bomb, 4@@p@@also]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	very	_	very	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	interview	_	interview	NN	O	(i<root> / --LEX--  :ARG1 (p<s>)  :medium-of (s<mod>))	$LEMMA$-01	(mod(), s())	36	MOD_mod	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
8	admitted	_	admit	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op1	true
9	9/11,	_	9/11,	NNP	O	_	thing	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	36	APP_op1	true
11	described	_	describe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	codes	_	code	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
15	for	_	for	IN	O	_	thing	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	18	MOD_mod	true
18	targets	_	target	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	planes,	_	planes,	NNS	O	_	_NAME_	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	masterminds	_	mastermind	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	24	APP_s	true
24	admitted	_	admit	VBD	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	36	MOD_mod	true
25	to	_	to	IN	O	_	thing	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Jenny	_name_	Jenny	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
28	code,	_	code,	NNP	O	_	mean-01	_	0	IGNORE	true
29	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
30	code	_	code	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
31	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
32	representing	_	represent	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	30	MOD_mod	true
33	the	_	the	DT	O	_	he	_	0	IGNORE	true
34	date	_	date	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
35	9/11,	_	9/11,	NNP	O	_	name	_	0	IGNORE	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
37	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	APP_op2	true
38	the	_	the	DT	O	_	he	_	0	IGNORE	true
39	symbolism	_	symbolism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
40	of	_	of	IN	O	_	person	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	"Green	"green	"green	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	Birds.	birds.	Birds.	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	36	MOD_mod	true
44	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@d@@they, 37@@s@@use-01, 30@@d@@code, 17@@explicitanon0@@4, 32@@i@@represent-01, 10@@a@@and, 24@@s@@admit-01, 23@@p2@@person, 3@@p@@very, 23@@e2@@mastermind, 11@@s@@describe-01, 27@@n@@_NAME_, 39@@d@@symbolism, 34@@d@@date, 8@@s@@admit-01, 42@@p@@"green, 36@@a@@and, 13@@d@@code, 4@@i@@interview-01, 18@@d@@target, 43@@p@@_NAME_, 14@@s@@use-01]
sentence=1	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	Darunta	_name_	Darunta	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	complex	_	complex	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
5	where	_	where	WRB	O	_	have-org-role-91	_	0	IGNORE	true
6	jihadis	_	jihadi	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
7	trained,	_	trained,	JJ	O	_	have-org-role-91	_	0	IGNORE	true
8	recruits	_	recruit	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$-01	()	10	APP_s	true
9	would	_	would	MD	O	_	person	_	0	IGNORE	true
10	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	green	_	green	JJ	O	(d<root> / --LEX--)	_NAME_	()	10	APP_o	true
12	uniforms,	_	uniforms,	NNPS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	10	MOD_s	true
13	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
14	for	_	for	IN	O	_	except-01	_	0	IGNORE	true
15	Friday	_name_	Friday	NNP	O	(d<root> / date-entity  :weekday (w / --LEX--))	$REPL$	()	13	APP_s	true
16	when	_	when	WRB	O	_	person	_	0	IGNORE	true
17	they	_	they	PRP	O	_	person	_	0	IGNORE	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	washed	_	wash	VBN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[19@@o@@wash-01, 11@@d@@_NAME_, 15@@d@@date-entity, 8@@l@@recruit-01, 3@@n@@_NAME_, 12@@s@@and, 10@@s@@wear-01, 4@@b@@complex, 13@@s@@except-01, 3@@c@@city, 15@@w@@_name_, 8@@p@@person, 6@@p@@_NAME_]
sentence=1	For	for	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	now,	_	now,	NN	O	_	and	_	0	IGNORE	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	is	_	be	VBZ	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	countries	_	country	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	6	APP_s	true
9	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
13	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	14	MOD_mod	true
14	need	_	need	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_mod	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	FX	fx	FX	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	and/or	_	and/or	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	and-or	(mod())	19	MOD_mod	true
18	inflation	_	inflation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	curves	_	curve	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
20	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[11@@d@@we, 16@@p@@_NAME_, 17@@p@@and-or, 8@@g@@country, 18@@p@@inflation, 13@@p@@probable, 3@@p@@this, 6@@s@@list-01, 14@@s@@need-01, 19@@d@@curve]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	are	_	be	VBP	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	-1	_	0	IGNORE	true
5	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	stages	_	stage	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
10	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
11	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	draft	_	draft	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	cover	_	cover	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
18	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	which	_	which	WDT	O	_	i	_	0	IGNORE	true
20	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
21	introduce	_	introduce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
22	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	for	_	for	IN	O	_	thing	_	0	IGNORE	true
24	inclusion	_	inclusion	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	include-01	(mod(), s())	21	MOD_mod	true
25	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	Globalflash	_name_	Globalflash	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
27	(	_	(	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Enron_Europe	_name_	Europe	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	newsletter	_	newsletter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@n@@_NAME_, 21@@s@@introduce-01, 13@@t@@draft-01, 24@@i@@include-01, 5@@p@@final, 26@@n@@_NAME_, 9@@s@@process-02, 8@@p@@this, 29@@n@@_NAME_, 30@@p@@newsletter, 26@@o2@@organization, 6@@s@@stage, 1@@d@@We, 22@@d@@this, 15@@p@@cover, 16@@d@@letter]
sentence=1	Meagan	_name_	Meagan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
3	have	_	have	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	couple	_	couple	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	on	_	on	IN	O	_	thing	_	0	IGNORE	true
10	the_weekend	_name_	weekend	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	January	_name_	January	NNP	O	(explicitanon2<root> / --LEX--  :month-of (d / date-entity  :time-of (s<mod>)))	1	(mod())	3	MOD_mod	true
13	--	_	--	:	O	_	name	_	0	IGNORE	true
14	National_Charity_League	_name_	League	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
15	Senior	senior	Senior	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	Presentation	presentation	Presentation	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
17	(big	_	(big	NNP	O	_	name	_	0	IGNORE	true
18	dance	_	dance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	29	APP_op2	true
19	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
20	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	24	APP_s	true
22	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	21	APP_op2	true
23	are	_	be	VBP	O	_	person	_	0	IGNORE	true
24	committed	_	commit	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
25	to	_	to	TO	O	_	be-located-at-91	_	0	IGNORE	true
26	help	_	help	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
27	with),	_name_	with),	NNP	O	_	mean-01	_	0	IGNORE	true
28	the_Bearkadette_Ball	_name_	Ball	NNP	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	3	APP_o2	true
30	a	_	a	DT	O	_	1	_	0	IGNORE	true
31	winter	_	winter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	party	_	party	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_op3	true
33	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
34	Cotillion	_name_	Cotillion	NNP	O	(p2<root> / person  :name (n / --LEX--)  :beneficiary-of (p<mod>))	_NAME_	(mod())	32	MOD_mod	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@p@@winter, 32@@d@@party-01, 21@@a@@and, 3@@b@@have-03, 34@@n@@_NAME_, 5@@explicitanon0@@couple, 28@@b@@broadcast-program, 14@@o2@@organization, 12@@explicitanon2@@1, 29@@a@@and, 26@@s@@help-01, 8@@d@@thing, 34@@p2@@person, 22@@d@@i, 28@@n4@@_NAME_, 15@@p@@Senior, 10@@n@@_NAME_, 16@@p@@Presentation, 7@@p@@big, 12@@d@@date-entity, 18@@s@@dance-01, 1@@n@@_NAME_, 24@@s@@commit-01, 14@@n@@_NAME_, 1@@p@@person]
sentence=1	With	with	with	IN	O	_	conform-01	_	0	IGNORE	true
2	regard	_	regard	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	global	_	global	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	globe	(mod())	12	MOD_mod	true
6	message,	_	message,	NNS	O	_	and	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
10	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	10	MOD_s	true
12	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	8	MOD_o	true
13	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	points	_	point	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
15	around	_	around	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	fundamental	_	fundamental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	operating	_	operating	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	operate-01	(mod())	18	MOD_mod	true
18	standards	_	standard	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	are	_	be	VBP	O	_	mean-01	_	0	IGNORE	true
20	that	_	that	IN	O	_	and	_	0	IGNORE	true
21	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
23	intended	_	intend	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	8	APP_o	true
24	to	_	to	TO	O	_	thing	_	0	IGNORE	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	global	_	global	JJ	O	(d<root> / --LEX--)	globe	()	23	APP_s	true
27	in	_	in	IN	O	_	thing	_	0	IGNORE	true
28	nature,	_	nature,	NNS	O	_	mean-01	_	0	IGNORE	true
29	applied	_	apply	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	23	APP_o	true
30	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	commodity	_	commodity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op1	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_o	true
34	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	location	_	location	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	33	APP_op2	true
36	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
37	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
38	engage	_	engage	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	APP_mod	true
39	in	_	in	IN	O	_	i	_	0	IGNORE	true
40	trading	_	trading	NN	O	(d<root> / --LEX--)	trade-01	()	41	APP_s	true
41	activities	_	activity	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	38	APP_o	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@a@@standard, 33@@a@@and, 14@@b@@point, 5@@p@@globe, 10@@explicitanon0@@one, 31@@p@@every, 35@@b@@location, 8@@s@@think-01, 26@@d@@globe, 32@@d@@commodity, 11@@s@@include-91, 17@@p@@operate-01, 12@@s@@include-91, 13@@s@@key-02, 16@@p@@fundamental, 41@@s@@activity-06, 37@@d@@we, 38@@s@@engage-01, 7@@d@@i, 23@@f@@intend-01, 29@@s@@apply-02, 40@@d@@trade-01, 34@@p@@every]
sentence=1	So	so	so	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	question	_	question	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
4	whether	_	whether	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true
5	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
6	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	1	MOD_mod	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	publish	_	publish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	info	_	info	NN	O	(d<root> / --LEX--)	$LEMMA$rmation	()	10	APP_o	true
12	about	_	about	IN	O	_	thing	_	0	IGNORE	true
13	fundamental	_	fundamental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	standards	_	standard	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
19	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	report	_	report	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
21	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@explicitanon0@@-, 2@@d@@i, 8@@c@@want-01, 19@@n@@yet, 13@@p@@fundamental, 11@@d@@information, 14@@a@@standard, 3@@s@@question-01, 17@@s@@possible-01, 10@@s@@publish-01, 16@@d@@we, 4@@explicitanon0@@interrogative, 1@@s@@cause-01, 20@@s@@report-01, 7@@d@@you, 6@@explicitanon0@@-]
sentence=1	Would	would	Would	MD	O	_	person	_	0	IGNORE	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	be	_	be	VB	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
7	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
8	the	_	the	DT	O	_	ballistic	_	0	IGNORE	true
9	Global_Operations_Controller	_name_	Controller	NNP	O	(n<root> / --LEX--  :name-of (o / organization  :mod-of (e<mod>)))	_NAME_	(mod())	10	MOD_mod	true
10	meeting	_	meeting	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	meet-03	(mod())	7	APP_op1	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	October	_name_	October	NNP	O	(explicitanon2<root> / --LEX--  :month-of (d / date-entity  :time-of (s<mod>)))	10	(mod())	10	MOD_mod	true
13	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
15	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	10	APP_mod	true
16	have	_	have	VB	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-03	(mod(), s(), o())	15	APP_s	true
17	worldwide	_	worldwide	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	buy-in	_	buy-in	CD	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
20	commitment	_	commitment	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	commit-01	(s())	19	APP_op2	true
21	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
22	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	23	MOD_mod	true
23	standards	_	standard	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	16	APP_mod	true
25	(hopefully)	_	(hopefully)	-LRB-	O	_	and	_	0	IGNORE	true
26	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	28	MOD_mod	true
28	draft	_	draft	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op2	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	a	_	a	DT	O	_	1	_	0	IGNORE	true
31	meaningful	_	meaningful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	33	MOD_s	true
32	exception	_	exception	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	report	_	report	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_s	true
34	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	15	MOD_mod	true

nodealignment=[27@@explicitanon0@@1, 24@@a@@and, 20@@s@@commit-01, 23@@d@@standard, 34@@explicitanon0@@interrogative, 15@@s@@recommend-01, 9@@n@@_NAME_, 12@@d@@date-entity, 9@@o@@organization, 33@@d@@report-01, 17@@p@@worldwide, 31@@s@@meaningful-02, 10@@n@@meet-03, 27@@o@@ordinal-entity, 3@@s@@more, 18@@d@@buy-in, 32@@p@@exception, 4@@s@@appropriate-02, 5@@d@@time, 28@@s@@draft-01, 14@@d@@we, 16@@t@@have-03, 22@@p@@this, 7@@w@@after, 19@@a@@and, 12@@explicitanon2@@10]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	files	_	file	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_op2	true
6	transmitted	_	transmit	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the_ElPaso_Corporation	_name_	Corporation	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
11	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
12	confidential	_	confidential	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	intended	_	intend	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	solely	_	solely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	sole	(mod())	14	MOD_mod	true
16	for	_	for	IN	O	_	and	_	0	IGNORE	true
17	the	_	the	DT	O	_	thing	_	0	IGNORE	true
18	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	individual	_	individual	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
23	entity	_	entity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	to	_	to	TO	O	_	person	_	0	IGNORE	true
25	whom	_	whom	WP	O	_	thing	_	0	IGNORE	true
26	they	_	they	PRP	O	_	person	_	0	IGNORE	true
27	are	_	be	VBP	O	_	person	_	0	IGNORE	true
28	addressed	_	address	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@c@@company, 22@@a@@or, 5@@d@@file-01, 28@@s@@address-02, 21@@d@@individual, 18@@s@@use-01, 1@@p@@this, 14@@s@@intend-01, 2@@d@@email, 10@@n@@_NAME_, 4@@p@@any, 13@@a@@and, 12@@s@@confidential, 15@@p@@sole, 3@@a@@and, 6@@s@@transmit-01, 23@@d@@entity]
sentence=1	A	a	a	DT	O	_	possible-01	_	0	IGNORE	true
2	currency	_	currency	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Transaction	transaction	Transaction	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	transact-01	(s())	0	ROOT	true
4	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
5	Enron_Europe_Finance_&_Trading_Limited	_name_	Limited	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
6	("EEFTL")	("eeftl")	("eeftl")	NN	O	_	have-org-role-91	_	0	IGNORE	true
7	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
8	agent	_	agent	NN	O	(u<root> / --LEX--  :prep-as-of (f<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	Risk_Management_&_Trading_Corp.	_name_	Corp.	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
13	either	_	either	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	(A)	(a)	(A)	NNP	O	_	and	_	0	IGNORE	true
15	for	_	for	IN	O	_	or	_	0	IGNORE	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	case	_	case	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-04	(mod())	34	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	Counterparty	counterparty	counterparty	NN	O	(d<root> / --LEX--)	_NAME_	()	21	APP_s	true
21	submits	_	submit	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
22	an	_	an	DT	O	_	thing	_	0	IGNORE	true
23	offer	_	offer	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
24	to	_	to	TO	O	_	person	_	0	IGNORE	true
25	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_s	true
26	from	_	from	IN	O	_	and	_	0	IGNORE	true
27	EEFTL,_Counterparty	_name_	counterparty	NN	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
28	shall	_	shall	MD	O	_	$LEMMA$	_	0	IGNORE	true
29	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_op1	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	Base	base	Base	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	Currency	currency	Currency	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	Amount	amount	Amount	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	MOD_s	true
35	shall	_	shall	MD	O	_	$LEMMA$	_	0	IGNORE	true
36	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_op2	true
37	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
38	Foreign	foreign	Foreign	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	Currency	currency	Currency	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_o	true
40	Amount,	amount,	amount,	NN	O	_	mean-01	_	0	IGNORE	true
41	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
42	(B)	(b)	(B)	NNP	O	_	-	_	0	IGNORE	true
43	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
44	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
45	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	49	APP_s	true
46	in	_	in	IN	O	_	i	_	0	IGNORE	true
47	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
48	Counterparty	counterparty	counterparty	NN	O	_	$LEMMA$	_	0	IGNORE	true
49	submits	_	submit	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	34	MOD_mod	true
50	an	_	an	DT	O	_	thing	_	0	IGNORE	true
51	offer	_	offer	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_o	true
52	to	_	to	TO	O	_	thing	_	0	IGNORE	true
53	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	51	APP_s	true
54	to	_	to	IN	O	_	company	_	0	IGNORE	true
55	EEFTL,_Counterparty	_name_	counterparty	NN	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	53	APP_s	true
56	shall	_	shall	MD	O	_	$LEMMA$	_	0	IGNORE	true
57	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	62	APP_op1	true
58	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
59	Base	base	Base	NNP	O	_	$LEMMA$	_	0	IGNORE	true
60	Currency	currency	Currency	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	61	MOD_mod	true
61	Amount	amount	Amount	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_s	true
62	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	45	APP_s	true
63	shall	_	shall	MD	O	_	$LEMMA$	_	0	IGNORE	true
64	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	62	APP_op2	true
65	the_Foreign_Currency_Amount	_name_	Amount	NNP	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	64	APP_s	true
66	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[10@@p@@_NAME_, 23@@s@@offer-01, 38@@p@@Foreign, 25@@s@@buy-01, 3@@s@@transact-01, 61@@d@@Amount, 33@@d@@Amount, 32@@p@@Currency, 5@@c@@company, 29@@s@@receive-01, 39@@d@@Currency, 55@@g@@government-organization, 5@@n@@_NAME_, 2@@p@@currency, 20@@d@@_NAME_, 45@@s@@case-04, 17@@p@@case-04, 51@@s@@offer-01, 65@@n@@_NAME_, 64@@s@@receive-01, 27@@c@@company, 53@@s@@sell-01, 62@@a@@and, 34@@a@@and, 36@@s@@pay-01, 31@@p@@Base, 65@@l@@law, 27@@n@@_NAME_, 55@@n@@_NAME_, 21@@t@@submit-01, 60@@p@@Currency, 57@@s@@pay-01, 49@@t@@submit-01, 8@@u@@agent]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	unit	_	unit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	0	ROOT	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	measure	_	measure	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	against	_	against	IN	O	_	thing	_	0	IGNORE	true
6	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	price	_	price	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	10	APP_s	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	quoted	_	quote	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_mod	true
11	shall	_	shall	MD	O	_	most	_	0	IGNORE	true
12	be	_	be	VB	O	_	person	_	0	IGNORE	true
13	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	Dollars	dollars	dollar	NNS	O	(m<root> / --LEX--  :unit-of (a<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
15	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[13@@c@@country, 8@@t@@thing, 4@@p@@measure, 14@@m@@dollar, 13@@n@@_NAME_, 2@@p@@unit, 8@@a@@price-01, 10@@s@@quote-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	made	_	make	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
6	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	red	_	red	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
11	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[6@@s@@change-01, 4@@d@@i, 10@@s@@red-02, 2@@d@@one]
sentence=1	As	as	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(s(), o())	16	MOD_o	true
4	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	an	_	an	DT	O	_	1	_	0	IGNORE	true
7	age	_	age	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
9	intellectual	_	intellectual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	capital	_	capital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
13	valuable,	_	valuable,	NFP	O	_	cause-01	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
16	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
17	for	_	for	IN	O	_	and	_	0	IGNORE	true
18	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
21	to	_	to	TO	O	_	woman	_	0	IGNORE	true
22	obtain	_	obtain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_dom	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	27	MOD_s	true
26	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
27	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	22	APP_o	true
28	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[25@@m@@most, 20@@d@@person, 7@@n@@age, 3@@s@@be-temporally-at-91, 25@@b2@@good-02, 18@@p@@every, 2@@d@@we, 27@@d@@educate-01, 19@@p@@young, 10@@d@@capital, 16@@r@@important, 9@@p@@intellectual, 24@@s@@very, 4@@s@@live-01, 26@@s@@possible-01, 1@@s@@cause-01, 29@@s@@possible-01, 12@@s@@so, 22@@s@@obtain-01]
sentence=1	Unfortunately,	unfortunately,	unfortunately,	CD	O	_	and	_	0	IGNORE	true
2	Mr.	mr.	Mr.	NNP	O	_	governor	_	0	IGNORE	true
3	Lay	_name_	Lay	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
5	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
6	in	_	in	IN	O	_	person	_	0	IGNORE	true
7	San_Jose,_CA	_name_	CA	NNP	O	(u<root> / university  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
8	participating	_	participate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	conference,	_	conference,	NNP	O	_	and	_	0	IGNORE	true
12	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	speaker,	_	speaker,	NNP	O	_	i	_	0	IGNORE	true
17	on	_	on	IN	O	_	9	_	0	IGNORE	true
18	June_14	_name_	14	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	8	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@p@@person, 3@@n@@_NAME_, 5@@s@@be-located-at-91, 7@@u@@university, 7@@n@@_NAME_, 8@@s@@participate-01, 18@@n@@_DATE_]
sentence=1	Although	although	although	IN	O	_	have-concession-91	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	attachments	_	attachment	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_op2	true
7	are	_	be	VBP	O	_	have-concession-91	_	0	IGNORE	true
8	believed	_	believe	VBN	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	45	MOD_mod	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	be	_	be	VB	O	_	have-concession-91	_	0	IGNORE	true
11	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-04	(s(), o())	8	APP_s	true
12	of	_	of	IN	O	_	-	_	0	IGNORE	true
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	virus	_	virus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	defect	_	defect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
20	affect	_	affect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	computer	_	computer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	into	_	into	IN	O	_	-	_	0	IGNORE	true
25	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
28	received	_	receive	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
29	and	_	and	CC	O	_	$LEMMA$	_	20	IGNORE	true
30	opened,	_	opened,	NNS	O	_	and	_	0	IGNORE	true
31	it	_	it	PRP	O	_	i	_	0	IGNORE	true
32	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
33	the	_	the	DT	O	_	and	_	0	IGNORE	true
34	responsibility	_	responsibility	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	responsible-03	(o(s()))	45	APP_op1	true
35	of	_	of	IN	O	_	thing	_	0	IGNORE	true
36	the	_	the	DT	O	_	thing	_	0	IGNORE	true
37	recipient	_	recipient	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	receive-01	()	34	APP_s	true
38	to	_	to	TO	O	_	thing	_	0	IGNORE	true
39	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_o	true
40	that	_	that	IN	O	_	instead-of-91	_	0	IGNORE	true
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
43	virus	_	virus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
44	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	39	APP_o	true
45	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
46	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	47	MOD_mod	true
47	responsibility	_	responsibility	NN	O	(d<root> / --LEX--)	responsible-03	()	49	APP_o	true
48	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
49	accepted	_	accept	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	45	APP_op2	true
50	by	_	by	IN	O	_	government-organization	_	0	IGNORE	true
51	Century_Development	_name_	Development	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	52	APP_op1	true
52	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_s	true
53	any	_	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op2	true
54	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
55	its	_	its	PRP$	O	_	government-organization	_	0	IGNORE	true
56	affiliates	_	affiliate	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	MOD_s	true
57	for	_	for	IN	O	_	and	_	0	IGNORE	true
58	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	60	MOD_mod	true
59	loss	_	loss	NN	O	(d<root> / --LEX--)	lose-02	()	60	APP_op1	true
60	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_o2	true
61	damage	_	damage	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	60	APP_op2	true
62	arising	_	arise	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	60	MOD_s	true
63	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
64	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	68	MOD_mod	true
65	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
66	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
67	its	_	its	PRP$	O	_	-	_	0	IGNORE	true
68	use	_	use	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	62	APP_o	true
69	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@p@@this, 15@@a@@or, 3@@d@@email, 17@@d@@defect, 22@@p@@computer, 61@@d@@damage-01, 37@@e2@@receive-01, 51@@n@@_NAME_, 58@@p@@any, 13@@p@@any, 14@@d@@virus, 52@@a@@or, 56@@s@@affiliate-01, 53@@d@@any, 6@@d@@attachment-01, 60@@a@@or, 46@@explicitanon0@@-, 49@@b@@accept-01, 51@@o2@@organization, 34@@c@@responsible-03, 43@@d@@virus, 21@@p@@any, 62@@s@@arise-01, 16@@p@@other, 23@@d@@system, 44@@s@@free-04, 59@@d@@lose-02, 47@@d@@responsible-03, 5@@p@@any, 4@@a@@and, 11@@s@@free-04, 19@@s@@possible-01, 28@@s@@receive-01, 45@@a@@and, 20@@s@@affect-01, 37@@p2@@person, 8@@s@@believe-01, 39@@s@@ensure-01, 64@@p@@any, 68@@d@@use-01]
sentence=1	Evidently,	evidently,	Evidently,	NFP	O	_	and	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
3	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
4	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	Stacey_White	_name_	White	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	been	_	be	VBN	O	_	person	_	0	IGNORE	true
9	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	4	MOD_o	true
10	of	_	of	IN	O	_	-	_	0	IGNORE	true
11	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	a_couple_of_months	_name_	month	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	9	MOD_mod	true
13	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@p@@person, 13@@n@@now, 4@@r@@problem, 12@@b@@_NAME_, 9@@s@@realize-01, 2@@d@@this, 6@@n@@_NAME_]
sentence=1	Evidently,	evidently,	Evidently,	NFP	O	_	and	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
3	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
4	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	Stacey_White	_name_	White	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	been	_	be	VBN	O	_	person	_	0	IGNORE	true
9	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	4	MOD_o	true
10	of	_	of	IN	O	_	-	_	0	IGNORE	true
11	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	a_couple_of_months	_name_	month	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	9	MOD_mod	true
13	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@r@@problem, 12@@b@@_NAME_, 9@@s@@realize-01, 2@@d@@this, 13@@n@@now, 6@@n@@_NAME_, 6@@p@@person]
sentence=1	Also,	_name_	Also,	NNP	O	_	say-01	_	0	IGNORE	true
2	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
3	those	_	those	DT	O	(d<root> / --LEX--)	that	()	9	APP_s	true
4	of	_	of	IN	O	(p<root> / person  :ARG1-of (p2 / --LEX--  :ARG2 (g<s>)))	include-91	(s())	3	MOD_s	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
6	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
7	have	_	have	VBP	O	_	person	_	0	IGNORE	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	responded	_	respond	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	to	_	to	IN	O	_	person	_	0	IGNORE	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	via	_	via	IN	O	_	i	_	0	IGNORE	true
13	email	_	email	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	confirming	_	confirm	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
16	acceptance	_	acceptance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	accept-01	(s())	14	APP_o	true
17	of	_	of	IN	O	_	i	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	terms	_	term	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	APP_s	true
20	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
23	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	24	MOD_mod	true
24	companies	_	company	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	26	APP_s	true
25	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	9	APP_o	true
26	agreed	_	agree	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	APP_mod	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	assume	_	assume	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_o	true
29	cost	_	cost	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_s	true
30	responsibility	_	responsibility	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	responsible-03	(s(), o())	28	APP_o	true
31	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
32	the	_	the	DT	O	_	thing	_	0	IGNORE	true
33	TCA	_name_	TCA	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	APP_o	true
35	on	_	on	IN	O	_	thing	_	0	IGNORE	true
36	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@explicitanon0@@-, 14@@s@@confirm-01, 4@@p2@@include-91, 26@@c@@agree-01, 25@@s@@person, 5@@d@@you, 22@@d@@our, 28@@s@@assume-01, 19@@p@@term-01, 36@@d@@this, 3@@d@@that, 13@@l@@email, 9@@s@@respond-01, 24@@m@@company, 30@@s@@responsible-03, 33@@n@@_NAME_, 29@@d@@cost-01, 4@@p@@person, 16@@s@@accept-01, 23@@explicitanon0@@4, 33@@o2@@organization, 34@@s@@work-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	idea	_	idea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
8	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	signed	_	sign	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
10	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
11	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	ECS	_name_	ECS	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
14	would	_	would	MD	O	_	thing	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	able	_	able	JJ	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	6	MOD_mod	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	complete	_	complete	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
20	that	_	that	IN	O	_	$LEMMA$	_	2	IGNORE	true
21	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	start	_	start	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op1	true
25	date,	_	date,	NNP	O	_	and	_	0	IGNORE	true
26	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
27	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	negotiated	_	negotiate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
29	a	_	a	DT	O	_	thing	_	0	IGNORE	true
30	fall	_	fall	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	32	MOD_mod	true
31	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	plan	_	plan	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	28	APP_s	true
33	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
35	ECS	_name_	ECS	NNP	O	_	_NAME_	_	0	IGNORE	true
36	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
37	obligated	_	obligate	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	32	APP_mod	true
38	to	_	to	IN	O	_	thing	_	0	IGNORE	true
39	"assist	_	"assist	ADD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	37	APP_o	true
40	[Transwestern]	_name_	[transwestern]	XX	O	_	and	_	0	IGNORE	true
41	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
42	developing	_	develop	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	39	APP_o	true
43	a	_	a	DT	O	_	thing	_	0	IGNORE	true
44	manual	_	manual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
46	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
47	accomplish	_	accomplish	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	42	MOD_mod	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	50	MOD_s	true
50	result	_	result	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	47	APP_s	true
51	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	37	APP_s	true
52	will	_	will	MD	O	_	thing	_	0	IGNORE	true
53	hold	_	hold	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	55	APP_op1	true
54	harmless	_	harmless	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_s	true
55	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	51	APP_op2	true
56	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	55	APP_op2	true
57	[Transwestern]	_name_	[transwestern]	XX	O	_	and	_	0	IGNORE	true
58	whole	_	whole	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_s	true
59	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
60	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	61	MOD_mod	true
61	cost	_	cost	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	62	APP_op2	true
62	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	56	APP_o	true
63	expenses"	_	expenses"	NNP	O	_	thing	_	0	IGNORE	true
64	associated	_	associate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	61	MOD_s	true
65	with	_	with	IN	O	_	-	_	0	IGNORE	true
66	the	_	the	DT	O	_	person	_	0	IGNORE	true
67	manual	_	manual	JJ	O	_	$LEMMA$	_	0	IGNORE	true
68	system	_	system	NN	O	_	$LEMMA$	_	0	IGNORE	true
69	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@o@@obligate-01, 39@@s@@-, 47@@i@@accomplish-01, 60@@p@@all, 56@@s@@keep-01, 58@@d@@whole, 2@@s@@have-03, 64@@s@@associate-01, 30@@p@@fall-01, 19@@s@@complete-01, 28@@s@@negotiate-01, 13@@c@@company, 50@@t@@thing, 6@@d@@idea, 11@@d@@contract, 17@@i@@possible-01, 49@@s@@same-01, 13@@n@@_NAME_, 1@@d@@We, 44@@p@@manual, 51@@a@@and, 50@@a@@result-01, 21@@w@@by, 42@@s@@develop-02, 62@@a@@and, 45@@d@@system, 61@@d@@cost-01, 31@@p@@back, 4@@s@@pretty, 15@@explicitanon0@@-, 32@@b@@plan-01, 55@@a@@and, 5@@s@@good-02, 26@@s@@cause-01, 53@@s@@hold-01, 24@@s@@start-01, 9@@t@@sign-01, 23@@d@@contract, 54@@d@@harmless]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	meantime,	_	meantime,	NNS	O	_	say-01	_	0	IGNORE	true
4	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	7	MOD_mod	true
7	provide	_	provide	VB	O	(l<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (i<o>)  :ARG0 (y<s>))	$LEMMA$-01	(o(s()))	4	APP_s	true
8	a	_	a	DT	O	_	interrogative	_	0	IGNORE	true
9	contact	_	contact	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	side	_	side	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
13	with	_	with	IN	O	_	thing	_	0	IGNORE	true
14	whom	_	whom	WP	O	_	amr-unknown	_	0	IGNORE	true
15	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
17	discuss	_	discuss	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_o2	true
18	technical	_	technical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	17	APP_o	true
20	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[15@@d@@we, 17@@b@@discuss-01, 16@@s@@possible-01, 7@@l@@provide-01, 18@@p@@technical, 6@@explicitanon0@@+, 19@@d@@issue-02, 20@@explicitanon0@@interrogative, 7@@explicitanon0@@imperative, 9@@s@@contact-01, 12@@b@@side-01, 4@@s@@possible-01, 5@@d@@you]
sentence=1	Payment	payment	payment	NN	O	(d<root> / --LEX--)	pay-01	()	2	APP_s	true
2	shall	_	shall	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
3	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	monetary-quantity	(s(), o())	2	MOD_s	true
4	made,	_	made,	NN	O	_	have-condition-91	_	0	IGNORE	true
5	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	receipt	_	receipt	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	receive-01	(s())	3	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	required	_	require	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	documents	_	document	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
12	outlined	_	outline	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
13	in	_	in	IN	O	_	conform-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	General	general	General	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	Terms	terms	Terms	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	MOD_op1	true
18	Conditions,	_name_	conditions,	NN	O	_	thing	_	0	IGNORE	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	Contractual	contractual	Contractual	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	Currency	currency	Currency	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
23	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
24	telegraphic	_	telegraphic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	idiot	(mod())	25	MOD_mod	true
25	transfer	_	transfer	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	27	MOD_mod	true
26	no	_	no	RB	O	_	-	_	0	IGNORE	true
27	later	_	later	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
28	than	_	than	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	less-$LEMMA$	(op1(), mod())	2	MOD_mod	true
29	30	_	30	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	31	MOD_mod	true
30	calendar	_	calendar	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	days	_	day	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	28	APP_op1	true
32	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
33	the	_	the	DT	O	_	date-entity	_	0	IGNORE	true
34	date	_	date	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	APP_op1	true
35	on	_	on	IN	O	_	thing	_	0	IGNORE	true
36	which	_	which	WDT	O	_	i	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	Commodity	_name_	Commodity	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
39	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
40	released	_	release	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	34	APP_mod	true
41	to	_	to	IN	O	_	and	_	0	IGNORE	true
42	Buyer	_name_	Buyer	NNP	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	buy-01	()	40	APP_o	true
43	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[25@@t@@transfer-01, 15@@s@@General-02, 42@@p2@@person, 21@@p@@Contractual, 24@@p@@idiot, 30@@p@@calendar, 40@@s@@release-01, 28@@s@@less-than, 38@@d@@Commodity, 31@@t@@temporal-quantity, 32@@w@@after, 3@@s@@monetary-quantity, 31@@m@@day, 34@@n@@date, 11@@d@@document, 2@@s@@recommend-01, 7@@s@@receive-01, 17@@a@@and, 29@@explicitanon0@@_NUMBER_, 22@@b@@Currency, 1@@d@@pay-01, 12@@s@@outline-01, 42@@e2@@buy-01, 27@@p@@later, 10@@s@@require-01, 16@@d@@Terms]
sentence=1	The	the	the	DT	O	_	describe-01	_	0	IGNORE	true
2	unit	_	unit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	measure	_	measure	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	against	_	against	IN	O	_	thing	_	0	IGNORE	true
6	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	price	_	price	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	10	APP_s	true
9	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
10	quoted	_	quote	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
11	shall	_	shall	MD	O	_	$LEMMA$	_	0	IGNORE	true
12	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	17	MOD_s	true
13	net	_	net	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	MOD_s	true
14	tons	_	ton	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	(2000	_	(2000	ADD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	17	MOD_mod	true
16	lbs)	_	lbs)	NNP	O	_	$LEMMA$	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
18	the	_	the	DT	O	_	year	_	0	IGNORE	true
19	quantity	_	quantity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	shown	_	show	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op2	true
21	shall	_	shall	MD	O	_	rate-entity-91	_	0	IGNORE	true
22	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	in	_	in	IN	O	_	after	_	0	IGNORE	true
24	net	_	net	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	25	MOD_s	true
25	tons	_	ton	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
26	per	_	per	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	rate-entity-91	(s(), o())	20	APP_o	true
27	month	_	month	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	26	APP_o	true
28	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[25@@d@@ton, 27@@t@@temporal-quantity, 20@@s@@show-01, 8@@t@@thing, 19@@d@@quantity, 12@@s@@person, 17@@a@@and, 26@@s@@rate-entity-91, 13@@s@@net, 14@@d@@ton, 27@@m@@month, 10@@s@@quote-01, 2@@d@@unit, 8@@a@@price-01, 4@@p@@measure, 15@@explicitanon0@@_NUMBER_, 24@@s@@net]
sentence=1	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
2	primary	_	primary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	7	MOD_mod	true
7	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	for	_	for	IN	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	scenario	_	scenario	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
12	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	company	_	0	IGNORE	true
14	muni	_	muni	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
15	does	_	do	VBZ	O	_	$LEMMA$-02	_	0	IGNORE	true
16	a	_	a	DT	O	_	company	_	0	IGNORE	true
17	derivative	_	derivative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	APP_op1	true
19	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
20	an	_	an	DT	O	_	monet$LEMMA$ry-qu$LEMMA$ntity	_	0	IGNORE	true
21	open-ended	_	open-ended	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-01	(s())	30	MOD_s	true
22	downside,	_	downside,	NNP	O	_	and	_	0	IGNORE	true
23	loses	_	lose	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
24	$50	_	$50	IN	O	(d<root> / --LEX--)	_NUMBER_	()	23	APP_o	true
25	million,	_	million,	NFP	O	_	and	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_s	true
27	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	claims	_	claim	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op2	true
29	that	_	that	IN	O	_	contrast-01	_	0	IGNORE	true
30	it	_	it	PRP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	3	MOD_s	true
31	was	_	be	VBD	O	_	person	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	true
33	a	_	a	DT	O	_	1	_	0	IGNORE	true
34	valid	_	valid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	35	MOD_s	true
35	contract	_	contract	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	28	APP_s	true
36	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@cause-01, 18@@s@@deal-01, 6@@p@@this, 14@@d@@muni, 5@@s@@need-01, 21@@s@@open-01, 4@@d@@we, 30@@s@@it, 23@@s@@lose-02, 27@@n@@then, 32@@explicitanon0@@-, 17@@p@@derivative, 26@@a@@and, 7@@d@@thing, 11@@b@@scenario, 24@@d@@_NUMBER_, 35@@d@@contract-02, 34@@s@@valid-02, 2@@p@@primary, 28@@s@@claim-01]
sentence=1	As	as	as	RB	O	_	cause-01	_	0	IGNORE	true
2	far	_	far	RB	O	_	as-$LEMMA$-as	_	0	IGNORE	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	EEI	eei	EEI	NNP	O	(p<root> / publication  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	goes,	_	goes,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	and	(s())	10	APP_o	true
7	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
8	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	remaining	_	remaining	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	I'm	i'm	I'm	NNS	O	_	_NAME_	_	0	IGNORE	true
13	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	10	MOD_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	(aside	_	(aside	NFP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	finalizing	_	finalize	VBG	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	LOC)	_name_	LOC)	NNP	O	_	_NAME_	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
21	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
22	we've	_	we've	NN	O	_	thing	_	0	IGNORE	true
23	finished	_	finish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
24	coordinating	_	coordinate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
25	the	_	the	DT	O	_	thing	_	0	IGNORE	true
26	Attachment	_name_	Attachment	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	containing	_	contain	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_o	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	prior	_	prior	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	transactions	_	transaction	NNS	O	(d<root> / --LEX--)	transact-01	()	29	APP_s	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[32@@d@@transact-01, 23@@s@@finish-01, 26@@d@@Attachment, 9@@s@@remaining-01, 10@@s@@issue-02, 13@@s@@realize-01, 17@@i@@finalize-01, 8@@p@@only, 5@@n@@_NAME_, 5@@p@@publication, 31@@p@@prior, 6@@s@@and, 15@@s@@(aside-01, 27@@s@@contain-01, 29@@s@@list-01, 24@@s@@coordinate-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	guess	_	guess	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
4	questions	_	question	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	which	_	which	WDT	O	_	i	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
8	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	9	MOD_s	true
9	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
10	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	steer	_	steer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_o	true
12	are:	_	are:	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	(a)	_	(a)	.	O	_	and	_	0	IGNORE	true
14	Do	do	Do	VBP	O	_	person	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
16	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
17	a	_	a	DT	O	_	interrogative	_	0	IGNORE	true
18	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	sensitivity	_	sensitivity	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	2	MOD_o	true
20	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	reference	_	reference	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	19	APP_s	true
23	to	_	to	IN	O	_	and	_	0	IGNORE	true
24	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	25	MOD_s	true
25	faith	_	faith	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	proceedings	_	proceeding	NNS	O	(d<root> / --LEX--)	proceeding-02	()	22	APP_s	true
27	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
28	by	_	by	IN	O	_	-	_	0	IGNORE	true
29	United_India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
30	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	2	MOD_mod	true

nodealignment=[22@@s@@reference-04, 29@@c@@country, 9@@s@@like-01, 15@@d@@you, 7@@d@@i, 29@@n@@_NAME_, 4@@s@@question-01, 25@@p@@faith, 24@@s@@bad-07, 19@@s@@sensitivity, 18@@p@@particular, 26@@d@@proceeding-02, 1@@d@@i, 11@@s@@steer-01, 30@@explicitanon0@@interrogative, 10@@d@@your, 2@@b@@guess-01, 8@@s@@recommend-01]
sentence=1	"All	"all	"all	XX	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_s	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	preparation	_	preparation	NN	O	(d<root> / --LEX--)	prepare-02	()	5	APP_op2	true
10	I	i	I	PRP	O	_	$REPL$	_	34	IGNORE	true
11	did	_	do	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
12	leading	_	lead	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-05	(s(), o())	9	MOD_s	true
13	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	trip	_	trip	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	12	APP_o	true
17	gave	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
18	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	indication	_	indication	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	indicate-01	(s(), o())	34	APP_o	true
20	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
21	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
22	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	bears	_	bear	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	Soper_[River]	_name_	[river]	XX	O	_	_NAME_	_	0	IGNORE	true
27	valley	_	valley	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	where	_	where	WRB	O	_	location	_	0	IGNORE	true
29	we	_	we	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
30	were	_	be	VBD	O	_	person	_	0	IGNORE	true
31	canoeing,"	_	canoeing,"	NNP	O	_	expressive	_	0	IGNORE	true
32	Dr.	dr.	Dr.	NNP	O	_	_NAME_	_	0	IGNORE	true
33	Fortier	_name_	Fortier	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@n@@_NAME_, 33@@p@@person, 12@@s@@lead-up-05, 1@@explicitanon0@@"all, 18@@explicitanon0@@-, 5@@a@@and, 19@@s@@indicate-01, 27@@b@@valley, 9@@d@@prepare-02, 23@@d@@bear, 29@@b@@we, 34@@s@@say-01, 6@@p@@all, 16@@d@@trip-03, 4@@d@@research-01]
sentence=1	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
2	far	_	far	RB	O	_	as-$LEMMA$-as	_	0	IGNORE	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	pre	_	pre	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	order	_	order	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
6	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	true
7	to	_	to	IN	O	_	thing	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	APP_op2	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
15	retailers	_	retailer	NNS	O	(d<root> / --LEX--)	vend-01	()	12	APP_s	true
16	that	_	that	WDT	O	_	and	_	0	IGNORE	true
17	carry	_	carry	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
20	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
21	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	websites	_	website	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op3	true
25	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
27	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	MOD_s	true
28	order	_	order	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	off	_	off	RB	O	_	$LEMMA$	_	0	IGNORE	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@d@@you, 9@@d@@they, 6@@s@@go-01, 27@@s@@possible-01, 5@@d@@order-01, 21@@p@@also, 4@@p@@pre, 14@@s@@major-02, 28@@s@@order-01, 17@@s@@carry-01, 23@@explicitanon0@@few, 15@@d@@vend-01, 8@@a@@and, 12@@s@@list-01, 24@@d@@website, 10@@s@@have-03]
sentence=1	Amid	amid	amid	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	worsening	_	worsen	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
3	conditions,	_name_	conditions,	NNP	O	_	and	_	0	IGNORE	true
4	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	5	APP_s	true
5	plan	_	plan	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	5	MOD_o	true
7	evacuate	_	evacuate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	New_Orleans	_name_	Orleans	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	stadium	_	stadium	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	up	_	up	IN	O	_	name	_	0	IGNORE	true
13	to	_	to	TO	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	up-$LEMMA$	(op1(), mod())	15	MOD_mod	true
14	20,000	_	20,000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	13	APP_op1	true
15	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_s	true
16	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_mod	true
17	shelter	_	shelter	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
18	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[17@@d@@shelter-01, 6@@s@@person, 4@@e@@official, 2@@s@@worsen-01, 9@@n@@_NAME_, 4@@p@@person, 16@@s@@take-01, 15@@d@@person, 7@@s@@evacuate-01, 10@@b@@stadium, 13@@s@@up-to, 9@@c@@city, 5@@c@@plan-01, 14@@d@@_NUMBER_, 4@@h@@have-org-role-91]
sentence=1	Also,	_name_	Also,	NNP	O	_	$LEMMA$-01	_	0	IGNORE	true
2	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
3	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	own	_	own	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	MOD_s	true
5	webpage,	_	webpage,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	reasons	_	reason	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
7	why	_	why	WRB	O	_	cause-01	_	0	IGNORE	true
8	NASA	_name_	NASA	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	6	APP_s	true
10	important,	_	important,	NNS	O	_	thing	_	0	IGNORE	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	5th	_name_	5th	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	5	(mod())	14	MOD_mod	true
14	grade	_	grade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	format	_	format	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
16	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[6@@s@@reason, 13@@explicitanon0@@5, 8@@c@@company, 9@@s@@person, 15@@t@@format, 8@@n@@_NAME_, 14@@p@@grade, 4@@s@@own, 13@@o@@ordinal-entity]
sentence=1	"Beijing	"beijing	"beijing	CD	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	end	_	end	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-03	(s(), o())	2	APP_s	true
4	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
5	in	_	in	IN	O	_	after	_	0	IGNORE	true
6	a_early_1990s	_name_	1990s	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
7	Japan	_name_	Japan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	APP_o	true
8	situation,	_	situation,	NNPS	O	_	name	_	0	IGNORE	true
9	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	forced	_	force	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	7	APP_mod	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
15	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	16	MOD_mod	true
16	purchased	_	purchase	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
17	overseas	_	overseas	JJ	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	assets	_	asset	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	fraction	_	fraction	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$-01	(mod())	14	MOD_mod	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	paid	_	pay	VBD	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	21	MOD_s	true
26	for	_	for	IN	O	_	thing	_	0	IGNORE	true
27	them.	_	them.	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
28	"	_	"	''	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 1@@n@@_NAME_, 1@@c@@city, 21@@explicitanon0@@fraction-01, 3@@s@@end-up-03, 17@@b@@overseas, 27@@o@@them., 7@@c@@country, 16@@s@@purchase-01, 18@@d@@asset, 2@@s@@possible-01, 14@@s@@sell-01, 12@@s@@force-01, 25@@l@@pay-01, 6@@n@@_NAME_, 15@@n@@recent]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	bring	_	bring	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_o	true
5	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	from	_	from	IN	O	_	and	_	0	IGNORE	true
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	deep	_	deep	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	experience	_	experience	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$-01	(mod())	4	APP_o2	true
14	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	sensed	_	sense	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_mod	true
17	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	merging	_	merge	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
20	with	_	with	IN	O	_	-	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	universal	_	universal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	Mind	mind	Mind	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@s@@merge-01, 16@@s@@sense-01, 12@@p@@space, 4@@b@@bring-01, 13@@s@@experience-01, 2@@c@@want-01, 6@@a@@back, 1@@d@@You, 5@@d@@something, 23@@d@@Mind, 11@@p@@deep, 18@@d@@mind, 22@@p@@universal]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	7	MOD_mod	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	questions	_	question	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
6	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	7	MOD_mod	true
7	feel	_	feel	VB	O	(l<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (i<o>)  :ARG0 (y<s>))	$LEMMA$-01	(o(s()))	0	ROOT	true
8	free	_	free	JJ	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-04	(o(s()))	7	APP_o	true
9	to	_	to	TO	O	_	you	_	0	IGNORE	true
10	call	_	call	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_o	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	(after	_	(after	.	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	Sat.	sat.	Sat.	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	the	_	the	DT	O	_	year	_	0	IGNORE	true
15	26th,	_	26th,	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	when	_	when	WRB	O	_	i	_	0	IGNORE	true
17	I	i	I	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$REPL$	(mod())	7	MOD_mod	true
18	will	_	will	MD	O	_	i	_	0	IGNORE	true
19	return	_	return	VB	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
20	from	_	from	IN	O	_	and	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	trip)	_	trip)	NN	O	_	$LEMMA$	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@explicitanon0@@+, 10@@s@@call-01, 17@@explicitanon0@@i, 2@@d@@you, 5@@d@@question-01, 8@@f@@free-04, 19@@s@@return-01, 7@@l@@feel-01, 3@@m@@have-03, 4@@p@@any, 12@@n@@(after, 7@@explicitanon0@@imperative]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
3	Reason	reason	reason	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
4	Why	why	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_s	true
5	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
6	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	5	MOD_mod	true
7	Should	should	Should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	4	APP_o	true
8	Oppose	oppose	oppose	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
9	The	the	the	DT	O	(d<root> / --LEX--)	person	()	3	APP_s	true
10	Nomination	nomination	nomination	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	nominate-01	(s())	8	APP_s	true
11	Of	of	of	IN	O	_	include-91	_	0	IGNORE	true
12	Samuel_Alit	_name_	Alit	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
13	o	_	o	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@s@@oppose-01, 7@@s@@recommend-01, 4@@s@@cause-01, 12@@p@@person, 10@@s@@nominate-01, 5@@p@@all, 6@@n@@_NAME_, 12@@n@@_NAME_, 2@@explicitanon0@@1, 6@@c@@country, 3@@s@@reason, 9@@d@@person]
sentence=1	It's	it's	it's	PRP	O	_	and	_	0	IGNORE	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	website	_	website	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	APP_s	true
6	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	song	_	song	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
9	has	_	have	VBZ	O	_	thing	_	0	IGNORE	true
10	been	_	be	VBN	O	_	person	_	0	IGNORE	true
11	uploaded	_	upload	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_mod	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@b@@website, 2@@p@@also, 11@@s@@upload-01, 3@@s@@get-01, 8@@d@@song]
sentence=1	Civet	_name_	civet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	trapped	_	trap	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	placed	_	place	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
8	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	cages	_	cage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	inside	_	inside	RB	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
11	darkened	_	darken	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	APP_op1	true
12	sheds,	_	sheds,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
14	the	_	the	DT	O	_	location	_	0	IGNORE	true
15	temperature	_	temperature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
16	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	kept	_	keep	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-04	(s(), o())	11	APP_mod	true
18	up	_	up	RP	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$-to	(op1(), mod())	17	MOD_mod	true
19	to	_	to	IN	O	_	up-$LEMMA$	_	0	IGNORE	true
20	110	_	110	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	21	MOD_mod	true
21	F	f	f	NN	O	(m<root> / mass-quantity  :unit (g2 / --LEX--))	$LEMMA$	()	18	APP_op1	true
22	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
23	fires	_	fire	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
24	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[23@@d@@fire, 11@@p@@darken, 6@@s@@place-01, 20@@explicitanon0@@_NUMBER_, 4@@s@@trap-01, 5@@a@@and, 9@@d@@cage, 10@@b@@inside, 8@@p@@small, 2@@d@@cat, 18@@s@@up-to, 21@@g2@@f, 15@@d@@temperature, 21@@m@@mass-quantity, 1@@p@@civet, 17@@s@@keep-04]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	3	MOD_mod	true
2	wolf	_	wolf	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	packs	_	pack	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
5	flourished,	_	flourished,	NNS	O	_	and	_	0	IGNORE	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
7	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
8	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
9	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	an	_	an	DT	O	_	1	_	0	IGNORE	true
11	estimated	_	estimated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
12	850	_	850	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
13	wolves	_	wolf	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
14	roaming	_	roam	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	northern	_	northern	JJ	O	(b<root> / --LEX--  :location-of (h<mod>))	north	(mod())	14	MOD_mod	true
17	Rockies,	_name_	rockies,	NN	O	_	_NAME_	_	0	IGNORE	true
18	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
19	merely	_	merely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	mere	(mod())	20	MOD_mod	true
20	10_years_ago	_name_	ago	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	10	(mod())	22	MOD_mod	true
21	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
22	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	6	APP_op1	true
23	none	_	none	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@n@@10, 1@@p@@this, 11@@s@@estimated-01, 22@@s@@person, 12@@explicitanon0@@_NUMBER_, 7@@n@@now, 6@@a@@and, 13@@d@@wolf, 16@@b@@north, 3@@d@@pack, 2@@p@@wolf, 14@@s@@roam-01, 19@@p@@mere, 23@@explicitanon0@@none]
sentence=1	Since	since	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
2	reintroduction,	_	reintroduction,	NNP	O	(d<root> / --LEX--)	-	()	1	APP_op1	true
3	however,	_name_	however,	NNP	O	_	and	_	0	IGNORE	true
4	Ripple	ripple	Ripple	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
6	Beschta	_name_	Beschta	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op2	true
7	have	_	have	VBP	O	_	person	_	0	IGNORE	true
8	found,	_	found,	NNP	O	_	-	_	0	IGNORE	true
9	fear	_	fear	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	wolves	_	wolf	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	apparently	_	apparently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	apparent	(s())	15	MOD_s	true
14	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
15	discouraged	_	discourage	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	elk	_	elk	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	from	_	from	IN	O	_	-	_	0	IGNORE	true
19	spending	_	spend	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	APP_o2	true
20	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	at	_	at	IN	O	_	and	_	0	IGNORE	true
24	stream	_	stream	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	banks	_	bank	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
26	--	_	--	:	O	_	and	_	0	IGNORE	true
27	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
28	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	are	_	be	VBP	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), s(), o())	15	MOD_mod	true
30	out	_	out	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	29	APP_s	true
31	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	he	_	0	IGNORE	true
33	open	_	open	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
34	--	_	--	:	O	_	-	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	MOD_op1	true
36	munching	_	munch	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
37	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	the	_	the	DT	O	_	he	_	0	IGNORE	true
39	saplings	_	sapling	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@b@@discourage-01, 25@@d@@bank, 29@@b@@be-located-at-91, 33@@d@@open, 17@@p@@elk, 2@@d@@-, 6@@p@@person, 19@@s@@spend-02, 9@@s@@fear-01, 39@@d@@sapling, 21@@explicitanon0@@much, 22@@d@@time, 5@@a@@and, 1@@w@@since, 36@@s@@munch-01, 6@@n@@_NAME_, 30@@o@@out, 24@@p@@stream, 20@@s@@too, 4@@p@@person, 4@@n@@_NAME_, 13@@s@@apparent, 35@@a@@and, 12@@d@@wolf]
sentence=1	"There	"there	"there	EX	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	MOD_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	numbers	_	number	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	extinctions	_	extinction	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
9	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
10	Mexico	_name_	Mexico	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_op1	true
11	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
12	southern	_	southern	JJ	O	(h<root> / --LEX--  :part-of (i<poss>))	south	(poss())	11	APP_op2	true
13	California	_name_	California	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	12	APP_poss	true
14	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
15	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
16	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	-	_	0	IGNORE	true
18	habitat	_	habitat	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
21	acceptable.	_	acceptable.	JJ	O	_	have-concession-91	_	0	IGNORE	true
22	"	_	"	''	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[12@@h@@south, 18@@b@@habitat, 1@@s@@"there, 4@@p@@large, 13@@n@@_NAME_, 13@@s@@state, 20@@p@@still, 5@@explicitanon0@@number, 15@@b@@area, 11@@b@@and, 8@@s@@extinction-01, 10@@c@@country, 10@@n@@_NAME_, 7@@d@@population]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	applies	_	apply	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
6	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	Arctic	_name_	Arctic	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	2	APP_o	true
8	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	location	_	0	IGNORE	true
10	ice	_	ice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	cover	_	cover	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	APP_s	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	expected	_	expect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_mod	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	diminish	_	diminish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
16	substantially	_	substantially	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	substantial	(mod())	15	MOD_mod	true
17	with	_	with	IN	O	_	-	_	0	IGNORE	true
18	the	_	the	DT	O	_	affect-01	_	0	IGNORE	true
19	effect	_	effect	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	that	_	that	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	surface	_	surface	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	absorption	_	absorption	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	retaliate-01	(s())	15	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	solar	_	solar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	radiation	_	radiation	NN	O	(d<root> / --LEX--)	radiate-01	()	23	APP_s	true
27	will	_	will	MD	O	_	thing	_	0	IGNORE	true
28	greatly	_	greatly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	great	(mod())	20	MOD_mod	true
29	increase.	_	increase.	VB	O	_	$LEMMA$	_	0	IGNORE	true
30	"	_	"	''	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[28@@s@@great, 20@@s@@cause-01, 3@@p@@especially, 2@@s@@apply-02, 25@@p@@solar, 1@@d@@this, 23@@s@@retaliate-01, 7@@b@@_NAME_, 16@@t@@substantial, 26@@d@@radiate-01, 22@@p@@surface, 11@@s@@cover, 15@@s@@diminish-01, 10@@d@@ice, 13@@s@@expect-01, 6@@s@@high-02]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	3	MOD_mod	true
3	department	_	department	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	12	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
9	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	be	_	be	VB	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
11	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	12	MOD_mod	true
12	hopeful	_	hopeful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_mod	true
13	as	_	as	IN	O	_	equal	_	0	IGNORE	true
14	you'd	_	you'd	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	like	_	like	UH	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	resemble-01	(mod(), s())	12	MOD_mod	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	career,	_	career,	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	and	(mod())	16	APP_s	true
20	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
21	advancement	_	advancement	NN	O	(d<root> / --LEX--)	develop-02	()	24	APP_s	true
22	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	23	APP_o	true
23	be	_	be	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	16	MOD_s	true
24	slow	_	slow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_s	true
26	satisfaction	_	satisfaction	NN	O	(d<root> / --LEX--)	satisfy-01	()	27	APP_s	true
27	rare	_	rare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	APP_op2	true
28	.	_	.	.	O	_	affect-01	_	0	IGNORE	true

nodealignment=[25@@a@@and, 3@@h@@department, 12@@s@@hopeful-02, 22@@s@@possible-01, 24@@s@@slow-05, 23@@s@@person, 21@@d@@develop-02, 27@@s@@rare-02, 16@@s@@possible-01, 7@@s@@possible-01, 19@@b@@and, 26@@d@@satisfy-01, 8@@explicitanon0@@-, 9@@s@@quite, 11@@s@@equal, 15@@b@@resemble-01, 14@@p@@you'd, 5@@d@@life, 2@@p@@1]
sentence=1	True,	_name_	True,	NNP	O	_	include-91	_	0	IGNORE	true
2	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
3	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	8	APP_o	true
4	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
5	England	_name_	England	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	that	_	that	WDT	O	_	name	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	part	_	part	NN	O	(d<root> / --LEX--)	have-$LEMMA$-91	()	2	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the_Essex_entourage:_Dr.	_name_	Dr.	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
15	Lopez,	_name_	Lopez,	NNP	O	_	_NAME_	_	0	IGNORE	true
16	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
17	had	_	have	VBD	O	_	person	_	0	IGNORE	true
18	been	_	be	VBN	O	_	person	_	0	IGNORE	true
19	physician	_	physician	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
20	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	Essex'	essex'	essex'	NN	O	_	_NAME_	_	0	IGNORE	true
22	step-father,	_name_	step-father,	NNP	O	_	mean-01	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Earl	earl	Earl	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	Leicester,	leicester,	leicester,	CD	O	_	_NAME_	_	0	IGNORE	true
27	had	_	have	VBD	O	_	person	_	0	IGNORE	true
28	apparently	_	apparently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	apparent	(s())	29	MOD_s	true
29	treated	_	treat	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	Essex	_name_	Essex	NNP	O	(o<root> / --LEX--  :frequency-of (m<mod>))	i	(mod())	2	MOD_mod	true
33	for	_	for	IN	O	_	and	_	0	IGNORE	true
34	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	socially	_	socially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	social	(mod())	36	MOD_mod	true
36	unacceptable	_	unacceptable	JJ	O	(p<root> / --LEX--  :polarity (explicitanon0 / -))	appropriate-02	()	29	APP_o	true
37	ailment,	_	ailment,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_o	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	APP_s	true
39	Antonio_Perez,	_name_	perez,	NN	O	_	_NAME_	_	0	IGNORE	true
40	who	_	who	WP	O	_	name	_	0	IGNORE	true
41	was	_	be	VBD	O	_	person	_	0	IGNORE	true
42	a	_	a	DT	O	_	1	_	0	IGNORE	true
43	guest	_	guest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op2	true
44	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
45	Essex_House	_name_	House	NNP	O	(n3<root> / --LEX--  :name-of (f2 / facility  :location-of (w<mod>)))	_NAME_	(mod())	43	MOD_mod	true
46	in	_	in	IN	O	_	and	_	0	IGNORE	true
47	the_early_1590's	_name_	1590'	NNS	O	(n<root> / --LEX--  :name-of (c2 / city  :location-of (l<mod>)))	_NAME_	(mod())	29	MOD_mod	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[43@@d@@guest, 2@@s@@contrast-01, 36@@explicitanon0@@-, 7@@d@@we, 14@@c@@country, 3@@t@@thing, 45@@f2@@facility, 47@@n@@_NAME_, 36@@p@@appropriate-02, 5@@n@@_NAME_, 47@@c2@@city, 32@@o@@i, 31@@p@@young, 45@@n3@@_NAME_, 14@@n@@_NAME_, 37@@s@@and, 8@@s@@know-01, 12@@d@@have-part-91, 34@@p@@some, 35@@p@@social, 28@@s@@apparent, 19@@d@@physician, 29@@s@@treat-01, 24@@p@@Earl, 3@@explicitanon0@@2, 38@@a@@and, 5@@c@@country]
sentence=1	<<"Well	<<"well	<<"Well	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	then,"	_	then,"	NNP	O	_	and	_	0	IGNORE	true
3	said	_	say	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	Don_Quixote,	_name_	Quixote,	NNP	O	_	thing	_	0	IGNORE	true
5	"the	_	"the	DT	O	_	_NAME_	_	0	IGNORE	true
6	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	happens	_	happen	VBZ	O	_	event	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	comedy	_	comedy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_o	true
13	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	world,	_	world,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	where	_	where	WRB	O	_	contrast-01	_	0	IGNORE	true
18	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	play	_	play	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
20	emperors,	_	emperors,	VBZ	O	_	mean-01	_	0	IGNORE	true
21	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	popes,	_	popes,	FW	O	_	mean-01	_	0	IGNORE	true
23	and,	_	and,	NNS	O	_	include-91	_	0	IGNORE	true
24	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
25	short,	_	short,	NNP	O	_	mean-01	_	0	IGNORE	true
26	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
28	characters	_	character	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
29	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
30	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	32	MOD_s	true
31	be	_	be	VB	O	_	person	_	0	IGNORE	true
32	brought	_	bring	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
33	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	play;	_	play;	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	3	MOD_s	true
37	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
38	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
40	over,	_	over,	NNS	O	_	-	_	0	IGNORE	true
41	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
43	to	_	to	TO	O	_	mean-01	_	0	IGNORE	true
44	say	_	say	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
45	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
46	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
47	ends,	_	ends,	NNP	O	_	and	_	0	IGNORE	true
48	death	_	death	NN	O	(d<root> / --LEX--)	die-01	()	49	APP_o	true
49	strips	_	strip	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	61	APP_op1	true
50	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
51	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
52	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
53	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
54	garments	_	garment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_o2	true
55	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
56	distinguish	_	distinguish	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	54	MOD_s	true
57	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
58	from	_	from	IN	O	_	person	_	0	IGNORE	true
59	the	_	the	DT	O	_	person	_	0	IGNORE	true
60	other,	_	other,	NNS	O	_	and	_	0	IGNORE	true
61	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o2	true
62	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_s	true
63	are	_	be	VBP	O	_	person	_	0	IGNORE	true
64	equal	_	equal	JJ	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	61	APP_op2	true
65	in	_	in	IN	O	_	i	_	0	IGNORE	true
66	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
67	grave.	_	grave.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_o	true
68	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[62@@d@@all, 56@@s@@distinguish-01, 26@@p@@all, 28@@d@@character, 3@@b@@say-01, 61@@a@@and, 7@@d@@thing, 49@@b@@strip-01, 1@@p@@person, 67@@d@@grave., 35@@d@@play;, 21@@p@@other, 18@@d@@some, 12@@a@@and, 15@@p@@this, 11@@d@@comedy, 13@@d@@life, 36@@s@@contrast-01, 1@@n@@_NAME_, 46@@d@@life, 32@@s@@bring-01, 48@@d@@die-01, 51@@p@@all, 6@@s@@same-01, 64@@s@@equal-01, 30@@s@@possible-01, 19@@t@@play-01, 54@@d@@garment]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
4	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	2	APP_o	true
5	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
6	waited	_	wait	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
7	among	_	among	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	gorse	_	gorse	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	bushes	_	bush	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	path	_	path	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	winds	_	wind	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_s	true
17	struck	_	strike	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	passed	_	pass	VBD	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@i, 22@@n@@pass-01, 9@@p@@gorse, 17@@s@@strike-01, 15@@s@@wind-01, 16@@a@@and, 6@@s@@wait-01, 10@@b@@bush, 14@@d@@path, 3@@d@@he, 4@@s@@infer-01, 7@@b@@among, 2@@s@@believe-01]
sentence=1	John_Lennon's	_name_	Lennon's	NNP	O	_	_NAME_	_	0	IGNORE	true
2	divorce	_	divorce	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
3	followed,	_	followed,	NNP	O	_	and	_	0	IGNORE	true
4	as	_	as	RB	O	_	and	_	0	IGNORE	true
5	well	_	well	RB	O	_	and	_	0	IGNORE	true
6	as	_	as	IN	O	_	and	_	0	IGNORE	true
7	his	_	he	PRP$	O	_	and	_	0	IGNORE	true
8	entering	_	enter	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	10	MOD_s	true
13	magic,	_	magic,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	as	_	as	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	equal	(s(), o())	32	MOD_s	true
15	deeply	_	deeply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	deep-02	(s())	8	MOD_s	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	to	_	to	TO	O	_	and	_	0	IGNORE	true
18	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_op1	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	apartment.	_	apartment.	NN	O	_	_NAME_	_	0	IGNORE	true
21	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	"Rosemary's	"rosemary's	"rosemary's	CD	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	29	APP_poss	true
24	baby"	_	baby"	NNP	O	_	_NAME_	_	0	IGNORE	true
25	had	_	have	VBD	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
26	been	_	be	VBN	O	_	person	_	0	IGNORE	true
27	filmed,	_	filmed,	NNP	O	_	mean-01	_	0	IGNORE	true
28	previous	_	previous	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	property	_	property	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	18	APP_s	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	Roman_Polansky,	_name_	polansky,	CD	O	_	_NAME_	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
33	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
34	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	MOD_s	true
36	apartment	_	apartment	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
37	John_Lennon	_name_	Lennon	NNP	O	(d<root> / --LEX--)	_NAME_	()	38	APP_s	true
38	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	32	APP_op2	true
39	a	_	a	DT	O	_	thing	_	0	IGNORE	true
40	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
41	upholstered	_	upholstered	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	40	MOD_s	true
42	with	_	with	IN	O	_	-	_	0	IGNORE	true
43	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	44	MOD_s	true
44	silk	_	silk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_o	true
45	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
46	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
47	used	_	use	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	41	MOD_s	true
48	to	_	to	TO	O	_	thing	_	0	IGNORE	true
49	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	32	APP_op3	true
50	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
51	black	_	black	JJ	O	_	person	_	0	IGNORE	true
52	magic	_	magic	NN	O	_	$LEMMA$	_	0	IGNORE	true
53	operations	_	operation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[38@@s@@have-03, 40@@d@@room, 29@@m@@property, 14@@s@@equal, 32@@a@@and, 23@@n@@_NAME_, 36@@b@@apartment, 37@@d@@_NAME_, 28@@n@@previous, 53@@d@@operation, 49@@s@@do-02, 23@@e@@event, 15@@s@@deep-02, 47@@s@@use-02, 12@@s@@black-04, 43@@s@@black-04, 10@@d@@world, 41@@s@@upholstered-01, 8@@s@@enter-01, 44@@d@@silk, 18@@s@@buy-01, 35@@s@@same-01, 2@@d@@divorce-01]
sentence=1	Antichrist_John_Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	followed	_	follow	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	Devil's	_name_	Devil's	JJR	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	strategy	_	strategy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	writing	_	write	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
7	lyrics	_	lyric	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
9	as	_	as	IN	O	_	and	_	0	IGNORE	true
10	"God	"god	"God	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_dom	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
13	concept	_	concept	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	27	APP_op1	true
14	by	_	by	IN	O	_	thing	_	0	IGNORE	true
15	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	measure	_	measure	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	13	MOD_o	true
18	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	pain...I	pain...i	pain...i	XX	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	don't	_	don't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o2	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	Jesus,	_name_	jesus,	CD	O	_	and	_	0	IGNORE	true
24	etc.,	_	etc.,	NNP	O	_	and	_	0	IGNORE	true
25	etc.,"	_	etc.,"	NNP	O	_	-	_	0	IGNORE	true
26	(God)	(god)	(God)	NFP	O	_	mean-01	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	7	MOD_mod	true
28	"and	_	"and	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	30	MOD_mod	true
30	religions	_	religion	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
31	too..."	_	too..."	NNP	O	_	$LEMMA$	_	0	IGNORE	true
32	(Imagine)	(imagine)	(imagine)	ADD	O	_	mean-01	_	0	IGNORE	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@r@@concept, 17@@b@@measure-01, 30@@d@@religion, 29@@explicitanon0@@-, 20@@explicitanon0@@-, 7@@d@@lyric, 27@@a@@and, 5@@d@@strategy, 21@@s@@believe-01, 4@@n@@_NAME_, 1@@n@@_NAME_, 6@@l@@write-01, 16@@d@@we, 19@@d@@pain...i, 1@@p@@person, 2@@s@@follow-02, 10@@d@@"God]
sentence=1	Antichrist_John_Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_s	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	compete	_	compete	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
6	Jesus_Christ,	_name_	Christ,	NNP	O	_	_NAME_	_	0	IGNORE	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	APP_op1	true
11	a	_	a	DT	O	_	person	_	0	IGNORE	true
12	beard	_	beard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
14	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
18	bogus	_	bogus	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	of	_	of	IN	O	_	person	_	0	IGNORE	true
21	Christ	_name_	Christ	NNP	O	(p<root> / person  :name (n / --LEX--)  :source-of (t<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	together	_	together	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	Yoko_Ono	_name_	Ono	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
25	at	_	at	IN	O	_	person	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Amsterdam_Hilton	_name_	Hilton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	hotel	_	hotel	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
29	proclaiming	_	proclaim	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
30	"Peace",	"peace",	"Peace",	NNP	O	_	thing	_	0	IGNORE	true
31	being	_	be	VBG	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
32	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
33	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
34	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	was	_	be	VBD	O	_	person	_	0	IGNORE	true
36	visited	_	visit	VBN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
37	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	Canadian	_name_	canadian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	40	MOD_mod	true
40	journalist	_	journalist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
41	who	_	who	WP	O	_	person	_	0	IGNORE	true
42	ridiculized	_	ridiculize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	true
43	and	_	and	CC	O	_	$LEMMA$	_	8	IGNORE	true
44	admonished	_	admonish	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	true
45	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
46	wanting	_	want	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	MOD_s	true
47	to	_	to	TO	O	_	thing	_	0	IGNORE	true
48	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	46	APP_o	true
49	about	_	about	IN	O	_	thing	_	0	IGNORE	true
50	what	_	what	WP	O	_	cause-01	_	0	IGNORE	true
51	Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	74	APP_s	true
52	meant	_	mean	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
53	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
54	he	_	he	PRP	O	_	thing	_	0	IGNORE	true
55	wrote	_	write	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	46	MOD_mod	true
56	in	_	in	IN	O	_	i	_	0	IGNORE	true
57	the	_	the	DT	O	_	person	_	0	IGNORE	true
58	lyrics	_	lyric	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	55	MOD_mod	true
59	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
60	"The	"the	"The	``	O	_	_NAME_	_	0	IGNORE	true
61	ballad	_	ballad	NN	O	(d<root> / --LEX--)	$LEMMA$	()	58	APP_poss	true
62	of	_	of	IN	O	_	person	_	0	IGNORE	true
63	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	61	MOD_mod	true
64	and	_	and	CC	O	_	$LEMMA$	_	61	IGNORE	true
65	Yoko":	_name_	yoko":	CD	O	_	$LEMMA$	_	0	IGNORE	true
66	"the	_	"the	DT	O	_	i	_	0	IGNORE	true
67	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
68	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	74	APP_o	true
69	are	_	be	VBP	O	_	person	_	0	IGNORE	true
70	going,	_	going,	NNP	O	_	and	_	0	IGNORE	true
71	they're	_	they're	NNP	O	_	person	_	0	IGNORE	true
72	going	_	go	VBG	O	_	accompany-01	_	0	IGNORE	true
73	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
74	crucify	_	crucify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	48	APP_o	true
75	me...",	_	me...",	.	O	_	slash	_	0	IGNORE	true
76	The_CURSE_OF_GOD_upon_John_Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	74	MOD_mod	true
77	carried	_	carry	VBD	O	(d<root> / --LEX--)	$LEMMA$-on-02	()	55	APP_o	true
78	on	_	on	RP	O	_	cause-01	_	0	IGNORE	true
79	with	_	with	IN	O	_	-	_	0	IGNORE	true
80	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	81	MOD_mod	true
81	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	84	MOD_mod	true
82	of	_	of	IN	O	_	person	_	0	IGNORE	true
83	miseries	_	misery	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op1	true
84	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	74	MOD_mod	true
85	distresses	_	distress	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op2	true
86	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
87	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	MOD_s	true
88	Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
89	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
90	the	_	the	DT	O	_	person	_	0	IGNORE	true
91	interview	_	interview	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	89	APP_o	true
92	to	_	to	IN	O	_	and	_	0	IGNORE	true
93	the	_	the	DT	O	_	person	_	0	IGNORE	true
94	"Rolling	"rolling	"rolling	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	96	MOD_mod	true
95	Stone"	_name_	Stone"	NNP	O	_	and	_	0	IGNORE	true
96	magazine	_	magazine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	91	APP_s	true
97	(today	_	(today	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	true
98	condensed	_	condense	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	96	MOD_s	true
99	in	_	in	IN	O	_	i	_	0	IGNORE	true
100	the	_	the	DT	O	_	person	_	0	IGNORE	true
101	"Lennon	"lennon	"lennon	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	true
102	remembers"	_	remembers"	NFP	O	_	mean-01	_	0	IGNORE	true
103	book)	_	book)	XX	O	_	and	_	0	IGNORE	true
104	where	_	where	WRB	O	_	and	_	0	IGNORE	true
105	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
106	speaks	_	speak	VBZ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	96	MOD_mod	true
107	about	_	about	IN	O	_	thing	_	0	IGNORE	true
108	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
109	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	112	MOD_s	true
110	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_s	true
111	were	_	be	VBD	O	_	person	_	0	IGNORE	true
112	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	115	MOD_s	true
113	for	_	for	IN	O	_	and	_	0	IGNORE	true
114	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
115	blaming	_	blame	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	106	APP_s	true
116	"whatever	_	"whatever	''	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_o	true
117	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
118	up	_	up	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	115	MOD_mod	true
119	there"	_	there"	CD	O	_	thing	_	0	IGNORE	true
120	for	_	for	IN	O	_	thing	_	0	IGNORE	true
121	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
122	(referring	_	(referring	ADD	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	115	MOD_mod	true
123	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
124	God)	_name_	God)	NNS	O	_	mean-01	_	0	IGNORE	true
125	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@a@@and, 97@@n@@_NAME_, 21@@p@@person, 29@@s@@proclaim-01, 112@@s@@go-09, 44@@s@@admonish-01, 101@@n@@_NAME_, 106@@s@@speak-01, 109@@s@@bad-07, 115@@s@@blame-01, 110@@d@@thing, 116@@d@@"whatever, 91@@s@@interview-01, 89@@s@@give-01, 96@@d@@magazine, 2@@c@@want-01, 24@@n@@_NAME_, 1@@p@@person, 83@@d@@misery, 1@@n@@_NAME_, 80@@p@@all, 8@@s@@cause-01, 94@@n@@_NAME_, 14@@s@@start-01, 88@@n@@_NAME_, 36@@v@@visit-01, 55@@t@@write-01, 85@@d@@distress, 28@@b@@hotel, 4@@s@@compete-01, 87@@s@@make-02, 52@@d@@mean-01, 42@@s@@ridiculize-01, 76@@n@@_NAME_, 27@@n@@_NAME_, 98@@s@@condense-01, 48@@s@@know-01, 40@@d@@journalist, 51@@p@@person, 16@@s@@make-01, 10@@s@@grow-03, 84@@a@@and, 19@@d@@role, 81@@p@@type, 39@@c@@country, 21@@n@@_NAME_, 58@@h@@lyric, 18@@p@@bogus, 122@@o@@(referring-01, 12@@d@@beard, 39@@n@@_NAME_, 51@@n@@_NAME_, 63@@n@@_NAME_, 74@@s@@crucify-01, 68@@d@@thing, 61@@d@@ballad, 67@@d@@way, 46@@s@@want-01, 118@@b@@up, 77@@d@@carry-on-02]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	advertising	_	advertising	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	advertise-01	(mod())	3	MOD_mod	true
3	farce	_	farce	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	how	_	how	WRB	O	_	so	_	0	IGNORE	true
6	much	_	much	RB	O	_	$LEMMA$	_	0	IGNORE	true
7	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
8	loved	_	love	VBD	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
9	Linda	_name_	Linda	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
10	(woman	_	(woman	NFP	O	_	thing	_	0	IGNORE	true
11	whose	_	whose	WP$	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	thing	(s(), o())	18	MOD_o	true
12	quality	_	quality	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
13	he	_	he	PRP	O	_	$LEMMA$	_	18	IGNORE	true
14	did	_	do	VBD	O	_	person	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
16	deserve),	_name_	deserve),	NNP	O	_	cause-01	_	0	IGNORE	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	exposed	_	expose	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
19	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
22	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
23	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
24	Paul	_name_	Paul	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	27	APP_s	true
25	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
26	an	_	an	DT	O	_	thing	_	0	IGNORE	true
27	affair	_	affair	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
28	with	_	with	IN	O	_	-	_	0	IGNORE	true
29	Heather_Mills,_Linda's	_name_	Linda's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
30	intimate	_	intimate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	friend,	_	friend,	NNS	O	_	and	_	0	IGNORE	true
32	with	_	with	IN	O	_	person	_	0	IGNORE	true
33	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
34	McCartney	_name_	McCartney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	35	APP_s	true
35	went	_	go	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	41	APP_op1	true
36	on	_	on	IN	O	_	and	_	0	IGNORE	true
37	a	_	a	DT	O	_	thing	_	0	IGNORE	true
38	trip	_	trip	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	35	APP_o	true
39	to	_	to	IN	O	_	name	_	0	IGNORE	true
40	New_York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	38	APP_o	true
41	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
42	to	_	to	TO	O	_	person	_	0	IGNORE	true
43	whom	_	whom	WP	O	_	cause-01	_	0	IGNORE	true
44	he	_	he	PRP	O	_	person	_	0	IGNORE	true
45	bought	_	buy	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	APP_op2	true
46	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_op2	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	45	APP_s	true
48	presents,	_	presents,	NNP	O	_	thing	_	0	IGNORE	true
49	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
50	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
51	was	_	be	VBD	O	_	person	_	0	IGNORE	true
52	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	mourning	_	mourn	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	45	MOD_mod	true
54	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
55	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
56	"dear	_	"dear	XX	O	(d<root> / --LEX--)	_NAME_	()	53	APP_s	true
57	Linda"	_name_	Linda"	NNS	O	_	cause-01	_	0	IGNORE	true
58	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@n@@_NAME_, 7@@d@@he, 8@@r@@love-01, 3@@p@@farce, 15@@explicitanon0@@-, 47@@a@@and, 46@@d@@thing, 40@@c@@city, 34@@p@@person, 34@@n@@_NAME_, 12@@s@@quality, 27@@s@@affair-01, 56@@d@@_NAME_, 24@@n@@_NAME_, 22@@s@@know-01, 9@@p@@person, 30@@p@@intimate, 45@@s@@buy-01, 40@@n@@_NAME_, 18@@s@@expose-01, 9@@n@@_NAME_, 53@@s@@mourn-01, 38@@s@@trip-03, 35@@c@@go-02, 2@@p@@advertise-01, 41@@a@@and, 11@@s@@thing, 52@@p@@still, 24@@p@@person]
sentence=1	Besides	besides	besides	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	8	MOD_o	true
2	being	_	be	VBG	O	_	except-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
4	murderer,	_	murderer,	NNP	O	_	cause-01	_	0	IGNORE	true
5	John_Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
6	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
7	sexual	_	sexual	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	sex-01	(mod())	8	MOD_mod	true
8	intercourse	_	intercourse	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	with	_	with	IN	O	_	person	_	0	IGNORE	true
10	homosexual	_	homosexual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	Brian_Epstein	_name_	Epstein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
12	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
13	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-04	(mod(), s(), o())	8	MOD_mod	true
14	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
15	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	13	APP_o	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_s	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	at	_	at	IN	O	_	i	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Cavern,	_name_	cavern,	CD	O	_	$LEMMA$	_	0	IGNORE	true
25	trauma	_	trauma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
26	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
27	which	_	which	WDT	O	_	i	_	0	IGNORE	true
28	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	30	MOD_mod	true
30	recovered	_	recover	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
31	.	_	.	.	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true

nodealignment=[11@@p@@person, 11@@n@@_NAME_, 21@@d@@band, 10@@p@@homosexual, 8@@s@@intercourse-01, 25@@d@@trauma, 7@@t@@sex-01, 31@@explicitanon0@@-, 19@@s@@see-01, 30@@s@@recover-01, 17@@s@@go-02, 29@@n@@ever, 15@@s@@interest-01, 5@@n@@_NAME_, 13@@s@@get-04, 5@@p@@person, 1@@s@@besides]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	CSIS	_name_	CSIS	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	report	_	report	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
4	cites	_	cite	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	numerous	_	numerous	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	APP_o	true
7	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
8	Iran	_name_	Iran	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
9	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
10	funded	_	fund	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_mod	true
11	modernization	_	modernization	NN	O	(d<root> / --LEX--)	modernize-01	()	10	APP_o	true
12	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	troublesome	_	troublesome	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	aspect,	_	aspect,	NNS	O	_	include-91	_	0	IGNORE	true
17	anti-shipping	_	anti-shipping	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
18	cruise	_	cruise	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
19	missiles:	_	missiles:	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	name	(s(), o())	4	MOD_s	true
20	'Iran	'iran	'Iran	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
21	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
22	obtained	_	obtain	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_o	true
23	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
24	anti-ship	_	anti-ship	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	counter-01	(s())	25	MOD_s	true
25	missiles	_	missile	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_o	true
27	missile	_	missile	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	patrol	_	patrol	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	29	MOD_s	true
29	craft	_	craft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
30	from	_	from	IN	O	_	and	_	0	IGNORE	true
31	China,	_name_	china,	CD	O	_	and	_	0	IGNORE	true
32	midget	_	midget	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	submarines	_	submarine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
34	from	_	from	IN	O	_	include-91	_	0	IGNORE	true
35	North_Korea,	_name_	Korea,	NNP	O	_	_NAME_	_	0	IGNORE	true
36	submarines	_	submarine	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
37	from	_	from	IN	O	_	oppose-01	_	0	IGNORE	true
38	Russia,	russia,	russia,	NN	O	_	_NAME_	_	0	IGNORE	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	MOD_op1	true
40	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	42	MOD_s	true
41	mines.'	_	mines.'	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
42	"	_	"	''	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[4@@s@@cite-01, 12@@s@@include-01, 5@@explicitanon0@@numerous, 27@@p@@missile, 8@@c@@country, 6@@b@@area, 11@@d@@modernize-01, 14@@s@@most, 20@@p@@person, 42@@explicitanon0@@interrogative, 3@@d@@report-01, 2@@n@@_NAME_, 33@@d@@submarine, 32@@p@@midget, 19@@s@@name, 22@@s@@obtain-01, 40@@s@@modern-02, 26@@a@@and, 18@@d@@cruise, 41@@p@@mines.', 24@@s@@counter-01, 10@@s@@fund-01, 23@@s@@new-01, 29@@d@@craft, 25@@d@@missile, 20@@n@@_NAME_, 39@@a@@and, 36@@s@@submarine, 8@@n@@_NAME_, 15@@p@@troublesome, 28@@s@@patrol-01, 17@@p@@anti-shipping-01]
sentence=1	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	seeking	_	seek	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	construction	_	construction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	construct-01	(s())	3	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	pipeline	_	pipeline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	APP_s	true
9	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	Iran	_name_	Iran	NNP	O	(n2<root> / --LEX--  :name-of (c2 / country  :source-of (p<mod>)))	_NAME_	(mod())	8	MOD_mod	true
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Caspian	_name_	Caspian	NNP	O	(n3<root> / --LEX--  :name-of (s2 / sea  :mod-of (p2<mod>)))	_NAME_	(mod())	8	MOD_mod	true
14	Sea,	sea,	sea,	NN	O	_	include-91	_	0	IGNORE	true
15	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	would	_	would	MD	O	_	possible-01	_	0	IGNORE	true
18	link	_	link	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	APP_mod	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	planned	_	plan	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	pipeline	_	pipeline	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
23	running	_	run	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
24	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	Kazakhstan	_name_	Kazakhstan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_o	true
26	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	China	_name_	China	NNP	O	_	_NAME_	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 3@@s@@seek-01, 13@@s2@@sea, 23@@s@@run-01, 10@@c2@@country, 25@@n@@_NAME_, 8@@p@@pipeline, 20@@p@@another, 1@@c@@country, 18@@s@@link-01, 5@@s@@construct-01, 21@@s@@plan-01, 22@@d@@pipeline, 25@@c@@country, 13@@n3@@_NAME_, 10@@n2@@_NAME_]
sentence=1	When	when	when	WRB	O	_	be-temporally-at-91	_	0	IGNORE	true
2	China's	_name_	China's	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	currency	_	currency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	ceases	_	cease	VBZ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
5	to	_	to	TO	O	_	person	_	0	IGNORE	true
6	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	26	MOD_s	true
7	undervalued,	_	undervalued,	JJ	O	_	and	_	0	IGNORE	true
8	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	shoppers	_	shopper	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	Wal-Mart,	wal-mart,	Wal-Mart,	NNP	O	_	_NAME_	_	0	IGNORE	true
12	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
13	70	_	70	CD	O	(p2<root> / percentage-entity  :value (explicitanon2 / --LEX--)  :mod-of (p<mod>))	_NUMBER_	(mod())	17	MOD_mod	true
14	percent	_	percent	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	goods	_	good	NNS	O	(d<root> / --LEX--)	good	()	22	APP_s	true
18	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	shelves	_	shelf	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	are	_	be	VBP	O	_	person	_	0	IGNORE	true
22	made	_	make	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	China,	_name_	china,	CD	O	_	and	_	0	IGNORE	true
25	will	_	will	MD	O	_	person	_	0	IGNORE	true
26	think	_	think	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
27	they	_	they	PRP	O	_	person	_	0	IGNORE	true
28	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	26	APP_o	true
29	in	_	in	IN	O	_	i	_	0	IGNORE	true
30	Neiman_Marcus	_name_	Marcus	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	28	APP_o	true
31	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[13@@p2@@percentage-entity, 26@@c@@think-01, 2@@explicitanon0@@_NAME_, 28@@s@@be-located-at-91, 8@@c@@country, 30@@c@@city, 20@@b@@shelf, 3@@d@@currency, 13@@explicitanon2@@_NUMBER_, 30@@n@@_NAME_, 6@@s@@person, 9@@d@@shopper, 8@@n@@_NAME_, 17@@d@@good, 4@@s@@cease-01, 22@@o@@make-01]
sentence=1	22	_	22	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	10	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Asbestos	asbestos	asbestos	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	levels	_	level	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
5	at	_	at	IN	O	_	relative-position	_	0	IGNORE	true
6	Ground_Zero	_name_	Zero	NNP	O	(l<root> / location  :name (n / --LEX--)  :location-of (m<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	were	_	be	VBD	O	_	equal-01	_	0	IGNORE	true
8	22	_	22	CD	O	(d<root> / --LEX--)	_NUMBER_	()	9	APP_op1	true
9	times	_	time	NNS	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	product-of	(op1(), mod())	10	MOD_mod	true
10	higher	_	high	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	high-02	(s())	0	ROOT	true
11	than	_	than	IN	O	_	more	_	0	IGNORE	true
12	the	_	the	DT	O	_	product	_	0	IGNORE	true
13	levels	_	level	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	in	_	in	IN	O	_	name	_	0	IGNORE	true
15	Libby,	_name_	libby,	CD	O	_	mean-01	_	0	IGNORE	true
16	Montana,	montana,	montana,	CD	O	_	_NAME_	_	0	IGNORE	true
17	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
18	the_W_R_Grace	_name_	Grace	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	mine	_	mine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	produced	_	produce	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	13	MOD_mod	true
21	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	10	MOD_mod	true
22	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	10	MOD_o	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-04	(s())	26	MOD_s	true
25	Superfund	_name_	Superfund	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	disasters	_	disaster	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
27	in	_	in	IN	O	_	country	_	0	IGNORE	true
28	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	29	MOD_mod	true
29	history	_	history	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@m@@more, 6@@l@@location, 28@@c@@country, 29@@n@@history, 13@@p@@level, 3@@p@@asbestos, 26@@d@@disaster, 1@@explicitanon0@@_NUMBER_, 28@@n@@_NAME_, 24@@b2@@bad-04, 22@@s@@include-91, 4@@d@@level, 18@@n@@_NAME_, 10@@b@@high-02, 8@@d@@_NUMBER_, 24@@m@@most, 19@@d@@mine, 21@@explicitanon0@@1, 9@@s@@product-of, 6@@n@@_NAME_, 25@@p@@Superfund, 20@@t@@produce-01]
sentence=1	14	_	14	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	11	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Immigration	immigration	Immigration	NNP	O	(d<root> / --LEX--)	immigrate-01	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
7	Naturalisation	naturalisation	Naturalisation	NNP	O	(d<root> / --LEX--)	justify-01	()	6	APP_op2	true
8	Service	service	Service	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
9	(INS)	(ins)	(ins)	NN	O	_	-	_	0	IGNORE	true
10	agents	_	agent	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_s	true
11	assigned	_	assign	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	track	_	track	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-down-02	(s(), o())	11	APP_o	true
14	down	_	down	RP	O	_	cause-01	_	0	IGNORE	true
15	1,200	_	1,200	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	18	MOD_mod	true
16	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	know-01	(s())	18	MOD_s	true
17	illegal	_	illegal	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	legal-02	(s())	18	MOD_s	true
18	immigrants	_	immigrant	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	immigrate-01	(s())	13	APP_o	true
19	in	_	in	IN	O	_	government-organization	_	0	IGNORE	true
20	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	18	MOD_mod	true
21	from	_	from	IN	O	_	name	_	0	IGNORE	true
22	countries	_	country	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	APP_s	true
23	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
24	al-Qa'ida	al-qa'ida	al-Qa'ida	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	active	_	active	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	activity-06	(s())	22	APP_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@know-01, 7@@d@@justify-01, 6@@a@@and, 5@@d@@immigrate-01, 15@@explicitanon0@@_NUMBER_, 26@@s@@activity-06, 20@@c@@country, 17@@explicitanon0@@-, 22@@b@@country, 20@@n@@_NAME_, 8@@d@@Service, 18@@s@@immigrate-01, 24@@n@@_NAME_, 17@@n@@legal-02, 10@@m@@agent, 13@@s@@track-down-02, 11@@o@@assign-01, 3@@explicitanon0@@number, 24@@c2@@criminal-organization, 1@@explicitanon0@@_NUMBER_]
sentence=1	1983_-_The_year	_name_	year	NN	O	(s<root> / --LEX--  :season-of (d<mod>))	_NAME_	(mod())	0	ROOT	true
2	in	_	in	IN	O	_	i	_	0	IGNORE	true
3	which	_	which	WDT	O	_	name	_	0	IGNORE	true
4	Donald_Rumsfeld,	_name_	Rumsfeld,	NNP	O	(d<root> / --LEX--)	_NAME_	()	7	APP_s	true
5	Ronald_Reagan's	_name_	Reagan's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	1	APP_mod	true
6	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	envoy	_	envoy	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	10	APP_s	true
8	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the_Middle_East,	_name_	East,	NNP	O	_	_NAME_	_	0	IGNORE	true
10	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	20	APP_o	true
11	Saddam_Hussein	_name_	Hussein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_o2	true
12	a	_	a	DT	O	_	person	_	0	IGNORE	true
13	pair	_	pair	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	golden	_	golden	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	spurs	_	spur	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
19	gift	_	gift	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
20	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	1	MOD_s	true

nodealignment=[13@@explicitanon0@@pair, 16@@d@@spur, 6@@s@@special-02, 10@@b@@give-01, 11@@n@@_NAME_, 7@@p2@@envoy, 15@@p@@golden, 5@@n@@_NAME_, 7@@h@@have-org-role-91, 19@@s@@gift-01, 5@@p@@person, 20@@s@@and, 11@@p@@person, 4@@d@@_NAME_, 1@@s@@_NAME_]
sentence=1	35	_	35	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	countries	_	country	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	to	_	to	TO	O	_	include-91	_	0	IGNORE	true
7	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
8	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	suspended	_	suspend	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
10	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	assistance	_	assistance	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	assist-01	(s(), o())	9	MOD_s	true
12	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
13	they	_	they	PRP	O	(d<root> / --LEX--)	person	()	3	APP_mod	true
14	failed	_	fail	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op1	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	sign	_	sign	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	agreements	_	agreement	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
18	giving	_	give	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
19	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
20	immunity	_	immunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	from	_	from	IN	O	_	person	_	0	IGNORE	true
22	prosecution	_	prosecution	NN	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	prosecute-01	(mod(), s())	20	MOD_mod	true
23	before	_	before	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
24	the_International_Criminal_Court	_name_	Court	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
25	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[8@@n@@_NAME_, 24@@g@@government-organization, 1@@explicitanon0@@_NUMBER_, 23@@p@@before, 20@@d@@immunity, 17@@d@@agreement, 24@@n@@_NAME_, 19@@n@@_NAME_, 12@@w@@after, 19@@c@@country, 14@@s@@fail-01, 3@@explicitanon0@@number, 10@@p@@military, 5@@g@@country, 16@@s@@sign-01, 13@@d@@person, 9@@s@@suspend-01, 22@@h@@prosecute-01, 18@@s@@give-01, 8@@c@@country, 11@@t@@assist-01]
sentence=1	100	_	100	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	chemical	_	chemical	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	plants	_	plant	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	APP_mod	true
8	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	terrorist	_	terrorist	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	act	_	act	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	13	APP_s	true
12	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
13	endanger	_	endanger	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_mod	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	lives	_	life	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	more	_	more	JJR	O	_	cause-01	_	0	IGNORE	true
18	than	_	than	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	more-$LEMMA$	(op1(), mod())	21	MOD_mod	true
19	one	_	one	CD	O	_	1	_	0	IGNORE	true
20	million	_	million	CD	O	(d<root> / --LEX--)	1000000	()	18	APP_op1	true
21	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	15	APP_s	true
22	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@number, 10@@d@@terrorist, 5@@n@@_NAME_, 21@@d@@person, 6@@p@@chemical, 7@@p@@plant, 15@@s@@life, 13@@s@@endanger-01, 20@@d@@1000000, 12@@s@@possible-01, 18@@s@@more-than, 5@@c@@country, 1@@explicitanon0@@_NUMBER_, 11@@s@@act-02]
sentence=1	11	_	11	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	press	_	press	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	conferences	_	conference	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	APP_mod	true
7	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	his_first_three_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	in	_	in	IN	O	_	after	_	0	IGNORE	true
10	office	_	office	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
12	which	_	which	WDT	O	_	and	_	0	IGNORE	true
13	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
14	referred	_	refer	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_mod	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	questions	_	question	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	being	_	be	VBG	O	_	person	_	0	IGNORE	true
19	"trick"	_	"trick"	``	O	_	-	_	0	IGNORE	true
20	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@n@@conference, 14@@s@@refer-01, 13@@n@@_NAME_, 16@@d@@question-01, 13@@p@@person, 1@@explicitanon0@@_NUMBER_, 8@@n@@_NAME_, 5@@p@@press, 3@@explicitanon0@@number, 10@@b@@office]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	must	_	must	MD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	8	APP_o	true
4	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	cleaner,	_	cleaner,	NNP	O	_	_NAME_	_	0	IGNORE	true
7	pledge	_	pledge	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
8	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	recommend-01	(s(s_UNIFY_o()))	0	ROOT	true
9	be	_	be	VB	O	_	and	_	0	IGNORE	true
10	fine	_	fine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	8	APP_s	true
11	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	APP_s	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_mod	true
17	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	parakeet	_	parakeet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
21	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	22	MOD_s	true
22	ventilated	_	ventilate	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@b@@area, 7@@d@@pledge-01, 2@@d@@you, 4@@s@@use-01, 21@@s@@well-09, 16@@s@@keep-01, 18@@d@@parakeet, 8@@s@@recommend-01, 3@@o@@obligate-01, 10@@s@@fine-04, 22@@o@@ventilate-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	5	MOD_mod	true
5	precise	_	precise	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_o	true
6	as	_	as	IN	O	_	equal	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	pelham	_	pelham	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	bit	_	bit	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	uses	_	use	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
14	one	_	one	CD	O	(d<root> / --LEX--)	1	()	13	APP_o	true
15	rein,	_	rein,	NNS	O	_	contrast-01	_	0	IGNORE	true
16	though	_	though	IN	O	_	have-concession-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
18	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
20	have	_	have	VBP	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	$LEMMA$-03	(mod(), s(), o())	13	MOD_mod	true
21	two	_	two	CD	O	(d<root> / --LEX--)	2	()	22	APP_op1	true
22	or	_	or	CC	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	24	MOD_mod	true
23	three	_	three	CD	O	(d<root> / --LEX--)	3	()	22	APP_op2	true
24	slots	_	slot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	on	_	on	IN	O	_	and	_	0	IGNORE	true
26	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	put	_	put	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	reins	_	rein	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@s@@equal, 13@@s@@use-01, 1@@d@@It, 14@@d@@1, 23@@d@@3, 8@@p@@pelham, 3@@explicitanon0@@-, 20@@c2@@have-03, 30@@d@@rein, 19@@d@@one, 12@@p@@only, 28@@i@@put-01, 5@@r@@precise, 9@@p@@bit, 22@@b2@@or, 21@@d@@2, 24@@d@@slot, 10@@s@@cause-01, 18@@s@@modern-02]
sentence=1	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	17	MOD_s	true
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
3	bit	_	bit	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	searching	_	search	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_o	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	discover	_	discover	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	POP	_name_	pop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_dom	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	14	MOD_mod	true
12	PoP	pop	pop	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
13	-	_	-	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	plaster	_	plaster	NN	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	17	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
18	yes	_	yes	UH	O	_	$LEMMA$	_	0	IGNORE	true
19	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	true
22	will	_	will	MD	O	_	thing	_	0	IGNORE	true
23	slow	_	slow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-down-03	(s())	17	APP_op2	true
24	way	_	way	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	down	_	down	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
26	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
29	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	30	MOD_mod	true
30	exposed	_	expose	VBN	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
31	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
32	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
34	in	_	in	NN	O	_	multi-sentence	_	0	IGNORE	true
35	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	true
36	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	17	MOD_o	true
37	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op3	true
38	are	_	be	VBP	O	_	person	_	0	IGNORE	true
39	building	_	build	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-up-05	(mod(), s())	36	MOD_mod	true
40	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
41	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
42	("the	_	("the	UH	O	_	see-01	_	0	IGNORE	true
43	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
44	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op4	true
45	would	_	would	MD	O	_	be-located-at-91	_	0	IGNORE	true
46	icing")	_	icing")	VB	O	_	shit	_	0	IGNORE	true
47	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
48	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
49	sculpting,	_	sculpting,	NNP	O	_	and	_	0	IGNORE	true
50	which	_	which	WDT	O	_	i	_	0	IGNORE	true
51	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
52	rather	_	rather	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	59	MOD_mod	true
53	uncommon,	_	uncommon,	NFP	O	_	contrast-01	_	0	IGNORE	true
54	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
55	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	67	APP_op1	true
56	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
57	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	58	MOD_s	true
58	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
59	damp	_	damp	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_o	true
60	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
61	order	_	order	NN	O	_	cause-01	_	0	IGNORE	true
62	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
63	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	55	MOD_mod	true
64	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	66	MOD_mod	true
65	unset	_	unset	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	66	MOD_s	true
66	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_s	true
67	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_s	true
68	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
69	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	67	APP_op2	true
70	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
71	wet	_	wet	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	APP_s	true
72	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
73	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	71	APP_s	true
74	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
75	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
76	will	_	will	MD	O	_	thing	_	0	IGNORE	true
77	be	_	be	VB	O	_	person	_	0	IGNORE	true
78	adding	_	add	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	73	APP_mod	true
79	plaster	_	plaster	NN	O	_	$LEMMA$	_	0	IGNORE	true
80	"mud	_	"mud	NNP	O	_	$LEMMA$	_	0	IGNORE	true
81	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[36@@s@@have-condition-91, 29@@explicitanon0@@-, 41@@d@@plaster, 52@@s@@rather, 11@@p@@probable, 39@@o@@build-up-05, 7@@s@@discover-01, 12@@s@@pop-01, 63@@s@@add-02, 32@@d@@air, 14@@r@@_NAME_, 17@@a@@and, 37@@d@@you, 59@@d@@damp, 30@@h@@expose-01, 44@@d@@you, 78@@d@@add-02, 24@@t@@way, 1@@s@@take-10, 65@@s@@unset, 5@@d@@search-01, 66@@d@@plaster, 67@@a@@or, 57@@s@@set, 25@@a@@down, 58@@d@@plaster, 71@@s@@wet-01, 69@@s@@obligate-01, 73@@b@@area, 3@@explicitanon0@@bit, 9@@d@@pop, 55@@s@@keep-04, 64@@explicitanon0@@more, 23@@s@@slow-down-03, 19@@d@@plaster]
sentence=1	In	in	in	IN	O	_	name	_	0	IGNORE	true
2	Calcutta	_name_	Calcutta	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	Foreigner's	foreigner's	Foreigner's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
7	reservation	_	reservation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	office	_	office	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	0	ROOT	true
9	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
10	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_poss	true
11	speak	_	speak	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_mod	true
12	English	_name_	English	NNP	O	(l<root> / language  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
13	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	well	_	well	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-09	(mod())	11	MOD_mod	true
15	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[13@@s@@very, 2@@n@@_NAME_, 8@@w@@office, 12@@n@@_NAME_, 12@@l@@language, 11@@s@@speak-01, 7@@p@@reservation, 14@@t@@well-09, 2@@c@@city, 6@@n@@_NAME_, 10@@d@@they]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	reason	_	reason	NN	O	(r<root> / --LEX--  :domain (q<dom>))	cause-01	(dom())	0	ROOT	true
5	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_s	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	competitive	_	competitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	compete-01	(mod())	10	MOD_mod	true
9	trail	_	trail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	riding	_	riding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
11	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@p@@another, 10@@s@@riding-01, 4@@r@@cause-01, 8@@p@@compete-01, 1@@d@@that, 7@@s@@like-01, 6@@d@@i, 5@@s@@cause-01, 11@@p@@also, 9@@d@@trail]
sentence=1	Those	those	those	DT	O	(d<root> / --LEX--)	that	()	6	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	reasons	_	reason	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
7	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_s	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
9	love	_	love	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
10	trail	_	trail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	riding,	_	riding,	NNP	O	_	cause-01	_	0	IGNORE	true
12	competitive	_	competitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	compete-01	(mod())	10	MOD_mod	true
13	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	not	_	not	RB	O	_	-	_	0	IGNORE	true
15	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[3@@p@@just, 1@@d@@that, 7@@s@@cause-01, 6@@s@@reason, 12@@p@@compete-01, 8@@d@@i, 5@@explicitanon0@@few, 10@@d@@trail, 9@@s@@love-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	2	MOD_s	true
4	take	_	take	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	2	APP_o	true
5	him	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	somewhere	_	somewhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
7	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
8	there's	_	there'	NNS	O	_	name	_	0	IGNORE	true
9	going	_	go	VBG	O	_	accompany-01	_	0	IGNORE	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	awesome	_	awesome	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	awe-01	(s())	15	MOD_s	true
13	burgers/american	_	burgers/american	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
14	food,	_	food,	NNS	O	_	have-03	_	0	IGNORE	true
15	atmosphere	_	atmosphere	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
16	(preferably	_	(preferably	NFP	O	(p<root> / --LEX--  :mod-of (s<mod>))	doubt-01	(mod())	3	MOD_mod	true
17	a	_	a	DT	O	_	n$LEMMA$me	_	0	IGNORE	true
18	tavern/pub	_	tavern/pub	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	style	_	style	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op3	true
20	would	_	would	MD	O	_	slash	_	0	IGNORE	true
21	be	_	be	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	2	MOD_mod	true
22	nice),	_	nice),	NNP	O	_	mean-01	_	0	IGNORE	true
23	good	_	good	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	25	APP_op1	true
24	service,	_	service,	NNP	O	_	mean-01	_	0	IGNORE	true
25	and	_	and	CC	O	(o<root> / --LEX--  :op3 (t2<op3>)  :op2 (b<op2>)  :op1 (l<op1>)  :example-of (t<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	2	MOD_mod	true
26	all	_	all	RB	O	_	$LEMMA$	_	0	IGNORE	true
27	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	time.	_	time.	NN	O	(g<root> / --LEX--  :example-of (a<mod>))	_NAME_	(mod())	3	MOD_mod	true
31	=	_	=	NNS	O	_	expressive	_	0	IGNORE	true
32	)	_	)	-RRB-	O	_	expressive	_	0	IGNORE	true

nodealignment=[30@@g@@_NAME_, 6@@d@@somewhere, 1@@d@@i, 18@@p@@tavern/pub, 27@@b@@around, 13@@p@@_NAME_, 4@@t@@take-01, 19@@d@@style, 5@@d@@he, 23@@d@@good-02, 25@@o@@and, 15@@d@@atmosphere, 29@@p@@great, 21@@p@@person, 16@@p@@doubt-01, 2@@c@@want-01, 3@@s@@thing, 12@@s@@awe-01]
sentence=1	Why,	why,	Why,	LS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	multi-sentence	(s(), o())	0	ROOT	true
2	how	_	how	WRB	O	(t<root> / --LEX--  :manner-of (h<mod>))	amr-unknown	(mod())	5	MOD_mod	true
3	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_s	true
4	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	5	APP_s	true
5	build	_	build	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-05	(s(), o())	3	APP_s	true
6	up	_	up	RP	O	_	multi-sentence	_	0	IGNORE	true
7	realtion	_	realtion	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	ship	_	ship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
10	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	he	_	he	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
12	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
13	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	useing	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	have-purpose-91	(s())	1	MOD_s	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
18	that	_	that	WDT	O	_	he	_	0	IGNORE	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	runs	_	run	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
21	on	_	on	RB	O	_	$LEMMA$	_	0	IGNORE	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	wakes	_	wake	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	28	APP_op2	true
25	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
26	walks	_	walk	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_op1	true
27	around	_	around	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	1	APP_o	true
29	goes	_	go	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	28	APP_op3	true
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
31	sleep	_	sleep	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_o	true
32	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
33	??	_	??	.	O	_	$LEMMA$	_	0	IGNORE	true
34	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[8@@d@@ship, 17@@d@@thing, 13@@p@@also, 24@@s@@wake-up-02, 3@@s@@possible-01, 15@@s@@have-purpose-91, 28@@a@@and, 31@@d@@sleep-01, 1@@s@@multi-sentence, 32@@p@@again, 5@@s@@build-up-05, 4@@d@@i, 7@@p@@realtion, 20@@s@@run-02, 14@@explicitanon0@@-, 2@@t@@amr-unknown, 27@@a@@around, 11@@p@@he, 26@@s@@walk-01, 29@@g@@go-02]
sentence=1	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	details,	_	details,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	0	ROOT	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
9	have	_	have	VB	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	5	APP_s	true
10	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
11	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_o	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	go	_	go	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-03	(mod(), s(), o())	11	MOD_mod	true
16	for	_	for	IN	O	_	company	_	0	IGNORE	true
17	doors	_	door	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	15	APP_o	true
19	windows	_	window	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	and	_	and	CC	O	_	$LEMMA$	_	15	IGNORE	true
21	roof	_	roof	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op3	true
22	,	_	,	,	O	_	and	_	0	IGNORE	true

nodealignment=[4@@p@@small, 19@@d@@window, 9@@h@@obligate-01, 18@@a@@and, 17@@d@@door, 3@@explicitanon0@@many, 21@@d@@roof, 7@@d@@you, 11@@s@@work-01, 5@@s@@and, 15@@t@@go-03]
sentence=1	maybe	_	maybe	RB	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
2	buy	_	buy	VB	O	(g<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (b<o>)  :ARG2 (i<s>)  :ARG0 (y / you))	$LEMMA$-01	(s(), o())	1	APP_o	true
3	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	toys	_	toy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	play	_	play	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
9	with	_	with	IN	O	_	i	_	0	IGNORE	true
10	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	give	_	give	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
12	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	APP_o	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_mod	true
17	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	u	_	u	NN	O	_	expressive	_	0	IGNORE	true
20	p	_	p	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@s@@give-01, 2@@g@@buy-01, 2@@y@@you, 7@@s@@possible-01, 16@@s@@use-01, 18@@d@@energy, 8@@s@@play-01, 2@@explicitanon0@@imperative, 4@@d@@toy, 6@@d@@he, 1@@f@@possible-01, 14@@t@@way]
sentence=1	Besides	besides	besides	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	and	_	0	IGNORE	true
3	obvious	_	obvious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
4	tourist	_	tourist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	tour-01	(mod())	5	MOD_mod	true
5	spots	_	spot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	which	_	which	WDT	O	_	i	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	have	_	have	VBP	O	_	person	_	0	IGNORE	true
10	planned	_	plan	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
11	for	_	for	IN	O	_	name	_	0	IGNORE	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@s@@plan-01, 4@@p@@tour-01, 5@@d@@spot, 3@@s@@obvious-01, 8@@n@@already, 7@@d@@i]
sentence=1	Im	im	im	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	i	(s())	6	APP_op1	true
2	around	_	around	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	1	APP_s	true
3	5'2_-_5'4	_name_	5'4	CD	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
4	,	_	,	,	O	_	year	_	0	IGNORE	true
5	11_years_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	year	()	6	APP_op2	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
7	im	_	im	UH	O	_	i	_	0	IGNORE	true
8	wondering	_	wonder	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op3	true
9	what	_	what	WDT	O	(d<root> / --LEX--)	amr-unknown	()	8	APP_s	true
10	size	_	size	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	i'll	_	i'll	CD	O	_	thing	_	0	IGNORE	true
13	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
14	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
15	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	wont	_	wont	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	grow	_	grow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	MOD_s	true
18	out	_	out	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-06	(s())	6	MOD_s	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	17	MOD_s	true
21	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	6	MOD_mod	true

nodealignment=[9@@d@@amr-unknown, 10@@p@@size, 6@@a@@and, 8@@s@@wonder-01, 16@@explicitanon0@@-, 17@@s@@grow-03, 11@@d@@horse, 5@@t@@temporal-quantity, 20@@s@@quick-02, 21@@explicitanon0@@interrogative, 1@@s@@i, 18@@s@@out-06, 5@@m@@year, 13@@s@@need-01, 3@@p@@person, 2@@o@@around, 3@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	centre	_	centre	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	center	(poss())	7	APP_s	true
3	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	falls	_	fall	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
6	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
7	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
8	locally	_	locally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	local-02	(s())	7	MOD_s	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	‘Garganta_Del_Diablo’_(The	_name_	(The	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	Devil’s	_name_	Devil’s	NNP	O	_	_NAME_	_	0	IGNORE	true
12	Throat),	throat),	Throat),	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	include-91	(mod())	7	APP_o	true
13	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
14	the	_	the	DT	O	_	product	_	0	IGNORE	true
15	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	volume	_	volume	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	19	APP_s	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_mod	true
19	sends	_	send	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	APP_mod	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	constant	_	constant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	mist	_	mist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	spray	_	spray	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
25	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o2	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@fall, 21@@p@@constant, 15@@p@@huge, 18@@d@@water, 19@@b@@send-01, 22@@d@@mist, 16@@explicitanon0@@volume, 12@@b@@include-91, 24@@g@@spray-01, 27@@d@@air, 10@@p@@_NAME_, 8@@s@@local-02, 2@@h@@center, 7@@s@@know-02]
sentence=1	deleting	_	delete	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
2	a	_	a	DT	O	_	thing	_	0	IGNORE	true
3	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_s	true
4	where	_	where	WRB	O	_	-	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o2	true
6	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	the	_	the	DT	O	_	i	_	0	IGNORE	true
9	answer	_	answer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	won't	_	won't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
11	get	_	get	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
12	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	11	MOD_s	true
14	answers...	_	answers...	UH	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	interrogative	(s(), o())	16	MOD_s	true
15	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	16	APP_s	true
16	refer	_	refer	VBP	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), o(s()))	0	ROOT	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
19	previous	_	previous	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	answer	_	answer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	true
21	:	_	:	:	O	_	i	_	0	IGNORE	true

nodealignment=[15@@d@@i, 1@@s@@delete-01, 13@@b@@good-02, 10@@explicitanon0@@-, 7@@s@@like-01, 3@@d@@question-01, 14@@s@@interrogative, 5@@d@@you, 13@@m@@more, 19@@n@@previous, 16@@s@@refer-01, 6@@explicitanon0@@-, 9@@d@@answer, 20@@s@@answer-01, 11@@s@@get-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	wake	_	wake	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	included	_	include	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	sit	_	sit	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
7	were	_	be	VBD	O	_	and	_	0	IGNORE	true
8	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
10	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	sit	_	sit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-06	(s(), o())	6	APP_s	true
12	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	through	_	through	IN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
14	the_night	_name_	night	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	remains	_	remain	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
18	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@b@@night, 6@@s@@sit-01, 8@@h@@have-rel-role-91, 13@@b@@through, 10@@d@@family, 2@@d@@wake, 3@@p@@also, 9@@a@@and, 5@@n@@night, 4@@s@@include-01, 8@@p@@person, 8@@f@@friend, 17@@d@@remain, 11@@s@@sit-up-06]
sentence=1	The	the	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
2	Pioneers	_name_	Pioneers	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_dom	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	organization	_	organization	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_s	true
6	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	at	_	at	IN	O	_	thing	_	0	IGNORE	true
8	the_end_of_the_19th_century	_name_	century	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	pushed	_	push	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	5	MOD_s	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
12	supported	_	support	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	ideal	_	ideal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	temperance	_	temperance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	(abstaining	_	(abstaining	-LRB-	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
18	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	alcohol),	_name_	alcohol),	NNP	O	_	and	_	0	IGNORE	true
20	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
21	an	_	an	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
22	attempt	_	attempt	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	deal	_	deal	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	22	APP_s	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
27	massive	_	massive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	24	APP_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	alcoholism	_	alcoholism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	that	_	that	WDT	O	_	name	_	0	IGNORE	true
32	Ireland	_name_	Ireland	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
33	was	_	be	VBD	O	_	person	_	0	IGNORE	true
34	gripped	_	grip	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
35	by	_	by	IN	O	_	name	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@a@@and, 17@@n@@_NAME_, 5@@r@@organization, 2@@d@@_NAME_, 28@@s@@issue-02, 8@@c@@city, 10@@s@@push-04, 22@@i@@attempt-01, 24@@s@@deal-01, 16@@p@@temperance, 30@@d@@alcoholism, 34@@s@@grip-01, 6@@s@@start-01, 32@@c@@country, 14@@d@@ideal, 27@@p@@massive, 12@@s@@support-01, 8@@n@@_NAME_, 32@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	APP_s	true
3	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
4	I'm	i'm	I'm	NNS	O	_	be-located-at-91	_	0	IGNORE	true
5	boarding	_	boarding	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_mod	true
6	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_op1	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_o	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	me	_	I	PRP	O	_	i	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	far,	_	far,	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	true
18	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
19	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	16	APP_op2	true
21	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	20	APP_o	true
23	of	_	of	IN	O	_	thing	_	0	IGNORE	true
24	hauling	_	haul	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_mod	true
25	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	myself	_	myself	PRP	O	_	i	_	0	IGNORE	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@p@@any, 24@@d@@haul-01, 20@@s@@have-03, 19@@explicitanon0@@-, 8@@s@@likely-01, 22@@t@@way, 2@@b@@place, 14@@p@@this, 16@@a@@and, 7@@explicitanon0@@-, 17@@d@@i, 10@@c@@want-01, 12@@s@@take-01, 5@@d@@boarding-01]
sentence=1	Most	most	Most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	9	MOD_s	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	tourists	_	tourist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	9	APP_s	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	I've	i've	i've	NN	O	_	person	_	0	IGNORE	true
7	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-across-21	(s())	4	MOD_s	true
8	across	_	across	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	buy	_	buy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	tours	_	tour	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
11	along	_	along	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
14	Tho	tho	Tho	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	waterfront	_	waterfront	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[9@@s@@buy-01, 1@@p@@Most, 4@@e2@@tour-01, 14@@p@@_NAME_, 4@@p2@@person, 11@@b@@along, 10@@d@@tour-01, 7@@s@@come-across-21, 15@@d@@waterfront, 2@@s@@include-91]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-06	(s(), o())	6	APP_op1	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
7	visited	_	visit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	location	_	location	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
10	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
11	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_mod	true
13	coconut	_	coconut	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	candies,	_	candies,	NNS	O	_	and	_	0	IGNORE	true
15	visited	_	visit	VBD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	restaurant	_	restaurant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	which	_	which	WDT	O	_	i	_	0	IGNORE	true
20	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
21	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
22	to	_	to	IN	O	_	and	_	0	IGNORE	true
23	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
24	fish	_	fish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	farm,	_	farm,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
26	rode	_	ride	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	MOD_s	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	modified	_	modify	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
29	quad	_	quad	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	bikes	_	bike	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	6	MOD_op1	true
32	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_op3	true
33	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	tropical	_	tropical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	at	_	at	IN	O	_	thing	_	0	IGNORE	true
37	what	_	what	WP	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	6	MOD_mod	true
38	appeared	_	appear	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	37	MOD_s	true
39	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
40	be	_	be	VB	O	_	person	_	0	IGNORE	true
41	a	_	a	DT	O	_	1	_	0	IGNORE	true
42	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	43	MOD_s	true
43	hangout	_	hangout	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@make-01, 6@@a@@and, 11@@d@@they, 9@@b@@location, 18@@d@@restaurant, 1@@d@@We, 43@@d@@hangout, 15@@i@@visit-01, 33@@explicitanon0@@some, 35@@d@@food, 38@@s@@appear-02, 29@@p@@quad, 4@@p@@great, 31@@a@@and, 30@@m@@bike, 7@@s@@visit-01, 34@@p@@tropical, 28@@s@@modify-01, 13@@d@@coconut, 21@@s@@attach-01, 37@@p@@amr-unknown, 24@@d@@fish, 32@@s@@have-03, 42@@s@@local-02, 26@@s@@ride-01, 17@@s@@local-02, 5@@d@@time, 2@@s@@have-06]
sentence=1	However,	_name_	However,	LS	O	_	and	_	0	IGNORE	true
2	what	_	what	WP	O	_	and	_	0	IGNORE	true
3	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	hoped	_	hope	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	APP_o	true
7	during	_	during	IN	O	_	i	_	0	IGNORE	true
8	the_Tet_Offensive	_name_	Offensive	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
11	sneak	_	sneak	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op1	true
12	past	_	past	IN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Americans	_name_	Americans	NNPS	O	(n2<root> / --LEX--  :name-of (c2 / country  :mod-of (i<mod>)))	_NAME_	(mod())	12	MOD_mod	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
16	attack	_	attack	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op2	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	ARVN	_name_	ARVN	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
19	in	_	in	IN	O	_	person	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	urban	_	urban	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	APP_o	true
23	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
24	they	_	they	PRP	O	_	person	_	0	IGNORE	true
25	were	_	be	VBD	O	_	person	_	0	IGNORE	true
26	deployed	_	deploy	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	22	APP_mod	true
27	doing	_	do	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
28	successful	_	successful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	32	MOD_s	true
29	Clear	_name_	clear	VB	O	(d<root> / --LEX--)	$LEMMA$-06	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
31	Defend	defend	defend	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_op2	true
32	operations	_	operation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[29@@d@@clear-06, 11@@s@@sneak-01, 30@@a@@and, 12@@d@@past, 4@@c@@hope-01, 6@@s@@do-02, 31@@d@@defend-01, 8@@n@@_NAME_, 26@@s@@deploy-01, 15@@a@@and, 18@@n@@_NAME_, 32@@d@@operation, 18@@c@@country, 21@@p@@urban, 22@@b@@area, 14@@c2@@country, 14@@n2@@_NAME_, 28@@s@@succeed-01, 3@@d@@they, 16@@s@@attack-01]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
3	tube	_	tube	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	UVB	uvb	uvb	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	bulbs	_	bulb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	are	_	be	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	7	MOD_mod	true
7	best,	_	best,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	7	MOD_s	true
9	Zoomed's_Repsitun	_name_	Repsitun	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	model:	_	model:	NNP	O	_	_NAME_	_	0	IGNORE	true
11	http://lllreptile.com/store/catalog/reptile-supplies/uvb-fluorescent-lights-mercury-vapor-bulbs/-/zoo-med-24-repti-sun-100-fluorescent-bulb/	_	http://lllreptile.com/store/catalog/reptile-supplies/uvb-fluorescent-lights-mercury-vapor-bulbs/-/zoo-med-24-repti-sun-100-fluorescent-bulb/	XX	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	7	APP_o	true
12	Remember	remember	remember	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	17	MOD_s	true
13	to	_	to	TO	O	_	and	_	0	IGNORE	true
14	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
15	UVB	uvb	uvb	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	bulbs	_	bulb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	according	_	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	7	MOD_o	true
18	to	_	to	IN	O	_	conform-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	manufacturers	_	manufacturer	NNS	O	(d<root> / --LEX--)	manufacture-01	()	21	APP_s	true
21	recommendation	_	recommendation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	recommend-01	(s(), o())	17	APP_s	true
22	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
23	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	the	_	the	DT	O	_	date-entity	_	0	IGNORE	true
26	bulb	_	bulb	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
27	will	_	will	MD	O	_	i	_	0	IGNORE	true
28	no	_	no	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
29	longer	_	longer	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	no-$LEMMA$	(mod())	30	MOD_mod	true
30	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
31	UVB	uvb	uvb	NN	O	(d<root> / --LEX--)	name	()	30	APP_o	true
32	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-if	(mod())	30	MOD_mod	true
33	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
34	visible	_	visible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	35	MOD_s	true
35	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
36	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
37	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	7	MOD_o	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@d@@name, 5@@d@@bulb, 12@@c@@remember-01, 17@@s@@say-01, 3@@p@@tube, 16@@d@@bulb, 22@@n@@after, 4@@p@@_NAME_, 7@@s@@best,-01, 35@@d@@light, 28@@explicitanon0@@-, 2@@s@@long-03, 8@@s@@resemble-01, 11@@u@@url-entity, 14@@s@@replace-01, 11@@explicitanon0@@_NAME_, 37@@s@@be-located-at-91, 32@@p@@even-if, 36@@p@@still, 29@@n@@no-longer, 20@@d@@manufacture-01, 15@@p@@_NAME_, 21@@s@@recommend-01, 30@@s@@produce-01, 34@@s@@visible, 6@@p@@person, 9@@n@@_NAME_, 26@@d@@bulb]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	thats	_	thats	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	4	MOD_mod	true
3	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	4	APP_s	true
4	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	1	APP_op2	true
5	why	_	why	WRB	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	cause-01	(s())	1	MOD_s	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	4	APP_o	true
8	choose	_	choose	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	7	APP_s	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	parakeet	_	parakeet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
13	finch	_	finch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
14	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@p@@that, 5@@t3@@thing, 8@@b@@choose-01, 1@@a@@and, 13@@d@@finch, 7@@s@@recommend-01, 5@@t@@cause-01, 6@@d@@you, 10@@d@@parakeet, 4@@s@@cause-01, 3@@d@@i]
sentence=1	So,	so,	So,	NNP	O	_	and	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	waited	_	wait	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	a_week	_name_	week	NN	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	$LEMMA$	(mod())	3	MOD_mod	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	call	_	call	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	APP_o	true
7	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
8	I	i	I	PRP	O	_	1	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	busy	_	busy	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
12	I	i	I	PRP	O	_	1	_	0	IGNORE	true
13	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_op2	true
14	to	_	to	TO	O	_	and	_	0	IGNORE	true
15	have	_	have	VB	O	(d<root> / --LEX--)	$LEMMA$-04	()	13	APP_s	true
16	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-09	(s())	13	APP_o	true
18	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
19	on	_	on	IN	O	_	2	_	0	IGNORE	true
20	a_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	am	_	be	VBP	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
24	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	available	_	available	JJ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-02	(mod(), s())	17	MOD_mod	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	case	_	case	NN	O	_	cause-01	_	0	IGNORE	true
28	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	were	_	be	VBD	O	_	person	_	0	IGNORE	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	hang	_	hang	VB	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$-out-06	(mod())	25	MOD_mod	true
32	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
33	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
34	;	_	;	:	O	_	$LEMMA$	_	0	IGNORE	true
35	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@c@@want-01, 31@@r@@hang-out-06, 11@@a@@and, 4@@t@@temporal-quantity, 20@@n@@day, 2@@d@@i, 7@@s@@cause-01, 3@@o@@wait-01, 17@@s@@come-out-09, 15@@d@@have-04, 24@@s@@more, 25@@s@@available-02, 4@@d@@week, 10@@d@@busy-01, 4@@r@@rate-entity-91, 33@@n@@after, 6@@s@@call-02]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	1	MOD_s	true
3	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	4	APP_s	true
4	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	1	APP_s	true
8	of	_	of	IN	O	_	anything	_	0	IGNORE	true
9	It..	it..	It..	NNP	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	saw	_	see	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
15	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o2	true
17	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
18	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), o(s()))	1	APP_o	true
19	Me	me	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	had	_	have	VBD	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	18	APP_o	true
22	To	to	to	TO	O	_	cause-01	_	0	IGNORE	true
23	get	_	get	VB	O	_	cause-01	_	0	IGNORE	true
24	married	_	married	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
25	to	_	to	IN	O	_	person	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	Who	who	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
29	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	worked	_	work	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
31	with	_	with	IN	O	_	-	_	0	IGNORE	true
32	becuse	_	becuse	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	30	APP_o	true
33	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	knocked	_	knock	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
35	Her	her	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	Up.	up.	Up.	NNP	O	_	person	_	0	IGNORE	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@tell-01, 2@@s@@resemble-01, 11@@p@@next, 3@@d@@i, 16@@d@@He, 32@@p@@person, 4@@s@@say-01, 30@@t@@work-01, 7@@s@@come-04, 34@@s@@knock-01, 14@@v@@see-01, 24@@s@@married-01, 32@@n@@_NAME_, 5@@d@@nothing, 1@@h@@contrast-01, 27@@d@@girl, 6@@n@@ever, 21@@h@@obligate-01]
sentence=1	Theres	theres	there	NNS	O	(d<root> / --LEX--)	amr-unknown	()	3	APP_s	true
2	a	_	a	DT	O	_	reason	_	0	IGNORE	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
4	why	_	why	WRB	O	_	cause-01	_	0	IGNORE	true
5	Frank	_name_	Frank	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
6	mcclelland	_	mcclelland	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
7	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
8	named	_	name	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
9	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	10	MOD_s	true
10	chef	_	chef	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	north	_	north	JJ	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
14	east	_	east	JJ	O	_	$LEMMA$	_	0	IGNORE	true
15	reigon	_	reigon	NN	O	_	_NAME_	_	0	IGNORE	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[10@@d@@chef, 3@@s@@cause-01, 6@@n@@_NAME_, 9@@m@@most, 9@@b2@@good-02, 5@@n@@_NAME_, 6@@p@@person, 1@@d@@amr-unknown, 13@@b@@north, 8@@s@@name-01]
sentence=1	Try	try	try	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	weekend	_name_	weekend	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
4	"tastings"	_	"tastings"	''	O	_	rate-entity-91	_	0	IGNORE	true
5	which	_	which	WDT	O	_	i	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	learn	_	learn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
9	about	_	about	IN	O	_	thing	_	0	IGNORE	true
10	by	_	by	IN	O	_	thing	_	0	IGNORE	true
11	getting	_	get	VBG	O	(g<root> / --LEX--  :ARG2 (m<s>)  :purpose-of (p<mod>))	$LEMMA$-05	(mod(), s())	8	MOD_mod	true
12	on	_	on	IN	O	_	you	_	0	IGNORE	true
13	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	weekly	_name_	weekly	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	week	(mod())	16	MOD_mod	true
15	email	_	email	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	list	_	list	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[14@@r@@rate-entity-91, 16@@b@@list, 3@@d@@weekend, 8@@s@@learn-01, 14@@d@@week, 14@@t@@temporal-quantity, 1@@s@@try-01, 7@@s@@possible-01, 6@@d@@you, 15@@p@@email, 2@@d@@they, 11@@g@@get-05]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	bustling	_	bustling	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	place	_	place	NN	O	(n<root> / --LEX--  :domain (a<dom>)  :location-of (l<mod>))	$LEMMA$	(dom(), mod())	20	APP_s	true
6	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
7	separate	_	separate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	parties	_	party	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	seated	_	seat	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_mod	true
11	at	_	at	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	table	_	table	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	(as	_	(as	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	European	_name_	European	NNP	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	cafes),	_	cafes),	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	and	(mod())	20	MOD_mod	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
22	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	are	_	be	VBP	O	_	person	_	0	IGNORE	true
24	OK	ok	ok	JJ	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$ay-01	(mod(), s())	31	MOD_mod	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	that,	_	that,	NNS	O	_	and	_	0	IGNORE	true
27	the	_	the	DT	O	_	multi-sentence	_	0	IGNORE	true
28	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_o	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@explicitanon0@@many, 30@@s@@very, 8@@d@@party, 28@@d@@food, 22@@d@@you, 19@@b@@and, 1@@d@@It, 5@@n@@place, 18@@n2@@_NAME_, 20@@s@@contrast-01, 24@@o@@okay-01, 10@@s@@seat-01, 13@@s@@same-01, 18@@c3@@continent, 7@@s@@separate-02, 14@@d@@table, 31@@s@@good-02, 4@@s@@bustling-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	say-01	_	0	IGNORE	true
3	saying	_	say	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
5	comparing	_	compare	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	hotels	_	hotel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	Wildwood,	_name_	wildwood,	CD	O	_	_NAME_	_	0	IGNORE	true
11	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	hotel	_	hotel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	APP_o	true
14	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	that	_	that	WDT	O	_	name	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
19	for	_	for	IN	O	_	name	_	0	IGNORE	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@i, 14@@d@@everything, 3@@s@@say-01, 7@@p@@other, 16@@d@@we, 11@@p@@this, 5@@s@@compare-01, 6@@p@@all, 8@@d@@hotel, 13@@s@@have-03, 12@@d@@hotel, 18@@s@@look-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	an	_	an	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	18	(mod())	4	MOD_mod	true
6	80_yr_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	I	i	I	PRP	O	_	1	_	0	IGNORE	true
9	take	_	take	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
10	of	_	of	IN	O	_	multiple	_	0	IGNORE	true
11	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_mod	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	ER	_name_	ER	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	11	APP_s	true
16	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	MOD_s	true
17	stays	_	stay	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_op2	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	hospital	_	hospital	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@send-01, 6@@y@@year, 14@@d@@ER, 9@@s@@take-01, 15@@a@@and, 1@@d@@i, 20@@b@@hospital, 5@@explicitanon0@@18, 4@@s@@have-03, 3@@p@@also, 17@@d@@stay-01, 6@@t@@temporal-quantity, 16@@s@@long-03]
sentence=1	After	after	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	meal,	_	meal,	NNS	O	_	and	_	0	IGNORE	true
4	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	server	_	server	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	6	APP_s	true
6	found	_	find	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	table	_	table	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	jazz	_	jazz	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	club	_	club	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
15	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
16	were	_	be	VBD	O	_	person	_	0	IGNORE	true
17	informed	_	inform	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
18	it	_	it	PRP	O	_	i	_	0	IGNORE	true
19	would	_	would	MD	O	_	and	_	0	IGNORE	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	$10/person	_	$10/person	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
23	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
24	stay	_	stay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	17	APP_o	true
26	listen	_	listen	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op2	true
27	to	_	to	IN	O	_	and	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	band,	_	band,	NNS	O	_	_NAME_	_	0	IGNORE	true
30	despite	_	despite	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	have-concession-91	_	0	IGNORE	true
32	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
33	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	had	_	have	VBD	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
35	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	finished	_	finish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_op1	true
37	a	_	a	DT	O	_	1	_	0	IGNORE	true
38	dinner	_	dinner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
39	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	32	MOD_mod	true
41	were	_	be	VBD	O	_	person	_	0	IGNORE	true
42	intending	_	intend	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_op2	true
43	to	_	to	TO	O	_	thing	_	0	IGNORE	true
44	enjoy	_	enjoy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	42	APP_s	true
45	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
46	drink	_	drink	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
47	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@b@@club, 25@@a@@and, 6@@b@@find-01, 36@@s@@finish-01, 22@@d@@$10/person, 15@@d@@we, 40@@a@@and, 1@@n@@after, 21@@p@@another, 5@@e2@@server, 32@@p@@fact, 44@@s@@enjoy-01, 42@@s@@intend-01, 12@@p@@jazz, 47@@d@@list, 17@@s@@inform-01, 35@@p@@just, 46@@p@@drink, 9@@d@@table, 38@@d@@dinner, 5@@p2@@person, 24@@s@@stay-01, 26@@s@@listen-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	moved	_	move	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	to	_	to	IN	O	_	thing	_	0	IGNORE	true
6	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	around	_	around	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
9	the	_	the	DT	O	_	location	_	0	IGNORE	true
10	back	_	back	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
11	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
14	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	dirty,	_	dirty,	NNP	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	location	_	0	IGNORE	true
17	shower	_	shower	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	dirty	_	dirty	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	33	APP_op2	true
20	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
21	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	peoples	_	people	NNS	O	(d<root> / --LEX--)	person	()	23	APP_poss	true
23	hair	_	hair	VBP	O	(a<root> / --LEX--  :part-of (c<poss>)  :mod-of (y<mod>))	$LEMMA$	(mod(), poss())	19	MOD_mod	true
24	in	_	in	IN	O	_	regardless-91	_	0	IGNORE	true
25	it,	_	it,	NNS	O	_	and	_	0	IGNORE	true
26	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
27	toilet	_	toilet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	seat	_	seat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
29	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
30	peeling	_	peel	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op1	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
32	rough	_	rough	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	31	APP_op2	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	4	MOD_op1	true
34	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
35	bathroom	_	bathroom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
36	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
37	full	_	full	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	33	APP_op3	true
38	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
39	mould	_	mould	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[39@@d@@mould, 32@@d@@rough-02, 13@@d@@room, 10@@d@@back, 37@@s@@full-09, 28@@d@@seat, 22@@d@@person, 30@@s@@peel-01, 1@@d@@i, 23@@a@@hair, 31@@a@@and, 4@@s@@move-01, 35@@d@@bathroom, 21@@p@@other, 7@@d@@room, 27@@p@@toilet, 8@@b@@around, 19@@s@@dirty-01, 6@@p@@another, 17@@d@@shower, 3@@n@@then, 33@@a@@and]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	BEST	best	BEST	NNP	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	7	MOD_s	true
7	B&B	_name_	B&B	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	0	ROOT	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	have	_	have	VBP	O	_	$LEMMA$	_	0	IGNORE	true
11	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	stayed	_	stay	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
13	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[9@@d@@we, 1@@d@@this, 6@@m@@most, 12@@s@@stay-01, 11@@n@@ever, 6@@b2@@good-02, 4@@s@@far, 7@@r@@_NAME_]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
2	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
3	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
7	would	_	would	MD	O	_	-	_	0	IGNORE	true
8	have	_	have	VB	O	_	-	_	0	IGNORE	true
9	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	11	MOD_mod	true
10	have	_	have	VB	O	_	-	_	0	IGNORE	true
11	thought	_	think	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
12	of,	_	of,	RB	O	_	-	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	meet	_	meet	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-03	(mod(), s())	14	MOD_mod	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
24	it	_	it	PRP	O	_	i	_	0	IGNORE	true
25	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	wedding	_	wedding	NN	O	(d<root> / --LEX--)	wed-01	()	25	APP_op1	true
28	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@s@@take-01, 15@@p@@extra, 6@@d@@we, 2@@s@@ask-01, 13@@a@@and, 23@@s@@need-01, 4@@d@@thing, 25@@w@@before, 1@@d@@They, 27@@d@@wed-01, 11@@s@@think-01, 18@@i@@meet-03, 9@@n@@ever, 16@@d@@time]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	quality	_	quality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	starts	_	start	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	at	_	at	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	receptionist	_	receptionist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	APP_o	true
8	desk,	_	desk,	NNP	O	_	include-91	_	0	IGNORE	true
9	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
11	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_dom	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	impatient	_	impatient	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	patient-01	(dom())	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_mod	true
16	lack	_	lack	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	efficiency	_	efficiency	NN	O	(d<root> / --LEX--)	efficient-01	()	16	APP_s	true
19	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	21	APP_s	true
20	once	_	once	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	loved	_	love	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
22	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	office	_	office	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@r@@patient-01, 19@@d@@i, 15@@a@@and, 16@@s@@lack-01, 13@@s@@very, 18@@d@@efficient-01, 3@@d@@quality, 24@@b@@office, 11@@d@@staff, 2@@p@@poor, 4@@s@@start-01, 7@@p@@receptionist, 20@@n@@once, 21@@s@@love-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	WAS	was	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
3	ALSO	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	THERE	there	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	OF	of	of	IN	O	_	include-91	_	0	IGNORE	true
6	JULY_4TH_2008,	_name_	2008,	CD	O	_	$LEMMA$	_	0	IGNORE	true
7	WHEN	when	when	WRB	O	_	name	_	0	IGNORE	true
8	MY_DAUGHTERS_BUFFALO_WINGS	_name_	WINGS	NNPS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	CAME	came	come	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-out-09	(mod(), s())	2	MOD_mod	true
10	OUT	out	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	WITH	with	with	IN	O	_	-	_	0	IGNORE	true
12	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	FLY	fly	fly	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	ON	on	on	NN	O	_	name	_	0	IGNORE	true
15	IT	it	it	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[9@@s@@come-out-09, 4@@d@@there, 13@@y@@fly, 1@@d@@i, 8@@n@@_NAME_, 3@@p@@also, 2@@s@@be-located-at-91, 8@@p@@person]
sentence=1	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	sandwich	_	sandwich	VBP	O	(d<root> / --LEX--  :ARG0 (t<s>)  :ARG1 (s2<o>)  :topic-of (s<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	pepperoni	_	pepperoni	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	between	_	between	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
12	layers	_	layer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	cheese	_	cheese	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	+32	_	+32	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
17	delicious	_	delicious	JJ	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
18	.	_	.	.	O	_	date-entity	_	0	IGNORE	true

nodealignment=[11@@b@@between, 1@@d@@they, 16@@explicitanon0@@_NUMBER_, 4@@p@@whole, 14@@g@@cheese, 5@@d@@thing, 3@@p@@that, 17@@o@@delicious, 2@@s@@do-02, 12@@d@@layer, 8@@d@@sandwich-01, 10@@d@@pepperoni, 7@@d@@you]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-04	(s(), o())	28	APP_s	true
3	up	_	up	RP	O	_	and	_	0	IGNORE	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	town	_	town	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	APP_o	true
8	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	7	APP_mod	true
12	trusted	_	trust	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
13	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	mechanic	_	mechanic	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	11	APP_o	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	MOD_op1	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	cynical	_	cynical	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	15	APP_op2	true
19	about	_	about	IN	O	_	thing	_	0	IGNORE	true
20	city	_	city	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	auto	_	auto	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	repair	_	repair	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
23	shops	_	shop	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_dom	true
24	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	moved	_	move	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_op1	true
27	here,	_	here,	NNPS	O	_	and	_	0	IGNORE	true
28	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
29	Phet	_name_	Phet	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_s	true
30	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
31	shown	_	show	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o	true
32	that	_	that	IN	O	_	and	_	0	IGNORE	true
33	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
34	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	38	MOD_s	true
35	are	_	be	VBP	O	_	person	_	0	IGNORE	true
36	honest	_	honest	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
37	hard	_	hard	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	38	MOD_s	true
38	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	39	MOD_s	true
39	mechanics	_	mechanic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
40	around	_	around	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
41	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@s@@trust-01, 11@@a@@and, 36@@s@@honest-01, 18@@r@@cynical, 10@@s@@know-01, 31@@s@@show-01, 39@@d@@mechanic, 14@@p2@@person, 14@@e2@@mechanic, 22@@i@@repair-01, 29@@p@@person, 29@@n@@_NAME_, 21@@d@@auto, 26@@d@@move-01, 9@@d@@you, 34@@s@@real-04, 37@@s@@hard-02, 40@@b@@around, 15@@a@@and, 24@@w@@since, 2@@s@@grow-up-04, 23@@d@@shop, 20@@p@@city, 38@@s@@work-01, 28@@s@@contrast-01, 1@@d@@i, 6@@p@@small, 17@@s@@really, 7@@b@@town]

