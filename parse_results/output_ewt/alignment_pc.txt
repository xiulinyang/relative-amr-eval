sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	last	_	last	JJ	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	before	(mod())	12	MOD_mod	true
4	decade,	_	decade,	NNS	O	_	and	_	0	IGNORE	true
5	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
6	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
7	been	_	be	VBN	O	_	monetary-quantity	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	12	MOD_s	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	increase	_	increase	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
13	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	childhood	_	childhood	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
15	and,	_	and,	VBN	O	_	and	_	0	IGNORE	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	extent,	_	extent,	NNP	O	_	mean-01	_	0	IGNORE	true
20	adult	_	adult	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	carcinoma	_	carcinoma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
22	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	thyroid	_	thyroid	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	contaminated	_	contaminated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
27	regions	_	region	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	12	MOD_mod	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
30	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	Soviet_Union	_name_	Union	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	27	APP_poss	true
32	(Wi940)	(wi940)	(Wi940)	-LRB-	O	_	include-91	_	0	IGNORE	true
33	which	_	which	WDT	O	_	i	_	0	IGNORE	true
34	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	36	MOD_s	true
35	be	_	be	VB	O	_	person	_	0	IGNORE	true
36	attributed	_	attribute	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
37	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
38	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
39	Chernobyl	_name_	Chernobyl	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	40	MOD_mod	true
40	accident	_	accident	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_o	true
41	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	36	MOD_mod	true
42	proven	_	prove	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	APP_op1	true
43	otherwise	_	otherwise	RB	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@d@@carcinoma, 40@@d@@accident, 34@@s@@recommend-01, 3@@b@@before, 39@@n@@_NAME_, 31@@c@@country, 30@@n@@former, 24@@p@@thyroid, 26@@s@@contaminated-01, 20@@p@@adult, 9@@s@@real-04, 18@@p@@certain, 12@@s@@increase-01, 41@@w@@until, 11@@s@@significant-02, 27@@h@@region, 3@@n@@now, 42@@s@@prove-01, 31@@n@@_NAME_, 14@@p@@childhood, 43@@d@@otherwise, 36@@s@@attribute-01]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	prestigious	_	prestigious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	IAEA	_name_	IAEA	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	6	APP_poss	true
4	(International	(international	(international	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
5	Atomic	atomic	Atomic	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	atom	(mod())	6	MOD_mod	true
6	Energy	energy	Energy	NNP	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_s	true
7	Agency)	_name_	Agency)	NNP	O	_	and	_	0	IGNORE	true
8	published	_	publish	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	an	_	an	DT	O	_	1	_	0	IGNORE	true
10	early	_	early	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	report	_	report	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
12	on	_	on	IN	O	_	name	_	0	IGNORE	true
13	Chernobyl	_name_	Chernobyl	NNP	O	(p<root> / person  :name (n / --LEX--)  :topic-of (a<mod>))	_NAME_	(mod())	11	MOD_mod	true
14	which	_	which	WDT	O	_	name	_	0	IGNORE	true
15	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
16	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	11	MOD_s	true
17	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
18	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
20	Russian	_name_	russian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	sources	_	source	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
23	stated	_	state	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
24	that	_	that	IN	O	_	name	_	0	IGNORE	true
25	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
26	was	_	be	VBD	O	_	person	_	0	IGNORE	true
27	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	28	MOD_mod	true
28	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	MOD_s	true
29	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	effects	_	effect	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_o	true
31	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[8@@s@@publish-01, 18@@d@@information, 13@@n@@_NAME_, 20@@n@@_NAME_, 28@@s@@significant-02, 16@@s@@base-02, 22@@a@@and, 10@@n@@early, 29@@d@@health, 13@@p@@person, 5@@p@@atom, 4@@p@@_NAME_, 6@@m@@Energy, 30@@s@@effect-03, 3@@o2@@organization, 23@@d@@state-01, 11@@d@@report-01, 3@@n@@_NAME_, 27@@explicitanon0@@-, 21@@s@@source, 20@@c@@country, 2@@p@@prestigious]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	dramatic	_	dramatic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	increase	_	increase	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
4	in	_	in	IN	O	_	include-91	_	0	IGNORE	true
5	radiation-induced	_	radiation-induced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fuel-01	(s())	7	MOD_s	true
6	thyroid	_	thyroid	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	cancers	_	cancer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
8	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
9	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
11	adolescents	_	adolescent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	Belarus,	belarus,	belarus,	CD	O	_	$LEMMA$	_	0	IGNORE	true
14	Russia,	russia,	russia,	NN	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	10	MOD_mod	true
16	Ukraine,	ukraine,	ukraine,	CD	O	_	name	_	0	IGNORE	true
17	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
18	have	_	have	VBP	O	_	person	_	0	IGNORE	true
19	been	_	be	VBN	O	_	date-interval	_	0	IGNORE	true
20	observed	_	observe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
21	since	_	since	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
22	1991,	_	1991,	NNP	O	_	2	_	0	IGNORE	true
23	continues	_	continue	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
24	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	this_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[10@@b@@and, 20@@s@@observe-01, 7@@d@@cancer, 9@@d@@child, 3@@s@@increase-01, 2@@p@@dramatic, 11@@d@@adolescent, 23@@s@@continue-01, 5@@s@@fuel-01, 15@@b@@and, 25@@n@@day, 21@@n@@since, 6@@p@@thyroid]
sentence=1	Israel's	israel's	israel's	JJ	O	_	_NAME_	_	0	IGNORE	true
2	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	interests	_	interest	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
4	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	monetary-quantity	(s())	6	MOD_s	true
5	best	_	best	RB	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	6	MOD_s	true
6	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	by	_	by	IN	O	_	thing	_	0	IGNORE	true
8	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
11	neighbors,	_	neighbors,	NNS	O	_	and	_	0	IGNORE	true
12	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
13	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	MOD_s	true
14	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	achieved	_	achieve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
17	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
18	trading	_	trade	VBG	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	trade-01	(mod(), s(), o())	16	MOD_mod	true
19	land	_	land	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
20	for	_	for	IN	O	_	and	_	0	IGNORE	true
21	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	with	_	with	IN	O	_	-	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Palestinians	_name_	Palestinians	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
25	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@p@@security, 5@@b2@@good-02, 24@@c@@country, 21@@d@@peace, 8@@d@@peace, 19@@d@@land, 5@@m@@most, 13@@s@@possible-01, 24@@n@@_NAME_, 16@@s@@achieve-01, 6@@s@@serve-01, 3@@d@@interest, 18@@b@@trade-01, 4@@s@@monetary-quantity, 14@@p@@only]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	has	_	have	VBZ	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
4	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	drawn	_	draw	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_op2	true
6	protests	_	protest	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_o	true
7	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the_Tamil_National_Alliance	_name_	Alliance	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
9	(TNA)	(tna)	(TNA)	,	O	_	include-91	_	0	IGNORE	true
10	which	_	which	WDT	O	_	name	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	backed	_	back	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	LTTE	_name_	LTTE	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
16	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	April	_name_	April	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	4	(mod())	20	MOD_mod	true
19	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	elections	_	election	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	elect-01	(mod())	12	MOD_mod	true
21	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	20	MOD_s	true
22	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
23	Sri_Lanka	_name_	Lanka	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@n@@_NAME_, 15@@n@@_NAME_, 18@@explicitanon0@@4, 6@@s@@protest-01, 1@@a@@and, 8@@n@@_NAME_, 15@@o2@@organization, 4@@n@@already, 21@@s@@hold-04, 12@@s@@back-01, 5@@s@@draw-02, 8@@o2@@organization, 2@@d@@this, 23@@c@@country, 19@@s@@general-02, 18@@d@@date-entity, 20@@n@@elect-01]
sentence=1	Kumaratunga's_India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	tour	_	tour	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_s	true
3	preceded	_	precede	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	5	(mod())	3	MOD_mod	true
5	three-day	_	three-day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	day	(mod())	6	MOD_mod	true
6	visit	_	visit	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
7	to	_	to	IN	O	_	person	_	0	IGNORE	true
8	Sri_Lanka	_name_	Lanka	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
9	by	_	by	IN	O	_	name	_	0	IGNORE	true
10	Norwegian	_name_	norwegian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
11	Foreign	foreign	Foreign	NNP	O	(a<root> / --LEX--  :topic-of (w<mod>))	$REPL$	(mod())	12	MOD_mod	true
12	Minister	minister	Minister	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	13	MOD_s	true
13	Jan_Petersen	_name_	Petersen	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
14	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	bid	_	bid	NN	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	6	MOD_mod	true
18	to	_	to	TO	O	_	name	_	0	IGNORE	true
19	revive	_	revive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	talks	_	talk	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	were	_	be	VBD	O	_	person	_	0	IGNORE	true
25	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	follow	_	follow	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	ceasefire	_	ceasefire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	Oslo	_name_	Oslo	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
32	successfully	_	successfully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	33	MOD_s	true
33	brokered	_	broker	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_o	true
34	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
35	February_2002	_name_	2002	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	2008	(mod())	33	MOD_mod	true
36	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[2@@s@@tour-01, 31@@c@@city, 25@@s@@suppose-02, 31@@n@@_NAME_, 27@@s@@follow-01, 8@@c@@country, 8@@n@@_NAME_, 6@@s@@visit-01, 10@@n@@_NAME_, 5@@t@@temporal-quantity, 17@@d2@@bid-01, 32@@s@@succeed-01, 12@@h@@have-org-role-91, 13@@n@@_NAME_, 13@@p@@person, 33@@s@@broker-01, 10@@c@@country, 21@@d@@peace, 12@@g@@minister, 29@@d@@ceasefire, 19@@s@@revive-01, 11@@a@@foreign, 35@@explicitanon0@@2008, 1@@n@@_NAME_, 16@@s@@new-01, 3@@s@@precede-01, 5@@y@@day, 4@@explicitanon0@@5, 22@@s@@talk-01, 1@@c@@country]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	has	_	have	VBZ	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
4	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	drawn	_	draw	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_op2	true
6	protests	_	protest	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_o	true
7	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the_Tamil_National_Alliance	_name_	Alliance	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
9	(TNA)	(tna)	(TNA)	,	O	_	include-91	_	0	IGNORE	true
10	which	_	which	WDT	O	_	name	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	backed	_	back	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	LTTE	_name_	LTTE	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
16	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	April	_name_	April	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	4	(mod())	20	MOD_mod	true
19	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	elections	_	election	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	elect-01	(mod())	12	MOD_mod	true
21	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	20	MOD_s	true
22	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
23	Sri_Lanka	_name_	Lanka	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@o2@@organization, 19@@s@@general-02, 23@@c@@country, 20@@n@@elect-01, 18@@d@@date-entity, 6@@s@@protest-01, 5@@s@@draw-02, 18@@explicitanon0@@4, 2@@d@@this, 1@@a@@and, 23@@n@@_NAME_, 8@@n@@_NAME_, 21@@s@@hold-04, 4@@n@@already, 12@@s@@back-01, 15@@n@@_NAME_, 15@@o2@@organization]
sentence=1	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	keeps	_	keep	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	APP_s	true
3	what	_	what	WP	O	_	thing	_	0	IGNORE	true
4	it	_	it	PRP	O	_	thing	_	0	IGNORE	true
5	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	2	APP_o	true
6	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
9	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	8	APP_op2	true
10	(which	_	(which	NNP	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
12	gifted	_	gift	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	slice	_	slice	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	12	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	territory	_	territory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
18	three_decades	_name_	decade	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
19	ago)	_	ago)	NNP	O	_	and	_	0	IGNORE	true
20	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
21	likewise	_	likewise	RB	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[18@@p@@decade, 21@@d@@likewise, 6@@s@@contrast-01, 1@@c@@country, 9@@c@@country, 7@@c@@country, 17@@d@@territory, 7@@n@@_NAME_, 14@@h@@slice, 20@@s@@do-02, 9@@n@@_NAME_, 1@@n@@_NAME_, 12@@s@@gift-01, 5@@s@@have-03, 8@@a@@and, 2@@c@@keep-01]
sentence=1	Since	since	since	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	then,	_	then,	NNP	O	_	name	_	0	IGNORE	true
3	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
5	talked	_	talk	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
8	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	signaling	_	signal	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
10	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	status	_	status	NN	O	(d<root> / --LEX--)	$LEMMA$-quo	()	17	APP_o	true
14	quo	_	quo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
15	would	_	would	MD	O	_	thing	_	0	IGNORE	true
16	be	_	be	VB	O	_	and	_	0	IGNORE	true
17	acceptable	_	acceptable	JJ	O	(p<root> / possible-01  :ARG1 (a / --LEX--  :ARG0 (y<s>)  :ARG1 (n<o>)))	accept-01	(s(), o())	9	APP_o	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	settlement:	_	settlement:	FW	O	_	mean-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	line	_	line	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	action	_	action	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	act-02	(mod())	23	MOD_mod	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
28	followed	_	follow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
29	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
31	case	_	case	NN	O	_	$LEMMA$-03	_	0	IGNORE	true
32	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
33	disputes	_	dispute	NNS	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	28	MOD_mod	true
34	with	_	with	IN	O	_	-	_	0	IGNORE	true
35	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
36	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
37	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	28	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@a@@accept-01, 25@@p@@act-02, 35@@n@@_NAME_, 28@@s@@follow-02, 17@@p@@possible-01, 33@@r@@dispute-01, 13@@d@@status-quo, 5@@s@@talk-01, 20@@p@@final, 6@@d@@peace, 35@@c@@country, 3@@n@@_NAME_, 1@@n@@since, 14@@d@@quo, 37@@p@@as-well, 11@@p@@only, 23@@p@@line, 9@@t@@signal-01, 3@@c@@country, 8@@n@@always]
sentence=1	Hazim_Al-Sha'lan,	_name_	al-sha'lan,	XX	O	_	_NAME_	_	0	IGNORE	true
2	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
4	way,	_	way,	NN	O	_	person	_	0	IGNORE	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	son	_	son	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op1	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
10	late	_	late	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	Sheikh	sheikh	Sheikh	NNP	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$REPL$	(s(), o())	7	MOD_s	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	Al-Khaza'il	al-khaza'il	Al-Khaza'il	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	in	_	in	IN	O	_	name	_	0	IGNORE	true
15	Diwaniya	_name_	Diwaniya	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	potential	_	potential	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_op2	true
20	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
21	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_dom	true
22	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	information	_	information	NN	O	(d<root> / --LEX--)	$FORM$	()	21	APP_s	true
24	minister,	_	minister,	NNP	O	_	and	_	0	IGNORE	true
25	M.S._Al-Sahaf,	_name_	al-sahaf,	CD	O	_	_NAME_	_	0	IGNORE	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
28	nonsensical	_	nonsensical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	media	_	medium	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
30	statements,	_	statements,	NNP	O	_	and	_	0	IGNORE	true
31	which	_	which	WDT	O	_	i	_	0	IGNORE	true
32	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	34	MOD_s	true
33	be	_	be	VB	O	_	person	_	0	IGNORE	true
34	passed	_	pass	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	29	MOD_s	true
35	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
36	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_o	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@p@@nonsensical, 7@@d@@son, 15@@n@@_NAME_, 10@@p@@late, 32@@s@@possible-01, 13@@n@@_NAME_, 34@@s@@pass-05, 16@@a@@and, 29@@p@@medium, 36@@d@@joke-01, 22@@n@@former, 13@@p@@person, 19@@r@@potential, 21@@s@@replace-01, 15@@c@@city, 23@@d@@information, 11@@h@@have-org-role-91, 11@@j@@sheikh]
sentence=1	Another	another	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	3	MOD_s	true
3	step	_	step	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	0	ROOT	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	arrest	_	arrest	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_dom	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	Sheikh_Hassan_Al-Lihabi,	_name_	al-lihabi,	NN	O	_	_NAME_	_	0	IGNORE	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	Lihaib	_name_	Lihaib	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	tribe	_	tribe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
14	which	_	which	WDT	O	_	name	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	scattered	_	scatter	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	13	MOD_s	true
17	between	_	between	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	governorates	_	governorate	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	17	APP_op1	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	Al-Anbar,_Mosul	_name_	Mosul	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_poss	true
23	Salah_Al-Din	_name_	Al-Din	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_op2	true
24	.	_	.	.	O	_	include-91	_	0	IGNORE	true

nodealignment=[13@@d@@tribe, 23@@n@@_NAME_, 19@@h@@governorate, 7@@s@@arrest-01, 3@@r@@step-01, 22@@a@@and, 16@@s@@scatter-01, 17@@b@@between, 23@@p@@person, 21@@c@@city, 2@@s@@bad-07, 6@@n@@recent, 12@@n@@_NAME_, 21@@n@@_NAME_, 1@@p@@another]
sentence=1	How	how	how	WRB	O	(t<root> / --LEX--  :manner-of (h<mod>))	amr-unknown	(mod())	4	MOD_mod	true
2	Would	would	Would	MD	O	_	have-manner-91	_	0	IGNORE	true
3	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	Like	like	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
5	To	to	to	TO	O	_	thing	_	0	IGNORE	true
6	Know	know	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	How	how	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
8	YOU	you	you	PRP	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	Can	can	Can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	6	APP_o	true
10	Live	live	live	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_s	true
11	In	in	in	IN	O	_	after	_	0	IGNORE	true
12	A	a	a	DT	O	_	1	_	0	IGNORE	true
13	Beautiful	beautiful	beautiful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
14	NEW	new	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	House	house	House	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
16	That	that	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
18	Custom-Designed	custom-designed	custom-designe	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
19	To	to	to	IN	O	_	thing	_	0	IGNORE	true
20	YOUR	your	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	Specifications.........And	specifications.........and	specifications.........and	NN	O	(l<root> / law  :name (n / --LEX--))	$LEMMA$	()	18	APP_o	true
22	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	NO	no	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	COST	cost	cost	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	10	MOD_s	true
25	To	to	to	IN	O	_	cause-01	_	0	IGNORE	true
26	You	you	You	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	?	_	?	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@You, 6@@s@@know-01, 23@@explicitanon0@@-, 8@@t@@you, 15@@b@@House, 10@@d@@live-01, 4@@c@@like-02, 18@@s@@custom-designe-01, 21@@n@@specifications.........and, 13@@s@@beautiful-02, 9@@s@@possible-01, 1@@t@@amr-unknown, 24@@s@@cost-01, 14@@s@@new-01, 21@@l@@law]
sentence=1	Like	like	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	19	MOD_s	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	tens	_	ten	NNS	O	_	multiple	_	0	IGNORE	true
4	of	_	of	IN	O	(d<root> / --LEX--)	include-91	()	19	APP_s	true
5	billions	_	billion	NNS	O	_	1000000000	_	0	IGNORE	true
6	of	_	of	IN	O	_	monetary-quantity	_	0	IGNORE	true
7	dollars	_	dollar	NNS	O	(m<root> / monetary-quantity  :unit (d / --LEX--)  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	that	_	that	WDT	O	_	multiple	_	0	IGNORE	true
9	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
10	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	19	MOD_s	true
11	"lost"	_	"lost"	VBN	O	_	mean-01	_	0	IGNORE	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	Iraq,	iraq,	Iraq,	NNP	O	_	_NAME_	_	0	IGNORE	true
14	planeloads	_	planeload	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
16	arms	_	arm	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	"vanish";	_	"vanish";	.	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	-	(s(), o())	0	ROOT	true
20	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
21	when	_	when	WRB	O	_	contrast-01	_	0	IGNORE	true
22	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
23	Pentagon	_name_	Pentagon	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	contracts	_	contract	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	19	APP_o	true
25	the	_	the	DT	O	_	and	_	0	IGNORE	true
26	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o	true
27	to	_	to	IN	O	_	person	_	0	IGNORE	true
28	an	_	an	DT	O	_	1	_	0	IGNORE	true
29	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	criminal	_	criminal	NN	O	(p<root> / person  :ARG2-of (s / --LEX--))	$LEMMA$-03	()	24	APP_o2	true
31	of	_	of	IN	O	_	person	_	0	IGNORE	true
32	Bout's	_name_	bout's	JJ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	34	MOD_mod	true
33	untouchable	_	untouchable	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	defend-01	(s())	34	MOD_s	true
34	stature	_	stature	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@d@@work-01, 23@@n@@_NAME_, 23@@g@@government-organization, 30@@s@@criminal-03, 33@@explicitanon0@@-, 29@@p@@international, 4@@d@@include-91, 32@@explicitanon0@@-, 16@@g@@arm, 24@@b@@contract-02, 34@@p@@stature, 33@@n@@defend-01, 17@@explicitanon0@@-, 30@@p@@person, 7@@d@@dollar, 10@@s@@be-located-at-91, 19@@s@@-, 14@@d@@planeload, 20@@explicitanon0@@-, 1@@s@@resemble-01, 7@@m@@monetary-quantity, 18@@p@@just]
sentence=1	An	an	an	DT	O	_	1	_	0	IGNORE	true
2	altar	_	altar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	cloth	_	cloth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	was	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	5	MOD_mod	true
5	draped	_	drape	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	her	_	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	half-naked	_	half-naked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	kiln	(s())	4	MOD_s	true
9	body,	_	body,	NNP	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	posed	_	pose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
15	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
17	been	_	be	VBN	O	_	cause-01	_	0	IGNORE	true
18	sexually	_	sexually	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	sex-01	(mod())	19	MOD_mod	true
19	assaulted	_	assault	VBN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
20	.	_	.	.	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[3@@d@@cloth, 18@@t@@sex-01, 12@@s@@pose-01, 8@@s@@kiln, 4@@p@@person, 2@@p@@altar, 19@@b@@assault-01, 5@@s@@drape-01, 7@@d@@she]
sentence=1	Afshari,	afshari,	afshari,	XX	O	(d<root> / --LEX--)	_NAME_	()	18	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	posted	_	post	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	Germany	_name_	Germany	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	responsible	_	responsible	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
10	for	_	for	IN	O	_	or	_	0	IGNORE	true
11	receiving	_	receive	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
12	Mujahedeen	_name_	Mujahedeen	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	during	_	during	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	gulf	_	gulf	NN	O	(n3<root> / --LEX--  :name-of (w / world-region  :location-of (s<mod>)))	_NAME_	(mod())	11	MOD_mod	true
17	war,	_	war,	NN	O	_	and	_	0	IGNORE	true
18	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
19	that	_	that	IN	O	_	name	_	0	IGNORE	true
20	when	_	when	WRB	O	_	person	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	German	_name_	german	JJ	O	_	_NAME_	_	0	IGNORE	true
23	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	24	APP_s	true
24	tried	_	try	VBD	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	35	MOD_mod	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	absorb	_	absorb	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	24	APP_o	true
27	Mujahedeen	_name_	mujahedeen	JJ	O	_	person	_	0	IGNORE	true
28	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	into	_	into	IN	O	_	-	_	0	IGNORE	true
30	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
31	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	26	APP_o2	true
32	system,	_	system,	NNP	O	_	-	_	0	IGNORE	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	Mujahedeen	_name_	Mujahedeen	NNP	O	_	_NAME_	_	0	IGNORE	true
35	refused	_	refuse	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
36	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[26@@b@@absorb-01, 18@@s@@say-01, 1@@d@@_NAME_, 6@@n@@_NAME_, 12@@p@@_NAME_, 16@@n3@@_NAME_, 28@@d@@child, 23@@g@@government-organization, 4@@s@@post-01, 23@@g2@@govern-01, 16@@w@@world-region, 31@@d@@educate-01, 24@@s2@@try-01, 9@@s@@responsible-01, 6@@c@@country, 11@@s@@receive-01, 35@@d@@refuse-01, 13@@d@@child]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	1	APP_op1	true
4	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	happening	_	happen	VBG	O	_	event	_	0	IGNORE	true
7	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	region,	_	region,	NNS	O	_	include-91	_	0	IGNORE	true
10	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	only_30_years	_name_	year	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
12	ago,	_	ago,	DT	O	_	_NAME_	_	0	IGNORE	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	believed	_	believe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
15	to	_	to	TO	O	_	include-91	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	most	_	0	IGNORE	true
18	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	wealthy	_	wealthy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
23	world,	_	world,	NNS	O	_	_NAME_	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_op2	true
25	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	Moslem	_name_	Moslem	NNP	O	(d<root> / --LEX--)	_NAME_	()	24	APP_op2	true
28	area,	_	area,	NNP	O	_	include-91	_	0	IGNORE	true
29	which	_	which	WDT	O	_	name	_	0	IGNORE	true
30	developed,	_	developed,	NNS	O	_	person	_	0	IGNORE	true
31	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
34	in	_	in	IN	O	_	i	_	0	IGNORE	true
35	history,	_	history,	NNS	O	_	include-91	_	0	IGNORE	true
36	one	_	one	CD	O	_	1	_	0	IGNORE	true
37	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	MOD_s	true
38	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
39	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	advanced	_	advanced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	41	MOD_s	true
41	cultures	_	culture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
42	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
43	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
44	world	_	world	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
45	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@p@@wealthy, 24@@a@@and, 18@@p@@next, 39@@s@@most, 2@@p@@all, 1@@a@@and, 3@@s@@include-91, 27@@d@@_NAME_, 37@@s@@include-91, 20@@d@@part, 44@@p@@world, 32@@p@@some, 40@@s@@advanced-02, 33@@n@@point, 41@@d@@culture, 14@@s@@believe-01, 11@@explicitanon0@@year, 4@@d@@this]
sentence=1	International	international	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	deal	_	deal	VB	O	(i2<root> / --LEX--  :ARG0 (i<s>)  :ARG2 (t<o>)  :purpose-of (l<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	leader	_	leader	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	lead-02	(s())	8	APP_s	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	murderers	_	murderer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	murder-01	()	11	APP_s	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	royally	_	royally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	just-02	(mod())	19	MOD_mod	true
17	and	_	and	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	5	MOD_o	true
18	comfortably	_	comfortably	RB	O	(s<root> / --LEX--  :ARG0 (y<s>))	comfortable-02	(s())	19	MOD_s	true
19	hosted	_	host	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
20	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	(d<root> / --LEX--)	person	()	5	APP_o	true
22	country,	_	country,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
23	which	_	which	WDT	O	_	i	_	0	IGNORE	true
24	pretends	_	pretend	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	condemn	_	condemn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
27	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
28	acts	_	act	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	26	APP_o	true
29	or	_	or	CC	O	_	$LEMMA$	_	24	IGNORE	true
30	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	claims	_	claim	NNS	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	MOD_s	true
32	to	_	to	TO	O	_	thing	_	0	IGNORE	true
33	be	_	be	VB	O	_	person	_	0	IGNORE	true
34	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	weak	_	weak	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	31	APP_o	true
36	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
37	arrest	_	arrest	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	35	MOD_mod	true
38	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@know-01, 30@@p@@just, 24@@s@@pretend-01, 4@@explicitanon0@@-, 13@@e2@@murder-01, 11@@p@@person, 37@@o@@arrest-01, 2@@d@@law, 1@@p@@international, 11@@w@@lead-02, 18@@s@@comfortable-02, 34@@s@@too, 13@@p2@@person, 35@@s@@weak-02, 31@@c@@claim-01, 16@@t@@just-02, 21@@d@@person, 17@@s@@and, 8@@i2@@deal-01, 28@@d@@act-02, 19@@s@@host-01, 26@@s@@condemn-01]
sentence=1	Sufaat,	_name_	sufaat,	CD	O	_	resemble-01	_	0	IGNORE	true
2	according	_	accord	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	say-01	(o(s()))	0	ROOT	true
3	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
4	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	KSM	_name_	KSM	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_op2	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	2	APP_s	true
7	Hambali,	_name_	Hambali,	NNP	O	_	and	_	0	IGNORE	true
8	did	_	do	VBD	O	_	person	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_o	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	virulent	_	virulent	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	US_Army_Ames	_name_	Ames	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	strain	_	strain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	that	_	that	WDT	O	_	name	_	0	IGNORE	true
16	would	_	would	MD	O	_	name	_	0	IGNORE	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@n@@_NAME_, 5@@n@@_NAME_, 10@@s@@have-03, 12@@p@@virulent, 9@@explicitanon0@@-, 18@@s@@use-01, 2@@c@@say-01, 14@@d@@strain, 5@@p@@person, 6@@a@@and]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	1	APP_o	true
3	experience	_	experience	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	any	_	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	guide,	_	guide,	JJ	O	_	and	_	0	IGNORE	true
7	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	would	_	would	MD	O	_	have-concession-91	_	0	IGNORE	true
9	stand	_	stand	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
10	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	way	_	way	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	Dr.	dr.	Dr.	NNP	O	_	_NAME_	_	0	IGNORE	true
15	Ayman_Zawahiri's	_name_	zawahiri's	NN	O	_	_NAME_	_	0	IGNORE	true
16	decade-long	_	decade-long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	long-03	(s())	17	MOD_s	true
17	quest	_	quest	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	weaponize	_	weaponize	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	17	APP_s	true
21	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	APP_op2	true
22	anthrax	_	anthrax	NN	O	(d<root> / --LEX--)	_NAME_	()	20	APP_s	true
23	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	25	MOD_mod	true
25	targets	_	target	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
26	that	_	that	WDT	O	_	name	_	0	IGNORE	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	described	_	describe	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	17	MOD_o	true
29	by	_	by	IN	O	_	and	_	0	IGNORE	true
30	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	31	MOD_mod	true
31	confidante	_	confidante	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
32	to	_	to	IN	O	_	person	_	0	IGNORE	true
33	an	_	an	DT	O	_	1	_	0	IGNORE	true
34	Egyptian	_name_	egyptian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	36	MOD_mod	true
35	newspaper	_	newspaper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	reporter	_	reporter	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	report-01	()	28	APP_o2	true
37	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[1@@h@@contrast-01, 19@@s@@weaponize-01, 9@@s@@stand-01, 36@@e2@@report-01, 28@@b@@describe-01, 24@@c@@country, 25@@d@@target, 35@@p@@newspaper, 21@@s@@use-01, 20@@a@@and, 30@@explicitanon0@@1, 17@@s@@quest-01, 36@@p2@@person, 34@@c@@country, 3@@p@@experience-01, 34@@n@@_NAME_, 12@@s@@way, 2@@s@@have-condition-91, 16@@s@@long-03, 5@@d@@any, 31@@d@@confidante, 7@@d@@nothing, 24@@n@@_NAME_, 22@@d@@_NAME_]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	October_2001,	_name_	2001,	CD	O	_	and	_	0	IGNORE	true
3	did	_	do	VBD	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	FBI	_name_	FBI	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	profilers	_	profiler	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	hack-04	(s())	7	APP_s	true
7	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	draft	_	draft	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
12	Khalid_Mohammed	_name_	Mohammed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	MOD_o	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	seized	_	seize	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	laptop	_	laptop	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
18	(from	_	(from	.	O	_	$LEMMA$	_	0	IGNORE	true
19	1995)	_	1995)	NNP	O	_	name	_	0	IGNORE	true
20	that	_	that	WDT	O	_	name	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	signed	_	sign	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
23	"Khalid	"khalid	"khalid	CD	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
24	Sheik_Bojinka"	_name_	Bojinka"	NNP	O	_	person	_	0	IGNORE	true
25	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	7	MOD_mod	true

nodealignment=[22@@s@@sign-01, 6@@s@@hack-04, 12@@n@@_NAME_, 12@@p@@person, 16@@s@@seize-01, 25@@explicitanon0@@interrogative, 7@@s@@know-01, 17@@b@@laptop, 13@@s@@have-03, 11@@d@@message-01, 5@@n@@_NAME_, 5@@g@@government-organization, 23@@d@@"khalid-01, 10@@s@@draft-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
3	week,	_	week,	NNS	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
5	WTC	_name_	WTC	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	head	_	head	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_s	true
7	testified	_	testify	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
10	they	_	they	PRP	O	_	person	_	0	IGNORE	true
11	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
13	received	_	receive	VBN	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
14	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	briefing	_	briefing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	APP_s	true
16	on	_	on	IN	O	_	thing	_	0	IGNORE	true
17	the	_	the	DT	O	_	thing	_	0	IGNORE	true
18	use	_	use	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	planes,	_	planes,	NNS	O	_	and	_	0	IGNORE	true
21	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	had	_	have	VBD	O	_	person	_	0	IGNORE	true
23	taken	_	take	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
24	steps	_	step	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	prepare	_	prepare	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
27	for	_	for	IN	O	_	-	_	0	IGNORE	true
28	an	_	an	DT	O	_	1	_	0	IGNORE	true
29	attack	_	attack	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	true
30	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	29	MOD_o	true
31	anthrax	_	anthrax	NN	O	(d<root> / --LEX--)	_NAME_	()	30	APP_s	true
32	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	26	MOD_s	true
33	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
34	intelligence	_	intelligence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
35	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
36	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
37	been	_	be	VBN	O	_	person	_	0	IGNORE	true
38	received	_	receive	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
39	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@s@@briefing, 7@@s@@testify-01, 12@@explicitanon0@@-, 31@@d@@_NAME_, 34@@d@@intelligence, 32@@s@@base-02, 24@@s@@step-01, 30@@s@@use-01, 2@@s@@same-01, 29@@d@@attack-01, 6@@s@@head-01, 5@@g@@government-organization, 13@@s@@receive-01, 5@@n@@_NAME_, 38@@s@@receive-01, 18@@d@@use-01, 26@@s@@prepare-01, 14@@p@@any]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	lax	_	lax	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	4	MOD_s	true
4	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	over	_	over	IN	O	_	g$LEMMA$n-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
7	distribution	_	distribution	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	distribute-01	(s())	4	APP_s	true
8	of	_	of	IN	O	_	concern-02	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	Ames	_name_	Ames	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	strain	_	strain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
12	that	_	that	WDT	O	_	name	_	0	IGNORE	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	used,	_	used,	NNS	O	_	-	_	0	IGNORE	true
15	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
16	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
17	light	_	light	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
20	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
22	transfers	_	transfer	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_s	true
23	were	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
25	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	required	_	require	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	true
27	to	_	to	TO	O	_	and	_	0	IGNORE	true
28	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	4	MOD_o	true
29	recorded	_	record	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
30	prior	_	prior	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	29	MOD_mod	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	1997	_name_	1997	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	30	APP_op1	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@distribute-01, 32@@explicitanon0@@_NUMBER_, 32@@d@@date-entity, 11@@d@@strain, 4@@s@@control-01, 24@@explicitanon0@@-, 26@@s@@require-01, 28@@s@@thing, 3@@s@@lax, 30@@w@@prior, 29@@s@@record-01, 25@@p@@even, 10@@n@@_NAME_, 22@@d@@transfer-01, 15@@p@@especially]
sentence=1	Newsweek	_name_	Newsweek	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	2	APP_s	true
2	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	1	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	"second	_	"second	XX	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
6	wave"	_	wave"	-RRB-	O	_	and	_	0	IGNORE	true
7	involving	_	involve	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	biological	_	biological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	biology	(mod())	9	MOD_mod	true
9	attacks	_	attack	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
10	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	thwarted	_	thwart	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
13	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	arrest	_	arrest	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	Al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
18	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	15	APP_s	true
19	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
20	had	_	have	VBD	O	_	person	_	0	IGNORE	true
21	been	_	be	VBN	O	_	person	_	0	IGNORE	true
22	intended	_	intend	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
25	logistical	_	logistical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	support	_	support	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[18@@h@@have-org-role-91, 7@@s@@involve-01, 25@@p@@logistical, 22@@s@@intend-01, 15@@s@@arrest-01, 12@@s@@thwart-01, 18@@p@@person, 18@@o@@member, 8@@p@@biology, 5@@d@@"second, 1@@n@@newspaper, 1@@n2@@_NAME_, 9@@d@@attack-01, 26@@d@@support-01, 17@@n@@_NAME_, 2@@s@@report-01, 24@@s@@provide-01, 17@@c2@@criminal-organization]
sentence=1	The	the	the	DT	O	_	say-01	_	0	IGNORE	true
2	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	mostly	_	mostly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	most	(mod())	5	MOD_mod	true
5	relates	_	relate	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	thing	_	0	IGNORE	true
7	those	_	those	DT	O	_	that	_	0	IGNORE	true
8	suspected	_	suspect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	sleepers	_	sleeper	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	have	_	have	VBP	O	_	person	_	0	IGNORE	true
12	been	_	be	VBN	O	_	person	_	0	IGNORE	true
13	detained	_	detain	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
14	or	_	or	CC	O	_	$LEMMA$	_	5	IGNORE	true
15	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
16	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
18	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	9	MOD_mod	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	being	_	be	VBG	O	_	person	_	0	IGNORE	true
22	sought	_	seek	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
23	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[13@@s@@detain-01, 22@@s@@seek-01, 5@@s@@relate-01, 2@@s@@public-02, 8@@s@@suspect-01, 3@@d@@information, 9@@d@@sleeper, 4@@p@@most, 18@@p@@at-large]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	save	_	save	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	$21,000	_name_	$21,000	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	6	MOD_s	true
6	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	way,	_	way,	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	cash	_	cash	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	refund	_	refund	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
12	Sun	_name_	Sun	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	giving	_	give	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	MOD_o	true
15	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	14	APP_o2	true
16	for	_	for	IN	O	_	and	_	0	IGNORE	true
17	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	server,	_	server,	NNS	O	_	cause-01	_	0	IGNORE	true
20	using	_	use	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	box	_	box	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	wasn't	_	wasn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
25	being	_	be	VBG	O	_	person	_	0	IGNORE	true
26	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_o	true
27	by	_	by	IN	O	_	-	_	0	IGNORE	true
28	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@p@@this, 10@@p@@cash, 26@@s@@use-01, 18@@p@@other, 22@@d@@box, 11@@s@@refund-01, 15@@c@@company, 28@@d@@anyone, 6@@d@@money, 8@@s@@cause-01, 20@@l@@use-01, 24@@explicitanon0@@-, 15@@n@@_NAME_, 2@@s@@save-01, 1@@d@@We, 12@@p@@person, 3@@explicitanon0@@_NUMBER_, 5@@s@@real-04, 14@@b@@give-01, 12@@n@@_NAME_]
sentence=1	Paul_Kaufman	_name_	Kaufman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
3	asked	_	ask	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	to	_	to	TO	O	_	person	_	0	IGNORE	true
6	set	_	set	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_o	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	conference	_	conference	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
9	call	_	call	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	6	APP_s	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	review	_	review	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
12	the_FERC_Meeting	_name_	Meeting	NNP	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
13	that	_	that	WDT	O	_	name	_	0	IGNORE	true
14	was	_	be	VBD	O	_	date-interval	_	0	IGNORE	true
15	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	12	MOD_s	true
16	Thursday,	thursday,	thursday,	CD	O	_	2	_	0	IGNORE	true
17	Nov._9th	_name_	9th	NN	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	18	(mod())	15	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@e@@event, 17@@explicitanon4@@18, 11@@i@@review-01, 6@@s@@set-02, 15@@s@@hold-04, 1@@p@@person, 9@@d@@call-03, 3@@s@@ask-02, 1@@n@@_NAME_, 12@@n@@_NAME_, 8@@p@@conference-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	Doug	_name_	Doug	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_o	true
6	me	_	I	PRP	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	extra	_	extra	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	for	_	for	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	cashout	_	cashout	NN	O	(d<root> / --LEX--)	bail-out-02	()	5	APP_o2	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	invoiced	_	invoice	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
17	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[15@@explicitanon0@@-, 5@@b@@tell-01, 16@@s@@invoice-01, 12@@d@@bail-out-02, 4@@p@@person, 1@@d@@i, 8@@d@@extra, 4@@n@@_NAME_, 2@@s@@believe-01]
sentence=1	With	with	with	IN	O	_	-	_	0	IGNORE	true
2	respect	_	respect	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	First_Union	_name_	Union	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	National	national	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
6	Bank,	_name_	Bank,	NNP	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	draft	_	draft	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	15	APP_dom	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	from	_	from	IN	O	_	name	_	0	IGNORE	true
13	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	15	MOD_s	true
14	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	old	_	old	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
16	that	_	that	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	15	MOD_s	true
17	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	15	MOD_s	true
18	agreed	_	agree	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
21	at	_	at	IN	O	_	thing	_	0	IGNORE	true
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
25	of	_	of	IN	O	_	thing	_	0	IGNORE	true
26	agreement	_	agreement	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	agree-01	(mod())	24	MOD_mod	true
27	which	_	which	WDT	O	_	i	_	0	IGNORE	true
28	was	_	be	VBD	O	_	person	_	0	IGNORE	true
29	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
30	to	_	to	IN	O	_	and	_	0	IGNORE	true
31	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	11/8/00	_	11/8/00	NNS	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
34	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
35	review	_	review	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@d@@form, 8@@t@@thing, 4@@n@@_NAME_, 33@@d@@date-entity, 9@@d@@we, 20@@s@@look-01, 13@@s@@person, 8@@d@@draft-01, 15@@r@@old, 5@@p@@National, 14@@s@@so, 23@@n@@current, 11@@s@@work-01, 17@@s@@they, 29@@s@@send-01, 26@@p@@agree-01, 35@@b@@review-01, 18@@s@@agree-01, 33@@explicitanon2@@_NUMBER_, 16@@s@@cause-01]
sentence=1	Any	any	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	credit	_	credit	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	3	APP_s	true
3	concerns	_	concern	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	and	_	0	IGNORE	true
6	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
7	with	_	with	IN	O	_	and	_	0	IGNORE	true
8	Dennis_Goldmann,	_name_	Goldmann,	NNP	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
9	who	_	who	WP	O	_	capable-01	_	0	IGNORE	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	reached	_	reach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
13	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	315-460-3349	_	315-460-3349	CD	O	(u<root> / url-entity  :value (explicitanon2 / --LEX--)  :location-of (v<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@explicitanon0@@_NAME_, 3@@s@@concern-01, 14@@explicitanon2@@315-460-3349, 14@@u@@url-entity, 12@@s@@reach-01, 4@@s@@possible-01, 1@@p@@any, 10@@s@@possible-01, 2@@d@@credit-02, 6@@s@@discuss-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
5	case	_	case	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-04	(mod(), s())	8	MOD_mod	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
8	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
9	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
11	walk	_	walk	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
12	me	_	I	PRP	O	_	and	_	0	IGNORE	true
13	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	June	_name_	June	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	6	()	11	APP_o	true
15	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
16	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
17	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
18	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	numbers	_	number	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
21	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	22	MOD_s	true
22	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-02	(s())	16	APP_o	true
23	themselves	_	themselves	PRP	O	_	thing	_	0	IGNORE	true
24	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
25	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
26	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
27	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
28	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
29	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	swing	_	swing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
31	in	_	in	IN	O	_	after	_	0	IGNORE	true
32	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	33	MOD_mod	true
33	order	_	order	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	on	_	on	IN	O	_	27	_	0	IGNORE	true
35	June_29	_name_	29	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NUMBER_	(mod())	30	MOD_mod	true
36	that	_	that	WDT	O	_	year	_	0	IGNORE	true
37	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
38	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	39	MOD_mod	true
39	adjusted	_	adjust	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
40	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[39@@s@@adjust-01, 21@@s@@real-04, 32@@explicitanon0@@2, 38@@explicitanon0@@-, 25@@s@@cause-01, 11@@t@@walk-01, 30@@d@@swing-01, 32@@o@@ordinal-entity, 2@@d@@this, 8@@s@@like-02, 9@@d@@someone, 22@@s@@work-out-02, 14@@explicitanon0@@6, 33@@p@@order, 16@@s@@see-01, 6@@d@@i, 29@@p@@large, 19@@d@@number, 14@@d@@date-entity, 35@@n@@_NUMBER_, 5@@o@@case-04]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
5	case	_	case	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-04	(mod(), s())	8	MOD_mod	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
8	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
9	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
11	walk	_	walk	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
12	me	_	I	PRP	O	_	and	_	0	IGNORE	true
13	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	June	_name_	June	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	6	()	11	APP_o	true
15	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
16	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
17	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
18	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	numbers	_	number	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
21	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	22	MOD_s	true
22	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-02	(s())	16	APP_o	true
23	themselves	_	themselves	PRP	O	_	thing	_	0	IGNORE	true
24	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
25	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
26	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
27	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
28	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
29	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	swing	_	swing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
31	in	_	in	IN	O	_	after	_	0	IGNORE	true
32	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	33	MOD_mod	true
33	order	_	order	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	on	_	on	IN	O	_	27	_	0	IGNORE	true
35	June_29	_name_	29	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NUMBER_	(mod())	30	MOD_mod	true
36	that	_	that	WDT	O	_	year	_	0	IGNORE	true
37	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
38	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	39	MOD_mod	true
39	adjusted	_	adjust	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
40	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@d@@swing-01, 32@@explicitanon0@@2, 32@@o@@ordinal-entity, 16@@s@@see-01, 9@@d@@someone, 25@@s@@cause-01, 14@@explicitanon0@@6, 2@@d@@this, 14@@d@@date-entity, 29@@p@@large, 39@@s@@adjust-01, 21@@s@@real-04, 33@@p@@order, 22@@s@@work-out-02, 35@@n@@_NUMBER_, 19@@d@@number, 38@@explicitanon0@@-, 8@@s@@like-02, 5@@o@@case-04, 11@@t@@walk-01, 6@@d@@i]
sentence=1	Attached	attached	attach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
3	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	review	_	review	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	1	MOD_mod	true
5	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	copies	_	copy	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	1	APP_s	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	settlement	_	settlement	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	documents	_	document	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	were	_	be	VBD	O	_	person	_	0	IGNORE	true
13	filed	_	file	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Gas	gas	Gas	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	Industry	industry	Industry	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	Restructuring/Natural	restructuring/natural	restructuring/natural	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	city	(mod())	21	MOD_mod	true
20	Gas	gas	gas	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	Strategy	strategy	Strategy	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
22	proceeding,	_	proceeding,	NNP	O	_	and	_	0	IGNORE	true
23	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
24	the_Motion_for_Approval_of_the_Comprehensive_Settlement	_name_	Settlement	NNP	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	35	APP_op1	true
25	that	_	that	WDT	O	_	and	_	0	IGNORE	true
26	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
27	supported	_	support	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
28	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	thirty	_	thirty	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	12	(mod())	30	MOD_mod	true
30	signatories	_	signatory	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	27	APP_s	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	the_Comprehensive_Settlement,_the_Comprehensive_Settlement	_name_	Settlement	NNP	O	(l<root> / law  :name (n / --LEX--)  :mod-of (f<mod>))	_NAME_	(mod())	33	MOD_mod	true
33	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
34	itself,	_	itself,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_s	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	appendices	_	appendix	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op2	true
39	to	_	to	IN	O	_	conform-01	_	0	IGNORE	true
40	the	_	the	DT	O	_	person	_	0	IGNORE	true
41	settlement.	_	settlement.	NN	O	_	_NAME_	_	0	IGNORE	true
42	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	35	MOD_mod	true

nodealignment=[30@@p@@person, 6@@t@@thing, 23@@s@@include-01, 32@@l@@law, 38@@d@@appendix, 9@@p@@settlement, 24@@n@@_NAME_, 13@@s@@file-01, 37@@p@@various, 17@@p@@Gas, 33@@d@@document, 27@@s@@support-01, 14@@n@@today, 20@@p@@gas, 21@@p@@Strategy, 30@@o@@signatory, 19@@p@@city, 18@@p@@Industry, 24@@l@@law, 4@@b@@review-01, 6@@c@@copy-01, 10@@d@@document, 30@@h@@have-org-role-91, 32@@n@@_NAME_, 42@@explicitanon0@@interrogative, 29@@explicitanon0@@12, 35@@a@@and, 1@@s@@attach-01, 3@@d@@your]
sentence=1	Jurisdictions	jurisdictions	jurisdiction	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
2	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	approved	_	approve	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	1	MOD_s	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	trade	_	trade	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	credit	_	credit	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	7	APP_o	true
9	derivatives:	_	derivatives:	XX	O	_	and	_	0	IGNORE	true
10	Finland,	finland,	finland,	CD	O	_	and	_	0	IGNORE	true
11	Germany,	germany,	germany,	NN	O	_	and	_	0	IGNORE	true
12	Norway,	norway,	norway,	CD	O	_	and	_	0	IGNORE	true
13	Sweden,	sweden,	sweden,	CD	O	_	and	_	0	IGNORE	true
14	Switzerland,	switzerland,	Switzerland,	NNS	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	U.K,	_name_	U.K,	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	7	MOD_op1	true
18	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_op3	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@trade-01, 19@@c@@country, 1@@d@@jurisdiction, 16@@n@@_NAME_, 5@@o@@approve-01, 17@@a@@and, 8@@d@@credit-02, 16@@c@@country, 19@@n@@_NAME_]
sentence=1	Jurisdictions	jurisdictions	jurisdiction	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
2	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	approved	_	approve	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	1	MOD_s	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	trade	_	trade	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	credit	_	credit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	9	MOD_mod	true
9	derivatives	_	derivative	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	include:	_	include:	XX	O	_	and	_	0	IGNORE	true
11	Austria,	austria,	austria,	CD	O	_	and	_	0	IGNORE	true
12	Belgium,	belgium,	belgium,	CD	O	_	and	_	0	IGNORE	true
13	Canada,	canada,	canada,	CD	O	_	and	_	0	IGNORE	true
14	Croatia,	croatia,	croatia,	CD	O	_	and	_	0	IGNORE	true
15	Czech	czech	czech	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_op3	true
16	Republic,	republic,	republic,	CD	O	_	and	_	0	IGNORE	true
17	Denmark,	denmark,	denmark,	CD	O	_	and	_	0	IGNORE	true
18	France,	france,	France,	NNP	O	_	and	_	0	IGNORE	true
19	Gibraltar,_Ireland,_Italy,_Poland,_Portugal,_Romania,_Scotland,_Singapore,_Slovenia,_Spain,	_name_	spain,	CD	O	_	_NAME_	_	0	IGNORE	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	1	MOD_op1	true
21	The_Netherlands	_name_	Netherlands	NNP	O	(i<root> / island  :name (n / --LEX--))	_NAME_	()	20	APP_op2	true
22	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@s@@trade-01, 4@@explicitanon0@@-, 20@@a@@and, 21@@i@@island, 21@@n@@_NAME_, 5@@o@@approve-01, 8@@p@@credit-02, 15@@c@@country, 1@@d@@jurisdiction, 15@@n@@_NAME_, 9@@d@@derivative]
sentence=1	an	_	an	DT	O	_	1	_	0	IGNORE	true
2	outline	_	outline	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
3	of	_	of	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	internal	_	internal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
6	balance	_	balance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	sheet	_	sheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	review	_	review	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
9	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	APP_s	true
10	described	_	describe	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
13	earlier	_	early	JJR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	early	(mod())	14	MOD_mod	true
14	note	_	note	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	19	MOD_s	true
17	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	reprioritised	_	reprioritise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	legalize-01	(s())	9	MOD_s	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
21	rescoped	_	rescoped	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
22	(	_	(	-LRB-	O	_	name	_	0	IGNORE	true
23	see	_	see	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	20	APP_op2	true
24	MO	mo	MO	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	25	MOD_mod	true
25	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
26	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@internal-02, 23@@y@@you, 9@@s@@process-02, 13@@m@@more, 23@@explicitanon0@@imperative, 13@@e@@early, 10@@s@@describe-01, 2@@s@@outline, 19@@s@@legalize-01, 25@@d@@work-01, 8@@s@@review-01, 16@@s@@obligate-01, 21@@s@@rescoped-01, 17@@n@@now, 20@@a@@and, 24@@p@@_NAME_, 14@@b@@note, 23@@b@@see-01, 7@@d@@sheet, 6@@p@@balance-01]
sentence=1	detailed	_	detailed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	detail-01	(s())	3	MOD_s	true
2	position	_	position	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	3	MOD_mod	true
3	analysis	_	analysis	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	analyze-01	(s())	0	ROOT	true
4	of	_	of	IN	O	_	and	_	0	IGNORE	true
5	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	OBSF	_name_	OBSF	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	contracts	_	contract	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	APP_s	true
8	that	_	that	WDT	O	_	name	_	0	IGNORE	true
9	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	11	MOD_s	true
10	be	_	be	VB	O	_	person	_	0	IGNORE	true
11	reconciled	_	reconcile	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	Barclays	barclays	Barclays	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	documentatio	_	documentatio	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
15	n	_	n	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[2@@p@@position-02, 9@@s@@obligate-01, 5@@p@@all, 6@@n@@_NAME_, 13@@n@@_NAME_, 1@@s@@detail-01, 3@@s@@analyze-01, 14@@p@@_NAME_, 6@@g@@government-organization, 11@@s@@reconcile-01, 7@@s@@contract-02, 13@@c@@company]
sentence=1	Furthermore,	furthermore,	Furthermore,	NNP	O	_	and	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	would	_	would	MD	O	_	recommend-01	_	0	IGNORE	true
4	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	reiterate	_	reiterate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	RAC's	rac's	rac's	NN	O	_	_NAME_	_	0	IGNORE	true
9	goal,	_	goal,	NNS	O	_	thing	_	0	IGNORE	true
10	prior	_	prior	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	quoting	_	quote	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op1	true
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	credit	_	credit	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	12	APP_s	true
15	reserve,	_	reserve,	NNP	O	_	and	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	100%	_	100%	CD	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	20	MOD_mod	true
20	confident	_	confident	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
21	that:	_name_	that:	NNS	O	_	and	_	0	IGNORE	true
22	(i)	_	(i)	NFP	O	_	-	_	0	IGNORE	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	methodology	_	methodology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
27	being	_	be	VBG	O	_	person	_	0	IGNORE	true
28	employed	_	employ	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	consistent	_	consistent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op1	true
31	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	4	MOD_o	true
33	internal	_	internal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	32	MOD_s	true
34	groups;	_	groups;	NNP	O	_	and	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
36	(ii)	_	(ii)	VBD	O	_	and	_	0	IGNORE	true
37	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
38	inherent	_	inherent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	value	_	value	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	46	APP_o	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	45	APP_s	true
43	risk	_	risk	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_s	true
44	management	_	management	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	manage-01	(mod(), s())	45	MOD_mod	true
45	contracts	_	contract	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	46	APP_s	true
46	matches	_	match	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	APP_op2	true
47	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[30@@s@@consistent-01, 42@@d@@price-01, 14@@d@@credit-02, 4@@c@@like-02, 45@@s@@contract, 2@@d@@i, 13@@p@@any, 44@@i@@manage-01, 46@@s@@match-01, 39@@d@@value-01, 6@@s@@reiterate-01, 32@@s@@include-91, 28@@s@@employ-01, 38@@p@@inherent, 24@@d@@methodology, 19@@s@@so, 10@@w@@prior, 20@@s@@confident-01, 33@@s@@internal-02, 35@@a@@and, 12@@s@@quote-01, 43@@d@@risk-01]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
3	outgrowth	_	outgrowth	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	19	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	3	APP_s	true
7	Leslie	_name_	Leslie	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_op2	true
10	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
11	with	_	with	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Scott	_name_	Scott	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (u<op1>)  :op2 (b2<op2>)  :accompanier-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
14	Hunter	_name_	Hunter	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op2	true
15	a_couple_of_weeks	_name_	week	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	ago,	_	ago,	DT	O	_	_NAME_	_	0	IGNORE	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	have	_	have	VBP	O	_	person	_	0	IGNORE	true
19	begun	_	begin	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
20	work	_	work	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	APP_o	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	develop	_	develop	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_o	true
23	an	_	an	DT	O	_	thing	_	0	IGNORE	true
24	electronic	_	electronic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
28	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
29	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	and	_	0	IGNORE	true
31	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_o	true
32	ongoing	_	ongoing	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	go-on-15	(s())	33	MOD_s	true
33	summaries	_	summary	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
34	of	_	of	IN	O	_	and	_	0	IGNORE	true
35	FERC	_name_	FERC	NNP	O	(o2<root> / organization  :name (n3 / --LEX--)  :mod-of (a<mod>))	_NAME_	(mod())	36	MOD_mod	true
36	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
37	activities,	_	activities,	NNS	O	_	and	_	0	IGNORE	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_s	true
39	possibly	_	possibly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	40	MOD_s	true
40	electric	_	electric	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op2	true
41	activities,	_	activities,	NNS	O	_	thing	_	0	IGNORE	true
42	in	_	in	IN	O	_	i	_	0	IGNORE	true
43	a	_	a	DT	O	_	1	_	0	IGNORE	true
44	format	_	format	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
45	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
46	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	48	MOD_s	true
47	be	_	be	VB	O	_	person	_	0	IGNORE	true
48	linked	_	link	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	44	MOD_s	true
49	to	_	to	IN	O	_	and	_	0	IGNORE	true
50	the	_	the	DT	O	_	person	_	0	IGNORE	true
51	Fundamentals	_name_	Fundamentals	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	53	MOD_mod	true
52	intranet	_	intranet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
54	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	53	MOD_o	true
55	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
56	the	_	the	DT	O	_	person	_	0	IGNORE	true
57	traders	_	trader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	trade-01	()	54	APP_s	true
58	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[40@@d@@electric, 57@@p2@@person, 51@@p@@_NAME_, 35@@n3@@_NAME_, 54@@s@@use-01, 12@@n@@_NAME_, 57@@e2@@trade-01, 6@@s@@meet-03, 7@@n@@_NAME_, 14@@p@@person, 24@@p@@electronic, 13@@a@@and, 14@@n@@_NAME_, 53@@d@@site, 36@@d@@gas, 28@@s@@allow-01, 35@@o2@@organization, 20@@c@@work-01, 17@@d@@we, 19@@c@@begin-01, 52@@p@@intranet, 9@@d@@i, 46@@s@@possible-01, 15@@p@@_NAME_, 48@@s@@link-01, 7@@p@@person, 25@@d@@tool, 12@@p@@person, 31@@s@@provide-01, 38@@a@@and, 3@@b@@outgrowth, 39@@s@@possible-01, 32@@s@@go-on-15, 22@@s@@develop-02, 33@@s@@summary-01, 8@@a@@and, 44@@t@@format]
sentence=1	Those	those	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	8	MOD_mod	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	assigned	_	assign	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
6	an	_	an	DT	O	_	have-org-role-91	_	0	IGNORE	true
7	associate	_	associate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
9	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	allocate	_	allocate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
11	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	(a	_	(a	CD	O	_	$LEMMA$	_	0	IGNORE	true
13	max	_	max	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	of	_	of	IN	O	_	at-least	_	0	IGNORE	true
15	150)	_	150)	CD	O	_	include-91	_	0	IGNORE	true
16	at	_	at	IN	O	_	thing	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	meeting	_	meeting	NN	O	(d<root> / --LEX--)	meet-03	()	10	APP_s	true
19	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
20	on	_	on	IN	O	_	and	_	0	IGNORE	true
21	contribution	_	contribution	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	contribute-01	(s())	19	APP_o	true
22	to	_	to	IN	O	_	thing	_	0	IGNORE	true
23	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
24	areas	_	area	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	21	APP_s	true
25	for	_	for	IN	O	_	thing	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	29	MOD_mod	true
28	review	_	review	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	29	MOD_mod	true
29	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@possible-01, 7@@d@@associate, 13@@s@@max-01, 5@@s@@assign-01, 27@@explicitanon0@@1, 28@@p@@review-01, 18@@d@@meet-03, 19@@s@@base-02, 24@@m@@area, 21@@s@@contribute-01, 29@@n@@period, 10@@s@@allocate-01, 27@@o@@ordinal-entity, 23@@d@@your, 9@@p@@also, 11@@d@@point, 4@@explicitanon0@@-, 1@@p@@that]
sentence=1	Joe	_name_	Joe	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	asked	_	ask	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	say-01	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	fax	_	fax	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	revised	_	revise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
8	gtee	_	gtee	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	wording	_	wording	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	been	_	be	VBN	O	_	person	_	0	IGNORE	true
13	agreed	_	agree	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
14	(I	(i	(I	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	believe	_	believe	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	MOD_s	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
19	agreeing	_	agree	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	APP_o	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	reduce	_	reduce	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	19	APP_o	true
22	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
23	claim	_	claim	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
24	period	_	period	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	from	_	from	IN	O	_	year	_	0	IGNORE	true
26	15_days	_name_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o2	true
27	down	_	down	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
28	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
29	5)	_	5)	CD	O	_	include-91	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
31	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
32	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
33	l/c	_	l/c	NNP	O	(o2<root> / organization  :name (n3 / --LEX--)  :mod-of (a<mod>))	_NAME_	(mod())	34	MOD_mod	true
34	wording	_	wording	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
35	(drops	_	(drop	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	monetary-quantity	(s(), o())	34	MOD_s	true
36	the	_	the	DT	O	(m<root> / --LEX--  :unit-of (a<mod>))	day	(mod())	2	MOD_mod	true
37	2_day	_name_	day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	day	(mod())	38	MOD_mod	true
38	period	_	period	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
39	to	_	to	TO	O	_	blood	_	0	IGNORE	true
40	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	35	APP_o	true
41	an	_	an	DT	O	_	1	_	0	IGNORE	true
42	l/c	_	l/c	NNP	O	(d<root> / --LEX--)	_NAME_	()	40	APP_s	true
43	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
44	a	_	a	DT	O	_	1	_	0	IGNORE	true
45	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	46	MOD_s	true
46	bank	_	bank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
47	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	first	_name_	first	JJ	O	(d<root> / --LEX--)	1	()	50	APP_s	true
50	refuses	_	refuse	VBZ	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	40	MOD_mod	true
51	to	_	to	IN	O	_	-	_	0	IGNORE	true
52	pay)	_	pay)	ADD	O	_	and	_	0	IGNORE	true
53	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@s@@new-01, 36@@m@@day, 5@@s@@fax-01, 2@@b@@ask-01, 4@@d@@you, 37@@y@@day, 21@@b@@reduce-01, 27@@a@@down, 19@@c@@agree-01, 33@@o2@@organization, 18@@d@@our, 34@@d@@wording, 1@@p@@person, 30@@a@@and, 38@@b@@period, 13@@s@@agree-01, 37@@t@@temporal-quantity, 23@@p@@claim-01, 26@@d@@day, 50@@o@@refuse-01, 8@@p@@_NAME_, 33@@n3@@_NAME_, 24@@d@@period, 49@@d@@1, 14@@p@@(I, 40@@s@@replace-01, 35@@s@@monetary-quantity, 42@@d@@_NAME_, 45@@s@@differ-02, 9@@d@@wording, 7@@s@@revise-01, 15@@c@@believe-01, 46@@d@@bank, 1@@n@@_NAME_]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	deviation	_	deviation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	shows	_	show	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	Eco	eco	Eco	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	7	MOD_mod	true
7	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	APP_o	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	option	_	option	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	value	_	value	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_mod	true
14	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	exploited	_	exploit	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	quick	_	quick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	reactions	_	reaction	NNS	O	(d<root> / --LEX--)	react-01	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
22	favourable	_	favourable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
23	market	_	market	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	movements	_	movement	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op2	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@s@@have-03, 9@@s@@significant-02, 1@@p@@this, 6@@p@@definite, 22@@s@@favourable-02, 3@@s@@show-01, 17@@s@@exploit-01, 21@@a@@and, 2@@d@@deviation, 10@@explicitanon0@@amount, 19@@s@@quick-02, 5@@c@@company, 20@@d@@react-01, 13@@d@@value-01, 15@@s@@possible-01, 5@@n@@_NAME_, 24@@s@@movement-01, 12@@p@@option, 23@@d@@market]
sentence=1	Daniels	_name_	Daniels	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-03	(s(), o())	0	ROOT	true
5	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
6	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	prepayments	_	prepayment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	bill	_	bill	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-off-02	(s(), o())	14	APP_op1	true
11	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
12	an	_	an	DT	O	_	1	_	0	IGNORE	true
13	invoice	_	invoice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
15	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
19	accounting	_	accounting	NN	O	(d<root> / --LEX--)	account-01	()	18	APP_op2	true
20	had	_	have	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	14	APP_op2	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	create	_	create	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	an	_	an	DT	O	_	thing	_	0	IGNORE	true
24	invoice	_	invoice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
26	a	_	a	DT	O	_	thing	_	0	IGNORE	true
27	chromatograph	_	chromatograph	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	that	_	that	WDT	O	_	-	_	0	IGNORE	true
29	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
30	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
31	been	_	be	VBN	O	_	person	_	0	IGNORE	true
32	delivered	_	deliver	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
33	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 20@@o@@obligate-01, 27@@o@@chromatograph, 24@@d@@invoice, 1@@p@@person, 14@@a@@and, 30@@explicitanon0@@-, 10@@s@@bill-off-02, 19@@d@@account-01, 13@@d@@invoice, 9@@d@@they, 8@@s@@cause-01, 17@@d@@office, 32@@s@@deliver-01, 3@@explicitanon0@@-, 16@@p@@main, 18@@a@@and, 4@@s@@set-up-03, 7@@d@@prepayment, 22@@s@@create-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	began	_	begin	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_op1	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	withhold	_	withhold	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_o	true
5	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
6	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	California,	_name_	california,	CD	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_o2	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	Dec._7	_name_	7	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	18	MOD_mod	true
11	the	_	the	DT	O	_	26	_	0	IGNORE	true
12	ISO	_name_	iso	NN	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
13	declared	_	declare	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op1	true
14	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	17	MOD_mod	true
16	Stage_3	_name_	3	CD	O	(n2<root> / --LEX--  :name-of (w2 / war  :mod-of (v<mod>)))	3	(mod())	17	MOD_mod	true
17	emergency	_	emergency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	8	APP_op2	true
19	braced	_	brace	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	18	APP_op2	true
20	for	_	for	IN	O	_	and	_	0	IGNORE	true
21	blackouts,	_	blackouts,	NNP	O	(d<root> / --LEX--)	and	()	8	APP_op3	true
22	which	_	which	WDT	O	_	name	_	0	IGNORE	true
23	were	_	be	VBD	O	_	person	_	0	IGNORE	true
24	narrowly	_	narrowly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	narrow-02	(s())	25	MOD_s	true
25	averted	_	avert	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[16@@n2@@3, 10@@n@@_DATE_, 1@@d@@They, 24@@s@@narrow-02, 7@@n@@_NAME_, 17@@d@@emergency, 16@@w2@@war, 12@@n@@_NAME_, 15@@explicitanon0@@1, 15@@o@@ordinal-entity, 18@@a@@and, 19@@s@@brace-02, 4@@b@@withhold-01, 2@@c@@begin-01, 12@@o2@@organization, 25@@s@@avert-01, 7@@c@@country, 5@@d@@power-01, 21@@d@@and, 13@@s@@declare-01, 8@@a@@and]
sentence=1	Instead	instead	instead	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-of-91	(s())	0	ROOT	true
2	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	followed	_	follow	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_s	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	skyrocketing	_	skyrocket	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
9	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
11	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	run	_	run	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
16	power	_	power	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
17	plants	_	plant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	generate	_	generate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
20	electricity	_	electricity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[9@@d@@gas, 2@@d@@they, 19@@i@@generate-01, 1@@s@@instead-of-91, 16@@p@@power-01, 20@@d@@electricity, 13@@s@@use-01, 8@@s@@natural-03, 15@@s@@run-01, 17@@d@@plant, 6@@t@@thing, 5@@s@@skyrocket-01, 6@@c@@price-01, 3@@s@@follow-02]
sentence=1	Kaoshikii	_name_	Kaoshikii	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	dance	_	dance	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	which	_	which	WDT	O	_	name	_	0	IGNORE	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	invented	_	invent	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	1978	_name_	1978	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	7	MOD_mod	true
10	by	_	by	IN	O	_	say-01	_	0	IGNORE	true
11	Shrii_Shrii_A'nandamu'rti	_name_	A'nandamu'rti	VBZ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
12	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 1@@p@@person, 11@@p@@person, 9@@explicitanon0@@_NUMBER_, 4@@r@@dance, 11@@n@@_NAME_, 7@@s@@invent-01, 9@@d@@date-entity]
sentence=1	Dr.	dr.	Dr.	NNP	O	_	governor	_	0	IGNORE	true
2	Eric_Fortier,	_name_	fortier,	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	34,	_	34,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Gatineau,	gatineau,	Gatineau,	NNS	O	_	_NAME_	_	0	IGNORE	true
6	Que.,	que.,	Que.,	NNP	O	_	and	_	0	IGNORE	true
7	used	_	use	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	0	ROOT	true
8	a	_	a	DT	O	_	person	_	0	IGNORE	true
9	pocket	_	pocket	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	knife	_	knife	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	attack	_	attack	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o2	true
13	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	polar	_	polar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	bear	_	bear	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
17	Baffin	_name_	Baffin	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
18	Island,	island,	Island,	NFP	O	_	include-91	_	0	IGNORE	true
19	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	south	_	south	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	of	_	of	IN	O	(d<root> / --LEX--)	relative-position	()	7	APP_s	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Arctic	_name_	Arctic	NNP	O	_	_NAME_	_	0	IGNORE	true
24	Circle,	circle,	circle,	NN	O	_	and	_	0	IGNORE	true
25	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
26	save	_	save	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	12	MOD_mod	true
27	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	28	MOD_mod	true
28	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	26	APP_s	true
29	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
30	were	_	be	VBD	O	_	person	_	0	IGNORE	true
31	being	_	be	VBG	O	_	person	_	0	IGNORE	true
32	mauled	_	maul	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
33	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[12@@s@@attack-01, 10@@d@@knife, 7@@i@@use-01, 15@@d@@bear, 14@@p@@polar, 28@@f@@friend, 28@@h@@have-rel-role-91, 26@@i@@save-02, 17@@n@@_NAME_, 19@@p@@just, 32@@s@@maul-01, 28@@p@@person, 9@@p@@pocket, 20@@a@@south, 27@@explicitanon0@@2, 21@@d@@relative-position]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	Canadian	_name_	canadian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	recipient	_	recipient	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	receive-01	(s(), o())	14	APP_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	medal	_	medal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	Ronald_Joseph_Crawford,_42,	_name_	42,	CD	O	_	include-91	_	0	IGNORE	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	Hamilton,	hamilton,	hamilton,	CD	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
12	who	_	who	WP	O	_	name	_	0	IGNORE	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	killed	_	kill	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
15	Aug._4,_2002,	_name_	2002,	CD	O	_	cause-01	_	0	IGNORE	true
16	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
17	trying	_	try	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	14	MOD_mod	true
18	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
19	defend	_	defend	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	Hamilton	_name_	Hamilton	NNP	O	_	_NAME_	_	0	IGNORE	true
22	sandwich	_	sandwich	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	shop	_	shop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	owner	_	owner	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	own-01	(s())	19	APP_s	true
25	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	robber	_	robber	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	rob-01	()	19	APP_o	true
28	wielding	_	wield	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
29	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
30	knife	_	knife	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@n@@_NAME_, 2@@p@@other, 4@@s@@receive-01, 27@@p2@@person, 19@@s@@defend-01, 3@@c@@country, 17@@t@@try-01, 11@@d@@_NAME_, 23@@d@@shop, 14@@s@@kill-01, 22@@p@@sandwich, 30@@d@@knife, 28@@s@@wield-01, 7@@d@@medal, 24@@w@@own-01, 27@@e2@@rob-01, 24@@p@@person]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
4	consortium	_	consortium	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_op1	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	legit	_	legit	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	honorable	_	honorable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	guilds	_	guild	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	that	_	that	WDT	O	_	name	_	0	IGNORE	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	1997	_name_	1997	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	11	MOD_mod	true
14	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	DI	di	DI	NNP	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NAME_	(mod())	11	MOD_mod	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	are	_	be	VBP	O	_	person	_	0	IGNORE	true
19	now	_	now	RB	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	adding	_	add	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	16	APP_op2	true
21	GW	_name_	GW	NNP	O	_	_NAME_	_	0	IGNORE	true
22	to	_	to	IN	O	_	name	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	played	_	play	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@d@@date-entity, 15@@explicitanon0@@_NAME_, 24@@s@@list-01, 20@@s@@add-02, 8@@p@@guild, 19@@d@@now, 4@@r@@consortium, 11@@s@@establish-01, 27@@s@@play-01, 13@@explicitanon0@@_NUMBER_, 1@@d@@We, 16@@a@@and, 6@@p@@legit, 26@@d@@game, 7@@p@@honorable]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	writing	_	write	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	absolute	_	absolute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	confidence	_	confidence	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	primarily	_	primarily	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	primary	(mod())	10	MOD_mod	true
9	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
10	seek	_	seek	VB	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	3	MOD_mod	true
11	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	assistance	_	assistance	NN	O	(h<root> / --LEX--  :ARG2 (m<o>))	assist-01	(o(s()))	10	APP_o	true
13	in	_	in	IN	O	_	thing	_	0	IGNORE	true
14	acquiring	_	acquire	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
15	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	funds	_	fund	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
19	presently	_	presently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	20	MOD_mod	true
20	trapped	_	trap	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
21	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
23	republic	_	republic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@d@@you, 25@@n@@_NAME_, 14@@s@@acquire-01, 10@@d2@@seek-01, 6@@p@@absolute, 8@@p@@primary, 15@@p@@oil, 3@@s@@write-01, 20@@s@@trap-01, 25@@c@@country, 16@@d@@fund-01, 7@@t@@confidence, 19@@n@@current, 1@@d@@i, 12@@h@@assist-01, 23@@d@@republic]
sentence=1	My	my	My	PRP$	O	_	cause-01	_	0	IGNORE	true
2	partners	_	partner	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$-01	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_op2	true
5	solicit	_	solicit	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	assistance	_	assistance	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	assist-01	(o(s()))	5	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	completing	_	complete	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_o	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	transaction	_	transaction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	transact-01	(s())	9	APP_o	true
12	begun	_	begin	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
14	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
15	father,	_	father,	NNS	O	_	and	_	0	IGNORE	true
16	who	_	who	WP	O	_	name	_	0	IGNORE	true
17	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
18	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	MOD_s	true
19	been	_	be	VBN	O	_	person	_	0	IGNORE	true
20	actively	_	actively	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	activity-06	(s())	21	MOD_s	true
21	engaged	_	engage	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
22	in	_	in	IN	O	_	after	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	extraction	_	extraction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	extract-01	(s())	21	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	petroleum	_	petroleum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	24	MOD_mod	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	America,	_name_	america,	JJ	O	_	_NAME_	_	0	IGNORE	true
31	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
32	bravely	_	bravely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	generous-01	(mod())	33	MOD_mod	true
33	served	_	serve	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	MOD_s	true
34	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
35	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
36	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
37	director	_	director	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (p<s>)))	$LEMMA$	(s())	33	APP_o2	true
38	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
39	the_United_States_Central_Intelligence_Agency	_name_	Agency	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	37	APP_s	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@person, 4@@d@@i, 2@@h@@have-rel-role-91, 11@@s@@transact-01, 32@@t@@generous-01, 39@@n@@_NAME_, 9@@c@@complete-01, 37@@p2@@director, 18@@s@@long-03, 20@@s@@activity-06, 37@@h@@have-org-role-91, 28@@n@@_NAME_, 7@@o@@assist-01, 24@@s@@extract-01, 35@@d@@country, 3@@a@@and, 33@@b@@serve-01, 28@@c@@country, 39@@o2@@organization, 6@@d@@your, 2@@f@@partner-01, 26@@d@@petroleum, 5@@s@@solicit-01, 21@@s@@engage-01, 12@@s@@begin-01]
sentence=1	In	in	in	IN	O	_	name	_	0	IGNORE	true
2	Biloxi,	biloxi,	Biloxi,	NNP	O	_	and	_	0	IGNORE	true
3	30	_	30	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_s	true
5	were	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
6	reported	_	report	VBN	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	dead	_	dead	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	die-01	(s())	6	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	10	MOD_mod	true
10	block	_	block	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	flats	_	flat	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	which	_	which	WDT	O	_	and	_	0	IGNORE	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	hit	_	hit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
16	by	_	by	IN	O	_	and	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	9m	_	9m	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	(30ft)	_	(30ft)	XX	O	_	$LEMMA$	_	0	IGNORE	true
20	"storm	_	"storm	XX	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
21	surge"	_	surge"	ADD	O	_	cause-01	_	0	IGNORE	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@d@@person, 18@@p@@9m, 6@@f@@report-01, 12@@p@@flat, 15@@s@@hit-01, 9@@explicitanon0@@1, 20@@d@@"storm, 3@@explicitanon0@@_NUMBER_, 10@@b@@block, 7@@s@@die-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	connection,	_	connection,	NNS	O	_	cause-01	_	0	IGNORE	true
3	however,	_	however,	NNP	O	_	cause-01	_	0	IGNORE	true
4	lies	_	lie	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-07	(o(s()))	0	ROOT	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	an	_	an	DT	O	_	1	_	0	IGNORE	true
7	order	_	order	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	APP_o	true
8	issued	_	issue	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
9	last_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	12	MOD_s	true
12	Hu_Jintao	_name_	Jintao	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
13	to	_	to	TO	O	_	name	_	0	IGNORE	true
14	seek	_	seek	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
15	secure	_	secure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
16	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	supplies	_	supply	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	supply-01	(s())	14	APP_o	true
18	abroad	_	abroad	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
20	preferably	_	preferably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	possible-01	(mod())	25	MOD_mod	true
21	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
23	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	MOD_s	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
25	be	_	be	VB	O	(d<root> / --LEX--)	person	()	4	APP_s	true
26	stopped	_	stop	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
27	by	_	by	IN	O	_	person	_	0	IGNORE	true
28	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
29	in	_	in	IN	O	_	i	_	0	IGNORE	true
30	case	_	case	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	of	_	of	IN	O	_	name	_	0	IGNORE	true
32	conflict	_	conflict	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
33	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	Taiwan	_name_	Taiwan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	32	APP_s	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@oil, 34@@n@@_NAME_, 9@@n@@year, 28@@c@@country, 15@@s@@secure-02, 12@@p@@person, 28@@n@@_NAME_, 24@@explicitanon0@@-, 14@@s@@seek-01, 8@@s@@issue-01, 18@@b@@abroad, 12@@n@@_NAME_, 11@@p2@@president, 32@@o@@conflict-01, 7@@c@@order-01, 20@@p@@possible-01, 25@@d@@person, 23@@s@@possible-01, 11@@h@@have-org-role-91, 34@@c@@country, 4@@o@@lie-07, 17@@s@@supply-01, 26@@s@@stop-01]
sentence=1	One	one	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	IN	O	(d<root> / --LEX--)	include-91	()	0	ROOT	true
3	“NCRC4ME’s”	“ncrc4me’s”	“ncrc4me’s”	CD	O	_	_NAME_	_	0	IGNORE	true
4	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	efforts	_	effort	NNS	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	collect	_	collect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
9	signatures	_	signature	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	APP_o	true
10	for	_	for	IN	O	_	and	_	0	IGNORE	true
11	the	_	the	DT	O	_	and	_	0	IGNORE	true
12	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
13	“Declaration	“declaration	“Declaration	NFP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	APP_s	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	Religious	religious	Religious	NNP	O	(d<root> / --LEX--)	religion	()	13	APP_s	true
16	Leaders,”	leaders,”	Leaders,”	NNP	O	_	_NAME_	_	0	IGNORE	true
17	which	_	which	WDT	O	_	i	_	0	IGNORE	true
18	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
19	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	will	_	will	MD	O	_	thing	_	0	IGNORE	true
22	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	be	_	be	VB	O	_	person	_	0	IGNORE	true
24	presented	_	present	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
25	to	_	to	IN	O	_	and	_	0	IGNORE	true
26	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	24	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	NC	_name_	NC	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	legislature	_	legislature	NN	O	(d<root> / --LEX--)	legislate-01	()	26	APP_s	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@d@@legislate-01, 5@@c@@effort-01, 9@@s@@signature, 2@@d@@include-91, 8@@s@@collect-01, 26@@h@@have-org-role-91, 4@@s@@major-02, 26@@o@@member, 15@@d@@religion, 26@@p@@person, 22@@p@@again, 13@@s@@“Declaration, 12@@s@@attach-02, 29@@p@@_NAME_, 24@@s@@present-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	Samuel_Alito	_name_	Alito	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	believes	_	believe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
4	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	little-known	_	little-known	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	know-02	(s())	8	MOD_s	true
7	Constitutional	constitutional	constitutional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	constitution	(mod())	8	MOD_mod	true
8	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	-	_	-	HYPH	O	_	name	_	0	IGNORE	true
10	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	"Unitary	"unitary	"unitary	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	Executive	executive	Executive	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	Theory"	theory"	Theory"	NNP	O	_	and	_	0	IGNORE	true
15	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
16	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	24	APP_s	true
21	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	27	APP_op1	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
25	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the_Executive_Branch,	_name_	branch,	NN	O	_	mean-01	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
28	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the_Executive_Branch	_name_	Branch	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	33	MOD_s	true
30	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	27	APP_op2	true
31	be	_	be	VB	O	_	person	_	0	IGNORE	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	30	APP_s	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
37	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	Government	_name_	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	33	APP_s	true
40	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	36	MOD_s	true
41	does,	_name_	does,	VBD	O	_	mean-01	_	0	IGNORE	true
42	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	36	MOD_o	true
43	the	_	the	DT	O	_	and	_	0	IGNORE	true
44	functions	_	function	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	56	APP_op1	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	the_Independent_Agencies	_name_	Agencies	NNPS	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	44	APP_s	true
47	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
48	were	_	be	VBD	O	_	person	_	0	IGNORE	true
49	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	44	MOD_s	true
50	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
51	be	_	be	VB	O	_	person	_	0	IGNORE	true
52	free	_	free	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-04	(s())	49	APP_o	true
53	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
54	Presidential	presidential	Presidential	NNP	O	_	$LEMMA$	_	0	IGNORE	true
55	control,	_	control,	NNPS	O	_	and	_	0	IGNORE	true
56	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	42	APP_s	true
57	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
58	Military,	_name_	Military,	NNS	O	(d<root> / --LEX--)	have-03	()	1	APP_s	true
59	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
60	exists,	_	exists,	NNP	O	_	oppose-01	_	0	IGNORE	true
61	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
62	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
63	regulated,	_	regulated,	NNP	O	_	mean-01	_	0	IGNORE	true
64	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
65	which	_	which	WDT	O	_	i	_	0	IGNORE	true
66	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
67	funded	_	fund	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	58	MOD_o	true
68	by	_	by	IN	O	_	and	_	0	IGNORE	true
69	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	70	MOD_s	true
70	authority	_	authority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	67	APP_s	true
71	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	70	MOD_o	true
72	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
73	the	_	the	DT	O	_	person	_	0	IGNORE	true
74	Constitution	_name_	Constitution	NNP	O	(d<root> / --LEX--)	$REPL$	()	71	APP_s	true
75	to	_	to	IN	O	_	government-organization	_	0	IGNORE	true
76	Congress,	congress,	congress,	CD	O	_	mean-01	_	0	IGNORE	true
77	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	71	MOD_mod	true
78	to	_	to	IN	O	_	contrast-01	_	0	IGNORE	true
79	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
80	President	president	President	NNP	O	_	$LEMMA$	_	0	IGNORE	true
81	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@s@@recommend-01, 3@@s@@believe-01, 20@@p@@person, 2@@n@@_NAME_, 24@@s@@control-01, 46@@n@@_NAME_, 17@@s@@say-01, 56@@o@@and, 71@@s@@give-01, 74@@d@@_name_, 36@@d@@everything, 20@@h@@have-org-role-91, 8@@d@@theory, 35@@p@@almost, 33@@s@@charge-05, 40@@s@@actual-02, 6@@s@@know-02, 39@@g2@@govern-01, 46@@g@@government-organization, 2@@p@@person, 27@@a@@and, 58@@d@@have-03, 20@@e@@President, 49@@f@@design-01, 44@@s@@function-01, 39@@g@@government-organization, 1@@s@@contrast-01, 29@@s@@_NAME_, 7@@p@@constitution, 69@@s@@specific-02, 67@@s@@fund-01, 23@@s@@complete-02, 52@@s@@free-04, 12@@p@@"unitary, 70@@d@@authority, 21@@s@@recommend-01, 42@@s@@include-01, 10@@s@@call-01, 77@@explicitanon0@@-, 13@@d@@Executive]
sentence=1	Musk,	_name_	Musk,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	which	_	which	WDT	O	_	name	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	scraped	_	scrape	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
5	from	_	from	IN	O	_	and	_	0	IGNORE	true
6	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
7	genitals	_	genital	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	once	_	once	RB	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
9	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	10	MOD_mod	true
10	day	_	day	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	for	_	for	IN	O	_	or	_	0	IGNORE	true
12	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
13	long	_	long	RB	O	(b<root> / --LEX--  :duration-of (e<mod>))	as-$LEMMA$-as	(mod())	4	MOD_mod	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	4	MOD_mod	true
17	surv	_	surv	VB	O	_	$LEMMA$	_	0	IGNORE	true
18	ive,	_	ive,	NN	O	_	-	_	0	IGNORE	true
19	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	scent	_	scent	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	perfume	_	perfume	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	last	_	last	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	longer	_	longer	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	24	MOD_s	true
28	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	24	MOD_mod	true
29	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	application	_	application	NN	O	(d<root> / --LEX--)	apply-02	()	28	APP_op1	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@b@@long-03, 4@@s@@scrape-01, 23@@d@@perfume, 26@@s@@bit, 13@@b@@as-long-as, 16@@i@@possible-01, 29@@p@@each, 27@@m@@more, 24@@s@@last-01, 30@@d@@apply-02, 19@@s@@make-02, 21@@s@@scent-01, 9@@explicitanon0@@1, 10@@b@@day, 8@@d@@once, 7@@d@@genital, 28@@w@@after]
sentence=1	However,	_name_	However,	LS	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
4	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
5	from	_	from	IN	O	_	thing	_	0	IGNORE	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	mailing	_	mailing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
8	lists	_	list	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	secondary	_	secondary	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	0	ROOT	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	income	_	income	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_o	true
13	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
15	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
16	from	_	from	IN	O	_	and	_	0	IGNORE	true
17	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	22	APP_s	true
18	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	17	MOD_s	true
19	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	18	APP_o	true
21	me	_	I	PRP	O	_	i	_	0	IGNORE	true
22	asking	_	ask	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	APP_dom	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	be	_	be	VB	O	_	person	_	0	IGNORE	true
25	included	_	include	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
28	list	_	list	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@d@@include-01, 17@@d@@person, 4@@s@@make-01, 3@@d@@money, 7@@p@@mailing-01, 20@@o@@and, 8@@s@@list, 19@@d@@you, 12@@r@@income, 18@@s@@resemble-01, 22@@s@@ask-02, 10@@s@@secondary]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	1.25	_	1.25	CD	O	_	_NUMBER_	_	0	IGNORE	true
3	million	_	million	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1500000	(mod())	4	MOD_mod	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	17	APP_s	true
5	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
6	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
7	been	_	be	VBN	O	_	person	_	0	IGNORE	true
8	housed	_	house	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
9	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
10	stadiums	_	stadium	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
12	convention	_	convention	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	centers	_	center	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
14	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
15	Texas	_name_	Texas	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	14	APP_op1	true
16	will	_	will	MD	O	_	and	_	0	IGNORE	true
17	begin	_	begin	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
18	to	_	to	TO	O	_	date-interval	_	0	IGNORE	true
19	populate	_	populate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	Houston,_Dallas,	_name_	dallas,	CD	O	_	_NAME_	_	0	IGNORE	true
21	San_Antonio	_name_	Antonio	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	Galveston,	_name_	Galveston,	NNS	O	_	include-91	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	19	APP_o	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	surrounding	_	surround	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
27	areas	_	area	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
28	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[15@@n@@_NAME_, 10@@d@@stadium, 12@@p@@convention, 21@@n@@_NAME_, 24@@a@@and, 15@@s@@state, 3@@explicitanon0@@1500000, 13@@d@@center, 11@@b@@and, 26@@s@@surround-01, 27@@d@@area, 19@@s@@populate-01, 8@@s@@house-01, 22@@d@@and, 4@@d@@person, 17@@s@@begin-01, 14@@b@@across]
sentence=1	What	what	what	WP	O	_	amr-unknown	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	dozens	_	dozen	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	12	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
7	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	buses	_	bus	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	submerged	_	submerge	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	true
12	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	evacuate	_	evacuate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_s	true
18	who	_	who	WP	O	_	person	_	0	IGNORE	true
19	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	MOD_s	true
20	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	transportation	_	transportation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	transport-01	(s())	17	MOD_s	true
22	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@s@@use-01, 20@@explicitanon0@@-, 17@@d@@person, 9@@s@@submerge-01, 5@@m@@multiple, 7@@p@@school, 3@@s@@see-01, 19@@s@@have-03, 5@@explicitanon0@@12, 2@@d@@i, 8@@d@@bus, 21@@s@@transport-01, 11@@s@@possible-01, 16@@s@@evacuate-01]
sentence=1	Meanwhile,	meanwhile,	Meanwhile,	LS	O	_	and	_	0	IGNORE	true
2	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	pocket	_	pocket	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
4	that	_	that	WDT	O	_	i	_	0	IGNORE	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	lined	_	line	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	golden	_	golden	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-02	(dom())	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	poor	_	poor	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	shunted	_	shunt	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
15	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	radar	_	radar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	yet	_	yet	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@radar, 5@@s@@possible-01, 17@@p@@yet, 12@@d@@poor, 18@@p@@again, 2@@p@@every, 10@@a@@and, 7@@s@@line-01, 9@@r@@golden-02, 3@@d@@pocket, 14@@s@@shunt-01]
sentence=1	<<"Well	<<"well	<<"Well	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	then,"	_	then,"	NNP	O	_	and	_	0	IGNORE	true
3	said	_	say	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	Don_Quixote,	_name_	Quixote,	NNP	O	_	thing	_	0	IGNORE	true
5	"the	_	"the	DT	O	_	_NAME_	_	0	IGNORE	true
6	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	happens	_	happen	VBZ	O	_	event	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	comedy	_	comedy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_o	true
13	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	world,	_	world,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	where	_	where	WRB	O	_	contrast-01	_	0	IGNORE	true
18	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	play	_	play	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
20	emperors,	_	emperors,	VBZ	O	_	mean-01	_	0	IGNORE	true
21	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	popes,	_	popes,	FW	O	_	mean-01	_	0	IGNORE	true
23	and,	_	and,	NNS	O	_	include-91	_	0	IGNORE	true
24	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
25	short,	_	short,	NNP	O	_	mean-01	_	0	IGNORE	true
26	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
28	characters	_	character	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
29	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
30	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	32	MOD_s	true
31	be	_	be	VB	O	_	person	_	0	IGNORE	true
32	brought	_	bring	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
33	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	play;	_	play;	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	3	MOD_s	true
37	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
38	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
40	over,	_	over,	NNS	O	_	-	_	0	IGNORE	true
41	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
43	to	_	to	TO	O	_	mean-01	_	0	IGNORE	true
44	say	_	say	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
45	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
46	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
47	ends,	_	ends,	NNP	O	_	and	_	0	IGNORE	true
48	death	_	death	NN	O	(d<root> / --LEX--)	die-01	()	49	APP_o	true
49	strips	_	strip	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	61	APP_op1	true
50	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
51	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
52	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
53	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
54	garments	_	garment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_o2	true
55	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
56	distinguish	_	distinguish	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	54	MOD_s	true
57	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
58	from	_	from	IN	O	_	person	_	0	IGNORE	true
59	the	_	the	DT	O	_	person	_	0	IGNORE	true
60	other,	_	other,	NNS	O	_	and	_	0	IGNORE	true
61	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o2	true
62	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_s	true
63	are	_	be	VBP	O	_	person	_	0	IGNORE	true
64	equal	_	equal	JJ	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	61	APP_op2	true
65	in	_	in	IN	O	_	i	_	0	IGNORE	true
66	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
67	grave.	_	grave.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_o	true
68	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[67@@d@@grave., 1@@n@@_NAME_, 6@@s@@same-01, 36@@s@@contrast-01, 30@@s@@possible-01, 35@@d@@play;, 21@@p@@other, 18@@d@@some, 26@@p@@all, 61@@a@@and, 49@@b@@strip-01, 13@@d@@life, 11@@d@@comedy, 3@@b@@say-01, 15@@p@@this, 7@@d@@thing, 1@@p@@person, 46@@d@@life, 48@@d@@die-01, 62@@d@@all, 64@@s@@equal-01, 56@@s@@distinguish-01, 54@@d@@garment, 28@@d@@character, 19@@t@@play-01, 32@@s@@bring-01, 12@@a@@and, 51@@p@@all]
sentence=1	On	on	on	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
4	evening,	_	evening,	NNP	O	_	include-91	_	0	IGNORE	true
5	which	_	which	WDT	O	_	i	_	0	IGNORE	true
6	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
7	been	_	be	VBN	O	_	person	_	0	IGNORE	true
8	prearranged,	_	prearranged,	NNP	O	_	-	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
11	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
12	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	10	APP_o2	true
13	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	instructions,	_	instructions,	NNS	O	_	cause-01	_	0	IGNORE	true
15	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	1	_	0	IGNORE	true
17	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	forever	_	forever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
20	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	alert	_	alert	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	10	APP_o	true
24	continually	_	continually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	constant	(s())	25	MOD_s	true
25	changed	_	change	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	23	APP_op2	true
26	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	room	_	room	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	25	APP_o	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@p@@final, 3@@p@@certain, 9@@d@@i, 25@@l@@change-01, 27@@m@@room, 23@@a@@and, 19@@n@@forever, 10@@b@@send-01, 12@@p@@person, 17@@d@@man, 24@@s@@constant, 12@@f@@friend, 22@@s@@alert-01, 12@@h@@have-rel-role-91]
sentence=1	To	to	to	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	name	(s(), o())	0	ROOT	true
2	Paul_McCartney	_name_	McCartney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	1	APP_s	true
3	whose	_	whose	WP$	O	_	name	_	0	IGNORE	true
4	company's	_	company's	CD	O	_	_NAME_	_	0	IGNORE	true
5	logo	_	logo	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_s	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	person	_	0	IGNORE	true
8	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
9	toying	_	toy	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	1	APP_o	true
12	planets	_	planet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
15	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	god,	_	god,	NN	O	_	shit	_	0	IGNORE	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	being	_	be	VBG	O	_	person	_	0	IGNORE	true
23	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	deluded	_	deluded	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	MOD_s	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
28	ego	_	ego	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	trip	_	trip	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
30	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
31	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
32	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
34	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	1	MOD_o	true
36	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_s	true
37	"Sir"	"sir"	"Sir"	.	O	_	and	_	0	IGNORE	true
38	(when	_	(when	NFP	O	_	$LEMMA$	_	0	IGNORE	true
39	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
40	England	_name_	England	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	46	MOD_mod	true
41	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
42	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
43	road	_	road	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_o	true
44	sweeper	_	sweeper	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	hoax-01	(s(), o())	35	MOD_s	true
45	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	1	MOD_o	true
46	made	_	make	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	36	APP_s	true
47	Sir,	_name_	sir,	NN	O	_	and	_	0	IGNORE	true
48	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
49	long	_	long	RB	O	(a<root> / --LEX--  :op1 (p2<op1>)  :condition-of (d<mod>))	as-$LEMMA$-as	(op1(), mod())	46	MOD_mod	true
50	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
51	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
52	produces	_	produce	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	49	APP_op1	true
53	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_s	true
54	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
55	the	_	the	DT	O	_	person	_	0	IGNORE	true
56	nation),	_	nation),	NNP	O	_	$LEMMA$	_	0	IGNORE	true
57	GOD	god	GOD	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	58	APP_s	true
58	provided	_	provide	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	52	APP_o	true
59	cancer	_	cancer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	58	APP_o	true
60	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
61	the	_	the	DT	O	_	person	_	0	IGNORE	true
62	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	58	APP_o2	true
63	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[62@@p@@person, 36@@s@@make-01, 9@@s@@toy-01, 45@@s@@person, 35@@s@@person, 29@@p@@trip, 25@@s@@deluded-01, 44@@s@@hoax-01, 43@@d@@road, 5@@m@@logo, 2@@n@@_NAME_, 2@@p@@person, 49@@a@@as-long-as, 23@@s@@very, 1@@s@@name, 28@@p@@ego, 62@@f@@wife, 24@@s@@much, 62@@h@@have-rel-role-91, 52@@s@@produce-01, 12@@d@@planet, 40@@n@@_NAME_, 11@@s@@person, 41@@p@@even, 46@@d@@make-01, 57@@p@@person, 53@@d@@money, 59@@d@@cancer, 57@@n@@_NAME_, 58@@b@@provide-01, 40@@c@@country, 8@@d@@person]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Gulf	_name_	Gulf	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	itself	_	itself	PRP	O	_	cause-01	_	0	IGNORE	true
4	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	one	_	one	CD	O	(d<root> / --LEX--)	1	()	5	APP_o	true
7	exit,	_	exit,	.	O	_	mean-01	_	0	IGNORE	true
8	the_Strait_of	_name_	of	IN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	Hormuz,	hormuz,	hormuz,	CD	O	_	_NAME_	_	0	IGNORE	true
10	which	_	which	WDT	O	_	name	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	dominated	_	dominate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
14	by	_	by	IN	O	_	name	_	0	IGNORE	true
15	the	_	the	DT	O	_	name	_	0	IGNORE	true
16	mountainous	_	mountainous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	Iranian	_name_	iranian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	coastline	_	coastline	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
19	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[17@@c@@country, 5@@s@@have-03, 6@@d@@1, 13@@s@@dominate-01, 17@@n@@_NAME_, 18@@d@@coastline, 4@@p@@only, 2@@d@@Gulf, 8@@n@@_NAME_, 16@@p@@mountainous, 12@@p@@also]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
4	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	reaction	_	reaction	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	react-01	(s(), o())	12	APP_op1	true
6	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	name	_	0	IGNORE	true
8	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	invasion	_	invasion	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	invade-01	(s())	5	APP_s	true
10	of	_	of	IN	O	_	name	_	0	IGNORE	true
11	Iraq,	iraq,	Iraq,	NNP	O	_	_NAME_	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
13	a	_	a	DT	O	_	oppose-01	_	0	IGNORE	true
14	reaction	_	reaction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	react-01	(s())	12	APP_op2	true
15	to	_	to	IN	O	_	name	_	0	IGNORE	true
16	America's	_name_	America's	NNP	O	_	_NAME_	_	0	IGNORE	true
17	condemnation	_	condemnation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	condemn-01	(s())	14	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	Syria	_name_	Syria	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
20	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	17	MOD_mod	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	death	_	death	NN	O	(d<root> / --LEX--)	die-01	()	20	APP_op1	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	Lebanese	_name_	lebanese	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	26	APP_o	true
25	Prime	prime	Prime	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	26	MOD_mod	true
26	Minister	minister	Minister	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	27	MOD_s	true
27	Rafik_Hariri,	_name_	Hariri,	NNP	O	(d<root> / --LEX--)	_NAME_	()	12	APP_op3	true
28	which	_	which	WDT	O	_	name	_	0	IGNORE	true
29	was	_	be	VBD	O	_	person	_	0	IGNORE	true
30	widely	_	widely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	wide	(mod())	31	MOD_mod	true
31	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
32	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
33	an	_	an	DT	O	_	1	_	0	IGNORE	true
34	assassination	_	assassination	NN	O	(d<root> / --LEX--)	assassinate-01	()	31	APP_o	true
35	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
36	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	Damascus	_name_	Damascus	NNP	O	(n<root> / --LEX--  :name-of (c2 / city  :location-of (l<mod>)))	_NAME_	(mod())	35	MOD_mod	true
38	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@g@@minister, 26@@h@@have-org-role-91, 37@@n@@_NAME_, 14@@s@@react-01, 25@@p@@prime, 8@@c@@country, 9@@s@@invade-01, 12@@a@@and, 24@@c@@country, 27@@d@@_NAME_, 17@@s@@condemn-01, 31@@s@@see-01, 34@@d@@assassinate-01, 4@@s@@specific-02, 35@@s@@order-01, 5@@s@@react-01, 20@@w@@after, 30@@s@@wide, 19@@c@@country, 22@@d@@die-01, 19@@n@@_NAME_, 24@@n@@_NAME_, 1@@d@@this, 37@@c2@@city, 8@@n@@_NAME_]
sentence=1	50=	_	50=	NNP	O	_	b	_	0	IGNORE	true
2	Approximate	approximate	approximate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	3	MOD_mod	true
3	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	include-91	(mod())	3	MOD_mod	true
5	policy	_	policy	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
6	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_mod	true
8	regulation	_	regulation	NN	O	(d<root> / --LEX--)	regulate-01	()	9	APP_s	true
9	rollbacks	_	rollback	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_op2	true
10	injurious	_	injurious	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	7	MOD_s	true
11	to	_	to	IN	O	_	-	_	0	IGNORE	true
12	the	_	the	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	person	(mod())	3	MOD_mod	true
13	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	have	_	have	VBP	O	_	person	_	0	IGNORE	true
16	been	_	be	VBN	O	_	person	_	0	IGNORE	true
17	announced	_	announce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
18	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	4	MOD_mod	true
21	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	12	MOD_s	true
22	on	_	on	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	government-organization	(mod())	3	MOD_mod	true
23	Fridays	_name_	friday	NNS	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	17	MOD_mod	true
24	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
25	5pm,	_name_	5pm,	CD	O	_	$LEMMA$	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
30	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
32	but	_	but	CC	O	(s<root> / --LEX--  :degree-of (t<mod>))	all-$LEMMA$	(mod())	33	MOD_mod	true
33	impossible	_	impossible	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	possible-01	(s())	29	APP_o	true
34	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
35	news	_	news	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	organisations	_	organisation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
37	to	_	to	TO	O	_	-	_	0	IGNORE	true
38	relay	_	relay	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	33	APP_s	true
39	the	_	the	DT	O	_	person	_	0	IGNORE	true
40	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
41	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
42	the	_	the	DT	O	_	person	_	0	IGNORE	true
43	widest	_	wide	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	cheap-02	(s())	45	MOD_s	true
44	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	MOD_s	true
45	audience	_	audience	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o2	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@s@@rollback, 10@@s@@injurious, 13@@d@@environment, 23@@t@@_name_, 4@@p@@include-91, 12@@explicitanon0@@person, 22@@n@@government-organization, 29@@s@@make-02, 43@@m@@most, 24@@n@@after, 2@@p@@approximate-01, 21@@s@@administrate-01, 23@@d@@date-entity, 31@@p@@all, 45@@d@@audience, 20@@n@@_NAME_, 20@@p@@person, 17@@s@@announce-01, 43@@b2@@cheap-02, 3@@explicitanon0@@number, 8@@d@@regulate-01, 40@@d@@information, 33@@p@@possible-01, 32@@s@@all-but, 6@@s@@change-01, 5@@d@@policy-01, 33@@explicitanon0@@-, 36@@d@@organisation, 38@@b@@relay-01, 35@@p@@news, 44@@s@@possible-01, 7@@a@@and]
sentence=1	5	_	5	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Estimated	estimated	estimate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
7	air	_	air	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	cargo	_	cargo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_mod	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	screened,	_	screened,	NNS	O	_	mean-01	_	0	IGNORE	true
12	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	cargo	_	cargo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
14	transported	_	transport	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
15	on	_	on	IN	O	_	i	_	0	IGNORE	true
16	passenger	_	passenger	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	planes	_	plane	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@n@@_NAME_, 13@@d@@cargo, 7@@p@@air, 3@@s@@estimate-01, 4@@explicitanon0@@percentage, 17@@b@@plane, 6@@c@@country, 14@@s@@transport-01, 8@@d@@cargo, 16@@p@@passenger, 12@@s@@include-01, 1@@explicitanon0@@_NUMBER_]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	drugs	_	drug	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	or	_	or	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
8	vaccines	_	vaccine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	against	_	against	IN	O	_	-	_	0	IGNORE	true
10	"priority	_	"priority	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
11	pathogens"	_	pathogens"	NFP	O	_	oppose-01	_	0	IGNORE	true
12	listed	_	list	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
13	by	_	by	IN	O	_	and	_	0	IGNORE	true
14	the_Centres_for_Disease_Control	_name_	Control	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
15	that	_	that	WDT	O	_	name	_	0	IGNORE	true
16	have	_	have	VBP	O	_	person	_	0	IGNORE	true
17	been	_	be	VBN	O	_	person	_	0	IGNORE	true
18	developed	_	develop	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
19	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
20	introduced	_	introduce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
21	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
22	11_September_2001	_name_	2001	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_DATE_	()	21	APP_op1	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@number, 19@@d@@and, 21@@w@@since, 12@@s@@list-01, 20@@s@@introduce-01, 22@@d@@date-entity, 18@@s@@develop-02, 6@@d@@drug, 1@@explicitanon0@@_NUMBER_, 22@@explicitanon0@@_DATE_, 8@@d@@vaccine, 14@@n@@_NAME_, 7@@a@@or, 10@@p@@_NAME_, 14@@o2@@organization, 5@@s@@new-01]
sentence=1	Pioneers	pioneers	pioneer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	3	APP_s	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	assigned	_	assign	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	numbers,	_	numbers,	NNS	O	_	and	_	0	IGNORE	true
5	which	_	which	WDT	O	_	and	_	0	IGNORE	true
6	were	_	be	VBD	O	_	person	_	0	IGNORE	true
7	included	_	include	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true
8	on	_	on	IN	O	_	and	_	0	IGNORE	true
9	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	cheques,	_	cheques,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	enabling	_	enable	VBG	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	7	MOD_s	true
12	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
13	campaign	_	campaign	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
15	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o2	true
16	track	_	track	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_o	true
17	of	_	of	IN	O	_	thing	_	0	IGNORE	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	raised	_	raise	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
20	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
21	much.	_	much.	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@s@@include-01, 16@@c@@track-01, 13@@d@@campaign-01, 11@@w@@enable-01, 19@@s@@raise-01, 9@@p@@all, 15@@s@@keep-01, 3@@s@@assign-01, 1@@e2@@pioneer, 1@@p2@@person]
sentence=1	4.7m	_	4.7m	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	bankruptcies	_	bankruptcy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	that	_	that	WDT	O	_	and	_	0	IGNORE	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	declared	_	declare	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	Bush's	_name_	Bush's	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	first_three_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
12	in	_	in	IN	O	_	after	_	0	IGNORE	true
13	office	_	office	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@n@@_NAME_, 3@@explicitanon0@@Number, 11@@n@@_NAME_, 8@@s@@declare-01, 13@@n@@office, 5@@d@@bankruptcy, 1@@explicitanon0@@_NAME_, 10@@p@@person]
sentence=1	680	_	680	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	suspected	_	suspect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
6	al-Qa'ida	al-qa'ida	al-Qa'ida	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	3	APP_mod	true
8	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
10	admits	_	admit	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	are	_	be	VBP	O	_	person	_	0	IGNORE	true
12	detained	_	detain	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
13	at	_	at	IN	O	_	and	_	0	IGNORE	true
14	Guantánamo_Bay,_Cuba	_name_	Cuba	NNP	O	(m<root> / --LEX--  :unit-of (a<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@explicitanon2@@_NUMBER_, 1@@d@@date-entity, 12@@s@@detain-01, 7@@h@@have-org-role-91, 14@@m@@_NUMBER_, 6@@n@@_NAME_, 7@@o@@member, 6@@c2@@criminal-organization, 10@@s@@admit-01, 7@@p@@person, 3@@explicitanon0@@Number, 9@@n@@_NAME_, 9@@c@@country, 5@@s@@suspect-01]
sentence=1	52	_	52	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	votes	_	vote	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_mod	true
6	cast	_	cast	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
7	during	_	during	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	2002	_name_	2002	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	11	MOD_mod	true
10	midterm	_	midterm	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	elections	_	election	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	elect-01	(mod())	6	MOD_mod	true
12	that	_	that	WDT	O	_	name	_	0	IGNORE	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	recorded	_	record	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	Election_Systems_&_Software,	_name_	Software,	NNP	O	_	_NAME_	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	19	MOD_mod	true
19	voting-technology	_	voting-technology	NN	O	(d<root> / --LEX--)	_NAME_	()	14	APP_s	true
20	firm,	_	firm,	VBZ	O	(s<root> / --LEX--  :degree-of (t<mod>))	name	(mod())	3	MOD_mod	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	Republican	_name_	republican	JJ	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	24	APP_o	true
24	donor	_	donor	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	contribute-01	(s(), o())	20	MOD_s	true
25	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[5@@d@@vote-01, 9@@explicitanon0@@_NUMBER_, 24@@s@@contribute-01, 18@@m@@most, 23@@n@@_NAME_, 10@@p@@midterm, 3@@explicitanon0@@percentage, 23@@p@@political-party, 11@@n@@elect-01, 14@@s@@record-01, 19@@d@@_NAME_, 22@@p@@big, 6@@s@@cast-01, 1@@explicitanon0@@_NUMBER_, 9@@d@@date-entity, 20@@s@@name, 18@@t@@large]
sentence=1	29	_	29	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	votes	_	vote	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	will	_	will	MD	O	_	thing	_	0	IGNORE	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	cast	_	cast	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
10	via	_	via	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	computer	_	computer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	voting	_	voting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	vote-01	(mod())	13	MOD_mod	true
13	machines	_	machine	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
15	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	paper	_	paper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	record	_	record	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@s@@cast-01, 18@@p@@paper, 5@@d@@vote-01, 12@@p@@vote-01, 11@@p@@computer, 16@@s@@produce-01, 1@@explicitanon0@@_NUMBER_, 15@@explicitanon0@@-, 19@@d@@record-01, 3@@explicitanon0@@percentage, 13@@m@@machine]
sentence=1	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	dries	_	dry	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	out,	_	out,	RB	O	_	and	_	0	IGNORE	true
5	losing	_	lose	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	soaked	_	soak	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	set	_	set	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	MOD_s	true
14	structur	_	structur	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	e	_	e	LS	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@lose-02, 13@@s@@set, 3@@s@@dry-01, 2@@d@@it, 7@@d@@water, 10@@s@@soak-01, 14@@d@@structur]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	example,	_	example,	NNS	O	_	and	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	MOD_s	true
5	plaster	_	plaster	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	mold	_	mold	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
7	that	_	that	WDT	O	_	resemble-01	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
10	be	_	be	VB	O	_	person	_	0	IGNORE	true
11	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	clay	_	clay	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	slip	_	slip	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	casting	_	casting	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
16	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	31	APP_s	true
17	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
18	dry	_	dry	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_s	true
19	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	gets	_	get	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
22	wet	_	wet	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
23	pulling	_	pull	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
24	the	_	the	DT	O	_	instead-of-91	_	0	IGNORE	true
25	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	he	_	0	IGNORE	true
29	slip	_	slip	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
31	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
32	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
33	set	_	set	VBN	O	_	$LEMMA$	_	0	IGNORE	true
34	plaster	_	plaster	NN	O	_	$LEMMA$	_	0	IGNORE	true
35	mold	_	mold	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
36	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	35	MOD_s	true
37	for	_	for	IN	O	_	thing	_	0	IGNORE	true
38	molding	_	mold	VBG	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	36	MOD_mod	true
39	wax	_	wax	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_o	true
40	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	31	APP_o	true
41	be	_	be	VB	O	_	and	_	0	IGNORE	true
42	soaking	_	soak	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_op1	true
43	or	_	or	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	40	APP_s	true
44	damp	_	damp	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	43	APP_op2	true
45	wet	_	wet	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	43	APP_op3	true
46	http://www.mikegigi.com/castgobl.htm#LGGOBPRO	http://www.mikegigi.com/castgobl.htm#lggobpro	http://www.mikegigi.com/castgobl.htm#lggobpro	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
47	J	j	J	NNP	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[40@@s@@obligate-01, 14@@p@@slip, 4@@s@@set, 38@@o@@mold-01, 31@@s@@contrast-01, 36@@s@@use-01, 15@@d@@casting-01, 6@@d@@mold, 42@@s@@soak-01, 44@@s@@damp-02, 22@@s@@wet-01, 13@@p@@clay, 11@@s@@use-01, 39@@d@@wax, 16@@s@@obligate-01, 25@@d@@water, 43@@a@@or, 18@@s@@dry-02, 45@@s@@wet-02, 5@@g@@plaster-01, 23@@s@@pull-01, 46@@d@@http://www.mikegigi.com/castgobl.htm#lggobpro, 35@@p@@mold]
sentence=1	Problem	problem	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	14	APP_s	true
2	is,	_	is,	VBP	O	_	cause-01	_	0	IGNORE	true
3	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
4	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	reason,	_	reason,	NNS	O	_	cause-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	oppose-01	_	0	IGNORE	true
7	visa	_	visa	NN	O	(d<root> / --LEX--)	$FORM$	()	8	APP_s	true
8	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	APP_s	true
9	took	_	take	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-10	(o(s()))	1	APP_dom	true
10	longer	_	long	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	9	APP_o	true
11	than	_	than	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	more	(s(), o())	0	ROOT	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	should,	_	should,	VBZ	O	_	mean-01	_	0	IGNORE	true
14	thus	_	thus	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	APP_o	true
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	true
16	missed	_	miss	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_o	true
17	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
18	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	semester	_	semester	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	(visa	_	(visa	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	issued	_	issue	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	true
23	to	_	to	IN	O	_	and	_	0	IGNORE	true
24	me	_	I	PRP	O	_	i	_	0	IGNORE	true
25	about_25_days	_name_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
27	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op1	true
29	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_s	true
30	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	couldn't	_	couldn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
32	attend),	_	attend),	MD	O	_	and	_	0	IGNORE	true
33	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
34	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	no	_	no	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
36	longer	_	longer	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	no-$LEMMA$	(mod())	37	MOD_mod	true
37	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_o	true
38	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
39	go	_	go	VB	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	37	APP_s	true
40	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
43	(because	_	(because	NFP	O	_	$LEMMA$	_	0	IGNORE	true
44	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_s	true
45	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
46	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
47	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	37	MOD_o	true
48	me	_	I	PRP	O	_	and	_	0	IGNORE	true
49	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
50	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
51	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	9	(mod())	47	MOD_mod	true
52	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
53	2012),	_	2012),	CD	O	_	-	_	0	IGNORE	true
54	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
55	found	_	find	VBD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	64	MOD_mod	true
56	a	_	a	DT	O	_	1	_	0	IGNORE	true
57	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
58	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
59	accepted	_	accept	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	57	MOD_s	true
60	me	_	I	PRP	O	_	and	_	0	IGNORE	true
61	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
62	may	_	may	MD	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	5	(mod())	59	MOD_mod	true
63	2012,	_	2012,	RB	O	_	possible-01	_	0	IGNORE	true
64	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	71	APP_o	true
65	I	i	I	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
66	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	64	APP_s	true
67	the	_	the	DT	O	_	thing	_	0	IGNORE	true
68	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	MOD_s	true
69	visa	_	visa	NN	O	(d<root> / --LEX--)	$LEMMA$	()	66	APP_s	true
70	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
71	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	11	MOD_s	true
72	issued	_	issue	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	MOD_s	true
73	to	_	to	IN	O	_	and	_	0	IGNORE	true
74	me	_	I	PRP	O	_	and	_	0	IGNORE	true
75	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	64	MOD_mod	true

nodealignment=[51@@d@@date-entity, 10@@b@@long-03, 17@@d@@school, 31@@explicitanon0@@-, 41@@p@@that, 28@@s@@start-01, 65@@d@@I, 11@@s@@more, 49@@p@@again, 9@@c@@take-10, 35@@explicitanon0@@-, 25@@n@@day, 18@@p@@this, 71@@s@@person, 20@@p@@_NAME_, 15@@d@@i, 57@@d@@school, 51@@explicitanon0@@9, 16@@s@@miss-02, 64@@s@@possible-01, 44@@d@@they, 42@@d@@school, 29@@s@@cause-01, 62@@explicitanon1@@5, 26@@w@@after, 59@@s@@accept-01, 72@@s@@issue-01, 69@@d@@visa, 45@@p@@only, 8@@s@@process-02, 4@@p@@some, 68@@s@@same-01, 1@@r@@problem, 14@@s@@cause-01, 36@@n@@no-longer, 33@@n@@now, 39@@p@@go-02, 47@@s@@accept-01, 7@@d@@visa, 66@@s@@use-01, 75@@explicitanon0@@interrogative, 22@@s@@issue-01, 55@@i@@find-01, 37@@s@@want-01, 19@@n@@semester, 27@@d@@school, 10@@m@@more]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	APP_op1	true
3	2	_	2	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
4	phones	_	phone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	running	_	run	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	line	_	line	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	ADSL	_name_	ADSL	NNP	O	(d<root> / --LEX--)	_NAME_	()	21	APP_op2	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	connected	_	connect	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	20	MOD_mod	true
18	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	17	MOD_s	true
19	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
20	phones	_	phone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
22	the	_	the	DT	O	_	and	_	0	IGNORE	true
23	filter,	_	filter,	NNS	O	_	original	_	0	IGNORE	true
24	I'm	i'm	i'm	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
27	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
28	buzzing	_	buzzing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	29	MOD_s	true
29	noise	_	noise	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
30	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
31	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
32	I	i	I	PRP	O	_	1	_	0	IGNORE	true
33	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
34	disconnected	_	disconnect	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
35	the	_	the	DT	O	_	-	_	0	IGNORE	true
36	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	phone	_	phone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
38	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	39	MOD_mod	true
39	one	_	one	CD	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@have-03, 1@@d@@i, 20@@d@@phone, 3@@explicitanon0@@_NUMBER_, 38@@explicitanon0@@-, 21@@a@@and, 39@@t@@one, 17@@explicitanon0@@1, 18@@s@@include-91, 5@@s@@run-01, 9@@d@@line, 37@@d@@phone, 36@@p@@other, 26@@s@@get-01, 28@@s@@buzzing-01, 25@@p@@still, 15@@s@@connect-01, 29@@d@@noise, 10@@a@@and, 30@@p@@even, 12@@d@@_NAME_, 4@@d@@phone, 34@@s@@disconnect-01, 8@@s@@same-01]
sentence=1	Indoor	indoor	indoor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	6	MOD_s	true
6	cared	_	care	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	2	MOD_s	true
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
8	typically	_	typically	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	typical-02	(s())	9	MOD_s	true
9	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
10	11-15_years	_name_	year	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1000000000000	(mod())	9	MOD_mod	true
11	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[9@@s@@live-01, 2@@d@@cat, 10@@explicitanon0@@1000000000000, 1@@p@@indoor, 6@@s@@care-03, 8@@s@@typical-02, 5@@s@@well-09]
sentence=1	Both	both	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	towns	_	town	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	airports	_	airport	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	that	_	that	WDT	O	_	and	_	0	IGNORE	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	regularly	_	regularly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	regular-02	(s())	7	MOD_s	true
9	from	_	from	IN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	12	MOD_mod	true
12	cities	_	city	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
14	as	_	as	IN	O	_	and	_	0	IGNORE	true
15	Sao_Paulo,_Rio_de_Janeiro	_name_	Janeiro	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
17	Buenos_Aires	_name_	Aires	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	16	APP_op2	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@a@@and, 11@@m@@more, 11@@f2@@large, 15@@c@@city, 17@@n@@_NAME_, 8@@s@@regular-02, 1@@p@@both, 7@@s@@serve-01, 15@@n@@_NAME_, 3@@s@@have-03, 4@@d@@airport, 2@@d@@town, 17@@c@@company, 12@@d@@city]
sentence=1	Although	although	although	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	origins	_	origin	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	22	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	movement	_	movement	NN	O	(d<root> / --LEX--)	$LEMMA$-07	()	3	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	confined	_	confine	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	largely	_	largely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	large	(mod())	9	MOD_mod	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	name	_	0	IGNORE	true
13	literate	_	literate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
15	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	intellectual	_	intellectual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	intellect	(mod())	17	MOD_mod	true
17	endeavor	_	endeavor	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
19	patronage	_	patronage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	can	_	can	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	possible-01	(s(), o())	1	APP_o	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	traced	_	trace	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	earlier	_	early	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	early	(mod())	26	MOD_mod	true
26	part	_	part	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	22	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	he	_	0	IGNORE	true
29	14th	_name_	14th	JJ	O	(d<root> / date-entity  :century (explicitanon0 / --LEX--))	18	()	26	APP_poss	true
30	century,	_	century,	NNS	O	_	and	_	0	IGNORE	true
31	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	aspects	_	aspect	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	38	APP_s	true
33	of	_	of	IN	O	_	name	_	0	IGNORE	true
34	Italian	_name_	italian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	36	MOD_mod	true
35	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op1	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	32	APP_poss	true
37	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
38	remained	_	remain	VBD	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	20	APP_s	true
39	largely	_	largely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	large	(mod())	38	MOD_mod	true
40	Medieval;	medieval;	medieval;	CD	O	_	-	_	0	IGNORE	true
41	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
42	Renaissance	_name_	Renaissance	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
43	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
44	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	48	MOD_mod	true
45	come	_	come	VB	O	_	$LEMMA$-04	_	0	IGNORE	true
46	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
47	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	swing	_	swing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_s	true
49	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	48	MOD_mod	true
50	the_end_of_the_century	_name_	century	NN	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	49	APP_op1	true
51	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@p@@literate, 50@@n@@_NAME_, 17@@d@@endeavor-01, 16@@p@@intellect, 10@@s@@large, 39@@s@@large, 18@@a@@and, 25@@f2@@early, 37@@d@@society, 32@@h@@aspect, 29@@explicitanon0@@18, 42@@d@@Renaissance, 25@@m@@more, 38@@l@@remain-01, 49@@w@@until, 47@@p@@full, 1@@s@@have-concession-91, 31@@explicitanon0@@many, 34@@n@@_NAME_, 44@@explicitanon0@@-, 35@@d@@culture, 34@@c@@country, 48@@s@@swing, 36@@a@@and, 3@@s@@origin, 19@@d@@patronage, 50@@w@@war, 14@@d@@culture, 29@@d@@date-entity, 26@@h@@part, 22@@s@@trace-01, 9@@s@@confine-01, 20@@s@@possible-01, 6@@d@@movement-07]
sentence=1	Well,_T.V.	_name_	T.V.	NNP	O	_	_NAME_	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	series	_	series	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	flickering	_	flicker	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	pictures	_	picture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	streamed	_	stream	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
11	together	_	together	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
14	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
15	moving	_	move	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
16	picture	_	picture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@t@@together, 10@@s@@stream-01, 16@@d@@picture, 4@@explicitanon0@@series, 6@@s@@flicker-01, 13@@s@@make-01, 7@@d@@picture, 15@@p@@move-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
3	been	_	be	VBN	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	Asian	_name_	asian	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	presence	_	presence	NN	O	(d<root> / --LEX--)	present-02	()	35	APP_o	true
8	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the_SF_Bay_Area	_name_	Area	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	for	_	for	IN	O	_	or	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	true
13	time--the	_	time--the	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true
14	Chinatown	chinatown	Chinatown	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_dom	true
15	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	0	ROOT	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	19	MOD_mod	true
19	population	_	population	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_o	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	30	MOD_mod	true
22	outside	_	outside	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	China,	_name_	china,	CD	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
25	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
26	were	_	be	VBD	O	_	person	_	0	IGNORE	true
27	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	Japanese	_name_	japanese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
30	who'd	_	who'd	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	16	MOD_s	true
31	been	_	be	VBN	O	_	person	_	0	IGNORE	true
32	displaced	_	displace	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
33	during	_	during	IN	O	_	name	_	0	IGNORE	true
34	WWII	_name_	WWII	NNP	O	(n2<root> / --LEX--  :name-of (w / war  :time-of (i<mod>)))	_NAME_	(mod())	32	MOD_mod	true
35	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	16	MOD_s	true

nodealignment=[21@@c@@country, 21@@n@@_NAME_, 12@@s@@long-03, 7@@d@@present-02, 19@@r@@population, 14@@d@@Chinatown, 9@@n@@_NAME_, 32@@s@@displace-01, 34@@n2@@_NAME_, 18@@t@@large, 16@@s@@person, 5@@p@@large, 29@@n@@_NAME_, 18@@m@@most, 9@@c@@city, 35@@s@@multi-sentence, 2@@s@@cause-01, 30@@s@@person, 15@@b@@here, 27@@explicitanon0@@lot, 24@@d@@china,, 29@@c@@country, 6@@n2@@_NAME_, 22@@b@@outside, 6@@c@@continent, 34@@w@@war]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	own	_	own	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	5	MOD_mod	true
5	chickens	_	chicken	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	and	_	0	IGNORE	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	kept	_	keep	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
11	run	_	run	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	8	MOD_mod	true
12	behind	_	behind	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	out	_	out	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	garage/barn	_	garage/barn	NFP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[3@@s@@own-01, 8@@s@@keep-01, 14@@p@@garage/barn, 5@@d@@chicken, 15@@p@@thing, 2@@p@@also, 11@@p@@run-02, 4@@explicitanon0@@2, 1@@d@@We, 12@@b@@behind]
sentence=1	Make	make	make	VB	O	_	cause-01	_	0	IGNORE	true
2	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	en$LEMMA$-01	(s())	0	ROOT	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	are	_	be	VBP	O	_	exist-01	_	0	IGNORE	true
5	plenty	_	plenty	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
7	litter	_	litter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	boxes	_	box	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
11	cleaned	_	clean	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
12	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@p@@litter, 5@@explicitanon0@@plenty, 11@@s@@clean-01, 2@@s@@ensure-01, 12@@o@@often, 8@@d@@box]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	take	_	take	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
3	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
4	boat	_	boat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	across	_	across	IN	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	river,	_	river,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
8	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	spend	_	spend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	MOD_s	true
10	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	11	MOD_mod	true
11	day	_name_	day	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	9	APP_o	true
12	biking,	_	biking,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	eating	_	eat	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op2	true
14	at	_	at	IN	O	_	1	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
17	restaurant,	_	restaurant,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	buying	_	buy	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op3	true
19	souvenirs	_	souvenir	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
21	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_op4	true
22	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	that	_	that	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	20	MOD_mod	true
25	are	_	be	VBP	O	_	person	_	0	IGNORE	true
26	geared	_	gear	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
27	towards	_	towards	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	tourists	_	tourist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	26	APP_o	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@p@@other, 5@@a@@across, 8@@n@@then, 2@@s@@take-01, 20@@a@@and, 1@@d@@You, 21@@s@@do-02, 28@@p2@@person, 26@@s@@gear-01, 10@@explicitanon0@@1, 9@@s@@spend-02, 23@@d@@thing, 16@@s@@local-02, 24@@p@@and, 11@@t@@temporal-quantity, 18@@s@@buy-01, 13@@d@@eat-01, 11@@m@@day, 19@@d@@souvenir, 28@@e2@@tour-01, 4@@d@@boat]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-06	(s(), o())	6	APP_op1	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
7	visited	_	visit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	location	_	location	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
10	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
11	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_mod	true
13	coconut	_	coconut	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	candies,	_	candies,	NNS	O	_	and	_	0	IGNORE	true
15	visited	_	visit	VBD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	restaurant	_	restaurant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	which	_	which	WDT	O	_	i	_	0	IGNORE	true
20	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
21	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
22	to	_	to	IN	O	_	and	_	0	IGNORE	true
23	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
24	fish	_	fish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	farm,	_	farm,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
26	rode	_	ride	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	MOD_s	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	modified	_	modify	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
29	quad	_	quad	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	bikes	_	bike	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	6	MOD_op1	true
32	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_op3	true
33	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	tropical	_	tropical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	at	_	at	IN	O	_	thing	_	0	IGNORE	true
37	what	_	what	WP	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	6	MOD_mod	true
38	appeared	_	appear	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	37	MOD_s	true
39	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
40	be	_	be	VB	O	_	person	_	0	IGNORE	true
41	a	_	a	DT	O	_	1	_	0	IGNORE	true
42	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	43	MOD_s	true
43	hangout	_	hangout	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@d@@restaurant, 37@@p@@amr-unknown, 11@@d@@they, 1@@d@@We, 15@@i@@visit-01, 35@@d@@food, 7@@s@@visit-01, 28@@s@@modify-01, 34@@p@@tropical, 30@@m@@bike, 9@@b@@location, 6@@a@@and, 33@@explicitanon0@@some, 43@@d@@hangout, 13@@d@@coconut, 31@@a@@and, 17@@s@@local-02, 26@@s@@ride-01, 12@@s@@make-01, 21@@s@@attach-01, 2@@s@@have-06, 38@@s@@appear-02, 24@@d@@fish, 4@@p@@great, 42@@s@@local-02, 29@@p@@quad, 32@@s@@have-03, 5@@d@@time]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	winter,	_	winter,	NNS	O	_	and	_	0	IGNORE	true
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
5	will	_	will	MD	O	_	$LEMMA$	_	0	IGNORE	true
6	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	10	MOD_mod	true
7	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	10	APP_op1	true
8	deep	_	deep	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	underground	_	underground	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	enter	_	enter	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	a	_	a	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	10	MOD_o	true
13	hibernation-like	_	hibernation-like	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	pyramid	(mod())	14	MOD_mod	true
14	state	_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
16	brumation,	_	brumation,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	characterized	_	characterize	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
20	by	_	by	IN	O	_	and	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	slowed	_	slow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
23	metabolism	_	metabolism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
25	reduced	_	reduced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	activity	_	activity	NN	O	(d<root> / --LEX--)	$LEMMA$-06	()	24	APP_op2	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[12@@s@@resemble-01, 6@@p@@usual, 25@@s@@reduced-01, 14@@d@@state, 23@@d@@metabolism, 9@@d@@underground, 24@@a@@and, 19@@s@@characterize-01, 22@@s@@slow-01, 26@@d@@activity-06, 4@@d@@they, 11@@s@@enter-01, 13@@p@@pyramid, 7@@g@@go-02, 10@@a@@and, 8@@s@@deep-02]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	book	_	book	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	subject	_	subject	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	written	_	write	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
13	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	General	general	General	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	15	MOD_s	true
15	Vo_Nguyen_Giap	_name_	Giap	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
16	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[6@@d@@book, 14@@h@@have-org-role-91, 4@@s@@very, 15@@n@@_NAME_, 12@@s@@write-01, 9@@a@@subject, 15@@p@@person, 5@@s@@good-02, 14@@p2@@general]
sentence=1	There	there	there	EX	O	_	person	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	splash	_	splash	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
5	fountain	_	fountain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
6	(no	_	(no	.	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	standing	_	stand	VBG	O	(t<root> / --LEX--  :manner-of (h<mod>))	stand-01	(mod())	5	MOD_mod	true
8	water)	_	water)	NNP	O	_	and	_	0	IGNORE	true
9	for	_	for	IN	O	_	or	_	0	IGNORE	true
10	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	ones	_	one	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
12	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	diapers;_Next	_name_	Next	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	11	MOD_s	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	a	_	a	DT	O	_	person	_	0	IGNORE	true
17	wading	_	wade	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
18	pool	_	pool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
19	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	those	_	those	DT	O	_	that	_	0	IGNORE	true
21	who	_	who	WP	O	_	person	_	0	IGNORE	true
22	are	_	be	VBP	O	_	person	_	0	IGNORE	true
23	potty	_	potty	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	14	APP_o	true
24	trained;	_	trained;	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	0	ROOT	true
25	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	a	_	a	DT	O	_	person	_	0	IGNORE	true
27	family	_	family	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
28	pool;	_	pool;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	Finally	finally	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	33	MOD_mod	true
30	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
31	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
32	a	_	a	DT	O	_	1	_	0	IGNORE	true
33	pool	_	pool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
34	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	adults	_	adult	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
36	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
37	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
38	kids	_	kid	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
39	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	40	MOD_mod	true
40	allowed	_	allow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
41	.	_	.	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	24	APP_op2	true

nodealignment=[12@@p@@still, 18@@d@@pool, 4@@p@@splash-01, 36@@p@@only, 17@@p@@wade-01, 38@@y@@kid, 23@@s@@potty, 6@@explicitanon0@@(no, 24@@a@@and, 39@@explicitanon0@@-, 5@@d@@fountain, 33@@d@@pool, 10@@p@@little, 29@@n@@final, 25@@n@@then, 40@@s@@allow-01, 14@@s@@-, 27@@p@@family, 11@@i@@one, 7@@t@@stand-01, 35@@i@@adult, 41@@s@@cause-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	chiro/acupuncturist	_	chiro/acupuncturist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
4	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
5	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
7	evaluate	_	evaluate	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	for	_	for	IN	O	_	or	_	0	IGNORE	true
11	wobblers	_	wobbler	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	which	_	which	WDT	O	_	name	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
16	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
17	spinal	_	spinal	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	compression	_	compression	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	APP_s	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	15	MOD_s	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	confused	_	confuse	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	EPM	_name_	EPM	NNP	O	(d<root> / --LEX--)	_NAME_	()	22	APP_o	true
25	.	_	.	.	O	_	ballistic	_	0	IGNORE	true

nodealignment=[17@@d@@spinal, 24@@d@@_NAME_, 20@@f@@possible-01, 7@@s@@evaluate-01, 5@@d@@there, 9@@d@@horse, 14@@o@@often, 2@@d@@chiro/acupuncturist, 22@@s@@confuse-01, 15@@s@@cause-01, 4@@s@@be-located-at-91, 18@@s@@compression, 11@@i@@wobbler]
sentence=1	In	in	in	IN	O	_	contrast-01	_	0	IGNORE	true
2	addition,	_	addition,	NNS	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	clothing	_	clothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	better	_	well	JJR	O	(s<root> / --LEX--  :ARG1 (p<s>))	good-02	(s())	9	MOD_s	true
9	quality	_	quality	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
10	than	_	than	IN	O	_	more	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	clothing	_	clothing	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
14	hot	_	hot	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-04	(mod())	12	MOD_mod	true
15	topic,	_	topic,	NNP	O	_	and	_	0	IGNORE	true
16	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
19	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	20	MOD_mod	true
20	cheaply	_	cheaply	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	right-02	(mod())	18	MOD_mod	true
21	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
22	possible	_	possible	JJ	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
23	by	_	by	IN	O	_	person	_	0	IGNORE	true
24	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	18	APP_s	true
25	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
26	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
27	horrible	_	horrible	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	conditions	_	condition	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
30	Asia	_name_	Asia	NNP	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	25	MOD_mod	true
31	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[4@@d@@clothing, 12@@p@@clothing, 14@@p@@hot-04, 30@@c3@@continent, 25@@s@@live-01, 30@@n2@@_NAME_, 7@@s@@much, 9@@r@@quality, 22@@p@@possible-01, 19@@s@@equal, 24@@d@@person, 8@@s@@good-02, 20@@t@@right-02, 18@@s@@make-01, 28@@t@@condition, 27@@p@@horrible]
sentence=1	Had	had	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
2	a	_	a	DT	O	_	person	_	0	IGNORE	true
3	horrible	_	horrible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	4	MOD_s	true
4	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
7	manager	_	manager	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	manage-01	()	4	APP_s	true
8	here,	_	here,	NNP	O	_	and	_	0	IGNORE	true
9	Rachel_McInnis,	_name_	McInnis,	NNP	O	_	and	_	0	IGNORE	true
10	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	rude,	_	rude,	NNP	O	_	and	_	0	IGNORE	true
13	inconsiderate	_	inconsiderate	JJ	O	(p<root> / --LEX--  :polarity (explicitanon0 / -))	$LEMMA$	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_s	true
15	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
16	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	APP_op2	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	for	_	for	IN	O	_	thing	_	0	IGNORE	true
22	an	_	an	DT	O	_	thing	_	0	IGNORE	true
23	item	_	item	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
24	that	_	that	WDT	O	_	own-01	_	0	IGNORE	true
25	was	_	be	VBD	O	_	person	_	0	IGNORE	true
26	marked	_	mark	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
27	incorrectly..	_	incorrectly..	JJ	O	_	multi-sentence	_	0	IGNORE	true
28	.	_	.	.	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	multi-sentence	(s(), o())	4	MOD_o	true

nodealignment=[16@@explicitanon0@@-, 28@@s@@multi-sentence, 23@@d@@item, 19@@s@@right-02, 3@@s@@horrible, 13@@explicitanon0@@-, 7@@e2@@manage-01, 13@@p@@inconsiderate, 26@@s@@mark-01, 15@@s@@cause-01, 4@@s@@experience-01, 7@@p2@@person, 20@@d@@thing, 14@@a@@and, 17@@s@@do-02]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	robe	_	robe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
10	the_'60s	_name_	'60	NNS	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[8@@p@@back, 2@@s@@have-03, 10@@n@@_NAME_, 1@@d@@He, 10@@c@@country, 7@@s@@make-01, 4@@d@@robe]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	breakfast	_	breakfast	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	which	_	which	WDT	O	_	and	_	0	IGNORE	true
5	was	_	be	VBD	O	_	date-entity	_	0	IGNORE	true
6	included	_	include	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
7	every_morning	_name_	morning	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
8	until	_	until	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	9:30am;	_	9:30am;	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_s	true
10	yummy	_	yummy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
12	Parisian	_name_	parisian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	croissants	_	croissant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@great, 3@@d@@breakfast, 6@@s@@include-01, 9@@s@@and, 8@@n@@until, 11@@s@@fresh-02, 12@@p@@_NAME_, 13@@d@@croissant, 10@@p@@yummy, 7@@n@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	graphic	_	graphic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
7	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
8	been	_	be	VBN	O	_	possible-01	_	0	IGNORE	true
9	distorted	_	distort	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	distort-01	(s())	4	MOD_s	true
10	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
11	printed	_	print	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[9@@s@@distort-01, 2@@s@@send-01, 4@@d@@graphic, 1@@d@@i, 11@@o@@print-01]
sentence=1	I've	i've	I've	NNP	O	_	cause-01	_	0	IGNORE	true
2	spoken	_	speak	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	to	_	to	IN	O	_	and	_	0	IGNORE	true
4	vendors	_	vendor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	sell-01	()	2	APP_s	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	by	_	by	IN	O	_	and	_	0	IGNORE	true
9	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-to-do-with-04	(s(), o())	4	MOD_s	true
12	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	about	_	about	IN	O	_	and	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
20	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	15	MOD_mod	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
22	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
23	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	25	MOD_mod	true
24	were	_	be	VBD	O	_	person	_	0	IGNORE	true
25	afraid	_	afraid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fear-01	(s())	21	APP_op2	true
26	to	_	to	TO	O	_	person	_	0	IGNORE	true
27	quote	_	quote	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
28	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
29	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	them	_	they	PRP	O	_	oppose-01	_	0	IGNORE	true
31	even	_	even	RB	O	_	cause-01	_	0	IGNORE	true
32	though	_	though	IN	O	_	cause-01	_	0	IGNORE	true
33	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	openly	_	openly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-04	(s())	35	MOD_s	true
35	admitted	_	admit	VBD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	25	MOD_mod	true
36	that	_	that	IN	O	_	and	_	0	IGNORE	true
37	they	_	they	PRP	O	_	cause-01	_	0	IGNORE	true
38	felt	_	feel	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_s	true
39	Canadian	_name_	Canadian	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	40	MOD_mod	true
40	Outback	outback	Outback	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
41	was	_	be	VBD	O	_	person	_	0	IGNORE	true
42	pricing	_	price	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	49	APP_op1	true
43	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
44	entertainment	_	entertainment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_o	true
45	out	_	out	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	42	MOD_s	true
46	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
47	the	_	the	DT	O	_	person	_	0	IGNORE	true
48	market	_	market	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	38	APP_s	true
50	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	49	APP_op2	true
51	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_o	true
52	to	_	to	TO	O	_	thing	_	0	IGNORE	true
53	hurt	_	hurt	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	50	MOD_mod	true
54	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
55	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_s	true
56	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
57	help	_	help	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	53	MOD_mod	true
58	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[44@@d@@entertainment, 55@@d@@business, 39@@n@@_NAME_, 25@@s@@fear-01, 4@@e2@@sell-01, 45@@s@@out-06, 20@@p@@as-well, 57@@i@@help-01, 13@@s@@good-02, 48@@d@@market, 7@@s@@use-01, 18@@d@@company, 4@@p2@@person, 28@@d@@event, 15@@s@@say-01, 35@@s@@admit-01, 11@@s@@have-to-do-with-04, 23@@p@@in-fact, 50@@s@@do-02, 2@@s@@speak-01, 34@@s@@open-04, 21@@a@@and, 39@@c@@country, 49@@a@@and, 38@@s@@feel-01, 12@@d@@nothing, 53@@i@@hurt-01, 42@@s@@price-01, 51@@d@@more, 27@@s@@quote-01, 40@@d@@Outback]
sentence=1	I've	i've	I've	NNP	O	_	_NAME_	_	0	IGNORE	true
2	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	reviews	_	review	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_o	true
7	below	_	below	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
10	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	8	APP_op2	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	state	_	state	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	that	_	that	DT	O	_	and	_	0	IGNORE	true
14	yes,	_	yes,	NN	O	_	mean-01	_	0	IGNORE	true
15	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	12	MOD_s	true
16	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	doctors	_	doctor	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
22	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	wait	_	wait	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_op1	true
25	(depending	_	(depende	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
26	on	_	on	IN	O	_	thing	_	0	IGNORE	true
27	what	_	what	WDT	O	_	amr-unknown	_	0	IGNORE	true
28	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	patients	_	patient	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	32	APP_s	true
30	are	_	be	VBP	O	_	person	_	0	IGNORE	true
31	being	_	be	VBG	O	_	person	_	0	IGNORE	true
32	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_o	true
33	for)	_	for)	NNP	O	_	thing	_	0	IGNORE	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
35	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	the	_	the	DT	O	_	thing	_	0	IGNORE	true
38	tests	_	test	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	46	APP_dom	true
40	procedures	_	procedure	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
41	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
42	are	_	be	VBP	O	_	person	_	0	IGNORE	true
43	ran	_	run	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
44	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	34	APP_op2	true
45	be	_	be	VB	O	_	monetary-quantity	_	0	IGNORE	true
46	costly	_	costly	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	44	APP_s	true
47	(just	_	(just	.	O	_	$LEMMA$	_	0	IGNORE	true
48	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	8	MOD_s	true
49	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
50	would	_	would	MD	O	_	thing	_	0	IGNORE	true
51	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
52	for	_	for	IN	O	_	amplify-01	_	0	IGNORE	true
53	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
54	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
55	medical	_	medical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
56	tests	_	test	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_o	true
57	elsewhere	_	elsewhere	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
58	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
59	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	62	APP_s	true
60	do	_	do	VBP	O	_	person	_	0	IGNORE	true
61	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	62	MOD_mod	true
62	have	_	have	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-03	(mod(), s())	44	MOD_mod	true
63	insurance)..	_	insurance)..	NNP	O	_	contrast-01	_	0	IGNORE	true
64	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@p@@any, 62@@o@@have-03, 19@@d@@office, 55@@p@@medical, 28@@p@@other, 29@@p@@person, 25@@s@@(depende-01, 48@@s@@resemble-01, 38@@d@@test-01, 61@@explicitanon0@@-, 29@@h@@have-rel-role-91, 24@@d@@wait-01, 17@@p@@other, 54@@p@@other, 3@@explicitanon0@@some, 32@@s@@see-01, 12@@s@@state-01, 57@@b@@elsewhere, 15@@s@@resemble-01, 22@@o@@sometimes, 7@@b@@below, 35@@explicitanon0@@some, 40@@d@@procedure, 10@@c@@like-02, 8@@a@@and, 29@@f@@patient, 18@@p@@doctor, 46@@r@@costly, 6@@d@@review-01, 44@@s@@possible-01, 43@@s@@run-01, 2@@s@@read-01, 59@@d@@you, 56@@d@@test-01, 34@@a@@and, 39@@a@@and, 53@@p@@any]
sentence=1	Then,	then,	Then,	NNP	O	_	and	_	0	IGNORE	true
2	when	_	when	WRB	O	_	i	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_mod	true
4	moved	_	move	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
5	out,	_	out,	RB	O	_	and	_	0	IGNORE	true
6	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	cleaned	_	clean	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	apartment	_	apartment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	top	_	top	NN	O	(y<root> / --LEX--  :prep-to-of (v<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	bottom,	_	bottom,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
13	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
14	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
15	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	and	_	and	CC	O	(a2<root> / --LEX--  :op2 (p2<op2>)  :op1 (s2<op1>)  :time-of (a<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	47	APP_snt1	true
17	tried	_	try	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	16	APP_op2	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	charge	_	charge	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	for	_	for	IN	O	_	and	_	0	IGNORE	true
22	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	24	MOD_mod	true
23	cleaning	_	cleaning	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
24	fees	_	fee	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
25	(and	_	(and	NNP	O	_	-	_	0	IGNORE	true
26	we	_	we	PRP	O	_	-	_	0	IGNORE	true
27	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	28	MOD_mod	true
28	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
29	our	_	our	PRP$	O	_	-	_	0	IGNORE	true
30	deposit	_	deposit	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_o	true
31	back)	_	back)	NNS	O	_	and	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
33	past	_	past	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	utilities	_	utility	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op2	true
35	(that	_	(that	NFP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	34	MOD_mod	true
36	were	_	be	VBD	O	_	person	_	0	IGNORE	true
37	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
38	paid,	_	paid,	NNS	O	_	and	_	0	IGNORE	true
39	we	_	we	PRP	O	_	$LEMMA$	_	16	IGNORE	true
40	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	47	APP_snt2	true
41	check	_	check	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	numbers	_	number	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op1	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	APP_s	true
44	records	_	record	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	43	APP_op2	true
45	of	_	of	IN	O	_	thing	_	0	IGNORE	true
46	this)	_	this)	NNS	O	_	thing	_	0	IGNORE	true
47	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true

nodealignment=[16@@a2@@and, 15@@a@@back, 9@@d@@apartment, 35@@explicitanon0@@-, 44@@d@@record-01, 17@@c@@try-01, 47@@m@@multi-sentence, 13@@d@@they, 41@@p@@check, 37@@n@@already, 19@@s@@charge-01, 42@@d@@number, 40@@s@@have-03, 43@@a@@and, 3@@d@@we, 34@@d@@utility, 14@@s@@come-01, 10@@y@@top, 7@@t@@clean-01, 4@@v@@move-01, 32@@a@@and, 27@@n@@ever, 30@@d@@deposit-01, 24@@d@@fee, 23@@p@@cleaning-01, 22@@explicitanon0@@2, 33@@p@@past, 28@@s@@get-01]
sentence=1	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
2	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	frustrated	_	frustrated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	frustrate-01	(s())	0	ROOT	true
4	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	point-	_	point-	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_o	true
7	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	would	_	would	MD	O	_	and	_	0	IGNORE	true
9	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	6	APP_s	true
10	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	10_min	_name_	min	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	to	_	to	TO	O	_	multiple	_	0	IGNORE	true
16	come	_	come	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
17	by	_	by	RP	O	_	$LEMMA$	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
19	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	22	MOD_mod	true
22	board	_	board	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
24	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
25	cracked	_	crack	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
26	(the	_	(the	ADD	O	_	contrast-01	_	0	IGNORE	true
27	crack	_	crack	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	deep	_	deep	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	37	APP_s	true
30	enough	_	enough	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
31	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
32	stick	_	stick	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	37	APP_op1	true
33	a	_	a	DT	O	_	1	_	0	IGNORE	true
34	penny	_	penny	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
35	in	_	in	IN	O	_	i	_	0	IGNORE	true
36	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	25	APP_o	true
38	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	goes	_	go	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op2	true
40	clear	_	clear	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	39	MOD_s	true
41	through)	_	through)	IN	O	_	$LEMMA$	_	0	IGNORE	true
42	yet	_	yet	RB	O	_	$LEMMA$	_	0	IGNORE	true
43	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
44	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
45	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	46	MOD_mod	true
46	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	60	APP_op1	true
47	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
48	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	46	APP_o	true
49	the	_	the	DT	O	_	and	_	0	IGNORE	true
50	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
51	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
52	bother	_	bother	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	48	MOD_mod	true
53	with	_	with	IN	O	_	-	_	0	IGNORE	true
54	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
55	once	_	once	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
56	WAS	was	be	VBD	O	_	person	_	0	IGNORE	true
57	a	_	a	DT	O	_	thing	_	0	IGNORE	true
58	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	59	MOD_s	true
59	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	60	APP_s	true
60	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	APP_s	true
61	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
62	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	63	MOD_mod	true
63	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	60	APP_op2	true
64	a	_	a	DT	O	_	thing	_	0	IGNORE	true
65	dissatisfied	_	dissatisfied	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	disgruntle-01	(s())	66	MOD_s	true
66	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_o	true
67	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[25@@s@@crack-01, 32@@s@@stick-01, 34@@d@@penny, 3@@s@@frustrate-01, 63@@s@@become-01, 55@@n@@once, 50@@d@@time, 29@@s@@deep-02, 59@@d@@customer, 30@@p@@enough, 39@@s@@go-01, 22@@d@@board, 37@@a@@and, 52@@i@@bother-01, 6@@s@@and, 5@@p@@this, 9@@s@@take-10, 10@@p@@all, 45@@explicitanon0@@-, 40@@s@@clear-04, 12@@d@@min, 21@@explicitanon0@@1, 46@@c@@want-01, 60@@a@@and, 27@@d@@crack, 19@@s@@replace-01, 66@@d@@customer, 16@@d@@come-01, 48@@s@@take-01, 62@@n@@now, 2@@s@@very, 58@@s@@happy-01, 65@@s@@disgruntle-01, 18@@a@@and]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	APP_op1	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	800	_	800	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
6	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	(which	_	(which	NNP	O	_	_NAME_	_	0	IGNORE	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	answered)	_	answered)	VBN	O	_	and	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	inquired	_	inquire	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	about_last_minute	_name_	minute	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	minute	(mod())	13	MOD_mod	true
13	rates	_	rate	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	.	_	.	.	O	_	blood	_	0	IGNORE	true

nodealignment=[1@@d@@i, 3@@s@@call-02, 2@@n@@then, 13@@d@@rate, 5@@explicitanon0@@_NUMBER_, 12@@p@@minute, 6@@d@@number, 10@@a@@and, 11@@s@@inquire-01]
sentence=1	Service	service	service	NN	O	(d<root> / --LEX--)	serve-01	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	average,	_	average,	NNS	O	_	contrast-01	_	0	IGNORE	true
4	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	7	APP_op1	true
5	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	special,	_	special,	NNS	O	_	and	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
8	restaurants	_	restaurant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	are	_	be	VBP	O	_	person	_	0	IGNORE	true
11	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	14	MOD_o	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
15	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	7	APP_op2	true
16	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	APP_s	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	19	MOD_s	true
19	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	training	_	train	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	waitstaff	_	waitstaff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	communicative	_	communicative	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_op3	true
28	friendly,	_	friendly,	NNS	O	_	and	_	0	IGNORE	true
29	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
30	merely	_	merely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	mere	(mod())	31	MOD_mod	true
31	capable	_	capable	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op2	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@m@@more, 4@@s@@contrast-01, 27@@a@@and, 29@@explicitanon0@@-, 7@@a@@and, 19@@d@@job, 30@@p@@mere, 5@@d@@nothing, 31@@d@@capable-01, 11@@s@@suppose-02, 18@@b@@good-02, 21@@s@@train-01, 14@@s@@excellent-02, 16@@s@@do-02, 8@@d@@restaurant, 1@@d@@serve-01, 15@@s@@recommend-01, 26@@d@@communicative, 23@@d@@waitstaff]

