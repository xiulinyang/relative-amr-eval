sentence=1	His	his	he	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	intelligence	_	intelligence	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-org-role-91	(s(), o())	5	MOD_s	true
5	captured	_	capture	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	figures	_	figure	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	5	MOD_s	true
8	like	_	like	IN	O	_	1	_	0	IGNORE	true
9	Abu_Zubayda	_name_	Zubayda	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	7	MOD_mod	true
11	Khalid_Shaykh_Muhammad,	_name_	Muhammad,	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_op2	true
12	as	_	as	RB	O	_	and	_	0	IGNORE	true
13	well	_	well	RB	O	_	and	_	0	IGNORE	true
14	as	_	as	IN	O	_	and	_	0	IGNORE	true
15	nearly	_	nearly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	near	(mod())	18	MOD_mod	true
16	500	_	500	CD	O	(d<root> / --LEX--)	_NUMBER_	()	20	APP_op1	true
17	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	al-Qaeda	al-qaeda	al-Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
19	operatives,	_	operatives,	NNP	O	_	include-91	_	0	IGNORE	true
20	over	_	over	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	26	APP_s	true
21	400	_	400	CD	O	(d<root> / --LEX--)	_NUMBER_	()	5	APP_o	true
22	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	7	MOD_o	true
23	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Pakistanis	_name_	Pakistanis	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	26	MOD_mod	true
26	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	5	MOD_o	true
27	turned	_	turn	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-over-02	(o2(), s(), o())	7	MOD_o	true
28	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
29	to	_	to	IN	O	_	person	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	27	APP_o2	true
32	.	_	.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[31@@c@@country, 11@@p@@person, 27@@b@@turn-over-02, 17@@p@@other, 10@@a@@and, 7@@s@@figure, 11@@n@@_NAME_, 26@@s@@person, 25@@c@@country, 2@@p@@military, 25@@n@@_NAME_, 5@@s@@capture-01, 18@@c2@@criminal-organization, 1@@d@@he, 20@@o@@over, 16@@d@@_NUMBER_, 15@@s@@near, 18@@n@@_NAME_, 3@@s@@intelligence, 31@@n@@_NAME_, 22@@s@@include-91, 6@@s@@major-02, 9@@n@@_NAME_, 9@@p@@person, 21@@d@@_NUMBER_, 4@@s@@have-org-role-91]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
3	estimated	_	estimate	VBN	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	10	APP_op1	true
4	to	_	to	TO	O	_	up-$LEMMA$	_	0	IGNORE	true
5	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_s	true
6	some	_	some	DT	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
7	5,000	_	5,000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	6	APP_op1	true
8	armed	_	armed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	arm-01	(s())	3	APP_o	true
9	fighters,	_	fighters,	NNS	O	_	and	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
13	pursued	_	pursue	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
14	attacks	_	attack	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
15	against	_	against	IN	O	_	-	_	0	IGNORE	true
16	Israeli	_name_	israeli	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
19	compel	_	compel	VB	O	(s2<root> / --LEX--  :ARG2 (f<o>)  :ARG1 (t<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), o(s()))	14	MOD_mod	true
20	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
22	withdraw	_	withdraw	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	19	APP_o	true
23	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the_Shebaa_Farms,	_name_	Farms,	NNP	O	_	include-91	_	0	IGNORE	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	sliver	_	sliver	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	22	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	Syrian	_name_	syrian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	29	MOD_mod	true
29	territory	_	territory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_poss	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	Israel	_name_	Israel	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	32	APP_s	true
32	annexed	_	annex	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
33	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	32	MOD_mod	true
34	the_1967_war	_name_	war	NN	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	33	APP_op1	true
35	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[16@@c@@country, 19@@s2@@compel-01, 17@@d@@force, 32@@s@@annex-01, 10@@a@@and, 28@@c@@country, 6@@s@@some, 22@@t@@withdraw-01, 14@@s@@attack-01, 31@@c@@country, 16@@n@@_NAME_, 31@@n@@_NAME_, 3@@f@@estimate-01, 26@@h@@sliver, 1@@d@@It, 34@@n@@_NAME_, 34@@w@@war, 33@@w@@after, 29@@d@@territory, 28@@n@@_NAME_, 8@@s@@arm-01, 7@@d@@_NUMBER_, 13@@s@@pursue-01, 5@@s@@have-03]
sentence=1	Kumaratunga's_India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	tour	_	tour	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_s	true
3	preceded	_	precede	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	5	(mod())	3	MOD_mod	true
5	three-day	_	three-day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	day	(mod())	6	MOD_mod	true
6	visit	_	visit	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
7	to	_	to	IN	O	_	person	_	0	IGNORE	true
8	Sri_Lanka	_name_	Lanka	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
9	by	_	by	IN	O	_	name	_	0	IGNORE	true
10	Norwegian	_name_	norwegian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
11	Foreign	foreign	Foreign	NNP	O	(a<root> / --LEX--  :topic-of (w<mod>))	$REPL$	(mod())	12	MOD_mod	true
12	Minister	minister	Minister	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	13	MOD_s	true
13	Jan_Petersen	_name_	Petersen	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
14	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	bid	_	bid	NN	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	6	MOD_mod	true
18	to	_	to	TO	O	_	name	_	0	IGNORE	true
19	revive	_	revive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	talks	_	talk	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	were	_	be	VBD	O	_	person	_	0	IGNORE	true
25	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	follow	_	follow	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	ceasefire	_	ceasefire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	Oslo	_name_	Oslo	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
32	successfully	_	successfully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	33	MOD_s	true
33	brokered	_	broker	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_o	true
34	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
35	February_2002	_name_	2002	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	2008	(mod())	33	MOD_mod	true
36	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[22@@s@@talk-01, 16@@s@@new-01, 17@@d2@@bid-01, 1@@c@@country, 31@@c@@city, 2@@s@@tour-01, 31@@n@@_NAME_, 1@@n@@_NAME_, 5@@y@@day, 4@@explicitanon0@@5, 10@@n@@_NAME_, 32@@s@@succeed-01, 6@@s@@visit-01, 5@@t@@temporal-quantity, 13@@n@@_NAME_, 13@@p@@person, 12@@h@@have-org-role-91, 35@@explicitanon0@@2008, 10@@c@@country, 21@@d@@peace, 12@@g@@minister, 3@@s@@precede-01, 27@@s@@follow-01, 8@@c@@country, 8@@n@@_NAME_, 11@@a@@foreign, 33@@s@@broker-01, 29@@d@@ceasefire, 19@@s@@revive-01, 25@@s@@suppose-02]
sentence=1	While	while	while	IN	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	secretaries	_	secretary	NNS	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	5	MOD_s	true
5	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-org-role-91	(s(), o())	1	MOD_s	true
6	state	_	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	--	_	--	:	O	_	include-91	_	0	IGNORE	true
8	save	_	save	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
9	perhaps	_	perhaps	RB	O	_	possible-01	_	0	IGNORE	true
10	Dean_Rusk	_name_	Rusk	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
11	--	_	--	:	O	_	-	_	0	IGNORE	true
12	have	_	have	VBP	O	_	person	_	0	IGNORE	true
13	gobbled	_	gobble	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	1	APP_o	true
14	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
15	credit	_	credit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
16	for	_	for	IN	O	_	thing	_	0	IGNORE	true
17	outcomes	_	outcome	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
19	they	_	they	PRP	O	_	person	_	0	IGNORE	true
20	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-to-do-with-04	(s())	17	MOD_s	true
21	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	to	_	to	TO	O	_	and	_	0	IGNORE	true
23	do	_	do	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
24	with,	_	with,	NNS	O	_	and	_	0	IGNORE	true
25	few	_	few	JJ	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	29	APP_dom	true
26	have	_	have	VBP	O	_	person	_	0	IGNORE	true
27	been	_	be	VBN	O	_	person	_	0	IGNORE	true
28	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	29	MOD_mod	true
29	brazen	_	brazen	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_s	true
30	as	_	as	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	1	MOD_mod	true
31	Colin_Powell	_name_	Powell	NNP	O	(p<root> / person  :name (n / --LEX--)  :compared-to-of (c<mod>))	_NAME_	(mod())	29	MOD_mod	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@explicitanon0@@most, 5@@s@@have-org-role-91, 4@@p2@@secretary, 21@@s@@little, 31@@p@@person, 15@@s@@credit-01, 31@@n@@_NAME_, 29@@r@@brazen, 4@@h@@have-org-role-91, 28@@s@@equal, 30@@s@@equal, 17@@d@@outcome, 10@@p@@person, 1@@h@@contrast-01, 20@@s@@have-to-do-with-04, 25@@n@@few, 10@@n@@_NAME_, 25@@p@@person, 8@@s@@save-01, 13@@s@@gobble-up-02, 6@@p@@state, 3@@c@@country, 3@@n@@_NAME_]
sentence=1	This,_Pakistan's	_name_	Pakistan's	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
2	lobbyist	_	lobbyist	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	lobby-01	(s(), o())	5	MOD_s	true
3	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	Washington	_name_	Washington	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	2	MOD_mod	true
5	Christina_Rocca	_name_	Rocca	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_o	true
6	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	0	ROOT	true
7	been	_	be	VBN	O	_	person	_	0	IGNORE	true
8	told,	_	told,	NNP	O	_	name	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	"minimum"	_	"minimum"	NNP	O	_	-	_	0	IGNORE	true
12	that	_	that	IN	O	_	name	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	15	APP_poss	true
15	army	_	army	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	17	APP_s	true
16	will	_	will	MD	O	_	person	_	0	IGNORE	true
17	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@p@@person, 17@@s@@accept-01, 14@@c@@country, 2@@s@@lobby-01, 15@@m@@army, 4@@n@@_NAME_, 14@@n@@_NAME_, 1@@n@@_NAME_, 1@@g@@government-organization, 4@@c@@city, 5@@n@@_NAME_, 6@@s@@person]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	17	APP_s	true
3	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
4	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	that	_	that	IN	O	_	name	_	0	IGNORE	true
7	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	emerging	_	emerge	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
10	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
11	an	_	an	DT	O	_	1	_	0	IGNORE	true
12	alternative	_	alternative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	investment	_	investment	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	invest-01	(mod())	14	MOD_mod	true
14	destination	_	destination	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	China,	_name_	china,	CD	O	_	and	_	0	IGNORE	true
17	hence	_	hence	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	favor	_	favor	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
20	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	17	MOD_s	true
22	generals	_	general	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	25	APP_s	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	Islamabad	_name_	Islamabad	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	22	MOD_mod	true
25	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_o	true
26	to	_	to	IN	O	_	person	_	0	IGNORE	true
27	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
28	trusty	_	trusty	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	supplier	_	supplier	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	supply-01	(s(), o())	21	MOD_s	true
30	of	_	of	IN	O	_	company	_	0	IGNORE	true
31	nukes	_	nuke	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_o	true
33	missiles	_	missile	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op2	true
34	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
35	creating	_	create	VBG	O	(r<root> / --LEX--  :ARG1 (p<o>)  :ARG0 (c<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), o(s()))	9	MOD_mod	true
36	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	scare	_	scare	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	35	APP_o	true
38	about	_	about	IN	O	_	cause-01	_	0	IGNORE	true
39	war	_	war	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	37	APP_o	true
40	involving	_	involve	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	39	MOD_o	true
41	India	_name_	India	NNP	O	_	_NAME_	_	0	IGNORE	true
42	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
43	in	_	in	IN	O	_	i	_	0	IGNORE	true
44	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	47	MOD_mod	true
45	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
46	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	47	MOD_s	true
47	flashpoints	_	flashpoint	NNS	O	(a2<root> / --LEX--  :ARG0 (c<s>)  :concession-of (a<mod>))	$LEMMA$	(mod(), s())	19	MOD_mod	true
48	are	_	be	VBP	O	_	person	_	0	IGNORE	true
49	the_Taiwan_Straits	_name_	Straits	NNPS	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	50	APP_op1	true
50	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	47	APP_s	true
51	North_Korea	_name_	Korea	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	50	APP_op2	true
52	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[51@@c@@country, 2@@s@@cause-01, 21@@s@@have-org-role-91, 4@@d@@this, 22@@p@@person, 50@@a@@and, 40@@s@@involve-01, 31@@d@@nuke, 24@@n@@_NAME_, 7@@c@@country, 13@@p@@invest-01, 39@@s@@war-01, 32@@a@@and, 37@@c@@scare-01, 29@@s@@supply-01, 35@@r@@create-01, 33@@d@@missile, 49@@n@@_NAME_, 46@@s@@real-04, 9@@s@@emerge-01, 49@@c@@city, 44@@p@@in-fact, 14@@d@@destination, 25@@s@@do-02, 7@@n@@_NAME_, 47@@a2@@flashpoint, 12@@p@@alternative, 24@@c@@city, 22@@h@@have-org-role-91, 28@@p@@trusty, 17@@s@@cause-01, 51@@n@@_NAME_, 19@@d@@favor-01, 22@@e@@general]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
2	asking	_	ask	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	APP_op1	true
3	me	_	I	PRP	O	_	and	_	0	IGNORE	true
4	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
5	tribe	_	tribe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	I	i	I	PRP	O	_	$REPL$	_	15	IGNORE	true
7	belong	_	belong	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	to	_	to	IN	O	_	person	_	0	IGNORE	true
9	(thus	_	(thus	.	O	_	$LEMMA$	_	0	IGNORE	true
10	assessing	_	assess	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
11	my	_	my	PRP$	O	_	mean-01	_	0	IGNORE	true
12	sectarian	_	sectarian	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	background)	_	background)	NNS	O	_	and	_	0	IGNORE	true
14	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	started	_	start	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
16	hurling	_	hurl	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
17	abuses	_	abuse	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
18	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	Shia,	shia,	Shia,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
21	calling	_	call	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
22	them	_	they	PRP	O	_	person	_	0	IGNORE	true
23	Persians,	persians,	persians,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	15	MOD_s	true
24	Majoos	majoos	Majoos	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
25	(fire	_	(fire	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
26	worshippers),	_	worshippers),	NNP	O	_	mean-01	_	0	IGNORE	true
27	rabid	_	rabid	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	dogs	_	dog	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_o	true
30	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	handful	_	handful	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	descriptions	_	description	NNS	O	(d<root> / --LEX--)	describe-01	()	29	APP_op2	true
35	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
36	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	38	APP_s	true
37	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	true
38	mention	_	mention	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	MOD_o	true
39	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@c@@start-01, 37@@explicitanon0@@-, 31@@explicitanon0@@handful, 16@@s@@hurl-01, 29@@a@@and, 23@@s@@persians,, 39@@b@@here, 5@@d@@tribe, 27@@p@@rabid, 12@@d@@sectarian, 17@@d@@abuse-01, 7@@s@@belong-01, 24@@d@@Majoos, 10@@s@@assess-01, 25@@p@@(fire, 28@@d@@dog, 21@@s@@call-01, 1@@w@@after, 33@@p@@other, 2@@s@@ask-01, 38@@s@@mention-01, 36@@d@@i, 14@@d@@he, 34@@d@@describe-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	happened	_	happen	VBD	O	_	event	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-rel-role-91	(s(), o())	14	MOD_o	true
5	Philippines	_name_	Philippines	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	14	MOD_mod	true
6	which,	_	which,	NNP	O	_	resemble-01	_	0	IGNORE	true
7	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	14	MOD_s	true
8	Pakistan,	_name_	pakistan,	CD	O	_	_NAME_	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	vulnerable	_	vulnerable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	node	_	node	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
15	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	business	_	business	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	intelligence	_	intelligence	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	agencies	_	agency	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_s	true
22	terrorist	_	terrorist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	terrorism	(mod())	23	MOD_mod	true
23	organizations	_	organization	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
24	conduct	_	conduct	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_o	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	each	_	each	DT	O	_	$LEMMA$	_	0	IGNORE	true
27	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[11@@p@@important, 4@@s@@have-rel-role-91, 24@@s@@conduct-02, 23@@d@@organization, 5@@c@@country, 22@@p@@terrorism, 14@@d@@node, 19@@p@@intelligence, 5@@n@@_NAME_, 20@@d@@agency, 17@@o@@business, 27@@p@@other, 1@@d@@They, 7@@s@@resemble-01, 21@@a@@and, 13@@p@@vulnerable]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	bombings	_	bombing	NNS	O	(d<root> / --LEX--)	bomb-01	()	5	APP_s	true
3	implicated	_	implicate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
4	Muslims,	_name_	Muslims,	NNS	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	exacerbated	_	exacerbate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	8	MOD_mod	true
8	tensions	_	tension	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	which	_	which	WDT	O	_	name	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	regime	_	regime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
14	its	_	its	PRP$	O	_	government-organization	_	0	IGNORE	true
15	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	13	APP_op2	true
16	wearing	_	wear	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	brass	_	brass	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
21	Philippine	_name_	philippine	JJ	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	military	_	military	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
23	sought	_	seek	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_o	true
24	to	_	to	TO	O	_	person	_	0	IGNORE	true
25	exploit	_	exploit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@n@@_NAME_, 15@@h@@have-rel-role-91, 4@@d@@_NAME_, 8@@d@@tension, 25@@s@@exploit-01, 12@@d@@regime, 18@@d@@brass, 11@@n@@_NAME_, 15@@p@@person, 22@@b@@military, 5@@a@@and, 21@@c@@country, 3@@s@@implicate-01, 2@@d@@bomb-01, 16@@s@@wear-01, 15@@f@@friend, 11@@p@@person, 23@@s@@seek-01, 7@@p@@region, 13@@a@@and, 6@@s@@exacerbate-01]
sentence=1	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	the	_	the	DT	O	_	-	_	0	IGNORE	true
6	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	remains	_	remain	VBZ	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	0	ROOT	true
8	oblivious	_	oblivious	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	7	APP_o	true
9	of	_	of	IN	O	_	-	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	serious	_	serious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
14	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	15	MOD_mod	true
15	fallout	_	fallout	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
16	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	army	_	army	NN	O	(d<root> / --LEX--)	_NAME_	()	20	APP_s	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	facing	_	face	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
23	operations	_	operation	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	Waziristan	_name_	Waziristan	NNP	O	(p<root> / province  :name (n / --LEX--)  :location-of (e<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@serious-02, 25@@p@@province, 6@@n@@_NAME_, 18@@d@@_NAME_, 14@@p@@politics, 4@@n@@time, 25@@n@@_NAME_, 13@@a@@and, 8@@s@@realize-01, 6@@c@@country, 3@@s@@same-01, 15@@d@@fallout, 23@@b@@operation, 7@@f@@remain-01, 20@@s@@face-01, 12@@d@@problem]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	debate	_	debate	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_dom	true
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	handful	_	handful	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	Texas	_name_	Texas	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	8	MOD_mod	true
8	multi-millionnaires	_	multi-millionnaire	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
9	close	_	close	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-10	(s(), o())	8	MOD_s	true
10	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
12	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	have	_	have	VBP	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
15	cleverly	_	cleverly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	clandestine	(mod())	16	MOD_mod	true
16	manufactured	_	manufacture	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
17	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	John_Kerry's	_name_	Kerry's	NNP	O	_	_NAME_	_	0	IGNORE	true
19	war	_	war	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	record	_	record	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	absurd	_	absurd	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@n2@@_NAME_, 16@@s@@manufacture-01, 12@@n@@_NAME_, 8@@d@@multi-millionnaire, 12@@p@@person, 24@@p@@every, 22@@r@@absurd, 13@@d@@family, 19@@p@@war, 5@@explicitanon0@@handful, 20@@p@@record, 2@@d@@debate-01, 25@@t@@way, 7@@s@@state, 9@@s@@close-10, 15@@t@@clandestine]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	charges	_	charge	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	15	APP_dom	true
3	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
6	put	_	put	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	MOD_o	true
7	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	vets	_	vet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
9	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
10	to	_	to	IN	O	_	name	_	0	IGNORE	true
11	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
12	against	_	against	IN	O	_	-	_	0	IGNORE	true
13	Kerry	_name_	Kerry	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	false	_	false	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	APP_op2	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	demonstrated	_	demonstrate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
20	by	_	by	IN	O	_	and	_	0	IGNORE	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	historical	_	historical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	history	(mod())	23	MOD_mod	true
23	record	_	record	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
24	to	_	to	TO	O	_	thing	_	0	IGNORE	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	false	_	false	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@b@@put-01, 13@@p@@person, 15@@r@@false, 7@@explicitanon0@@some, 19@@s@@demonstrate-01, 16@@a@@and, 2@@s@@charge-05, 13@@n@@_NAME_, 22@@p@@history, 23@@d@@record, 17@@s@@possible-01, 4@@d@@they, 26@@d@@false, 11@@s@@make-01, 8@@d@@vet]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	APP_op2	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_o	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	county	_	county	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	find	_	find	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
13	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
14	replacement...is	_	replacement...is	JJ	O	_	person	_	0	IGNORE	true
15	none	_	none	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
16	other	_	other	JJ	O	_	$LEMMA$	_	0	IGNORE	true
17	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	Lee_Brown,	_name_	Brown,	NNP	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	supervisor	_	supervisor	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	23	MOD_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	(d<root> / --LEX--)	person	()	1	APP_s	true
24	Atlanta	_name_	Atlanta	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	21	APP_o	true
25	PD,	pd,	PD,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
26	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
27	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	1	APP_op1	true
28	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
29	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
32	murders	_	murder	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_op1	true
33	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	29	MOD_mod	true
34	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
35	subsequent	_	subsequent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	investigation	_	investigation	NN	O	(d<root> / --LEX--)	investigate-01	()	33	APP_op2	true
37	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[12@@i@@find-01, 29@@d@@office, 15@@p@@none, 24@@c@@city, 32@@d@@murder-01, 23@@d@@person, 36@@d@@investigate-01, 21@@g@@supervisor, 27@@s@@be-located-at-91, 21@@h@@have-org-role-91, 5@@d@@person, 24@@n@@_NAME_, 10@@s@@get-01, 20@@p@@original, 35@@p@@subsequent, 1@@a@@and, 33@@d@@and, 8@@d@@county, 3@@p@@all, 4@@s@@include-91]
sentence=1	Now,	now,	Now,	NNP	O	_	name	_	0	IGNORE	true
2	FLDS	flds	FLDS	NNP	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
3	leader	_	leader	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	lead-02	(s(), o())	4	MOD_s	true
4	Warren_Jeffs	_name_	Jeffs	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
5	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
6	been	_	be	VBN	O	_	person	_	0	IGNORE	true
7	added	_	add	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
8	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	FBI's	fbi's	fbi'	NNS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	"Ten	"ten	"Ten	``	O	_	person	_	0	IGNORE	true
14	Most	most	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	Wanted	wanted	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	Fugitives,"	fugitives,"	Fugitives,"	NNS	O	_	cause-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	move	_	move	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-02	(mod())	7	MOD_mod	true
19	that	_	that	WDT	O	_	name	_	0	IGNORE	true
20	caps	_	cap	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
21	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
22	enforcement's	_	enforcement's	.	O	_	affect-01	_	0	IGNORE	true
23	dramatic	_	dramatic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	change	_	change	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	20	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	approach	_	approach	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	24	APP_o	true
27	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	polygamous	_	polygamous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o2	true
31	in	_	in	IN	O	_	person	_	0	IGNORE	true
32	recent	_	recent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	years...[because	_	years...[because	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	24	MOD_mod	true
34	of]	_	of]	NNP	O	_	person	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	impact	_	impact	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
37	that	_	that	WDT	O	_	affect-01	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	group's	_	group's	XX	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	possible-01	(s(), o())	7	MOD_o	true
40	practices,	_	practices,	NN	O	_	person	_	0	IGNORE	true
41	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
42	enforcement	_	enforcement	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	enforce-01	(s())	43	APP_s	true
43	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	39	APP_s	true
44	say,	_	say,	NN	O	_	person	_	0	IGNORE	true
45	are	_	be	VBP	O	_	person	_	0	IGNORE	true
46	having	_	have	VBG	O	_	person	_	0	IGNORE	true
47	on	_	on	IN	O	_	-	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	vulnerable	_	vulnerable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
51	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
52	the	_	the	DT	O	_	person	_	0	IGNORE	true
53	sect,	_	sect,	NNS	O	_	include-91	_	0	IGNORE	true
54	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	56	MOD_mod	true
55	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_op1	true
56	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	50	MOD_mod	true
57	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_op2	true
58	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[39@@s@@possible-01, 57@@d@@woman, 15@@s@@want-01, 18@@t@@move-02, 56@@a@@and, 50@@p@@vulnerable, 3@@s@@lead-02, 43@@o@@official, 4@@p@@person, 5@@s@@cause-01, 36@@d@@impact-01, 7@@s@@add-02, 14@@s@@most, 4@@n@@_NAME_, 32@@p@@recent, 23@@p@@dramatic, 2@@p@@political-party, 29@@p@@polygamous, 2@@n@@_NAME_, 21@@d@@law, 55@@d@@child, 33@@d@@date-entity, 49@@s@@most, 54@@p@@particular, 33@@explicitanon2@@_NAME_, 11@@d@@list-01, 43@@h@@have-org-role-91, 10@@n@@_NAME_, 26@@d@@approach-02, 43@@p@@person, 42@@s@@enforce-01, 20@@s@@cap-01, 24@@b@@change-01, 30@@d@@group, 41@@d@@law]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	regard	_	regard	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	my	_	my	PRP$	O	(p<root> / --LEX--  :mod-of (s<mod>))	i	(mod())	2	MOD_mod	true
5	views	_	view	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	3	APP_o	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	those	_	those	DT	O	_	that	_	0	IGNORE	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	proverbial	_	proverbial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	taxi	_	taxi	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
12	driver,	_	driver,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	are	_	be	VBP	O	_	person	_	0	IGNORE	true
16	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	question,	_	question,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	thing	(s(), o())	2	MOD_s	true
19	when	_	when	WRB	O	_	i	_	0	IGNORE	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	visit	_	visit	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@You, 3@@s@@regard-01, 23@@d@@country, 5@@d@@view-02, 4@@p@@i, 10@@p@@proverbial, 18@@s@@thing, 21@@t@@visit-01, 2@@s@@possible-01, 11@@d@@taxi, 16@@s@@suppose-02]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	risk	_	risk	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
6	observers	_	observer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	observe-01	()	7	APP_s	true
7	underestimate	_	underestimate	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	APP_s	true
8	the	_	the	DT	O	_	and	_	0	IGNORE	true
9	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	Al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
12	has	_	have	VBZ	O	_	obligate-01	_	0	IGNORE	true
13	had	_	have	VBN	O	_	obligate-01	_	0	IGNORE	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
16	progress	_	progress	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o2	true
17	in	_	in	IN	O	_	-	_	0	IGNORE	true
18	such	_	such	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
19	recruitment	_	recruitment	NN	O	(d<root> / --LEX--)	recruit-01	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
21	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_op2	true
23	development	_	development	NN	O	(d<root> / --LEX--)	develop-02	()	22	APP_op2	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@d@@time, 22@@a@@and, 16@@s@@progress-01, 6@@p2@@person, 11@@c2@@criminal-organization, 18@@p@@such, 20@@a@@and, 19@@d@@recruit-01, 7@@b@@underestimate-01, 21@@d@@research-01, 23@@d@@develop-02, 6@@e2@@observe-01, 11@@n@@_NAME_, 4@@s@@risk-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	hot	_	hot	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	pursuit	_	pursuit	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	pursue-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	"Atta-level"	"atta-level"	"Atta-level"	NNP	O	_	mean-01	_	0	IGNORE	true
11	Floridian,	floridian,	floridian,	NN	O	_	mean-01	_	0	IGNORE	true
12	Adnan	adnan	Adnan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
13	El	el	El	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	APP_s	true
14	Shukrijumah,	shukrijumah,	Shukrijumah,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	Siddiqui	_name_	Siddiqui	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_mod	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	thought	_	think	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
19	to	_	to	TO	O	_	person	_	0	IGNORE	true
20	have	_	have	VB	O	_	person	_	0	IGNORE	true
21	known	_	know	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	13	MOD_s	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	been	_	be	VBN	O	_	person	_	0	IGNORE	true
24	assisting	_	assist	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	13	MOD_s	true
25	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[7@@s@@pursue-01, 5@@s@@very, 18@@s@@think-01, 21@@s@@know-02, 13@@p@@El, 6@@s@@hot-02, 2@@p@@still, 12@@p@@person, 24@@s@@assist-01, 12@@n@@_NAME_, 16@@p@@person, 16@@n@@_NAME_]
sentence=1	(His	(his	(His	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	conclusion	_	conclusion	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	conclude-01	()	6	APP_s	true
3	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
5	been	_	be	VBN	O	_	person	_	0	IGNORE	true
6	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	3	APP_s	true
7	on	_	on	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	fake	_	fake	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
10	mobile	_	mobile	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	biolab	_	biolab	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	plans	_	plan	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
13	foisted	_	foist	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_o	true
14	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_o2	true
17	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Chalabi	_name_	Chalabi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
20	associate	_	associate	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	23	MOD_s	true
21	"Curveball",	"curveball",	"Curveball",	''	O	_	include-91	_	0	IGNORE	true
22	which	_	which	WDT	O	_	have-org-role-91	_	0	IGNORE	true
23	Alibek	_name_	Alibek	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	divined	_	divine	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_o	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	be	_	be	VB	O	_	person	_	0	IGNORE	true
27	identical	_	identical	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
28	to	_	to	IN	O	_	person	_	0	IGNORE	true
29	Russian	_name_	russian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	31	MOD_mod	true
30	mobile	_	mobile	JJ	O	_	$LEMMA$	_	0	IGNORE	true
31	lab	_	lab	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
32	design)	_	design)	NNS	O	_	and	_	0	IGNORE	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@p@@person, 29@@c@@country, 23@@n@@_NAME_, 27@@s@@identical-01, 29@@n@@_NAME_, 31@@d@@lab, 13@@b@@foist-01, 24@@s@@divine-01, 16@@c@@country, 2@@d@@conclude-01, 20@@s@@associate, 3@@s@@possible-01, 12@@s@@plan-01, 19@@n@@_NAME_, 6@@s@@base-02, 2@@t@@thing, 16@@n@@_NAME_, 10@@p@@mobile, 9@@s@@fake-02, 23@@p@@person, 11@@d@@biolab]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	May_2001	_name_	2001	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
3	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	Zawahiri	_name_	Zawahiri	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
7	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	Egyptian_Islamic_Jihad	_name_	Jihad	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	6	APP_o2	true
10	abroad	_	abroad	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	establish	_	establish	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	that	_	that	IN	O	_	name	_	0	IGNORE	true
13	Zawahiri	_name_	Zawahiri	NNP	O	_	name	_	0	IGNORE	true
14	used	_	use	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
15	"school"	_	"school"	NNP	O	_	thing	_	0	IGNORE	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	code	_	code	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
20	for	_	for	IN	O	_	and	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	Egyptian	_name_	egyptian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
23	militant	_	militant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	islamists	_	islamist	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
25	in	_	in	IN	O	_	person	_	0	IGNORE	true
26	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
27	correspondence	_	correspondence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@d@@letter, 11@@s@@establish-01, 23@@p@@militant, 10@@b@@abroad, 24@@p@@islamist, 19@@d@@word, 14@@s@@use-01, 22@@n@@_NAME_, 5@@p@@person, 8@@o2@@organization, 9@@p@@person, 22@@c@@country, 18@@p@@code, 27@@d@@correspondence, 5@@n@@_NAME_, 9@@h@@have-org-role-91, 8@@n@@_NAME_, 2@@n@@_NUMBER_, 6@@b@@send-01, 9@@o@@member]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	send	_	send	VB	O	(t<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG2 (i2<o2>)  :ARG1 (i<o>)  :ARG0 (d<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	curves	_	curve	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
11	will	_	will	MD	O	_	i	_	0	IGNORE	true
12	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	revalue	_	revalue	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_poss	true
16	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	assets	_	asset	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	14	APP_o	true
18	for	_	for	IN	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	August	_name_	August	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	8	(mod())	22	MOD_mod	true
21	Board	board	Board	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	meeting	_	meeting	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	meet-03	(mod(), s())	2	MOD_mod	true
23	.	_	.	.	O	_	blood	_	0	IGNORE	true

nodealignment=[20@@explicitanon0@@8, 21@@d@@Board, 17@@m@@asset, 20@@d@@date-entity, 3@@d@@us, 5@@d@@list, 16@@p@@international, 1@@explicitanon0@@+, 22@@i@@meet-03, 8@@a@@curve, 12@@s@@need-01, 2@@explicitanon0@@imperative, 2@@t@@send-01, 10@@d@@you, 15@@d@@our, 14@@s@@revalue-01]
sentence=1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	quick	_	quick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
4	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	follow	_	follow	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-up-03	(mod(), s())	4	MOD_mod	true
7	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
8	on	_	on	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
13	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	MOD_o	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o2	true
15	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	13	MOD_mod	true
16	inviting	_	invite	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	speak	_	speak	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
20	at	_	at	IN	O	_	person	_	0	IGNORE	true
21	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	forthcoming	_	forthcoming	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	congress,	_	congress,	NN	O	_	mean-01	_	0	IGNORE	true
24	Risk	risk	risk	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	25	MOD_mod	true
25	2001	_name_	2001	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	19	MOD_mod	true
26	Australia,	_name_	australia,	CD	O	_	and	_	0	IGNORE	true
27	which	_	which	WDT	O	_	date-interval	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	taking	_	take	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
30	place	_	place	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	Sydney	_name_	Sydney	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	25	MOD_mod	true
33	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	20	_	20	CD	O	(d<root> / date-entity  :day (explicitanon2 / --LEX--))	_NUMBER_	()	35	APP_op1	true
35	&	_	&	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
36	21	_	21	CD	O	(d<root> / date-entity  :day (explicitanon2 / --LEX--))	_NUMBER_	()	35	APP_op2	true
37	August_2001	_name_	2001	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_DATE_	(mod())	25	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@invite-01, 36@@d@@date-entity, 14@@d@@you, 21@@d@@our, 4@@d@@message-01, 6@@i@@follow-up-03, 15@@n@@recent, 34@@explicitanon2@@_NUMBER_, 36@@explicitanon2@@_NUMBER_, 37@@explicitanon0@@_DATE_, 13@@b@@send-01, 25@@explicitanon2@@_NUMBER_, 32@@c@@city, 24@@a@@risk-01, 22@@n@@forthcoming, 35@@d@@&, 32@@n@@_NAME_, 19@@s@@speak-01, 3@@s@@quick-02, 25@@d@@date-entity, 1@@p@@just, 34@@d@@date-entity, 10@@d@@email, 12@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
3	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
4	interest	_	interest	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	4	APP_o	true
7	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	can	_	can	MD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	possible-01	(mod(), s())	4	MOD_mod	true
10	present	_	present	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_s	true
11	unique	_	unique	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	investment	_	investment	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	invest-01	(mod())	13	MOD_mod	true
13	opportunities	_	opportunity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
16	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
17	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	18	MOD_s	true
18	access	_	access	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
19	to	_	to	IN	O	_	-	_	0	IGNORE	true
20	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@d@@you, 20@@n@@now, 4@@o@@interest-01, 16@@explicitanon0@@-, 13@@d@@opportunity, 1@@d@@i, 6@@s@@meeting-02, 12@@p@@invest-01, 10@@s@@present-01, 17@@s@@have-03, 11@@p@@unique, 18@@s@@access-01, 9@@o@@possible-01]
sentence=1	Secondly,	secondly,	Secondly,	LS	O	_	and	_	0	IGNORE	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	out	_	out	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	0	ROOT	true
6	price	_	price	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
7	performers	_	performer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	perform-01	(s())	27	MOD_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_o	true
11	in	_	in	IN	O	_	person	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
14	job	_	job	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	group	_	group	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
16	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	performers	_	performer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	perform-01	(s())	7	MOD_s	true
22	respectively	_	respectively	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	respective	(mod())	21	MOD_mod	true
23	eg.	_	eg.	VBP	O	_	mean-01	_	0	IGNORE	true
24	Paul_Thomas,_Jason_Choate,	_name_	Choate,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
25	Todd_DeCook	_name_	DeCook	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
27	Peter_Makkai	_name_	Makkai	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_op2	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@a@@and, 27@@n@@_NAME_, 21@@s@@perform-01, 18@@s@@excellent-02, 5@@s@@out-06, 20@@s@@strong-02, 10@@s@@have-03, 25@@n@@_NAME_, 6@@s@@price-01, 7@@s@@perform-01, 13@@s@@same-01, 4@@p@@still, 2@@d@@he, 22@@p@@respective, 27@@p@@person, 15@@b@@group, 14@@p@@job, 9@@d@@you, 25@@p@@person]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	concept	_	concept	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	overtime	_	overtime	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	would	_	would	MD	O	_	person	_	0	IGNORE	true
8	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_op1	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	own	_	own	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	the	_	the	DT	O	_	include-01	_	0	IGNORE	true
15	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	artists	_	artist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_dom	true
18	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
20	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	depending	_	depend	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op2	true
22	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	find	_	find	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	21	MOD_mod	true
25	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@artist, 17@@a@@and, 13@@p@@all, 15@@s@@follow-01, 2@@r@@concept, 29@@s@@like-01, 10@@s@@own-01, 28@@s@@really, 11@@d@@one, 24@@s@@find-01, 20@@p@@all, 5@@p@@overtime, 25@@d@@something, 8@@s@@like-02, 21@@d@@depend-01, 6@@d@@i]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	kind	_	kind	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	7	MOD_mod	true
4	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	rank	_	rank	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	order	_	order	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	APP_s	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
11	stated	_	state	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
12	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	find	_	find	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
18	I	i	I	PRP	O	_	mean-01	_	0	IGNORE	true
19	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
20	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	will	_	will	MD	O	_	person	_	0	IGNORE	true
22	purchase	_	purchase	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[19@@s@@like-01, 22@@d@@purchase-01, 3@@s@@kind-of, 6@@p@@rank, 16@@d@@piece, 11@@s@@state-01, 10@@d@@i, 8@@s@@contrast-01, 7@@s@@order, 1@@d@@They, 14@@o@@find-01]
sentence=1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
3	way,	_	way,	NN	O	_	and	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	am	_	be	VBP	O	_	person	_	0	IGNORE	true
6	interested	_	interested	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	interest-01	(o(s()))	0	ROOT	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	re-looking	_	re-looke	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	at	_	at	IN	O	_	thing	_	0	IGNORE	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	Picasso	_name_	Picasso	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
12	(although	_	(although	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	have	_	have	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-03	(mod(), s(), o())	6	MOD_mod	true
15	2)	_	2)	CD	O	_	say-01	_	0	IGNORE	true
16	that	_	that	WDT	O	_	interrogative	_	0	IGNORE	true
17	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_poss	true
18	gallery	_	gallery	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	19	APP_s	true
19	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	14	APP_o	true
20	a_couple_of_years_ago	_name_	ago	RB	O	(d<root> / --LEX--)	_NAME_	()	19	APP_o	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@p@@_NAME_, 20@@d@@_NAME_, 18@@m@@gallery, 11@@n@@_NAME_, 4@@d@@i, 14@@t@@have-03, 13@@d@@we, 19@@s@@have-03, 6@@o@@interest-01, 11@@p@@person, 17@@d@@your, 8@@s@@re-looke-01]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	7	MOD_mod	true
2	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-15	(s())	7	APP_op1	true
3	as	_	as	IN	O	(t<root> / --LEX--  :manner-of (h<mod>))	cause-01	(mod())	7	MOD_mod	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	word	_	word	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	document	_	document	NN	O	(u<root> / --LEX--  :prep-as-of (f<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	make	_	make	VB	O	_	you	_	0	IGNORE	true
9	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	7	APP_op2	true
12	additions	_	addition	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	contribute-01	(s())	11	APP_op2	true
13	that	_	that	WDT	O	_	you	_	0	IGNORE	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
15	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	necessary	_	necessary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	3	MOD_s	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@s@@contribute-01, 9@@p@@any, 11@@a@@and, 16@@s@@need-01, 5@@p@@word, 7@@a@@and, 15@@s@@think-01, 1@@explicitanon0@@+, 6@@u@@document, 14@@d@@you, 2@@s@@leave-15, 10@@s@@change-01, 3@@t@@cause-01]
sentence=1	1.	_	1.	LS	O	_	multi-sentence	_	0	IGNORE	true
2	The	the	the	DT	O	_	and	_	0	IGNORE	true
3	pricing	_	pricing	NN	O	(d<root> / --LEX--)	price-01	()	10	APP_s	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
7	given	_	give	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
8	CRRA	_name_	CRRA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	7	APP_o2	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	13	APP_op1	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	FuelCell_Energy	_name_	Energy	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
14	would	_	would	MD	O	_	and	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	meaningful	_	meaningful	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	13	APP_op2	true
18	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	listing	_	list	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	17	MOD_mod	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	manufacturer	_	manufacturer	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	manufacture-01	()	19	APP_s	true
22	(i.e.,	_	(i.e.,	NN	O	_	-	_	0	IGNORE	true
23	ONSI	_name_	ONSI	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	true
24	would	_	would	MD	O	_	and	_	0	IGNORE	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	lot	_	lot	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	money)	_	money)	JJ	O	(d<root> / --LEX--)	more	()	13	APP_op3	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@c@@company, 28@@s@@more, 29@@d@@more, 18@@explicitanon0@@-, 8@@g@@government-organization, 17@@d@@meaningful-02, 27@@s@@lot, 15@@explicitanon0@@-, 3@@d@@price-01, 13@@a@@and, 23@@p@@_NAME_, 21@@p2@@person, 5@@d@@we, 19@@b@@list-01, 8@@n@@_NAME_, 10@@s@@specific-02, 21@@e2@@manufacture-01, 7@@b@@give-01, 12@@n@@_NAME_]
sentence=1	Is	is	be	VBZ	O	_	i	_	0	IGNORE	true
2	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Microwave	_name_	Microwave	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
7	Dan	_name_	Dan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_o2	true
8	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	expensive	_	expensive	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
10	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	9	MOD_mod	true

nodealignment=[10@@explicitanon0@@interrogative, 6@@b@@give-01, 9@@r@@expensive, 8@@s@@really, 7@@n@@_NAME_, 2@@p@@that, 5@@d@@you, 3@@d@@Microwave, 7@@p@@person]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	follow	_	follow	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-up-03	(o2(), s(), o())	2	APP_o	true
5	up	_	up	RP	O	_	thing	_	0	IGNORE	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
8	regarding	_	regard	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	creation	_	creation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	create-01	(s(), o())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	4	APP_o	true
12	approval	_	approval	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	approve-01	(s(), o())	11	APP_op2	true
13	of	_	of	IN	O	_	obligate-01	_	0	IGNORE	true
14	ISDA_Confirmations	_name_	Confirmations	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	for	_	for	IN	O	_	thing	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
18	equity	_	equity	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	trades	_	trade	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	I	i	I	PRP	O	_	1	_	0	IGNORE	true
22	understand	_	understand	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
23	Laurel	_name_	Laurel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
24	had	_	have	VBD	O	_	person	_	0	IGNORE	true
25	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	previously	_	previously	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	previous	(mod())	25	MOD_mod	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[23@@p@@person, 25@@s@@discuss-01, 7@@d@@you, 19@@d@@trade-01, 17@@s@@follow-01, 14@@d@@Confirmations, 22@@s@@understand-01, 28@@n@@previous, 18@@p@@equity, 11@@a@@and, 10@@s@@create-01, 12@@s@@approve-01, 4@@b@@follow-up-03, 2@@c@@want-01, 1@@d@@i, 23@@n@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	planning	_	plan	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	APP_s	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	on	_	on	IN	O	_	and	_	0	IGNORE	true
7	vacation	_	vacation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
8	anyway,	_	anyway,	NNS	O	_	and	_	0	IGNORE	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	APP_o	true
12	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	APP_s	true
13	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	accessibility	_	accessibility	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	Ft._Worth	_name_	Worth	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	had	_	have	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
24	otherwise	_	otherwise	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@d@@challenge-01, 3@@c@@plan-01, 14@@p@@accessibility, 13@@explicitanon0@@some, 23@@s@@have-03, 17@@c@@city, 12@@s@@have-03, 11@@s@@possible-01, 21@@explicitanon0@@-, 17@@n@@_NAME_, 7@@s@@vacation-01, 9@@s@@contrast-01, 24@@p@@otherwise, 1@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	planning	_	plan	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	APP_s	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	on	_	on	IN	O	_	and	_	0	IGNORE	true
7	vacation	_	vacation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
8	anyway,	_	anyway,	NNS	O	_	and	_	0	IGNORE	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	APP_o	true
12	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	APP_s	true
13	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	accessibility	_	accessibility	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	Ft._Worth	_name_	Worth	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	had	_	have	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
24	otherwise	_	otherwise	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@s@@vacation-01, 14@@p@@accessibility, 1@@d@@i, 9@@s@@contrast-01, 17@@n@@_NAME_, 21@@explicitanon0@@-, 13@@explicitanon0@@some, 24@@p@@otherwise, 17@@c@@city, 12@@s@@have-03, 15@@d@@challenge-01, 23@@s@@have-03, 3@@c@@plan-01, 11@@s@@possible-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	planning	_	plan	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	APP_s	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	on	_	on	IN	O	_	and	_	0	IGNORE	true
7	vacation	_	vacation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
8	anyway,	_	anyway,	NNS	O	_	and	_	0	IGNORE	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	APP_o	true
12	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	APP_s	true
13	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	accessibility	_	accessibility	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	Ft._Worth	_name_	Worth	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	had	_	have	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
24	otherwise	_	otherwise	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[23@@s@@have-03, 9@@s@@contrast-01, 17@@n@@_NAME_, 21@@explicitanon0@@-, 24@@p@@otherwise, 13@@explicitanon0@@some, 7@@s@@vacation-01, 17@@c@@city, 3@@c@@plan-01, 15@@d@@challenge-01, 1@@d@@i, 14@@p@@accessibility, 11@@s@@possible-01, 12@@s@@have-03]
sentence=1	Recently	recently	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	5	MOD_mod	true
2	Charles_Miller	_name_	Miller	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
4	David_Dewhurst	_name_	Dewhurst	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_op2	true
5	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
7	an	_	an	DT	O	_	1	_	0	IGNORE	true
8	invitation	_	invitation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	invite-01	(s())	5	APP_o	true
9	to	_	to	IN	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	reception	_	reception	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	they	_	they	PRP	O	_	person	_	0	IGNORE	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	hosting	_	host	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	on	_	on	IN	O	_	11:00	_	0	IGNORE	true
17	Wed.	wed.	Wed.	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	year	(mod())	15	MOD_mod	true
18	6/14	_	6/14	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
19	at	_	at	IN	O	_	11:00	_	0	IGNORE	true
20	5:00_PM	_name_	pm	NN	O	_	date-entity	_	0	IGNORE	true
21	to	_	to	TO	O	_	date-interval	_	0	IGNORE	true
22	be	_	be	VB	O	_	person	_	0	IGNORE	true
23	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	true
24	at	_	at	IN	O	_	thing	_	0	IGNORE	true
25	the_Houston_Petroleum_Club	_name_	Club	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@c@@city, 4@@n@@_NAME_, 11@@d@@reception, 2@@p@@person, 17@@explicitanon1@@year, 8@@s@@invite-01, 3@@a@@and, 1@@n@@recent, 25@@n@@_NAME_, 5@@b@@send-01, 6@@d@@you, 23@@s@@hold-04, 18@@n@@_NAME_, 4@@p@@person, 15@@s@@host-01, 2@@n@@_NAME_]
sentence=1	By	by	by	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	cause-01	(mod())	11	MOD_mod	true
2	return	_	return	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	MOD_s	true
3	email,	_name_	email,	NNS	O	_	and	_	0	IGNORE	true
4	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	5	MOD_mod	true
5	verify	_	verify	VB	O	(l<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (i<o>)  :ARG0 (y<s>))	$LEMMA$-01	(o(s()))	11	APP_op1	true
6	that	_	that	IN	O	_	you	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
8	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
9	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	let	_	let	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
13	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
15	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
16	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	email	_	email	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	address	_	address	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
21	that	_	that	WDT	O	_	i	_	0	IGNORE	true
22	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	prefer	_	prefer	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
24	us	_	us	PRP	O	_	$LEMMA$	_	11	IGNORE	true
25	to	_	to	TO	O	_	permit-01	_	0	IGNORE	true
26	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@let-01, 23@@s@@prefer-01, 1@@p@@cause-01, 19@@p@@email, 5@@l@@verify-01, 18@@p@@another, 13@@d@@us, 9@@p@@this, 8@@s@@receive-01, 2@@s@@return-02, 10@@d@@message, 5@@explicitanon0@@imperative, 20@@d@@address, 11@@a@@and, 26@@s@@use-01, 7@@d@@you, 4@@explicitanon0@@+, 14@@s@@know-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	0	ROOT	true
4	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
5	regarding	_	regard	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
7	status	_	status	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	comments	_	comment	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_poss	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	guaranty	_	guaranty	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	for	_	for	IN	O	_	thing	_	0	IGNORE	true
17	Pemex	_name_	Pemex	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	provided	_	provide	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	13	MOD_o	true
21	to	_	to	IN	O	_	name	_	0	IGNORE	true
22	Lucy_Ortiz	_name_	Ortiz	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_o2	true
23	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[15@@p@@guaranty, 22@@n@@_NAME_, 10@@s@@comment-01, 19@@d@@you, 9@@d@@our, 3@@s@@follow-up-03, 1@@d@@i, 7@@m@@status, 13@@p@@form, 17@@n@@_NAME_, 22@@p@@person, 20@@b@@provide-01]
sentence=1	Did	did	do	VBD	O	_	person	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	get	_	get	VB	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
4	a	_	a	DT	O	_	interrogative	_	0	IGNORE	true
5	chance	_	chance	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
7	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	9	MOD_mod	true
9	GTC's	gtc's	gtc'	NNS	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
10	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	ENA	_name_	ENA	NNP	O	(p2<root> / person  :name (n / --LEX--)  :beneficiary-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	you	_	you	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	forward	_	forward	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
16	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[15@@s@@forward-01, 17@@t@@way, 14@@s@@possible-01, 3@@explicitanon0@@get-01, 16@@p@@this, 11@@p2@@person, 7@@s@@find-01, 5@@c@@chance-02, 18@@explicitanon0@@interrogative, 2@@d@@you, 11@@n@@_NAME_, 8@@p@@that, 13@@s@@you, 9@@d@@_NAME_]
sentence=1	Given	given	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	thing	_	0	IGNORE	true
3	above,	_	above,	NNS	O	_	have-condition-91	_	0	IGNORE	true
4	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
6	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	1	MOD_mod	true
7	adequate	_	adequate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	protection	_	protection	NN	O	(l<root> / --LEX--  :ARG3 (b<s>))	protect-01	(s())	6	APP_o	true
9	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
12	ENRON	_name_	ENRON	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
13	(which	_	(which	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	covers	_	cover	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	services	_	service	NNS	O	(d<root> / --LEX--)	$LEMMA$-05	()	14	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	offer	_	offer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
20	on-line	_	on-line	RB	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	as	_	as	RB	O	_	and	_	0	IGNORE	true
22	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	as	_	as	IN	O	_	and	_	0	IGNORE	true
24	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
25	core	_	core	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	activities),	_	activities),	NNP	O	_	and	_	0	IGNORE	true
27	I'd	i'd	i'd	PRP	O	_	i	_	0	IGNORE	true
28	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
29	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	application	_	application	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	apply-01	(s())	39	APP_s	true
32	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
33	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
34	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	ENRON	enron	ENRON	NNP	O	_	thing	_	0	IGNORE	true
36	ONLINE	online	ONLINE	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
37	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
38	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	28	MOD_mod	true
39	unnecessary	_	unnecessary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	28	APP_o	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@l@@protect-01, 24@@d@@your, 6@@m@@have-03, 14@@s@@cover-01, 12@@n@@_NAME_, 25@@p@@core, 38@@p@@probable, 16@@d@@service-05, 30@@p@@another, 1@@s@@give-01, 36@@p@@ONLINE, 39@@s@@need-01, 28@@s@@say-01, 5@@d@@you, 19@@s@@offer-01, 31@@s@@apply-01, 11@@d@@word, 7@@p@@adequate, 34@@d@@word, 20@@d@@on-line]
sentence=1	Full	full	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	reconciliation	_	reconciliation	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	replace-01	(o2(), s(), o())	0	ROOT	true
3	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
4	contracts	_	contract	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	2	APP_s	true
5	within	_	within	IN	O	_	conform-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	OBSF	_name_	OBSF	NNP	O	(n2<root> / --LEX--  :name-of (g / government-organization  :location-of (h2<mod>)))	_NAME_	(mod())	4	MOD_mod	true
8	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	Barclays	barclays	Barclays	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
10	documentation	_	documentation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	2	APP_o	true
11	(	_	(	-LRB-	O	_	cause-01	_	0	IGNORE	true
12	thereby	_	thereby	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	13	MOD_s	true
13	substantiating	_	substantiate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
14	existence	_	existence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	exist-01	(s())	13	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	stock	_	stock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
20	option	_	option	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	opt-01	(s())	22	APP_s	true
21	to	_	to	TO	O	_	and	_	0	IGNORE	true
22	purchase	_	purchase	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
23	)	_	)	-RRB-	O	_	and	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o2	true
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	AS400_Barclays_accoun	_name_	accoun	NNP	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	24	APP_op2	true
27	t	_	t	NN	O	(d<root> / --LEX--)	_NAME_	()	24	APP_op1	true

nodealignment=[9@@c@@company, 20@@s@@opt-01, 27@@d@@_NAME_, 4@@d@@contract-02, 7@@n2@@_NAME_, 10@@s@@documentation, 7@@g@@government-organization, 26@@u@@url-entity, 18@@d@@we, 22@@s@@purchase-01, 14@@s@@exist-01, 12@@s@@cause-01, 13@@s@@substantiate-01, 26@@explicitanon0@@_NAME_, 9@@n@@_NAME_, 24@@a@@and, 1@@p@@full, 2@@b@@replace-01, 16@@d@@stock]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	send	_	send	VB	O	(g<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (b<o>)  :ARG2 (i<s>)  :ARG0 (y / you))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	excel	_	excel	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	spreadsheet	_	spreadsheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
8	depicts	_	depict	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	value	_	value	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
13	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	associated	_	associate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
15	with	_	with	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	heat	_	heat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	rate	_	rate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	spread	_	spread	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-02	(mod(), s())	20	MOD_mod	true
20	option	_	option	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@s@@see-01, 12@@d@@you, 10@@d@@value, 2@@g@@send-01, 1@@explicitanon0@@+, 6@@d@@spreadsheet, 2@@y@@you, 19@@i@@spread-02, 5@@n@@_NAME_, 17@@p@@heat, 18@@d@@rate, 14@@s@@associate-01, 20@@d@@option, 2@@explicitanon0@@imperative, 8@@s@@depict-01]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	send	_	send	VB	O	(g<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (b<o>)  :ARG2 (i<s>)  :ARG0 (y / you))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	fuel	_	fuel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	curve	_	curve	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
10	are	_	be	VBP	O	_	person	_	0	IGNORE	true
11	converting	_	convert	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	to	_	to	IN	O	_	thing	_	0	IGNORE	true
13	$/MWh	$/mwh	$/MWh	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	value	_	value	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
16	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
17	deal	_	deal	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_o	true
18	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	2	MOD_mod	true

nodealignment=[2@@g@@send-01, 5@@n@@current, 6@@p@@fuel, 15@@s@@value-01, 11@@s@@convert-01, 17@@d@@deal-01, 13@@d@@$/MWh, 1@@explicitanon0@@+, 18@@explicitanon0@@interrogative, 2@@explicitanon0@@imperative, 2@@y@@you, 9@@d@@you, 7@@d@@curve]
sentence=1	Article_6_of_the_Gallup_Compression_Services_Agreement	_name_	Agreement	NNP	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
2	(which	_	(which	.	O	_	$LEMMA$	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	am	_	be	VBP	O	_	person	_	0	IGNORE	true
5	sending	_	send	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	MOD_o	true
6	to	_	to	IN	O	_	and	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
8	separately)	_	separately)	VBP	O	_	and	_	0	IGNORE	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	ECS	_name_	ECS	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
11	obligates	_	obligate	VBZ	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
12	ECS	_name_	ECS	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	11	APP_o2	true
13	to	_	to	IN	O	_	company	_	0	IGNORE	true
14	"work	_	"work	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
15	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
16	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	faith	_	faith	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	CDEC"	_name_	CDEC"	NNP	O	_	_NAME_	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	establish	_	establish	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	14	MOD_mod	true
22	an	_	an	DT	O	_	1	_	0	IGNORE	true
23	automated	_	automate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	automate-01	(s())	24	MOD_s	true
24	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	would	_	would	MD	O	_	thing	_	0	IGNORE	true
27	automatically	_	automatically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	29	MOD_mod	true
28	have	_	have	VB	O	_	person	_	0	IGNORE	true
29	alerted	_	alert	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	24	MOD_s	true
30	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
31	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
32	peak	_	peak	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	loading	_	loading	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	34	MOD_mod	true
34	conditions	_	condition	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o2	true
35	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	CDEC's	cdec's	cdec's	JJ	O	_	_NAME_	_	0	IGNORE	true
37	system	_	system	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@good-02, 32@@p@@peak, 23@@s@@automate-01, 27@@t@@automatic, 5@@b@@send-01, 3@@d@@i, 1@@n@@_NAME_, 33@@p@@loading-01, 29@@b@@alert-01, 37@@b@@system, 14@@s@@"work-01, 12@@c@@company, 30@@d@@us, 17@@t@@faith, 34@@d@@condition, 11@@w@@obligate-01, 24@@d@@system, 21@@i@@establish-01, 1@@l@@law, 12@@n@@_NAME_, 10@@n@@_NAME_, 7@@d@@you]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	will	_	will	MD	O	_	person	_	0	IGNORE	true
3	fight	_	fight	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	with	_	with	IN	O	_	-	_	0	IGNORE	true
5	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
8	owes	_	owe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	$200k	_	$200k	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	James	_name_	James	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	mentions	_	mention	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
14	below	_	below	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
16	on	_	on	IN	O	_	and	_	0	IGNORE	true
17	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
18	failure	_	failure	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	fail-01	(s())	15	APP_o	true
19	to	_	to	IN	O	_	thing	_	0	IGNORE	true
20	"assist"	_	"assist"	``	O	_	-	_	0	IGNORE	true
21	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	managing	_	manage	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	cost	_	cost	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@We, 12@@p@@person, 12@@n@@_NAME_, 14@@b@@below, 8@@s@@owe-01, 13@@s@@mention-01, 18@@s@@fail-01, 10@@d@@$200k, 3@@t@@fight-01, 15@@s@@base-02, 25@@d@@cost-01, 23@@s@@manage-01]
sentence=1	Additional	additional	additional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	cost	_	cost	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
3	will	_	will	MD	O	_	thing	_	0	IGNORE	true
4	be	_	be	VB	O	_	monetary-quantity	_	0	IGNORE	true
5	incurred	_	incur	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	remainder	_	remainder	NN	O	(t<root> / --LEX--  :part-of (y<poss>)  :time-of (n<mod>))	$LEMMA$	(mod(), poss())	5	MOD_mod	true
9	of	_	of	IN	O	_	and	_	0	IGNORE	true
10	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_poss	true
11	year,	_	year,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	19	APP_s	true
14	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
16	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	review	_	review	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
20	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@t@@remainder, 17@@s@@possible-01, 20@@n@@yet, 1@@p@@additional, 13@@d@@i, 15@@explicitanon0@@-, 19@@s@@review-01, 10@@d@@this, 5@@s@@incur-01, 2@@d@@cost-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	chair	_	chair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
5	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	with	_	with	IN	O	_	thing	_	0	IGNORE	true
9	back	_	back	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	problems,	_	problems,	NNS	O	_	cause-01	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	9	MOD_o	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@chair, 7@@s@@help-01, 9@@d@@back, 5@@f@@design-01, 1@@p@@this, 2@@p@@particular, 13@@s@@have-03, 12@@d@@she]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	chair	_	chair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
5	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	with	_	with	IN	O	_	thing	_	0	IGNORE	true
9	back	_	back	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	problems,	_	problems,	NNS	O	_	cause-01	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	9	MOD_o	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@chair, 12@@d@@she, 7@@s@@help-01, 9@@d@@back, 5@@f@@design-01, 1@@p@@this, 2@@p@@particular, 13@@s@@have-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	a	_	a	DT	O	_	person	_	0	IGNORE	true
6	copy	_	copy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the_John_Sommer	_name_	Sommer	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	letter	_	letter	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_s	true
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	producers	_	producer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	produce-01	()	9	APP_s	true
12	dated	_	date	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	Jan_6	_name_	6	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	12	MOD_mod	true
14	that	_	that	IN	O	_	name	_	0	IGNORE	true
15	MKM's	mkm's	mkm's	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	spies	_	spy	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	17	APP_s	true
17	intercepted	_	intercept	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
18	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[1@@d@@i, 9@@s@@letter, 12@@s@@date-01, 13@@n@@_DATE_, 11@@p2@@person, 17@@s@@intercept-01, 15@@c@@country, 15@@n@@_NAME_, 3@@d@@you, 16@@p2@@person, 11@@e2@@produce-01, 16@@e2@@spy-01, 8@@n@@_NAME_, 6@@s@@copy-01, 4@@s@@get-01, 2@@s@@believe-01]
sentence=1	Let	let	let	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	me	_	I	PRP	O	(d<root> / --LEX--)	i	()	1	APP_s	true
3	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
4	if	_	if	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true
5	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	steps	_	step	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	3	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
12	would	_	would	MD	O	_	person	_	0	IGNORE	true
13	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	MOD_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@this, 1@@explicitanon0@@imperative, 4@@explicitanon0@@interrogative, 9@@r@@step, 2@@d@@i, 8@@s@@appropriate-02, 11@@d@@you, 1@@h@@let-01, 13@@s@@like-02, 15@@s@@see-01, 3@@s@@know-01]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	suggestion	_	suggestion	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	suggest-01	(s(), o())	0	ROOT	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	Global_Counterparty	_name_	Counterparty	NNP	O	(p<root> / political-movement  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	use	_	use	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
14	signed	_	sign	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_o	true
15	on	_	on	IN	O	_	company	_	0	IGNORE	true
16	the_EnronOnline_Password_Application	_name_	Application	NNP	O	(p<root> / publication  :name (n / --LEX--)  :location-of (a<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	--	_	--	:	O	(d<root> / --LEX--)	and	()	2	APP_s	true
18	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
19	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	understand-01	(s(), o())	17	MOD_s	true
20	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
21	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	EnronOnline	_name_	EnronOnline	NNP	O	_	$LEMMA$	_	0	IGNORE	true
24	team	_	team	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	returns	_	return	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	19	APP_o	true
26	inappropriate	_	inappropriate	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	appropriate-02	(s())	27	MOD_s	true
27	Applications	applications	application	NNS	O	(d<root> / --LEX--)	apply-01	()	25	APP_o	true
28	to	_	to	IN	O	_	company	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o2	true
31	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
32	they	_	they	PRP	O	_	person	_	0	IGNORE	true
33	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
34	correctly	_	correctly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	correct-01	(s())	35	MOD_s	true
35	completed	_	complete	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_op1	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@b@@return-02, 8@@s@@same-01, 17@@d@@and, 14@@s@@sign-02, 35@@d@@complete-01, 9@@d@@name-01, 24@@d@@team, 12@@d@@customer, 27@@d@@apply-01, 5@@p@@political-movement, 19@@s@@understand-01, 16@@n@@_NAME_, 30@@d@@customer, 6@@s@@use-01, 26@@n@@appropriate-02, 31@@w@@until, 16@@p@@publication, 5@@n@@_NAME_, 2@@s@@suggest-01, 26@@explicitanon0@@-, 34@@s@@correct-01]
sentence=1	Let	let	let	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	me	_	I	PRP	O	(d<root> / --LEX--)	i	()	1	APP_s	true
3	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
4	if	_	if	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true
5	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	steps	_	step	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	3	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
12	would	_	would	MD	O	_	person	_	0	IGNORE	true
13	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	MOD_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@i, 1@@explicitanon0@@imperative, 9@@r@@step, 8@@s@@appropriate-02, 11@@d@@you, 13@@s@@like-02, 15@@s@@see-01, 3@@s@@know-01, 5@@d@@this, 1@@h@@let-01, 4@@explicitanon0@@interrogative]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	review	_	review	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
3	the	_	the	DT	O	_	you	_	0	IGNORE	true
4	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	memo	_	memo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	verify	_	verify	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
8	that	_	that	IN	O	_	you	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
11	identified	_	identify	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	7	APP_o	true
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
18	are	_	be	VBP	O	_	relative-position	_	0	IGNORE	true
19	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	15	MOD_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	trading	_	trading	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	trade-01	(s())	15	MOD_s	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	Brazil	_name_	Brazil	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
24	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[2@@b@@review-01, 11@@b@@identify-01, 23@@c@@country, 17@@d@@you, 5@@d@@memo, 2@@y@@you, 23@@n@@_NAME_, 19@@s@@interest-01, 12@@p@@all, 21@@s@@trade-01, 9@@d@@i, 15@@d@@product, 4@@s@@attach-01, 7@@s@@verify-01, 2@@explicitanon0@@imperative, 1@@explicitanon0@@+]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
3	attempted	_	attempt	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	incorporate	_	incorporate	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_o	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	changes	_	change	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	Jim	_name_	Jim	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
10	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
11	incorporated	_	incorporate	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	7	MOD_o	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	15	MOD_s	true
15	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	agreement	_	agreement	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	agree-01	(s())	11	APP_o2	true
18	which	_	which	WDT	O	_	i	_	0	IGNORE	true
19	ENA	_name_	ENA	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
20	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
21	suggested	_	suggest	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_o	true
22	to	_	to	IN	O	_	thing	_	0	IGNORE	true
23	date	_	date	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	to-$LEMMA$	(mod())	17	MOD_mod	true
24	into	_	into	IN	O	_	-	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	short	_	short	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	27	MOD_s	true
27	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@d@@change-01, 16@@d@@power, 15@@p@@form, 5@@b@@incorporate-01, 17@@s@@agree-01, 27@@d@@form, 26@@s@@short-07, 14@@s@@long-03, 19@@p@@person, 19@@n@@_NAME_, 11@@b@@incorporate-01, 3@@c@@attempt-01, 21@@s@@suggest-01, 1@@d@@i, 9@@p@@person, 23@@n@@to-date, 9@@n@@_NAME_]
sentence=1	Does	does	do	VBZ	O	_	person	_	0	IGNORE	true
2	Attachment	attachment	Attachment	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	APP_s	true
3	A	a	a	NN	O	(n2<root> / --LEX--  :name-of (v2 / variable  :mod-of (t2<mod>)))	_N$FORM$ME_	(mod())	2	MOD_mod	true
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	Select	select	Select	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	EEI	eei	EEI	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
8	Master	master	Master	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
9	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	13	APP_op1	true
10	to	_	to	TO	O	_	you	_	0	IGNORE	true
11	be	_	be	VB	O	_	thing	_	0	IGNORE	true
12	updated	_	update	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	version	_	version	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_dom	true
17	that	_	that	WDT	O	_	interrogative	_	0	IGNORE	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
20	to	_	to	IN	O	_	and	_	0	IGNORE	true
21	me	_	I	PRP	O	_	i	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	version	_	version	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_op2	true
25	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	13	MOD_mod	true

nodealignment=[3@@n2@@_NAME_, 2@@s@@Attachment, 12@@s@@update-01, 18@@d@@you, 6@@s@@Select-01, 8@@d@@Master, 23@@n@@current, 13@@a@@or, 7@@p@@_NAME_, 25@@explicitanon0@@interrogative, 24@@r@@version, 9@@c@@need-01, 19@@s@@send-01, 16@@d@@version, 3@@v2@@variable]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
3	to	_	to	IN	O	_	and	_	0	IGNORE	true
4	Bob_Bruce	_name_	Bruce	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
5	this_morning	_name_	morning	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
7	we're	_	we're	NN	O	_	cause-01	_	0	IGNORE	true
8	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-16	(s(), o())	19	MOD_s	true
10	on	_	on	IN	O	_	and	_	0	IGNORE	true
11	the	_	the	DT	O	_	and	_	0	IGNORE	true
12	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	Schedule	_name_	schedule	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$	(mod(), s())	12	MOD_mod	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	ISDA,	_name_	ISDA,	NNP	O	(d<root> / --LEX--)	_NAME_	()	15	APP_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
20	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
22	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	minor	_	minor	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
24	credit/billing	_	credit/billing	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	25	APP_s	true
25	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	19	APP_op2	true
26	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
27	Paragraph_13	_name_	13	CD	O	(n2<root> / --LEX--  :name-of (i / incident  :mod-of (c<mod>)))	$LEMMA$	(mod())	25	MOD_mod	true
28	related	_	relate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	relate-01	(s())	19	APP_op3	true
29	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	timing	_	timing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	time-02	(s())	28	APP_s	true
32	of	_	of	IN	O	_	thing	_	0	IGNORE	true
33	transfer	_	transfer	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	31	APP_s	true
34	of	_	of	IN	O	_	thing	_	0	IGNORE	true
35	interest	_	interest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
36	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
37	collateral	_	collateral	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
38	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
39	Val	_name_	Val	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	41	APP_s	true
40	will	_	will	MD	O	_	thing	_	0	IGNORE	true
41	discuss	_	discuss	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	31	MOD_o	true
42	with	_	with	IN	O	_	-	_	0	IGNORE	true
43	Ed	_name_	Ed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	41	APP_o2	true
44	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
45	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	41	MOD_mod	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@language, 4@@n@@_NAME_, 45@@p@@as-well, 39@@p@@person, 35@@d@@interest, 43@@n@@_NAME_, 1@@d@@i, 4@@p@@person, 2@@s@@speak-01, 24@@d@@credit/billing-02, 27@@n2@@13, 15@@r@@schedule, 8@@p@@all, 33@@s@@transfer-01, 27@@i@@incident, 18@@d@@_NAME_, 23@@s@@minor-01, 39@@n@@_NAME_, 43@@p@@person, 31@@s@@time-02, 28@@s@@relate-01, 9@@s@@set-16, 19@@a@@and, 41@@b@@discuss-01, 37@@d@@collateral, 25@@s@@issue-02, 5@@n@@_NAME_]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
3	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	concern	_	concern	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
9	address	_	address	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_o	true
10	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[3@@p@@some, 9@@s@@address-02, 7@@d@@we, 10@@explicitanon0@@interrogative, 4@@s@@specific-02, 5@@d@@concern-01, 8@@s@@possible-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
3	think	_	think	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	34	MOD_mod	true
4	that	_	that	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
5	May_1	_name_	1	CD	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_dom	true
6	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	true
7	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
8	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_s	true
9	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
10	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
11	receiving	_	receive	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	the	_	the	DT	O	_	weapon	_	0	IGNORE	true
13	parts/materials	_	parts/material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	on	_	on	IN	O	_	well-09	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	timely	_	timely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
17	basis	_	basis	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
18	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
19	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
21	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	18	APP_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	vendors	_	vendor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	25	APP_s	true
24	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	34	MOD_o	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	us	_	us	PRP	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_o	true
29	of	_	of	IN	O	_	name	_	0	IGNORE	true
30	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
32	events,	_	events,	NNP	O	_	and	_	0	IGNORE	true
33	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	34	MOD_mod	true
34	let	_	let	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
35	me	_	I	PRP	O	_	i	_	0	IGNORE	true
36	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	34	APP_o	true
37	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[25@@s@@have-03, 11@@s@@receive-01, 13@@d@@parts/material, 24@@s@@possible-01, 33@@explicitanon0@@+, 31@@c@@company, 2@@d@@you, 34@@f@@let-01, 17@@t@@basis, 6@@s@@possible-01, 5@@p@@person, 30@@n@@recent, 4@@p@@that, 18@@s@@cause-01, 27@@y@@us, 16@@s@@timely-02, 28@@s@@cause-01, 8@@r@@difficult, 21@@d@@issue-02, 36@@s@@know-01, 9@@s@@cause-01, 31@@n@@_NAME_, 23@@p2@@person, 3@@m@@think-01, 23@@e2@@vendor, 5@@n@@_NAME_]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
3	think	_	think	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	34	MOD_mod	true
4	that	_	that	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
5	May_1	_name_	1	CD	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_dom	true
6	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	true
7	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
8	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_s	true
9	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
10	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
11	receiving	_	receive	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	the	_	the	DT	O	_	weapon	_	0	IGNORE	true
13	parts/materials	_	parts/material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	on	_	on	IN	O	_	well-09	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	timely	_	timely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
17	basis	_	basis	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
18	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
19	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
21	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	18	APP_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	vendors	_	vendor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	25	APP_s	true
24	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	34	MOD_o	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	us	_	us	PRP	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_o	true
29	of	_	of	IN	O	_	name	_	0	IGNORE	true
30	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
32	events,	_	events,	NNP	O	_	and	_	0	IGNORE	true
33	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	34	MOD_mod	true
34	let	_	let	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
35	me	_	I	PRP	O	_	i	_	0	IGNORE	true
36	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	34	APP_o	true
37	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[6@@s@@possible-01, 24@@s@@possible-01, 27@@y@@us, 5@@p@@person, 23@@e2@@vendor, 5@@n@@_NAME_, 23@@p2@@person, 8@@r@@difficult, 4@@p@@that, 36@@s@@know-01, 25@@s@@have-03, 17@@t@@basis, 11@@s@@receive-01, 30@@n@@recent, 13@@d@@parts/material, 31@@n@@_NAME_, 21@@d@@issue-02, 9@@s@@cause-01, 3@@m@@think-01, 33@@explicitanon0@@+, 31@@c@@company, 2@@d@@you, 34@@f@@let-01, 18@@s@@cause-01, 16@@s@@timely-02, 28@@s@@cause-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	made	_	make	VBD	O	_	obligate-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	choice	_	choice	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	choose-01	(s())	27	APP_snt1	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	-	_	0	IGNORE	true
8	mommy,	_	mommy,	NNS	O	_	and	_	0	IGNORE	true
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_snt2	true
12	a	_	a	DT	O	_	-	_	0	IGNORE	true
13	break	_	break	NN	O	(d<root> / --LEX--)	$LEMMA$-19	()	11	APP_s	true
14	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
15	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	move	_	move	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_op1	true
17	out,	_	out,	RB	O	_	and	_	0	IGNORE	true
18	thats	_	thats	VB	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	choice	_	choice	NN	O	(d<root> / --LEX--)	choose-01	()	24	APP_op1	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	madea	_name_	madea	VBP	O	_	$LEMMA$	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_snt3	true
25	that's	_	that's	DT	O	_	mean-01	_	0	IGNORE	true
26	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
27	.	_	.	.	O	(m<root> / --LEX--  :snt2 (s<snt2>)  :snt3 (c2<snt3>)  :snt1 (c<snt1>))	multi-sentence	(snt2(), snt1(), snt3())	0	ROOT	true

nodealignment=[11@@s@@get-01, 27@@m@@multi-sentence, 4@@s@@choose-01, 13@@d@@break-19, 1@@d@@You, 24@@a@@and, 10@@explicitanon0@@-, 16@@s@@move-01, 26@@d@@life, 15@@d@@they, 20@@d@@choose-01, 14@@w@@until]
sentence=1	Let	let	let	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	44	MOD_o	true
2	me	_	I	PRP	O	_	i	_	0	IGNORE	true
3	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_o	true
4	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
8	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	watched	_	watch	VBN	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	13	MOD_mod	true
12	TV	tv	tv	NN	O	(d<root> / --LEX--)	television	()	11	APP_o	true
13	recently,	_	recently,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	44	MOD_s	true
14	crossed	_	cross	VBD	O	(d<root> / --LEX--)	$LEMMA$-02	()	27	APP_op1	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
17	bridge,	_	bridge,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	flown	_	fly	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op2	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	airplane,	_	airplane,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
22	recieved	_	recieve	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op3	true
23	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
27	medicine,	_	medicine,	NNS	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	_NAME_	(op2(), op1(), op3())	44	APP_s	true
28	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
29	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
30	mathematics,	_	mathematics,	NNS	O	_	and	_	0	IGNORE	true
31	drove	_	drive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_op1	true
32	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
33	car,	_	car,	NN	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	44	MOD_s	true
34	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_op2	true
35	a	_	a	DT	O	_	contrast-01	_	0	IGNORE	true
36	cellular	_	cellular	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
37	phone,	_	phone,	NNS	O	_	and	_	0	IGNORE	true
38	etc.	_	etc.	FW	O	(p<root> / --LEX--  :mod-of (s<mod>))	et-cetera	(mod())	44	MOD_mod	true
39	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
40	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
42	somehow	_	somehow	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
43	directly	_	directly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	direct-02	(s())	44	MOD_s	true
44	reaped	_	reap	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
45	the	_	the	DT	O	_	he	_	0	IGNORE	true
46	rewards	_	reward	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_o	true
47	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
48	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	50	APP_s	true
49	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
50	returned	_	return	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	46	MOD_o	true
51	to	_	to	IN	O	_	and	_	0	IGNORE	true
52	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_o2	true
53	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@cross-02, 9@@d@@you, 5@@p@@this, 44@@s@@reap-01, 24@@d@@form, 11@@m@@watch-01, 48@@n@@_NAME_, 23@@p@@any, 36@@d@@cellular, 46@@d@@reward-01, 48@@g@@government-organization, 43@@s@@direct-02, 52@@d@@us, 6@@t@@way, 1@@s@@let-01, 22@@s@@recieve-01, 13@@s@@and, 29@@p@@any, 33@@a@@car,, 38@@p@@et-cetera, 34@@s@@use-01, 42@@t@@somehow, 28@@s@@do-02, 27@@a@@_NAME_, 50@@b@@return-01, 3@@s@@put-02, 16@@s@@modern-02, 18@@d@@fly-01, 12@@d@@television, 31@@s@@drive-01, 26@@s@@modern-02]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	involved	_	involve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	competition	_	competition	NN	O	(d<root> / --LEX--)	compete-02	()	4	APP_o	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	promises	_	promise	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	$5000	_	$5000	NNP	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	10	APP_o	true
13	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	10	MOD_mod	true
14	prize,	_	prize,	NNS	O	_	include-91	_	0	IGNORE	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
18	like	_	like	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
19	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
20	win	_	win	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
21	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
22	order	_	order	NN	O	_	cause-01	_	0	IGNORE	true
23	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
24	donate	_	donate	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	to	_	to	IN	O	_	monetary-quantity	_	0	IGNORE	true
27	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
28	benefit	_	benefit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	29	MOD_mod	true
29	fund	_	fund	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o	true
30	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	have	_	have	VBP	O	_	person	_	0	IGNORE	true
33	started	_	start	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@o@@ordinal-entity, 1@@p@@that, 18@@s@@like-02, 7@@s@@local-02, 24@@r2@@donate-01, 28@@p@@benefit-01, 12@@explicitanon0@@_NUMBER_, 33@@s@@start-01, 8@@d@@compete-02, 10@@s@@promise-01, 12@@m2@@monetary-quantity, 20@@s@@win-01, 4@@s@@involve-01, 29@@d@@fund-01, 2@@d@@band, 13@@explicitanon0@@1]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	sending	_	send	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
5	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	info	_	info	NN	O	(d<root> / --LEX--)	$LEMMA$rmation	()	3	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	I	i	I	PRP	O	_	member	_	0	IGNORE	true
9	have	_	have	VBP	O	_	person	_	0	IGNORE	true
10	passed	_	pass	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-14	(s())	6	MOD_s	true
11	along	_	along	RP	O	_	$LEMMA$	_	0	IGNORE	true
12	regarding	_	regard	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	effort	_	effort	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	win	_	win	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	cash	_	cash	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	fund	_	fund	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	raising	_	raising	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
23	benefit	_	benefit	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@d@@fund, 16@@s@@win-01, 18@@d@@cash, 23@@i@@benefit-01, 4@@d@@you, 1@@d@@i, 5@@explicitanon0@@some, 14@@r@@effort-01, 3@@b@@send-01, 10@@s@@pass-on-14, 6@@d@@information, 22@@s@@raising-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	winner	_	winner	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	win-01	(s())	7	APP_s	true
3	of	_	of	IN	O	_	person	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	competition	_	competition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	will	_	will	MD	O	_	thing	_	0	IGNORE	true
7	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	$5000,	_name_	$5000,	NNP	O	_	$LEMMA$-01	_	0	IGNORE	true
9	which	_	which	WDT	O	_	have-org-role-91	_	0	IGNORE	true
10	Beyond_Control	_name_	Control	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
11	hopes	_	hope	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	win	_	win	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_o	true
14	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
15	order	_	order	NN	O	_	and	_	0	IGNORE	true
16	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
17	donate	_	donate	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	13	MOD_mod	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	to	_	to	IN	O	_	and	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	Abby_Freeman	_name_	Freeman	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	fund	_	fund	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
23	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@s@@win-01, 5@@d@@competition, 10@@n@@_NAME_, 17@@r2@@donate-01, 4@@p@@this, 11@@s@@hope-01, 10@@c@@company, 13@@s@@win-01, 21@@n@@_NAME_, 22@@d@@fund-01, 7@@s@@receive-01]
sentence=1	Since	since	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
2	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	3	MOD_s	true
3	Hu	_name_	Hu	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	ordered	_	order	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	1	APP_op1	true
5	state-owned	_	state-owned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	own-01	(s())	7	MOD_s	true
6	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	firms	_	firm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	to	_	to	IN	O	_	company	_	0	IGNORE	true
9	"go	_	"go	DT	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_o2	true
10	abroad"	_	abroad"	NNS	O	_	and	_	0	IGNORE	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	ensure	_	ensure	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
13	supply,	_	supply,	CD	O	_	and	_	0	IGNORE	true
14	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	have	_	have	VBP	O	(d<root> / --LEX--)	person	()	16	APP_s	true
16	begun	_	begin	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
17	drilling	_	drill	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
18	for	_	for	IN	O	_	and	_	0	IGNORE	true
19	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
21	the_East_China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	17	MOD_mod	true
22	Sea,	sea,	sea,	NN	O	_	include-91	_	0	IGNORE	true
23	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	west	_	west	RB	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
25	of	_	of	IN	O	_	relative-position	_	0	IGNORE	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	line	_	line	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	Japan	_name_	Japan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	30	APP_s	true
30	regards	_	regard	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	27	MOD_o	true
31	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
32	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
33	border	_	border	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o2	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@i@@ensure-01, 23@@p@@just, 24@@b@@west, 27@@d@@line, 16@@c@@begin-01, 29@@n@@_NAME_, 7@@d@@firm, 3@@n@@_NAME_, 21@@n@@_NAME_, 33@@d@@border, 2@@h@@have-org-role-91, 21@@c@@country, 19@@d@@gas, 5@@s@@own-01, 3@@p@@person, 30@@b@@regard-01, 1@@w@@since, 2@@p2@@president, 29@@c@@country, 15@@d@@person, 9@@s@@"go-01, 6@@p@@oil, 17@@s@@drill-01, 4@@t@@order-01]
sentence=1	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
2	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
3	furious	_	furious	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
5	Japan	_name_	Japan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
7	outbid	_	outbid	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_s	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	in	_	in	IN	O	_	and	_	0	IGNORE	true
10	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
11	battle	_	battle	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_o	true
12	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
13	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	route	_	route	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	pipeline	_	pipeline	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_mod	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_s	true
21	intends	_	intend	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_o	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	build	_	build	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	MOD_o	true
24	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	the_Far_East	_name_	East	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	23	APP_o2	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@s@@intend-01, 23@@b@@build-01, 20@@n@@_NAME_, 5@@c@@country, 1@@c@@country, 18@@d@@pipeline, 3@@s@@furious, 25@@n2@@_NAME_, 25@@w@@world-region, 13@@s@@determine-01, 1@@n@@_NAME_, 11@@c@@battle-01, 7@@c@@outbid-01, 5@@n@@_NAME_, 15@@p@@route, 20@@c@@country]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	Samuel_Alito	_name_	Alito	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	believes	_	believe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
4	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	little-known	_	little-known	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	know-02	(s())	8	MOD_s	true
7	Constitutional	constitutional	constitutional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	constitution	(mod())	8	MOD_mod	true
8	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	-	_	-	HYPH	O	_	name	_	0	IGNORE	true
10	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	"Unitary	"unitary	"unitary	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	Executive	executive	Executive	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	Theory"	theory"	Theory"	NNP	O	_	and	_	0	IGNORE	true
15	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
16	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	24	APP_s	true
21	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	27	APP_op1	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
25	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the_Executive_Branch,	_name_	branch,	NN	O	_	mean-01	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
28	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the_Executive_Branch	_name_	Branch	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	33	MOD_s	true
30	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	27	APP_op2	true
31	be	_	be	VB	O	_	person	_	0	IGNORE	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	30	APP_s	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
37	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	Government	_name_	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	33	APP_s	true
40	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	36	MOD_s	true
41	does,	_name_	does,	VBD	O	_	mean-01	_	0	IGNORE	true
42	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	36	MOD_o	true
43	the	_	the	DT	O	_	and	_	0	IGNORE	true
44	functions	_	function	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	56	APP_op1	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	the_Independent_Agencies	_name_	Agencies	NNPS	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	44	APP_s	true
47	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
48	were	_	be	VBD	O	_	person	_	0	IGNORE	true
49	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	44	MOD_s	true
50	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
51	be	_	be	VB	O	_	person	_	0	IGNORE	true
52	free	_	free	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-04	(s())	49	APP_o	true
53	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
54	Presidential	presidential	Presidential	NNP	O	_	$LEMMA$	_	0	IGNORE	true
55	control,	_	control,	NNPS	O	_	and	_	0	IGNORE	true
56	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	42	APP_s	true
57	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
58	Military,	_name_	Military,	NNS	O	(d<root> / --LEX--)	have-03	()	1	APP_s	true
59	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
60	exists,	_	exists,	NNP	O	_	oppose-01	_	0	IGNORE	true
61	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
62	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
63	regulated,	_	regulated,	NNP	O	_	mean-01	_	0	IGNORE	true
64	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
65	which	_	which	WDT	O	_	i	_	0	IGNORE	true
66	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
67	funded	_	fund	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	58	MOD_o	true
68	by	_	by	IN	O	_	and	_	0	IGNORE	true
69	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	70	MOD_s	true
70	authority	_	authority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	67	APP_s	true
71	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	70	MOD_o	true
72	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
73	the	_	the	DT	O	_	person	_	0	IGNORE	true
74	Constitution	_name_	Constitution	NNP	O	(d<root> / --LEX--)	$REPL$	()	71	APP_s	true
75	to	_	to	IN	O	_	government-organization	_	0	IGNORE	true
76	Congress,	congress,	congress,	CD	O	_	mean-01	_	0	IGNORE	true
77	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	71	MOD_mod	true
78	to	_	to	IN	O	_	contrast-01	_	0	IGNORE	true
79	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
80	President	president	President	NNP	O	_	$LEMMA$	_	0	IGNORE	true
81	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@h@@have-org-role-91, 3@@s@@believe-01, 6@@s@@know-02, 46@@g@@government-organization, 67@@s@@fund-01, 77@@explicitanon0@@-, 52@@s@@free-04, 27@@a@@and, 70@@d@@authority, 58@@d@@have-03, 42@@s@@include-01, 20@@e@@President, 44@@s@@function-01, 49@@f@@design-01, 1@@s@@contrast-01, 39@@g@@government-organization, 8@@d@@theory, 33@@s@@charge-05, 29@@s@@_NAME_, 21@@s@@recommend-01, 10@@s@@call-01, 69@@s@@specific-02, 13@@d@@Executive, 74@@d@@_name_, 36@@d@@everything, 35@@p@@almost, 30@@s@@recommend-01, 39@@g2@@govern-01, 40@@s@@actual-02, 46@@n@@_NAME_, 2@@p@@person, 56@@o@@and, 20@@p@@person, 7@@p@@constitution, 24@@s@@control-01, 2@@n@@_NAME_, 17@@s@@say-01, 71@@s@@give-01, 12@@p@@"unitary, 23@@s@@complete-02]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	APP_op1	true
3	cat's	_	cat's	JJ	O	(d<root> / --LEX--)	_NAME_	()	2	APP_o	true
4	"Meowing"	"meowing"	"Meowing"	''	O	_	cause-01	_	0	IGNORE	true
5	for	_	for	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	vocals,	_	vocals,	NNS	O	_	cause-01	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_op2	true
11	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	12	MOD_s	true
12	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
13	yourself	_	yourself	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	those	_	those	DT	O	_	that	_	0	IGNORE	true
16	furnaces,	_	furnaces,	NNS	O	_	and	_	0	IGNORE	true
17	feeling	_	feel	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	12	APP_o	true
19	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	those	_	those	DT	O	_	that	_	0	IGNORE	true
21	terrible	_	terrible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
22	feelings	_	feeling	NNS	O	(d<root> / --LEX--)	feel-01	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
24	thoughts	_	thought	NNS	O	(d<root> / --LEX--)	think-01	()	23	APP_op2	true
25	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	27	MOD_mod	true
27	cats	_	cat	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
28	do	_	do	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
29	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	28	MOD_mod	true
30	they	_	they	PRP	O	_	person	_	0	IGNORE	true
31	die	_	die	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_op1	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@p@@this, 27@@p@@cat, 23@@a@@and, 21@@s@@terrible-01, 24@@d@@think-01, 28@@s@@do-02, 18@@a@@and, 1@@d@@It, 3@@d@@_NAME_, 31@@d@@die-01, 19@@s@@think-01, 22@@d@@feel-01, 11@@s@@real-04, 8@@a@@and, 12@@s@@find-01, 17@@s@@feel-01, 9@@d@@you, 2@@s@@have-03, 10@@s@@possible-01, 29@@w@@before]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	wants	_	want	VBZ	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	7	MOD_mod	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_o	true
6	article,	_	article,	NNS	O	_	say-01	_	0	IGNORE	true
7	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
8	me,	_	me,	NN	O	_	thing	_	0	IGNORE	true
9	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
15	article	_	article	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
16	which	_	which	WDT	O	_	name	_	0	IGNORE	true
17	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
18	meat-eater	_	meat-eater	NN	O	(d<root> / --LEX--)	_NAME_	()	20	APP_s	true
19	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
20	read	_	read	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	MOD_op1	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	sense	_	sense	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op2	true
24	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	own	_	own	JJ	O	_	person	_	0	IGNORE	true
26	hypocrisy	_	hypocrisy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
27	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@s@@complete-02, 22@@explicitanon0@@-, 17@@explicitanon0@@-, 9@@s@@cause-01, 7@@d@@email-01, 26@@d@@hypocrisy, 2@@d@@anyone, 3@@d@@want-01, 15@@d@@article, 13@@s@@very, 14@@s@@good-02, 19@@s@@possible-01, 20@@s@@read-01, 18@@d@@_NAME_, 21@@a@@and, 23@@s@@sense-01]
sentence=1	STEP	step	step	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
2	TWO:Now	two:now	TWO:Now	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	take	_	take	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	27	APP_op1	true
4	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
5	#1	_name_	#1	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	name	_	name	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	3	APP_o	true
7	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
12	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	above,	_	above,	NNS	O	_	and	_	0	IGNORE	true
14	move	_	move	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	27	MOD_s	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	names	_	name	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	up	_	up	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	(six	_	(six	JJR	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_o2	true
20	becomes	_	become	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op2	true
21	5,	_	5,	CD	O	_	mean-01	_	0	IGNORE	true
22	5	_	5	CD	O	_	_NUMBER_	_	27	IGNORE	true
23	becomes	_	become	VBZ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	27	APP_op2	true
24	4,	_name_	4,	CD	O	_	and	_	0	IGNORE	true
25	and	_	and	CC	O	(o<root> / --LEX--  :op3 (t2<op3>)  :op2 (b<op2>)  :op1 (l<op1>)  :example-of (t<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	27	MOD_mod	true
26	etc.)	_	etc.)	NNP	O	_	et-cetera	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
28	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	27	APP_op3	true
29	YOUR	your	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	NAME	name	name	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
31	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
32	number	_	number	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
33	6	_	6	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	28	MOD_mod	true
34	on	_	on	IN	O	_	thing	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	list	_	list	NN	O	_	$LEMMA$	_	0	IGNORE	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@p@@_NUMBER_, 17@@d@@name, 3@@b@@take-01, 2@@p@@TWO:Now, 5@@p@@_NAME_, 1@@p@@step, 25@@o@@and, 11@@d@@you, 32@@p@@number, 23@@s@@become-01, 28@@s@@add-02, 18@@a@@up, 30@@d@@name, 6@@t@@thing, 12@@s@@see-01, 19@@p@@person, 6@@a@@name-01, 20@@d@@become-01, 16@@p@@other, 27@@a@@and, 9@@d@@list, 14@@b@@move-01, 19@@n@@_NAME_]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	integrity,	_	integrity,	NNS	O	_	-	_	0	IGNORE	true
6	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	program	_	program	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
8	will	_	will	MD	O	_	thing	_	0	IGNORE	true
9	continue	_	continue	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	have	_	have	VBP	O	_	person	_	0	IGNORE	true
18	received	_	receive	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
19	will	_	will	MD	O	_	thing	_	0	IGNORE	true
20	come	_	come	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
21	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@money, 9@@s@@continue-01, 15@@explicitanon0@@many, 10@@a@@and, 14@@s@@so, 22@@d@@way, 7@@d@@program, 20@@g@@come-01, 2@@d@@you, 18@@s@@receive-01, 16@@d@@other]
sentence=1	Fill	fill	fill	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	in	_	in	IN	O	_	multi-sentence	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	subject,	_	subject,	NNS	O	_	and	_	0	IGNORE	true
5	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
6	will	_	will	MD	O	_	i	_	0	IGNORE	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	and	_	0	IGNORE	true
9	header	_	header	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_s	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	sees	_	see	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	they	_	they	PRP	O	_	person	_	0	IGNORE	true
15	scroll	_	scroll	VBP	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
16	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	and	_	0	IGNORE	true
18	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	postings	_	posting	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	a	_	a	DT	O	_	person	_	0	IGNORE	true
23	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
24	group,	_	group,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
25	click	_	click	VB	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	post	_	post	AFX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	28	MOD_mod	true
28	message	_	message	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	button	_	button	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@p@@message, 25@@s@@click-01, 29@@d@@button, 11@@d@@everyone, 23@@p@@particular, 9@@r@@header, 12@@s@@see-01, 1@@s@@fill-01, 5@@d@@this, 15@@p@@scroll-01, 20@@d@@posting, 18@@s@@list-01, 27@@p@@post-01]
sentence=1	Since	since	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	true
2	wolf	_	wolf	NN	O	(d<root> / --LEX--)	_NAME_	()	4	APP_poss	true
3	recovery,	_	recovery,	NNP	O	_	have-03	_	0	IGNORE	true
4	streamside	_	streamside	FW	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	7	MOD_mod	true
5	plants,	_	plants,	NNP	O	_	and	_	0	IGNORE	true
6	willows	_	willow	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
8	cottonwoods	_	cottonwood	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	provide	_	provide	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
10	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	critters	_	critter	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	--	_	--	:	O	_	and	_	0	IGNORE	true
15	beavers,	_	beavers,	NNS	O	_	cause-01	_	0	IGNORE	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	variety	_	variety	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	avian	_	avian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	species,	_	species,	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
22	berry-producing	_	berry-produce	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
23	shrubs	_	shrub	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
24	that	_	that	IN	O	_	product	_	0	IGNORE	true
25	bears	_	bear	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
26	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	true
27	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_o	true
28	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[18@@p@@variety, 7@@a@@and, 27@@s@@use-01, 10@@d@@food, 23@@g@@shrub, 22@@s@@berry-produce-01, 6@@d@@willow, 9@@s@@provide-01, 25@@d@@bear, 13@@i@@critter, 2@@d@@_NAME_, 4@@h@@streamside, 8@@d@@cottonwood, 26@@s@@possible-01, 17@@p@@whole, 1@@s@@cause-01, 12@@p@@other, 20@@p@@avian]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
3	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
5	giving	_	give	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	to	_	to	IN	O	_	and	_	0	IGNORE	true
7	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
8	to	_	to	TO	O	_	and	_	0	IGNORE	true
9	aid	_	aid	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
10	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	0	ROOT	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	seed	_	seed	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	America	_name_	America	NNP	O	_	_NAME_	_	0	IGNORE	true
19	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
20	sown	_	sow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
21	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	nations	_	nation	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[12@@p@@great, 25@@y@@nation, 7@@c@@country, 20@@s@@sow-01, 24@@p@@other, 16@@d@@seed, 9@@i@@aid-01, 5@@t@@give-01, 13@@s@@exemplify-01, 2@@d@@country, 22@@b@@year, 7@@n@@_NAME_]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
4	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	create	_	create	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_mod	true
13	for	_	for	IN	O	_	and	_	0	IGNORE	true
14	yourself	_	yourself	PRP	O	_	i	_	0	IGNORE	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@life, 3@@s@@have-03, 8@@s@@create-01, 2@@n@@now, 1@@d@@You, 10@@p@@kind, 17@@s@@want-01]
sentence=1	Lopez	_name_	Lopez	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
2	addressed	_	address	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	note	_	note	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	which	_	which	WDT	O	_	i	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_o	true
7	had	_	have	VBD	O	_	person	_	0	IGNORE	true
8	written,	_	written,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	sealed	_	seal	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	with	_	with	IN	O	_	i	_	0	IGNORE	true
12	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	sleeve-link,	_	sleeve-link,	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op2	true
16	it	_	it	PRP	O	_	i	_	0	IGNORE	true
17	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	hand	_	hand	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	15	APP_o	true
20	of	_	of	IN	O	_	person	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	servant,	_	servant,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
23	Jose	_name_	Jose	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_poss	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 19@@h@@hand, 6@@d@@i, 2@@s@@address-01, 23@@p@@person, 1@@p@@person, 14@@a@@and, 15@@s@@send-01, 9@@s@@seal-01, 4@@d@@note, 23@@n@@_NAME_]
sentence=1	The_early_days	_name_	day	NNS	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	5	APP_s	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the_days	_name_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	competition	_	competition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	compete-02	(s(), o())	16	APP_op1	true
6	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	Paul	_name_	Paul	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op2	true
8	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
9	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	wife	_	wife	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	12	MOD_s	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	John	_name_	John	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	48	APP_op2	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	16	APP_op2	true
14	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
15	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_op3	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	had	_	have	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	18	APP_o	true
21	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
22	compete	_	compete	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_s	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	ugly	_	ugly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
26	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	the	_	the	DT	O	_	and	_	0	IGNORE	true
28	leadership	_	leadership	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	lead-02	(s())	22	APP_s	true
29	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
32	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	front	_	front	NN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	in-$LEMMA$-of	(op1(), mod())	22	MOD_mod	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	wives	_	wife	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	33	APP_op1	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	MOD_op1	true
38	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	64	MOD_s	true
39	Yoko_Ono	_name_	Ono	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	40	APP_s	true
40	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	64	APP_op2	true
41	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
42	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	realize-01	(s())	40	APP_o	true
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
44	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
45	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	APP_op1	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	virility	_	virility	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
48	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	42	APP_s	true
49	repressed	_	repress	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	true
50	homosexuality,	_	homosexuality,	.	O	_	cause-01	_	0	IGNORE	true
51	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
52	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	64	APP_op1	true
53	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
54	beard	_	beard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_s	true
55	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
56	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_s	true
57	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	54	MOD_o	true
58	in	_	in	IN	O	_	i	_	0	IGNORE	true
59	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
60	"Let	"let	"Let	.	O	_	$LEMMA$	_	0	IGNORE	true
61	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
62	Be"	be"	be"	CD	O	_	shit	_	0	IGNORE	true
63	film	_	film	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	57	MOD_mod	true
64	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	37	APP_op2	true
65	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	64	APP_op3	true
66	to	_	to	TO	O	_	person	_	0	IGNORE	true
67	show	_	show	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	65	APP_s	true
68	pictures	_	picture	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	67	APP_s	true
69	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
70	naked	_	naked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	71	MOD_s	true
71	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	68	APP_s	true
72	in	_	in	IN	O	_	i	_	0	IGNORE	true
73	the	_	the	DT	O	_	person	_	0	IGNORE	true
74	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	71	MOD_s	true
75	film,	_	film,	NN	O	_	and	_	0	IGNORE	true
76	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_op4	true
77	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	78	MOD_mod	true
78	effort	_	effort	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	76	APP_s	true
79	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
80	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	78	MOD_s	true
81	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
82	be	_	be	VB	O	_	person	_	0	IGNORE	true
83	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	78	APP_s	true
84	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
85	a	_	a	DT	O	_	1	_	0	IGNORE	true
86	man...	_	man...	NFP	O	(d<root> / --LEX--)	_NAME_	()	83	APP_s	true
87	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[54@@d@@beard, 12@@p@@person, 57@@s@@see-01, 37@@a@@and, 10@@b@@wife, 48@@a@@and, 10@@h@@have-rel-role-91, 70@@s@@naked, 45@@s@@lack-01, 71@@d@@woman, 77@@p@@every, 80@@s@@possible-01, 18@@s@@know-01, 78@@s@@effort-01, 5@@s@@compete-02, 7@@p@@person, 36@@h@@have-rel-role-91, 22@@s@@compete-02, 28@@s@@lead-02, 20@@s@@obligate-01, 24@@p@@ugly, 39@@p@@person, 25@@n@@_NAME_, 49@@s@@repress-01, 31@@d@@band, 12@@n@@_NAME_, 42@@s@@realize-01, 63@@p@@film, 3@@d@@day, 56@@d@@we, 16@@a@@and, 1@@n2@@_NAME_, 76@@s@@do-02, 36@@p@@person, 15@@p@@person, 7@@n@@_NAME_, 39@@n@@_NAME_, 1@@n@@newspaper, 36@@f@@wife, 40@@s@@make-02, 83@@s@@see-01, 52@@s@@grow-03, 15@@h@@have-rel-role-91, 15@@f@@wife, 86@@d@@_NAME_, 68@@s@@picture, 67@@s@@show-01, 65@@s@@start-01, 38@@s@@have-04, 64@@a@@and, 47@@d@@virility, 33@@b@@in-front-of, 13@@a@@and, 74@@s@@same-01]
sentence=1	(He	(he	(He	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	traumas	_	trauma	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	previous	_	previous	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	girlfriend	_	girlfriend	NN	O	(h2<root> / have-rel-role-91  :ARG2 (f / --LEX--)  :ARG0 (h<s>))	$LEMMA$	(s())	10	MOD_s	true
10	Jane_Asher	_name_	Asher	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
11	had	_	have	VBD	O	_	person	_	0	IGNORE	true
12	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
13	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	when	_	when	WRB	O	_	i	_	0	IGNORE	true
15	she	_	she	PRP	O	_	he	_	0	IGNORE	true
16	made	_	make	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	12	MOD_mod	true
17	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
18	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	realize-01	(s())	16	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	manliness	_	manliness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
24	effeminate	_	effeminate	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
25	manners)	_	manners)	NNP	O	_	$LEMMA$	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@n@@already, 24@@d@@effeminate, 1@@d@@(He, 12@@s@@cause-01, 5@@d@@trauma, 16@@t@@make-02, 9@@f@@girlfriend, 23@@a@@and, 8@@n@@previous, 10@@n@@_NAME_, 21@@p@@little, 9@@h2@@have-rel-role-91, 22@@d@@manliness, 3@@s@@have-03, 10@@p@@person, 18@@s@@realize-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	12	APP_s	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	his	_	he	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
6	ego	_	ego	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	trip	_	trip	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	14	APP_s	true
8	of	_	of	IN	O	_	have-rel-role-91	_	0	IGNORE	true
9	lucky	_	lucky	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	11	MOD_s	true
11	musician	_	musician	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
14	face	_	face	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
15	anymore...	_	anymore...	NFP	O	_	-	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@he, 1@@d@@this, 10@@s@@bad-07, 7@@m@@trip, 9@@p@@lucky, 13@@explicitanon0@@-, 6@@p@@ego, 3@@r@@something, 11@@p@@musician, 14@@s@@face-01, 12@@s@@possible-01]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	37	MOD_o	true
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	trauma	_	trauma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
6	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
7	homosexual	_	homosexual	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	relation	_	relation	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	12	APP_s	true
9	with	_	with	IN	O	_	i	_	0	IGNORE	true
10	Brian_Epstein	_name_	Epstein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
11	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
12	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-12	(s(), o())	4	MOD_o	true
13	him,	_	him,	NNS	O	_	and	_	0	IGNORE	true
14	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	37	APP_op1	true
16	lyrics	_	lyric	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
18	as:	_	as:	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	"You	"you	"You	''	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	can	_	can	MD	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	possible-01	(mod(), s())	16	MOD_mod	true
21	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_s	true
22	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	collar	_	collar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	MOD_op1	true
25	a	_	a	DT	O	_	et-cetera	_	0	IGNORE	true
26	tie,	_	tie,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	37	APP_op2	true
27	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	28	MOD_mod	true
28	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
29	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
30	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
31	hide	_	hide	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
32	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
33	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
34	you're	_	you're	PRP$	O	_	have-concession-91	_	0	IGNORE	true
35	crippled	_	cripple	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	31	MOD_mod	true
36	inside"	_	inside"	NFP	O	_	$LEMMA$	_	0	IGNORE	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
38	gave	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
39	declarations	_	declaration	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	37	APP_op3	true
40	to	_	to	IN	O	_	and	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	"Rolling	"rolling	"rolling	CD	O	(s<root> / --LEX--  :ARG0 (y<s>))	_NAME_	(s())	44	MOD_s	true
43	Stone"	_name_	Stone"	NNP	O	_	and	_	0	IGNORE	true
44	magazine	_	magazine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_o	true
45	saying	_	say	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	MOD_s	true
46	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
47	"sometimes	_	"sometimes	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
48	he	_	he	PRP	O	(n<root> / --LEX--  :op1 (explicitanon1<op1>)  :name-of (p<mod>))	$LEMMA$	(op1(), mod())	37	MOD_mod	true
49	wore	_	wear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_o	true
50	Texan	_name_	texan	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	51	MOD_mod	true
51	boots	_	boot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
52	to	_	to	TO	O	_	name	_	0	IGNORE	true
53	feel	_	feel	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	49	MOD_mod	true
54	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
55	secure	_	secure	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	53	APP_s	true
56	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
57	a	_	a	DT	O	_	1	_	0	IGNORE	true
58	man"	_	man"	NN	O	_	$LEMMA$	_	0	IGNORE	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@d@@collar, 31@@s@@hide-01, 50@@w@@world-region, 54@@s@@more, 1@@s@@cause-01, 24@@a@@and, 7@@d@@homosexual, 27@@explicitanon0@@1, 16@@d@@lyric, 10@@n@@_NAME_, 29@@d@@you, 28@@d@@thing, 53@@i@@feel-01, 12@@s@@leave-12, 55@@d@@secure-02, 21@@s@@wear-01, 8@@s@@relate-01, 47@@p@@"sometimes, 30@@explicitanon0@@-, 10@@p@@person, 50@@n@@_NAME_, 45@@s@@say-01, 20@@r@@possible-01, 49@@s@@wear-01, 51@@d@@boot, 35@@s@@cripple-01, 42@@s@@_NAME_, 39@@s@@declaration-01, 37@@a@@and, 26@@s@@and, 4@@d@@trauma, 44@@d@@magazine, 48@@n@@he, 19@@d@@"You, 15@@s@@make-01]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
4	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	6	MOD_s	true
5	apprentice	_	apprentice	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	musicians	_	musician	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
7	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
8	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	Beatles	_name_	Beatles	NNPS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
12	the_Rolling_Stones	_name_	Stones	NNPS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_op2	true
13	achieved	_	achieve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o	true
14	such	_	such	PDT	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	a	_	a	DT	O	_	such	_	0	IGNORE	true
16	giant	_	giant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	fame	_	fame	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
19	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
20	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	24	MOD_s	true
23	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	musicians	_	musician	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
25	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	MOD_s	true
26	achieve,	_	achieve,	NNP	O	_	possible-01	_	0	IGNORE	true
27	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
28	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
29	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
30	forces	_	force	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	34	APP_dom	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	Satan	_name_	Satan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	30	APP_poss	true
33	were	_	be	VBD	O	_	person	_	0	IGNORE	true
34	behind	_	behind	IN	O	(m<root> / --LEX--  :domain (i<dom>)  :op1 (t<op1>))	$LEMMA$	(op1(), dom())	28	APP_s	true
35	everything,	_	everything,	NNP	O	_	thing	_	0	IGNORE	true
36	supporting	_	support	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	34	APP_op1	true
37	the	_	the	DT	O	_	he	_	0	IGNORE	true
38	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	36	APP_s	true
39	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[28@@s@@cause-01, 10@@n@@_NAME_, 12@@n@@_NAME_, 25@@s@@possible-01, 14@@s@@such, 17@@d@@fame, 6@@d@@musician, 4@@s@@bad-07, 13@@s@@achieve-01, 10@@p@@person, 5@@p@@apprentice-01, 32@@p@@person, 20@@p@@even, 36@@s@@support-01, 38@@d@@process-02, 19@@explicitanon0@@-, 32@@n@@_NAME_, 16@@p@@giant, 30@@m@@force, 22@@s@@real-04, 34@@m@@behind, 23@@p@@quality, 12@@p@@person, 11@@a@@and, 24@@p@@musician]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	mentally	_	mentally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	mental	(mod())	3	MOD_mod	true
3	ill	_	ill	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	humanity,	_	humanity,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	51	MOD_s	true
5	destroyed	_	destroy	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_op1	true
6	families,	_	families,	NNP	O	_	mean-01	_	0	IGNORE	true
7	twisted	_	twist	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	46	MOD_s	true
8	moral	_	moral	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	11	APP_s	true
9	values,	_	values,	NNS	O	_	cause-01	_	0	IGNORE	true
10	manifest	_	manifest	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
11	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_s	true
12	repressed	_	repressed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
13	homosexuality	_	homosexuality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
16	beings,	_	beings,	NNP	O	_	multi-sentence	_	0	IGNORE	true
17	anti	_	anti	JJ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	oppose-01	(mod())	51	MOD_mod	true
18	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
19	feminism	_	feminism	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
20	rebellion,	_	rebellion,	NNS	O	_	and	_	0	IGNORE	true
21	drug	_	drug	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	addiction,	_	addiction,	NNS	O	_	multi-sentence	_	0	IGNORE	true
23	corrupt	_	corrupt	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
24	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	society	(mod())	27	MOD_mod	true
25	outlines,	_	outlines,	NNS	O	_	multi-sentence	_	0	IGNORE	true
26	mad	_	mad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	27	MOD_s	true
27	youths	_	youth	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op3	true
28	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
29	direction,	_	direction,	.	O	_	-	_	0	IGNORE	true
30	non	_	non	JJ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
31	respect	_	respect	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	43	APP_op4	true
32	to	_	to	IN	O	_	and	_	0	IGNORE	true
33	hierarchies,	_	hierarchies,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
34	convulsed	_	convulsed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	42	MOD_s	true
35	nations,	_	nations,	NNP	O	_	-	_	0	IGNORE	true
36	misanthropy,	_	misanthropy,	NNP	O	_	and	_	0	IGNORE	true
37	misogyny,	_	misogyny,	NNP	O	_	-	_	0	IGNORE	true
38	paedophilia,	_	paedophilia,	NNP	O	_	-	_	0	IGNORE	true
39	irrational	_	irrational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	rational	(mod())	42	MOD_mod	true
40	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
41	feeble	_	feeble	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	lasciviousness	_	lasciviousness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op6	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op5 (p<op5>)  :op3 (t<op3>)  :op2 (w<op2>)  :op4 (e<op4>)  :op6 (s<op6>)  :op1 (i<op1>))	$LEMMA$	(op2(), op1(), op4(), op3(), op6(), op5())	51	APP_o	true
44	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
45	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	type	_	type	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op5	true
47	of	_	of	IN	O	_	affect-01	_	0	IGNORE	true
48	existent	_	existent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
49	aberrations,	_	aberrations,	NNS	O	_	et-cetera	_	0	IGNORE	true
50	are	_	be	VBP	O	_	person	_	0	IGNORE	true
51	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
52	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
53	the	_	the	DT	O	_	and	_	0	IGNORE	true
54	vast	_	vast	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
55	manoeuvre	_	manoeuvre	NN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_s	true
56	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
57	Satan	_name_	Satan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	58	APP_s	true
58	executed	_	execute	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	55	MOD_o	true
59	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
60	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
61	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	62	MOD_mod	true
62	marionettes	_	marionette	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	58	MOD_mod	true
63	the	_	the	DT	O	_	person	_	0	IGNORE	true
64	Beatles	_name_	Beatles	NNPS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	65	APP_op1	true
65	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	58	MOD_mod	true
66	the	_	the	DT	O	_	person	_	0	IGNORE	true
67	Rolling	_name_	rolling	NN	O	(d<root> / --LEX--)	$LEMMA$	()	65	APP_op2	true
68	Stones,	_name_	stones,	NN	O	_	$LEMMA$	_	0	IGNORE	true
69	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
70	the_Devil's_Island	_name_	Island	NNP	O	(n2<root> / --LEX--  :name-of (i / island  :source-of (f<mod>)))	_NAME_	(mod())	65	MOD_mod	true
71	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@manifest-01, 58@@s@@execute-02, 39@@p@@rational, 1@@p@@this, 3@@s@@ill-01, 4@@s@@mean-01, 42@@d@@lasciviousness, 41@@p@@feeble, 15@@p@@human, 51@@s@@cause-01, 64@@p@@person, 43@@a@@and, 5@@s@@destroy-01, 34@@s@@convulsed-01, 30@@explicitanon0@@-, 67@@d@@rolling, 24@@p@@society, 45@@p@@other, 2@@p@@mental, 57@@p@@person, 23@@s@@corrupt-01, 21@@p@@drug, 70@@i@@island, 61@@p@@main, 12@@s@@repressed-01, 64@@n@@_NAME_, 18@@s@@natural-03, 13@@d@@homosexuality, 65@@a@@and, 7@@s@@twist-02, 19@@p@@feminism, 57@@n@@_NAME_, 26@@s@@mad, 62@@m@@marionette, 27@@d@@youth, 31@@d@@respect-01, 54@@p@@vast, 48@@p@@existent, 28@@explicitanon0@@-, 44@@p@@all, 17@@explicitanon0@@oppose-01, 70@@n2@@_NAME_, 55@@d@@manoeuvre, 46@@d@@type, 11@@a@@or, 8@@d@@moral-02]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	navy	_	navy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	Iran	_name_	Iran	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	puts	_	put	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_o	true
8	to	_	to	IN	O	_	you	_	0	IGNORE	true
9	sea	_	sea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	capable	_	capable	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	16	APP_op1	true
12	enough	_	enough	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	harass	_	harass	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
15	shipping,	_	shipping,	NNS	O	_	and	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	cases	_	case	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	33	APP_s	true
19	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
20	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	boat	_	boat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	operations	_	operation	NNS	O	(d<root> / --LEX--)	operate-01	()	18	APP_s	true
23	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	well	_	well	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	heads	_	head	NNS	O	(p<root> / --LEX--  :prep-against-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Gulf	_name_	Gulf	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	26	MOD_mod	true
30	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
33	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	16	APP_op2	true
34	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	clear	_	clear	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	33	APP_o	true
36	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
37	asymmetrical	_	asymmetrical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	tactics	_	tactic	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	41	APP_s	true
39	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
40	the_Iranian_Navy	_name_	Navy	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	38	APP_poss	true
41	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	APP_s	true
42	be	_	be	VB	O	_	person	_	0	IGNORE	true
43	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
44	effective.	_	effective.	NN	O	_	$LEMMA$	_	0	IGNORE	true
45	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@s@@harass-01, 18@@s@@case-04, 31@@p@@that, 17@@explicitanon0@@several, 7@@b@@put-01, 16@@a@@and, 40@@n@@_NAME_, 3@@p@@small, 36@@p@@small, 11@@o@@capable-01, 20@@p@@small, 25@@p@@well, 21@@p@@boat, 41@@s@@possible-01, 1@@p@@even, 26@@p@@head, 12@@s@@enough, 24@@p@@oil, 32@@n@@period, 43@@s@@quite, 6@@n@@_NAME_, 33@@s@@make-02, 40@@m@@military, 9@@d@@sea, 4@@d@@navy, 6@@c@@country, 29@@b@@_NAME_, 38@@m@@tactic, 22@@d@@operate-01, 35@@s@@clear-06, 37@@p@@asymmetrical]
sentence=1	100	_	100	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	6	MOD_mod	true
6	decisions	_	decision	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	decide-01	()	3	APP_mod	true
7	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
8	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
9	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	decided	_	decide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
11	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
12	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	16	APP_s	true
15	to	_	to	TO	O	_	-	_	0	IGNORE	true
16	ignore	_	ignore	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	APP_o	true
17	indefinitely	_	indefinitely	RB	O	(b<root> / --LEX--  :duration-of (e<mod>))	indefinite	(mod())	16	MOD_mod	true
18	.	_	.	.	O	_	you	_	0	IGNORE	true

nodealignment=[14@@g2@@govern-01, 9@@n@@then, 1@@explicitanon0@@_NUMBER_, 5@@p@@that, 3@@explicitanon0@@percentage, 16@@s@@ignore-01, 8@@p@@person, 6@@d@@decide-01, 12@@s@@allow-01, 17@@b@@indefinite, 6@@t@@thing, 10@@s@@decide-01, 14@@g@@government-organization, 8@@n@@_NAME_]
sentence=1	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	days	_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	that	_	that	WDT	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Pentagon	_name_	Pentagon	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	spent	_	spend	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o2(s()), o())	5	MOD_o	true
10	investigating	_	investigate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o2	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	soldier	_	soldier	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	who	_	who	WP	O	_	person	_	0	IGNORE	true
14	had	_	have	VBD	O	_	person	_	0	IGNORE	true
15	called	_	call	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	15	APP_o	true
18	"a	_	"a	NNP	O	_	person	_	0	IGNORE	true
19	joke"	_	joke"	NFP	O	_	person	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	letter	_	letter	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	APP_o2	true
23	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	editor	_	editor	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	22	APP_s	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	a	_	a	DT	O	_	person	_	0	IGNORE	true
28	Newspaper	newspaper	newspaper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@soldier, 25@@p@@person, 15@@b@@call-01, 17@@h@@have-org-role-91, 1@@explicitanon0@@_NUMBER_, 22@@s@@letter, 17@@e@@president, 28@@d@@newspaper, 5@@d@@day, 17@@p@@person, 25@@h@@have-org-role-91, 8@@g@@government-organization, 3@@explicitanon0@@number, 9@@i@@spend-02, 10@@s@@investigate-01, 25@@o@@editor, 8@@n@@_NAME_]
sentence=1	2	_	2	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Nations	nations	Nations	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	George_Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_op2	true
8	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
9	attacked	_	attack	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_mod	true
11	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-over-12	(s())	5	MOD_s	true
12	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	since	_	since	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_op1	true
14	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op1	true
15	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@p@@person, 3@@explicitanon0@@Number, 10@@a@@and, 16@@d@@office, 14@@s@@come-01, 9@@s@@attack-01, 11@@s@@take-over-12, 5@@p@@Nations, 7@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 13@@o@@since]
sentence=1	43	_	43	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	_NUMBER_	()	4	APP_o2	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	APP_s	true
4	of	_	of	IN	O	(t<root> / thing  :ARG1-of (i / --LEX--  :ARG3 (o2<o2>)  :ARG2 (p2<s>)))	include-91	(o2(), s())	3	MOD_s	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	world's	_	world's	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	0	ROOT	true
8	military	_	military	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	spending	_	spending	NN	O	(p<root> / --LEX--  :ARG4 (i<s>))	spend-01	(s())	3	APP_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	spends	_	spend	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_o	true
14	on	_	on	IN	O	_	multiple	_	0	IGNORE	true
15	defence	_	defence	NN	O	(d<root> / --LEX--)	defend-01	()	13	APP_o2	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@d@@military, 12@@c@@country, 15@@d@@defend-01, 4@@i@@include-91, 12@@n@@_NAME_, 6@@p@@entire, 1@@p@@percentage-entity, 7@@s@@include-91, 9@@p@@spend-01, 3@@explicitanon0@@percentage, 4@@t@@thing, 1@@explicitanon1@@_NUMBER_, 13@@t@@spend-01]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	coffins	_	coffin	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	dead	_	dead	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	die-01	(s())	8	MOD_s	true
8	soldiers	_	soldier	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	returning	_	return	VBG	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	15	MOD_mod	true
14	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	3	MOD_s	true
15	has	_	have	VBZ	O	(d<root> / --LEX--)	government-organization	()	3	APP_mod	true
16	permitted	_	permit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	photographed	_	photograph	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 19@@s@@photograph-01, 5@@p@@coffin, 7@@s@@die-01, 13@@n@@_NAME_, 14@@s@@administrate-01, 13@@p@@person, 15@@d@@government-organization, 16@@s@@permit-01, 3@@explicitanon0@@number, 10@@d@@home, 9@@g@@return-01, 8@@g@@soldier]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
2	-	_	-	:	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	memorial	_	memorial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	services	_	service	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
7	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	returned	_	return	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	dead	_	dead	JJ	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
13	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
14	attended	_	attend	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
15	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
16	the	_	the	DT	O	_	be-temporally-at-91	_	0	IGNORE	true
17	beginning	_	beginning	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	begin-01	(s())	15	APP_op1	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[9@@s@@return-02, 5@@p@@memorial, 17@@s@@begin-01, 10@@a@@dead, 12@@p@@person, 14@@s@@attend-01, 6@@d@@service, 3@@explicitanon0@@number, 15@@w@@since, 20@@d@@war, 1@@explicitanon0@@_NUMBER_, 12@@n@@_NAME_, 2@@p@@-]
sentence=1	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	fellow	_	fellow	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	3	APP_mod	true
7	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	Yale	_name_	Yale	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
10	secret	_	secret	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
12	Skull_and_Bones	_name_	Bones	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
13	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
15	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
16	named	_	name	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	MOD_o	true
17	to	_	to	IN	O	_	and	_	0	IGNORE	true
18	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	positions	_	position	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o2	true
20	(including	_	(including	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
21	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	3	MOD_mod	true
22	Associate	associate	Associate	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	23	MOD_mod	true
23	Attorney	attorney	Attorney	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	21	MOD_s	true
24	General	general	General	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	23	MOD_mod	true
25	Robert_McCallum_Jr.	_name_	Jr.	NNP	O	_	_NAME_	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	MOD_op1	true
27	SEC	_name_	SEC	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
28	chief	_	chief	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	26	APP_op2	true
29	Bill_Donaldson)	_name_	Donaldson)	NNP	O	_	have-org-role-91	_	0	IGNORE	true
30	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[28@@h@@have-org-role-91, 14@@n@@_NAME_, 18@@p@@important, 23@@h@@have-org-role-91, 1@@explicitanon0@@_NUMBER_, 6@@p@@person, 23@@p2@@attorney, 26@@a@@and, 19@@d@@position, 16@@b@@name-01, 5@@p@@fellow, 3@@explicitanon0@@number, 21@@p@@person, 22@@p@@associate, 24@@p@@general, 9@@n@@_NAME_, 27@@n@@_NAME_, 10@@p@@secret, 6@@o@@member, 12@@n@@_NAME_, 14@@p@@person, 28@@p2@@chief, 20@@s@@(including-01, 27@@o2@@organization, 6@@h@@have-org-role-91, 11@@d@@society]
sentence=1	35m	_name_	35m	LS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	9	MOD_s	true
3	Number	number	Number	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	that	_	that	IN	O	_	name	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	9	APP_s	true
9	defines	_	define	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
10	as	_	as	IN	O	_	person	_	0	IGNORE	true
11	"food	_	"food	XX	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
12	insecure,"	_	insecure,"	NNP	O	_	and	_	0	IGNORE	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	words,	_	words,	NNS	O	_	contrast-01	_	0	IGNORE	true
16	hungry	_	hungry	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	hunger-01	(s())	9	MOD_s	true
17	.	_	.	.	O	_	be-located-at-91	_	0	IGNORE	true

nodealignment=[2@@s@@-, 11@@d@@"food, 5@@c@@country, 14@@p@@other, 8@@g@@government-organization, 16@@s@@hunger-01, 8@@g2@@govern-01, 5@@n@@_NAME_, 3@@d@@Number, 9@@b@@define-01, 1@@p@@_NAME_]
sentence=1	30	_	30	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	22	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Length	length	length	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	long-03	(s())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	in	_	in	IN	O	_	after	_	0	IGNORE	true
7	months	_name_	month	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	8	MOD_mod	true
8	between	_	between	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
9	Enron's	_name_	Enron's	NNP	O	_	_NAME_	_	0	IGNORE	true
10	collapse	_	collapse	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_op1	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	Lay	lay	Lay	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	(whom	_	(whom	-LRB-	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	16	APP_s	true
16	called	_	call	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	12	MOD_o	true
17	"Kenny	"kenny	"kenny	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
18	Boy")	boy")	Boy")	NNS	O	_	and	_	0	IGNORE	true
19	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
20	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
21	being	_	be	VBG	O	_	person	_	0	IGNORE	true
22	charged	_	charge	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	16	APP_o2	true
23	with	_	with	IN	O	_	i	_	0	IGNORE	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	crime	_	crime	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	22	APP_o	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@n@@(whom, 7@@m@@month, 1@@explicitanon0@@_NUMBER_, 3@@s@@long-03, 17@@p@@_NAME_, 7@@m2@@multiple, 16@@t@@call-01, 5@@d@@time, 19@@p@@still, 15@@e@@President, 15@@p@@person, 15@@h@@have-org-role-91, 8@@w@@between, 10@@d@@collapse-01, 12@@p@@Lay, 20@@explicitanon0@@-, 7@@t2@@temporal-quantity, 25@@d@@crime-02, 22@@s@@charge-05]
sentence=1	$200m_-_Amount	_name_	amount	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	0	ROOT	true
2	that	_	that	WDT	O	_	name	_	0	IGNORE	true
3	the	_	the	DT	O	_	name	_	0	IGNORE	true
4	Bush-Cheney	_name_	Bush-Cheney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	2004	_	2004	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
6	campaign	_	campaign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_s	true
7	expects	_	expect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
8	to	_	to	TO	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	1	MOD_mod	true
9	raise	_	raise	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
10	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
11	November_2004	_name_	2004	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	2013	()	10	APP_op1	true
12	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[9@@s@@raise-02, 4@@p@@person, 1@@n@@_NAME_, 11@@d@@date-entity, 1@@p@@person, 4@@n@@_NAME_, 8@@p@@person, 5@@explicitanon2@@_NUMBER_, 10@@w@@by, 11@@explicitanon0@@2013, 7@@s@@expect-01, 6@@s@@campaign-01, 5@@d@@date-entity]
sentence=1	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
2	name	_	name	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	5	MOD_poss	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	Josalyn_Leainne_Creek	_name_	Creek	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op2	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	MOD_op1	true
6	i'm	_	i'm	NNP	O	_	year	_	40	IGNORE	true
7	19_years_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	10	MOD_mod	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	MOD_op1	true
9	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
10	graduated	_	graduate	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	APP_op2	true
11	from	_	from	IN	O	_	have-rel-role-91	_	0	IGNORE	true
12	high	_	high	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	May_adn_of_this_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
15	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	i	_	i	PRP	O	_	1	_	0	IGNORE	true
17	love	_	love	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op3	true
18	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	40	MOD_op1	true
20	i'm	_	i'm	NNS	O	_	and	_	0	IGNORE	true
21	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
22	at	_	at	IN	O	_	and	_	0	IGNORE	true
23	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	40	MOD_o	true
27	drama	_	drama	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
30	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	job	_	job	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	26	MOD_mod	true
32	which	_	which	WDT	O	_	i	_	0	IGNORE	true
33	was	_	be	VBD	O	_	mean-01	_	0	IGNORE	true
34	mcallister's	_	mcallister's	CD	O	_	$LEMMA$	_	0	IGNORE	true
35	deli	_	deli	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_poss	true
36	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
37	i',	_	i',	NN	O	_	person	_	0	IGNORE	true
38	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
39	mormon	_	mormon	NN	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	43	MOD_mod	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
41	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	hvae	_	hvae	VBP	O	_	$LEMMA$	_	43	IGNORE	true
43	changed	_	change	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	71	APP_op2	true
44	to	_	to	TO	O	_	thing	_	0	IGNORE	true
45	be	_	be	VB	O	_	person	_	0	IGNORE	true
46	a	_	a	DT	O	_	1	_	0	IGNORE	true
47	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	48	MOD_s	true
48	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
49	that	_	that	IN	O	_	more	_	0	IGNORE	true
50	pwople	_	pwople	NN	O	(d<root> / --LEX--)	_NAME_	()	52	APP_s	true
51	are	_	be	VBP	O	_	person	_	40	IGNORE	true
52	wanting	_	want	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	48	MOD_o	true
53	to	_	to	IN	O	_	thing	_	0	IGNORE	true
54	hirier	_	hirier	NN	O	_	$LEMMA$-01	_	48	IGNORE	true
55	and	_	and	CC	O	_	$LEMMA$	_	40	IGNORE	true
56	i'm	_	i'm	NNP	O	_	cause-01	_	0	IGNORE	true
57	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	40	MOD_s	true
58	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
59	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	57	APP_o	true
60	whenever	_	whenever	WRB	O	_	$LEMMA$	_	0	IGNORE	true
61	you	_	you	PRP	O	_	$LEMMA$	_	43	IGNORE	true
62	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	59	MOD_mod	true
63	me	_	I	PRP	O	_	and	_	0	IGNORE	true
64	but	_	but	CC	O	_	contrast-01	_	55	IGNORE	true
65	i	_	i	PRP	O	_	1	_	0	IGNORE	true
66	go	_	go	VBP	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	71	APP_op1	true
67	to	_	to	IN	O	_	and	_	0	IGNORE	true
68	church	_	church	NN	O	(d<root> / --LEX--)	$LEMMA$	()	66	APP_s	true
69	on	_	on	IN	O	_	and	_	0	IGNORE	true
70	every_sunday	_name_	sunday	NN	O	(n3<root> / --LEX--  :name-of (e / event  :time-of (l<mod>)))	_NAME_	(mod())	66	MOD_mod	true
71	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	APP_op2	true
72	i	_	i	PRP	O	_	1	_	0	IGNORE	true
73	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
74	a	_	a	DT	O	_	1	_	0	IGNORE	true
75	doctor's	_	doctor'	NNS	O	_	_NAME_	_	76	IGNORE	true
76	appointment	_	appointment	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	66	MOD_s	true
77	this_thursday	_name_	thursday	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	66	MOD_mod	true
78	at	_	at	IN	O	_	today	_	0	IGNORE	true
79	2;30	_	2;30	CD	O	_	$LEMMA$	_	51	IGNORE	true
80	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
81	i	_	i	PRP	O	_	1	_	0	IGNORE	true
82	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	71	MOD_s	true
83	you	_	you	PRP	O	_	$LEMMA$	_	40	IGNORE	true
84	h=guys	_	h=guys	NFP	O	_	$LEMMA$	_	82	IGNORE	true
85	hirier	_	hirier	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	82	APP_o	true
86	me	_	I	PRP	O	_	cause-01	_	0	IGNORE	true
87	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	66	MOD_o	true
88	i	_	i	PRP	O	_	1	_	0	IGNORE	true
89	work	_	work	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	92	APP_op1	true
90	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	91	MOD_mod	true
91	hard	_	hard	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	89	MOD_s	true
92	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	APP_op1	true
93	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
94	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	95	MOD_mod	true
95	care	_	care	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	92	APP_op2	true
96	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
97	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
98	much	_	much	JJ	O	_	cause-01	_	0	IGNORE	true
99	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	101	APP_s	true
100	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	101	MOD_mod	true
101	pay	_	pay	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	95	APP_s	true
102	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
103	i've	_	i've	XX	O	_	and	_	0	IGNORE	true
104	been	_	be	VBN	O	_	person	_	0	IGNORE	true
105	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	114	APP_op2	true
106	for	_	for	IN	O	_	or	_	0	IGNORE	true
107	a	_	a	DT	O	_	1	_	0	IGNORE	true
108	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	105	APP_s	true
109	ever	_	ever	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	110	MOD_mod	true
110	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	105	MOD_mod	true
111	i	_	i	PRP	O	_	1	_	0	IGNORE	true
112	have	_	have	VBP	O	_	person	_	0	IGNORE	true
113	graduated	_	graduate	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	110	APP_op1	true
114	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	MOD_op1	true
115	i	_	i	PRP	O	_	1	_	0	IGNORE	true
116	hate	_	hate	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	114	MOD_s	true
117	dram	_	dram	NN	O	_	$LEMMA$	_	0	IGNORE	true
118	a	_	a	DT	O	_	1	_	0	IGNORE	true

nodealignment=[113@@d@@graduate-01, 31@@w@@job, 94@@explicitanon0@@-, 23@@s@@work-01, 5@@a@@and, 109@@p@@ever, 7@@y@@year, 14@@n@@_NAME_, 116@@s@@hate-01, 17@@s@@love-01, 8@@a@@and, 39@@r@@religious-group, 100@@p@@guy, 7@@t@@temporal-quantity, 101@@s@@pay-01, 21@@p@@great, 35@@d@@deli, 30@@p@@last, 40@@a@@and, 18@@d@@animal, 27@@d@@drama, 4@@p@@person, 70@@n3@@_NAME_, 47@@m@@more, 114@@a@@and, 77@@n@@thursday, 26@@s@@have-03, 68@@d@@church, 108@@d@@job, 59@@s@@work-01, 71@@a@@and, 110@@w@@since, 105@@s@@look-01, 12@@d@@high, 4@@n@@_NAME_, 62@@s@@need-01, 10@@s@@graduate-01, 2@@m@@name-01, 47@@b@@good-02, 66@@p@@go-02, 99@@d@@you, 57@@c@@will-02, 50@@d@@_NAME_, 70@@e@@event, 76@@s@@appointment, 39@@n@@_NAME_, 92@@a@@and, 43@@s@@change-01, 87@@s@@cause-01, 95@@s@@care-01, 82@@s@@hope-01, 85@@d@@hirier-01, 52@@s@@want-01, 48@@d@@person, 90@@s@@very, 19@@a@@and, 91@@s@@hard-02, 89@@d@@work-01]
sentence=1	I've	i've	I've	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
2	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	3	MOD_mod	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	APP_s	true
4	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
5	dwarf	_	dwarf	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	hamster	_	hamster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	I've	i've	i've	JJ	O	_	cause-01	_	0	IGNORE	true
9	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_o	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
12	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
15	pet	_	pet	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	rat	_	rat	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	put	_	put	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	30	APP_op1	true
19	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	chicken	_	chicken	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	wiring	_	wiring	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	around	_	around	IN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	and	_	0	IGNORE	true
25	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
26	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
27	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
28	home	_	home	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	depot	_	depot	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
31	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	can't	_	can't	VBZ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
34	out	_	out	RP	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
35	.	_	.	.	O	_	multi-sentence	_	7	IGNORE	true

nodealignment=[31@@n@@now, 18@@s@@put-01, 22@@d@@around, 9@@s@@have-03, 20@@p@@chicken, 33@@explicitanon0@@-, 29@@s@@depot, 26@@s@@get-01, 16@@a@@rat, 7@@s@@contrast-01, 21@@d@@wiring, 15@@p@@pet, 5@@p@@_NAME_, 12@@d@@problem, 6@@d@@hamster, 34@@d@@out, 1@@explicitanon0@@-, 4@@explicitanon0@@-, 11@@s@@same-01, 2@@n@@ever, 3@@s@@have-03, 28@@p@@home, 19@@p@@some, 30@@a@@and]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	filter	_	filter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	device	_	device	NN	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
10	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
11	DSL	dsl	DSL	NNP	O	(d<root> / --LEX--)	_NAME_	()	9	APP_s	true
12	modem,	_	modem,	NNP	O	_	mean-01	_	0	IGNORE	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	home	_	home	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	filter	_	filter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
18	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
19	filters	_	filter	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
20	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	jacks,	_	jacks,	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
24	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
25	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
26	which	_	which	WDT	O	_	except-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	DSL	dsl	DSL	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	modem	_	modem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	connects	_	connect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_o	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[13@@a@@or, 8@@i@@device, 7@@p@@each, 9@@s@@except-01, 30@@s@@connect-01, 20@@p@@all, 25@@p@@one, 22@@d@@jacks,, 1@@d@@You, 29@@d@@modem, 16@@p@@home, 2@@s@@need-01, 11@@d@@_NAME_, 19@@s@@filter-01, 5@@d@@filter, 15@@p@@whole, 17@@d@@filter, 23@@s@@except-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	weighed	_	weigh	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op1	true
4	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	5	MOD_mod	true
5	options	_	option	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
7	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	three	_	three	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	3	()	7	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	I	i	I	PRP	O	_	1	_	0	IGNORE	true
12	have	_	have	VBP	O	_	person	_	0	IGNORE	true
13	chosen	_	choose	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
18	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
20	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
21	own	_	own	JJ	O	_	person	_	0	IGNORE	true
22	taste	_	taste	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@d@@i, 9@@t@@thing, 19@@a@@and, 22@@d@@taste, 18@@h@@have-rel-role-91, 18@@f@@wife, 5@@d@@option, 13@@s@@choose-01, 7@@s@@find-01, 6@@a@@and, 18@@p@@person, 4@@p@@that, 9@@explicitanon0@@3, 16@@s@@more, 3@@s@@weigh-01]
sentence=1	Any	any	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	programs	_	program	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
6	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	7	MOD_mod	true
7	list	_	list	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	:)	_	:)	:	O	_	and	_	0	IGNORE	true
9	Th	th	th	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	x	_	x	NN	O	_	$FORM$	_	0	IGNORE	true

nodealignment=[6@@explicitanon0@@+, 1@@p@@any, 2@@d@@program, 5@@s@@use-01, 4@@d@@you, 7@@s@@list-01]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	0	ROOT	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	differences	_	difference	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	2	APP_s	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	product	_	0	IGNORE	true
10	HD	hd	HD	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	video,	_	video,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
12	longer	_	longer	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	13	MOD_s	true
13	battery	_	battery	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
14	life,	_	life,	NNS	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
16	faster	_	fast	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	fast-02	(s())	17	MOD_s	true
17	processor	_	processor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	the_NOOK_Tablet	_name_	Tablet	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
20	boasts	_	boast	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_o	true
21	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[17@@d@@processor, 5@@s@@differ-02, 16@@b@@fast-02, 20@@s@@boast-01, 10@@p@@HD, 13@@d@@battery, 2@@s@@include-91, 12@@m@@more, 12@@b@@long-03, 19@@n@@_NAME_, 16@@m@@more, 7@@s@@see-01, 19@@p@@product, 1@@explicitanon0@@some, 6@@d@@i, 15@@a@@and, 4@@s@@major-02]
sentence=1	NOTE:If	_name_	NOTE:If	NNP	O	_	cause-01	_	0	IGNORE	true
2	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	11	APP_s	true
3	see	_	see	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	answer	_	answer	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
8	love	_	love	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	i	_	i	PRP	O	_	and	_	0	IGNORE	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	make	_	make	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	16	APP_op1	true
12	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
13	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	11	APP_o	true
14	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	the	_	the	DT	O	_	event	_	0	IGNORE	true
18	n	_	n	NN	O	(d<root> / --LEX--)	_NAME_	()	16	APP_op2	true

nodealignment=[14@@p@@right, 13@@b2@@good-02, 11@@c@@make-01, 16@@a@@and, 8@@s@@love-01, 15@@b@@there, 18@@d@@_NAME_, 13@@m@@most, 5@@d@@answer-01, 2@@d@@i, 3@@m@@see-01]
sentence=1	(Apart	(apart	(apart	XX	O	_	$LEMMA$-00	_	0	IGNORE	true
2	from	_	from	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	be-$LEMMA$-91	(s(), o())	18	MOD_o	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	wire	_	wire	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	flooring	_	flooring	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	9	APP_s	true
8	am	_	be	VBP	O	_	person	_	0	IGNORE	true
9	going	_	go	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	18	MOD_o	true
10	to	_	to	IN	O	_	thing	_	0	IGNORE	true
11	cover)	_	cover)	NNP	O	_	cause-01	_	0	IGNORE	true
12	Which	which	which	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	18	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	16	MOD_mod	true
15	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	16	MOD_mod	true
16	cages	_	cage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	0	ROOT	true
19	:	_	:	:	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@g@@wire, 5@@d@@flooring, 18@@m@@more, 14@@p@@this, 9@@s@@go, 15@@explicitanon0@@2, 12@@p@@amr-unknown, 18@@b@@good-02, 7@@d@@i, 16@@d@@cage, 2@@s@@be-from-91]
sentence=1	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	will	_	will	MD	O	_	thing	_	0	IGNORE	true
3	move	_	move	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
5	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	get	_	get	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-03	(o(s()))	3	MOD_s	true
7	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	warm-it's	_	warm-it's	JJ	O	_	-	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	6	APP_o	true
11	a	_	a	DT	O	_	resemble-01	_	0	IGNORE	true
12	heat	_	heat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	rock	_	rock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	17	MOD_s	true
17	avoid	_	avoid	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
18	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
19	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	costs	_	cost	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	at-all-$LEMMA$	(mod())	17	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@explicitanon0@@-, 7@@s@@too, 16@@s@@recommend-01, 17@@s@@avoid-01, 15@@d@@you, 13@@d@@rock, 10@@s@@resemble-01, 12@@p@@heat, 6@@o@@get-03, 3@@s@@move-01, 19@@p@@all, 1@@d@@they, 20@@t@@at-all-cost]
sentence=1	Seizures	seizures	seizure	NNS	O	(d<root> / --LEX--)	$REPL$	()	0	ROOT	true
2	will	_	will	MD	O	_	thing	_	0	IGNORE	true
3	occur	_	occur	VB	O	_	event	_	0	IGNORE	true
4	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	toxins	_	toxin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
9	kidney	_	kidney	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	normally	_	normally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	normal-02	(s())	11	MOD_s	true
11	filters	_	filter	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
12	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	released	_	release	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	1	MOD_mod	true
15	into	_	into	IN	O	_	-	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	blood	_	blood	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	stream	_	stream	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@s@@normal-02, 9@@d@@kidney, 14@@s@@release-01, 6@@d@@toxin, 17@@p@@blood, 11@@s@@filter-01, 18@@b@@stream, 1@@d@@seizures]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
3	renaissance	_	renaissance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	4	MOD_mod	true
4	(Rinascimento	(rinascimento	(Rinascimento	NNP	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	Italian)	_name_	Italian)	NNP	O	_	mean-01	_	0	IGNORE	true
7	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
8	“rebirth”,	_	“rebirth”,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
10	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
11	era	_	era	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	best	_	best	RBS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	known	_	known	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	9	APP_op2	true
15	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
17	renewed	_	renew	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
18	interest	_	interest	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
19	in	_	in	IN	O	_	person	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	classical	_	classical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	antiquity	_	antiquity	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	period	_	period	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	Renaissance	_name_	Renaissance	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	humanists	_	humanist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
31	labelled	_	label	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	27	MOD_o	true
32	the_Dark_Ages	_name_	Ages	NNPS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_o2	true
33	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[4@@d@@_NAME_, 30@@d@@humanist, 14@@s@@known-02, 32@@n@@_NAME_, 17@@s@@renew-01, 9@@a@@and, 24@@p@@antiquity, 21@@d@@culture, 18@@s@@interest-01, 31@@b@@label-01, 27@@d@@period, 7@@s@@mean-01, 13@@p@@best, 23@@p@@classical, 32@@p@@person, 2@@d@@word-01, 25@@w@@after, 3@@p@@renaissance, 11@@d@@era]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	honestly	_	honestly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	honest-01	(s())	3	MOD_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	12	APP_op1	true
4	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
5	idea	_	idea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	what	_	what	WP	O	_	thing	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	expect	_	expect	VB	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	9	APP_op1	true
9	or	_	or	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
10	prepare	_	prepare	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	9	APP_op2	true
11	for	_	for	IN	O	_	thing	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
13	calling	_	call	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-in-04	(s())	24	APP_s	true
14	in	_	in	RP	O	_	i	_	0	IGNORE	true
15	to	_	to	TO	O	_	and	_	0	IGNORE	true
16	get	_	get	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
17	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	advice	_	advice	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	advise-01	(s())	13	APP_s	true
19	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	either	_	either	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	embassies	_	embassy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
24	costs	_	cost	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
25	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	minute-	_	minute-	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op3	true
28	which	_	which	WDT	O	_	i	_	0	IGNORE	true
29	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
30	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	32	MOD_s	true
31	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
32	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	27	MOD_s	true
33	the	_	the	DT	O	_	-	_	0	IGNORE	true
34	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
35	for	_	for	IN	O	_	thing	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@i@@get-01, 4@@explicitanon0@@-, 5@@d@@idea, 1@@d@@i, 34@@d@@money, 13@@s@@call-in-04, 3@@s@@have-03, 2@@s@@honest-01, 10@@d@@prepare-02, 9@@a@@or, 17@@p@@professional, 31@@explicitanon0@@-, 32@@s@@have-03, 8@@d@@expect-01, 30@@s@@real-04, 27@@d@@minute-, 18@@s@@advise-01, 8@@t@@thing, 20@@p@@either, 12@@a@@and, 23@@d@@embassy, 24@@s@@cost-01]
sentence=1	Above	above	above	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	link	_	link	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	to	_	to	IN	O	_	-	_	0	IGNORE	true
6	the_Department_of_State	_name_	State	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
8	website,	_	website,	NNP	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	give	_	give	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
13	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	info	_	info	NN	O	(d<root> / --LEX--)	$LEMMA$rmation	()	11	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	need,	_	need,	NNP	O	_	and	_	0	IGNORE	true
19	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
20	passport	_	passport	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@b@@above, 13@@p@@all, 7@@d@@travel-01, 4@@s@@link-01, 20@@p@@passport, 21@@d@@information, 12@@d@@you, 11@@b@@give-01, 19@@s@@include-01, 15@@d@@information, 6@@n@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	1	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
6	(here	_	(here	-LRB-	O	_	_NAME_	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
9	link:	_	link:	JJ	O	_	quote-01	_	0	IGNORE	true
10	http://news.yahoo.com/nestl-purina-releases-commercial-aimed-dogs-183443091.html	_	http://news.yahoo.com/nestl-purina-releases-commercial-aimed-dogs-183443091.html	NN	O	(explicitanon1<root> / --LEX--  :value-of (u / url-entity  :mod-of (w<mod>)))	_NAME_	(mod())	5	MOD_mod	true
11	)	_	)	-RRB-	O	_	and	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	trying	_	try	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
16	a	_	a	DT	O	_	thing	_	0	IGNORE	true
17	dog	_	dog	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	food	_	food	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	commercial	_	commercial	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	aimed	_	aim	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
21	at	_	at	IN	O	_	and	_	0	IGNORE	true
22	dogs,	_	dogs,	NNP	O	_	and	_	0	IGNORE	true
23	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
24	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
25	squeaky	_	squeaky	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	chew-toy	_	chew-toy	XX	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op1	true
27	sounds,	_	sounds,	NNS	O	_	and	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_o	true
29	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	MOD_s	true
30	pitched	_	pitch	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
31	sounds	_	sound	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op2	true
32	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	humans	_	human	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
34	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	true
35	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_o	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@aim-02, 26@@d@@chew-toy, 19@@d@@commercial, 34@@explicitanon0@@-, 10@@explicitanon1@@_NAME_, 33@@d@@human, 28@@a@@and, 23@@s@@complete-01, 10@@u@@url-entity, 5@@d@@company, 25@@p@@squeaky, 13@@c@@try-01, 30@@s@@pitch-01, 35@@s@@hear-01, 31@@d@@sound, 18@@p@@food, 15@@s@@make-01, 1@@d@@i, 2@@s@@hear-01, 29@@s@@high-02, 17@@p@@dog]
sentence=1	Impossible	impossible	impossible	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	possible-01	(s())	4	MOD_s	true
2	to	_	to	TO	O	_	-	_	0	IGNORE	true
3	say,	_	say,	NN	O	_	multi-sentence	_	0	IGNORE	true
4	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	guess	_	guess	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
9	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	6	APP_o	true
10	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
11	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-05	(s())	23	APP_op1	true
12	out	_	out	RP	O	_	thing	_	0	IGNORE	true
13	fuel	_	fuel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
14	consumption	_	consumption	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	consume-01	(s(), o())	11	APP_s	true
15	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	vehicle	_	vehicle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
21	are	_	be	VBP	O	_	person	_	0	IGNORE	true
22	using	_	use	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
24	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op2	true
25	a	_	a	DT	O	_	monetary-quantity	_	0	IGNORE	true
26	proportion	_	proportion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	that,	_	that,	NNS	O	_	include-91	_	0	IGNORE	true
29	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
30	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
31	on	_	on	IN	O	_	and	_	0	IGNORE	true
32	top	_	top	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
33	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
34	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
35	driver's	_	driver'	NNS	O	_	_NAME_	_	0	IGNORE	true
36	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op2	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	MOD_op1	true
38	effort,	_	effort,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
39	unless	_	unless	IN	O	_	cause-01	_	0	IGNORE	true
40	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
41	are	_	be	VBP	O	_	person	_	0	IGNORE	true
42	able	_	able	JJ	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	possible-01	(mod(), s())	52	MOD_mod	true
43	to	_	to	TO	O	_	person	_	0	IGNORE	true
44	share	_	share	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	42	APP_s	true
45	transport	_	transport	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_s	true
46	with	_	with	IN	O	_	-	_	0	IGNORE	true
47	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_o	true
49	more,	_	more,	NNS	O	_	-	_	0	IGNORE	true
50	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
51	would	_	would	MD	O	_	and	_	0	IGNORE	true
52	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	56	APP_s	true
53	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
54	costs	_	cost	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	52	APP_s	true
55	down	_	down	RP	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_o	true
56	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	4	MOD_o	true

nodealignment=[54@@d@@cost-01, 56@@s@@multi-sentence, 30@@p@@some, 42@@o@@possible-01, 52@@s@@keep-04, 55@@d@@down, 24@@s@@pay-01, 4@@s@@contrast-01, 14@@s@@consume-01, 29@@d@@and, 13@@d@@fuel, 1@@p@@possible-01, 40@@d@@you, 32@@b@@top, 1@@explicitanon0@@-, 9@@s@@obligate-01, 22@@s@@use-01, 20@@d@@they, 36@@d@@time, 6@@s@@guess-01, 47@@p@@another, 5@@d@@i, 17@@p@@particular, 48@@d@@or, 45@@d@@transport-01, 18@@d@@vehicle, 23@@a@@and, 44@@s@@share-01, 37@@a@@and, 7@@d@@you, 26@@d@@proportion, 11@@s@@work-out-05]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	dog	_	dog	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	house	_	house	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	would	_	would	MD	O	_	no-one	_	0	IGNORE	true
11	turn	_	turn	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	7	MOD_o	true
12	into	_	into	IN	O	_	i	_	0	IGNORE	true
13	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	rabbit	_	rabbit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	hutch	_	hutch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
17	being	_	be	VBG	O	_	person	_	0	IGNORE	true
18	kept	_	keep	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
19	back	_	back	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
20	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
22	I	i	I	PRP	O	_	$REPL$	_	21	IGNORE	true
23	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
24	thinking	_	think	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	APP_op2	true
25	about	_	about	IN	O	_	product	_	0	IGNORE	true
26	keeping	_	keep	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	24	APP_s	true
27	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
28	rabbit	_	rabbit	NN	O	_	$LEMMA$	_	21	IGNORE	true
29	in	_	in	IN	O	_	i	_	0	IGNORE	true
30	the	_	the	DT	O	_	he	_	0	IGNORE	true
31	run	_	run	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	APP_s	true
32	with	_	with	IN	O	_	-	_	0	IGNORE	true
33	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
34	chickens,	_	chickens,	NNS	O	(d<root> / --LEX--)	_NAME_	()	31	APP_s	true
35	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	24	APP_o	true
36	keeping	_	keep	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_o	true
37	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
38	chickens	_	chicken	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op3	true
39	in	_	in	IN	O	_	i	_	0	IGNORE	true
40	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
41	coop	_	coop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_op1	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_s	true
43	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
44	rabbit	_	rabbit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_op2	true
45	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
46	the	_	the	DT	O	_	person	_	0	IGNORE	true
47	hutch	_	hutch	NN	O	_	$LEMMA$	_	0	IGNORE	true
48	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
49	night	_name_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
50	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[49@@m@@night, 38@@d@@chicken, 41@@d@@coop, 3@@n@@already, 14@@p@@little, 34@@d@@_NAME_, 21@@a@@and, 42@@a@@and, 18@@s@@keep-01, 24@@c@@think-01, 19@@b@@back, 15@@p@@rabbit, 9@@d@@i, 6@@p@@dog, 44@@d@@rabbit, 20@@b@@there, 16@@d@@hutch, 7@@d@@house, 5@@p@@little, 35@@s@@contrast-01, 26@@s@@keep-04, 49@@d@@date-entity, 31@@s@@run-02, 11@@b@@turn-02, 36@@s@@keep-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	feed	_	feed	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	13	APP_s	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	chickens	_	chicken	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
5	scraps	_	scrap	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	veggies	_	veggie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
9	fruits	_	fruit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
10	throughout	_	throughout	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	day,	_	day,	NN	O	_	and	_	0	IGNORE	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	it's	_	it's	PRP$	O	_	-	_	0	IGNORE	true
15	nothing	_	nothing	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	a	_	a	DT	O	_	-	_	0	IGNORE	true
18	rabbit	_	rabbit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
19	wouldn't	_	wouldn't	WP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_o	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	digest	_	digest	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
24	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	fine	_	fine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	23	MOD_s	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@n@@throughout, 25@@s@@fine-04, 18@@d@@rabbit, 21@@s@@possible-01, 5@@d@@scrap, 19@@explicitanon0@@-, 23@@s@@digest-01, 7@@d@@veggie, 13@@s@@contrast-01, 8@@a@@and, 9@@d@@fruit, 1@@d@@We, 2@@b@@feed-01, 4@@d@@chicken, 15@@explicitanon0@@nothing, 24@@p@@just]
sentence=1	why	_	why	WRB	O	(c<root> / cause-01  :ARG1 (t<s>)  :ARG0 (a / --LEX--))	amr-unknown	(s())	0	ROOT	true
2	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
4	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
5	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	treats	_	treat	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	loves	_	love	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_s	true
11	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
13	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	when	_	when	WRB	O	_	i	_	0	IGNORE	true
16	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	does	_	do	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	12	MOD_mod	true
18	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@a@@and, 5@@explicitanon0@@some, 17@@t@@do-02, 8@@d@@he, 3@@d@@you, 2@@explicitanon0@@-, 4@@s@@get-01, 11@@p@@only, 12@@s@@give-01, 9@@s@@love-01, 18@@d@@something, 19@@s@@right-02, 1@@c@@cause-01, 1@@a@@amr-unknown, 6@@d@@treat-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
2	loved	_	love	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
3	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	locations	_	location	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	ships	_	ship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	visited	_	visit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	don't	_	don't	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	believe	_	believe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
16	that	_	that	IN	O	_	thing	_	0	IGNORE	true
17	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	15	APP_o	true
19	be	_	be	VB	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	distinguishing	_	distinguish	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	distinguish-01	(s())	22	MOD_s	true
22	factor	_	factor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
23	on	_	on	IN	O	_	thing	_	0	IGNORE	true
24	deciding	_	decide	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
25	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	cruise	_	cruise	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	lines	_	line	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@a@@and, 3@@explicitanon0@@most, 14@@explicitanon0@@-, 15@@s@@believe-01, 27@@p@@cruise, 12@@s@@visit-01, 1@@d@@We, 6@@d@@location, 11@@d@@ship, 2@@s@@love-01, 22@@d@@factor, 24@@r@@decide-01, 21@@s@@distinguish-01, 18@@s@@recommend-01, 8@@p@@both, 28@@d@@line]
sentence=1	Pools	pools	Pools	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
3	Mariner	mariner	Mariner	NNP	O	(o3<root> / organization  :name (n4 / --LEX--)  :part-of (p<poss>))	_NAME_	(poss())	7	APP_s	true
4	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the_Seas_and_Liberty	_name_	Liberty	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	3	APP_poss	true
6	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
8	salt	_	salt	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
9	water	_	water	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	pools	_	pool	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	cruise	_	cruise	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	ships	_	ship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_o	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@o2@@organization, 6@@p@@both, 13@@explicitanon0@@most, 1@@p@@Pools, 3@@o3@@organization, 10@@d@@pool, 7@@s@@have-03, 3@@n4@@_NAME_, 9@@p@@water, 5@@n@@_NAME_, 8@@s@@salt, 16@@s@@have-03, 14@@p@@cruise, 15@@d@@ship]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	13	MOD_mod	true
4	kids,	_	kids,	NNS	O	_	-	_	0	IGNORE	true
5	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
6	would	_	would	MD	O	_	and	_	0	IGNORE	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
11	would	_	would	MD	O	_	+	_	0	IGNORE	true
12	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	13	MOD_mod	true
13	enjoy	_	enjoy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@m@@have-03, 8@@r@@something, 12@@p@@definite, 2@@d@@you, 13@@s@@enjoy-01, 5@@d@@this, 10@@d@@they]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	year	(mod())	2	MOD_mod	true
4	9_month_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	6	MOD_mod	true
5	German	_name_	german	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	Shepherd	shepherd	Shepherd	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	that	_	that	WDT	O	_	name	_	0	IGNORE	true
8	I	i	I	PRP	O	_	1	_	0	IGNORE	true
9	raised	_	raise	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	6	MOD_s	true
10	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	puppy	_	puppy	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[5@@n@@_NAME_, 12@@s@@puppy, 2@@s@@have-03, 5@@c@@country, 3@@explicitanon0@@year, 1@@d@@i, 9@@s@@raise-03, 4@@t@@temporal-quantity, 6@@d@@Shepherd, 4@@y@@year]
sentence=1	So,	so,	So,	NNS	O	_	say-01	_	0	IGNORE	true
2	to	_	to	TO	O	_	say-01	_	0	IGNORE	true
3	answer	_	answer	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
4	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	question,	_	question,	NNS	O	_	and	_	0	IGNORE	true
6	no,	_	no,	XX	O	_	and	_	0	IGNORE	true
7	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-03	(mod(), s())	3	MOD_mod	true
11	a	_	a	DT	O	_	or	_	0	IGNORE	true
12	bulb	_	bulb	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	produces	_	produce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
17	UVA	_name_	UVA	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_o	true
18	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	30	MOD_s	true
23	"the	_	"the	``	O	_	_NAME_	_	0	IGNORE	true
24	sun's	_	sun'	NNS	O	(d<root> / --LEX--)	_NAME_	()	22	APP_o	true
25	rays"	_	rays"	VBD	O	_	and	_	0	IGNORE	true
26	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
28	bearded	_	bearded	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	needs	_	need	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
30	.	_	.	.	O	(d<root> / --LEX--)	thing	()	0	ROOT	true

nodealignment=[28@@d@@bearded, 16@@s@@produce-01, 21@@explicitanon0@@-, 29@@s@@need-01, 30@@d@@thing, 14@@s@@say-01, 12@@d@@bulb, 3@@s@@answer-01, 24@@d@@_NAME_, 9@@p@@just, 10@@o@@have-03, 22@@s@@have-03, 17@@d@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	making	_	make	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
4	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
5	christmas	_	christmas	NN	O	(f<root> / festival  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
9	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	6	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	APP_op2	true
16	for	_	for	IN	O	_	-	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	15	MOD_mod	true
21	are	_	be	VBP	O	_	person	_	0	IGNORE	true
22	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
23	affordable	_	affordable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	afford-01	(s())	24	MOD_s	true
24	ones	_	one	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	i	_	i	PRP	O	_	1	_	0	IGNORE	true
27	like,	_	like,	NNP	O	_	and	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	MOD_op1	true
29	i	_	i	PRP	O	_	1	_	0	IGNORE	true
30	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
31	wondering	_	wonder	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_op3	true
32	:	_	:	:	O	_	and	_	0	IGNORE	true
33	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
34	would	_	would	MD	O	_	thing	_	0	IGNORE	true
35	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	36	MOD_mod	true
36	bite	_	bite	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	38	APP_op1	true
37	alot,	_	alot,	NNP	O	_	-	_	0	IGNORE	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	10	MOD_s	true
39	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
40	are	_	be	VBP	O	_	person	_	0	IGNORE	true
41	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	fun	_	fun	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	APP_op2	true
43	to	_	to	TO	O	_	thing	_	0	IGNORE	true
44	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	42	APP_o	true
45	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
46	pets	_	pet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
47	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
48	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
49	NEED	need	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op2	true
50	TO	to	to	TO	O	_	thing	_	0	IGNORE	true
51	KNOW	know	know	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	49	APP_s	true
52	WHICH	which	which	WDT	O	_	i	_	0	IGNORE	true
53	WOULD	would	WOULD	MD	O	_	thing	_	0	IGNORE	true
54	BE	be	be	VB	O	_	cause-01	_	0	IGNORE	true
55	QUIETEST	quietest	quiet	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	59	MOD_mod	true
56	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
57	honestly	_	honestly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	honest-01	(s())	59	MOD_s	true
58	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	59	MOD_mod	true
59	care	_	care	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	60	APP_o	true
60	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	10	MOD_s	true
61	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
62	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	59	APP_s	true
63	does	_	do	VBZ	O	_	$LEMMA$-02	_	0	IGNORE	true
64	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[6@@s@@list-01, 5@@f@@festival, 49@@s@@need-01, 15@@s@@ask-02, 41@@s@@more, 55@@p@@quiet, 36@@s@@bite-01, 47@@a@@and, 23@@s@@afford-01, 59@@s@@care-01, 51@@d@@know-01, 5@@n@@_NAME_, 28@@a@@and, 20@@p@@this, 18@@d@@bird, 38@@a@@and, 46@@d@@pet, 31@@d@@wonder-01, 35@@explicitanon0@@-, 10@@a@@and, 9@@f@@parent, 1@@d@@i, 9@@h@@have-rel-role-91, 42@@s@@fun-01, 58@@explicitanon0@@-, 57@@s@@honest-01, 60@@s@@contrast-01, 62@@d@@family, 9@@p@@person, 24@@p@@one, 44@@s@@have-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_o	true
9	for	_	for	IN	O	_	person	_	0	IGNORE	true
10	christmas	_name_	christma	NNS	O	(f<root> / festival  :name (n / --LEX--)  :time-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@n@@_NAME_, 10@@f@@festival, 8@@s@@do-02, 7@@d@@you, 4@@s@@same-01, 1@@d@@i, 5@@d@@thing, 2@@s@@do-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
4	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	hold	_	hold	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
9	and	_	and	CC	O	_	$LEMMA$	_	2	IGNORE	true
10	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	MOD_s	true
11	tricks	_	trick	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[7@@s@@possible-01, 8@@s@@hold-01, 11@@d@@trick, 4@@d@@bird, 10@@s@@do-02, 2@@s@@want-01, 1@@d@@i]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	choose	_	choose	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	11	MOD_mod	true
4	to	_	to	TO	O	_	event	_	0	IGNORE	true
5	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	a	_	a	DT	O	_	-	_	0	IGNORE	true
7	parakeet	_	parakeet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
11	trick	_	trick	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
14	used	_	use	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	11	MOD_o	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	tame	_	tame	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_o2	true
17	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@tame-01, 13@@d@@i, 14@@i@@use-01, 2@@d@@you, 7@@d@@parakeet, 11@@r@@trick, 3@@d@@choose-01, 5@@s@@get-01, 8@@d@@this]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
4	horse	_	horse	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_op1	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
7	otherwise	_	otherwise	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	wouldn't	_	wouldn't	WP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
9	be	_	be	VB	O	_	-	_	0	IGNORE	true
10	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
11	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
12	afford	_	afford	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	even	_	even	RB	O	(e<root> / --LEX--  :op1 (r<op1>)  :concession-of (c<mod>))	$LEMMA$-if	(op1(), mod())	22	MOD_mod	true
15	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
16	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	spend	_	spend	VBP	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	14	APP_op1	true
18	2K	_name_	2k	NN	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	100000	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
20	treatment	_	treatment	NN	O	(d<root> / --LEX--)	treat-03	()	19	APP_op2	true
21	I	i	I	PRP	O	_	1	_	0	IGNORE	true
22	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-09	(s())	13	APP_op2	true
23	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
24	ahead	_	ahead	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	22	APP_s	true
25	of	_	of	IN	O	_	monetary-quantity	_	0	IGNORE	true
26	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	purchase	_	purchase	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_s	true
28	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	24	APP_op1	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@explicitanon0@@-, 6@@d@@i, 14@@e@@even-if, 7@@p@@otherwise, 20@@d@@treat-03, 17@@l@@spend-01, 13@@a@@and, 18@@explicitanon0@@100000, 1@@d@@this, 24@@o@@ahead, 28@@c@@price-01, 4@@r@@horse, 19@@a@@and, 12@@s@@afford-01, 18@@m2@@monetary-quantity, 28@@t@@thing, 27@@d@@purchase-01, 22@@s@@come-out-09, 10@@s@@possible-01]
sentence=1	Cj	cj	Cj	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
3	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
4	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	ask	_	ask	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
10	10	_	10	CD	O	(d<root> / --LEX--)	_NUMBER_	()	11	APP_op1	true
11	times	_	time	NNS	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	product-of	(op1(), mod())	4	MOD_mod	true
12	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
13	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@p@@person, 10@@d@@_NUMBER_, 7@@d@@we, 12@@d@@more, 8@@s@@ask-01, 2@@a@@and, 4@@s@@do-02, 5@@d@@all, 3@@d@@company, 1@@n@@_NAME_, 9@@a@@and, 11@@s@@product-of]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_o	true
2	am	_	be	VBP	O	_	thing	_	0	IGNORE	true
3	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	pleased	_	pleased	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	please-01	(s(), o())	0	ROOT	true
5	with	_	with	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	tattoos	_	tattoo	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	revived	_	revive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
11	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@s@@revive-01, 3@@s@@very, 7@@d@@tattoo, 4@@s@@please-01, 1@@d@@i]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	5	MOD_mod	true
4	Starbucks	_name_	Starbucks	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	locations	_	location	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	frequent	_	frequent	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
9	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[7@@d@@i, 3@@explicitanon0@@3, 4@@p@@Starbucks, 5@@d@@location, 8@@s@@frequent-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	13	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	Tucson	_name_	Tucson	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	13	MOD_o	true
9	to	_	to	IN	O	_	thing	_	0	IGNORE	true
10	offer,	_	offer,	NNP	O	_	and	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
12	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	outta	_	outta	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
14	here..	_	here..	RB	O	_	$LEMMA$	_	0	IGNORE	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@b2@@good-02, 8@@s@@obligate-01, 2@@d@@this, 13@@s@@outta-02, 11@@d@@i, 7@@c@@city, 7@@n@@_NAME_, 5@@m@@most]
sentence=1	What	what	what	WP	O	_	and	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	get	_	get	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
5	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
6	$13/day	_name_	$13/day	CD	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	day	(mod())	7	MOD_mod	true
7	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
8	to	_	to	TO	O	_	up-$LEMMA$	_	0	IGNORE	true
9	access	_	access	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	internet	_	internet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	slow	_	slow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	15	MOD_s	true
15	512/512kb/s	_name_	512/512kb/s	CD	O	(t<root> / --LEX--  :path-of (d<mod>))	_NAME_	(mod())	9	MOD_mod	true
16	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
19	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	use	_	use	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	15	MOD_s	true
21	to	_	to	TO	O	_	person	_	0	IGNORE	true
22	check	_	check	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
23	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
24	etc	_	etc	FW	O	(d<root> / --LEX--)	et-cetera	()	22	APP_o	true
25	(Read:	(read:	(read:	FW	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
26	No	no	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
27	downloading)	_	downloading)	NNP	O	_	and	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@s@@check-01, 6@@t2@@temporal-quantity, 2@@d@@you, 23@@d@@email, 24@@d@@et-cetera, 18@@s@@possible-01, 6@@explicitanon0@@day, 20@@s@@use-01, 9@@s@@access-01, 3@@b@@get-01, 14@@s@@slow-05, 5@@explicitanon0@@1, 19@@p@@only, 17@@d@@you, 15@@t@@_NAME_, 11@@d@@internet, 7@@s@@charge-01, 25@@explicitanon0@@-, 26@@explicitanon0@@-]
sentence=1	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
2	the	_	the	DT	O	_	thing	_	0	IGNORE	true
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
4	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	stuff	_	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	stores	_	store	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_o	true
12	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[4@@p@@old, 1@@explicitanon0@@-, 10@@d@@store, 5@@d@@stuff, 3@@s@@same-01, 11@@s@@have-03, 9@@p@@other, 7@@p@@all]
sentence=1	Especially	especially	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-end	(s())	3	MOD_s	true
3	end	_	end	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
4	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	sake	_	sake	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	sort	_	sort	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	of	_	of	IN	O	_	and	_	0	IGNORE	true
8	clothing	_	clothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
11	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	cant	_	cant	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
14	in	_	in	IN	O	_	-	_	0	IGNORE	true
15	a	_	a	DT	O	_	-	_	0	IGNORE	true
16	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	of	_	of	IN	O	_	-	_	0	IGNORE	true
18	stores	_	store	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@b@@store, 10@@d@@you, 12@@explicitanon0@@-, 6@@p@@sort, 8@@d@@clothing, 5@@p@@sake, 4@@s@@keep-01, 2@@s@@high-end, 1@@p@@especially, 3@@p@@end-01, 16@@explicitanon0@@lot, 11@@p@@just, 13@@s@@find-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	menu	_	menu	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	1	APP_s	true
5	standard	_	standard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	stuff	_	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	would	_	would	MD	O	_	person	_	0	IGNORE	true
10	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
11	at	_	at	IN	O	_	name	_	0	IGNORE	true
12	a_Belgian_Tavern	_name_	Tavern	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
13	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[10@@s@@get-01, 4@@s@@have-03, 3@@d@@menu, 1@@s@@contrast-01, 5@@s@@standard-02, 6@@d@@stuff, 12@@n@@_NAME_, 8@@d@@one]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
2	interviewed	_	interview	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_op1	true
3	me,	_	me,	NN	O	_	and	_	15	IGNORE	true
4	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op2	true
5	me	_	I	PRP	O	_	and	_	0	IGNORE	true
6	tests	_	test	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	software	_	software	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	included	_	include	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
14	resume,	_	resume,	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
16	placed	_	place	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_op3	true
17	me	_	I	PRP	O	_	i	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	position	_	position	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_o	true
21	that	_	that	WDT	O	_	name	_	0	IGNORE	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	kept	_	keep	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	for	_	for	IN	O	_	and	_	0	IGNORE	true
25	several_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@s@@keep-01, 11@@s@@include-01, 1@@d@@They, 2@@s@@interview-01, 6@@d@@test-01, 20@@d@@position-02, 16@@s@@place-01, 9@@l@@software, 4@@s@@give-01, 25@@b@@_NAME_, 15@@a@@and]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	awesome	_	awesome	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	awe-01	(s())	6	MOD_s	true
5	date	_	date	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	spot	_	spot	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	SERIOUSLY	seriously	seriously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	serious-02	(s())	11	MOD_s	true
11	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@s@@awe-01, 6@@r@@spot, 10@@s@@serious-02, 1@@d@@this, 11@@s@@need-01, 9@@d@@area, 5@@p@@date]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
6	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
7	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
8	2_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	living	_	live	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
11	there	_	there	EX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
13	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	walls	_	wall	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
16	are	_	be	VBP	O	_	1	_	0	IGNORE	true
17	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
18	thin,	_	thin,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	APP_dom	true
19	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	I	i	I	PRP	O	_	1	_	0	IGNORE	true
21	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	APP_s	true
22	here	_	here	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	21	APP_s	true
23	my	_	my	PRP$	O	(s<root> / --LEX--  :ARG0 (y<s>))	more	(s())	3	MOD_s	true
24	neighbors	_	neighbor	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	25	APP_s	true
25	conversations	_	conversation	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	22	APP_o	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@s@@pretty, 21@@s@@possible-01, 23@@s@@more, 10@@v@@live-01, 2@@p@@only, 6@@s@@have-03, 8@@t2@@temporal-quantity, 19@@o@@sometimes, 5@@d@@i, 11@@b@@there, 8@@explicitanon0@@year, 24@@p@@person, 15@@d@@wall, 25@@s@@conversation, 3@@r@@problem, 24@@h@@have-rel-role-91, 18@@s@@thin,, 24@@f@@neighbor, 22@@s@@here]
sentence=1	Not	not	not	RB	O	_	-	_	0	IGNORE	true
2	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	were	_	be	VBD	O	_	person	_	0	IGNORE	true
4	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_op2	true
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	pleased,	_	pleased,	NNPS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	0	ROOT	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	contrast-01	(s())	9	APP_s	true
11	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
12	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
13	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	9	APP_o	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	air	_	air	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	duct	_	duct	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	quality	_	quality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
18	tested	_	test	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
19	professionally	_	professionally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	professional	(mod())	18	MOD_mod	true
20	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	inspector	_	inspector	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	inspect-01	(s())	18	APP_s	true
24	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	regularly	_	regularly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	regular-02	(s())	18	MOD_s	true
27	use,	_	use,	VBP	O	_	-	_	0	IGNORE	true
28	before	_	before	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	29	APP_op1	true
29	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	9	MOD_mod	true
30	after	_	after	IN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op2	true
31	United_Air_Duct	_name_	Duct	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	32	APP_s	true
32	performed	_	perform	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	28	APP_op1	true
33	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
34	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	32	APP_o	true
35	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[9@@s@@and, 32@@s@@perform-02, 31@@n@@_NAME_, 10@@s@@contrast-01, 22@@d@@home, 16@@a@@duct, 31@@g@@government-organization, 5@@f@@wife, 30@@d@@after, 5@@h@@have-rel-role-91, 6@@a@@and, 18@@s@@test-01, 34@@d@@work-01, 7@@d@@i, 5@@p@@person, 15@@p@@air, 28@@o@@before, 23@@s@@inspect-01, 13@@s@@have-04, 19@@t@@professional, 17@@d@@quality, 26@@s@@regular-02, 8@@s@@very, 12@@p@@also, 29@@d@@and]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
4	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
5	will	_	will	MD	O	_	$LEMMA$	_	0	IGNORE	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	nicest	_	nice	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	little	(s())	9	MOD_s	true
9	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	3	APP_op2	true
10	in	_	in	IN	O	_	name	_	0	IGNORE	true
11	Sicily	_name_	Sicily	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	that	_	that	IN	O	_	name	_	0	IGNORE	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	will	_	will	MD	O	_	person	_	0	IGNORE	true
15	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@a@@and, 8@@b2@@little, 11@@c@@country, 9@@r@@person, 1@@d@@They, 15@@s@@meet-02, 8@@m@@most, 11@@n@@_NAME_, 4@@n@@always, 13@@d@@you]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
2	will	_	will	MD	O	_	name	_	0	IGNORE	true
3	4-ever	_	4-ever	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	-	(mod())	6	MOD_mod	true
4	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
5	eternally	_	eternally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	intellectual	(mod())	6	MOD_mod	true
6	grateful	_	grateful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	appreciate-02	(s(), o())	0	ROOT	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	hospitality	_	hospitality	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
11	luv	_	luv	VB	O	_	$LEMMA$	_	0	IGNORE	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	name	_	0	IGNORE	true
14	Sicilian	_name_	sicilian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	showed	_	show	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_op2	true
17	me	_	I	PRP	O	_	and	_	0	IGNORE	true
18	when	_	when	WRB	O	_	i	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	was	_	be	VBD	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), s(), o())	16	MOD_mod	true
21	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	3_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	_NAME_	(mod())	16	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@s@@hospitality, 8@@d@@they, 16@@s@@show-01, 1@@d@@i, 23@@explicitanon0@@_NAME_, 5@@t@@intellectual, 6@@s@@appreciate-02, 20@@b@@be-located-at-91, 23@@t2@@temporal-quantity, 10@@a@@and, 21@@d@@there, 15@@d@@family, 14@@p@@_NAME_, 3@@n@@-]
sentence=1	David	_name_	David	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	i	_	0	IGNORE	true
4	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	helpful	_	helpful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-04	(s())	8	MOD_s	true
6	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
7	creative	_	creative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	photographer	_	photographer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	0	ROOT	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
11	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
12	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@use-01, 7@@p@@creative, 5@@s@@helpful-04, 1@@n@@_NAME_, 8@@s@@photographer, 1@@p@@person, 4@@s@@most, 10@@d@@i]
sentence=1	Both	both	both	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
2	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	engagement	_	engagement	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
5	wedding	_	wedding	NN	O	(d<root> / --LEX--)	wed-01	()	4	APP_op2	true
6	pictures	_	picture	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_s	true
7	that	_	that	WDT	O	_	and	_	0	IGNORE	true
8	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	took	_	take	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	6	MOD_o	true
10	for	_	for	IN	O	_	and	_	0	IGNORE	true
11	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	absolutely	_	absolutely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	absolute	(mod())	14	MOD_mod	true
14	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	0	ROOT	true
15	.	_	.	.	O	_	say-01	_	0	IGNORE	true

nodealignment=[6@@s@@picture, 9@@t@@take-01, 5@@d@@wed-01, 3@@d@@engagement, 8@@d@@he, 11@@d@@us, 13@@p@@absolute, 14@@s@@amaze-01, 4@@a@@and, 1@@p@@both]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	have	_	have	VBP	O	_	1	_	0	IGNORE	true
3	been	_	be	VBN	O	_	person	_	0	IGNORE	true
4	getting	_	get	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_op1	true
5	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
6	treatments	_	treatment	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	treat-03	(s())	4	APP_o	true
7	for	_	for	IN	O	_	or	_	0	IGNORE	true
8	a_few_months	_name_	month	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	month	(mod())	4	MOD_mod	true
9	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
11	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
12	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
13	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	results	_	result	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	10	MOD_s	true
16	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	up	_	up	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	10	APP_op3	true
18	to	_	to	IN	O	_	up-$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
20	standards	_	standard	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	I	i	I	PRP	O	_	1	_	0	IGNORE	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
25	I	i	I	PRP	O	_	1	_	0	IGNORE	true
26	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	24	MOD_s	true
27	expect	_	expect	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@s@@tell-01, 20@@d@@standard, 9@@n@@now, 26@@s@@recommend-01, 10@@a@@and, 16@@explicitanon0@@-, 17@@s@@up, 8@@b@@month, 15@@s@@contrast-01, 27@@s@@expect-01, 1@@d@@i, 6@@s@@treat-03, 4@@c@@get-01, 13@@explicitanon0@@some, 12@@s@@see-01, 14@@d@@result-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	-	_	0	IGNORE	true
4	easiest	_	easy	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	easy-05	(s())	5	MOD_s	true
5	thing	_	thing	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
9	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_o	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
13	tell	_	tell	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
16	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	13	APP_s	true
17	that	_	that	IN	O	_	and	_	0	IGNORE	true
18	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	13	APP_o	true
20	do	_	do	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	19	APP_s	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	too	_	too	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@n@@ever, 4@@m@@most, 22@@p@@too, 11@@a@@and, 5@@r@@thing, 4@@b2@@easy-05, 16@@f@@friend, 7@@d@@i, 20@@d@@do-02, 19@@s@@recommend-01, 10@@s@@do-02, 14@@p@@all, 16@@h@@have-rel-role-91, 16@@p@@person, 1@@d@@It, 13@@s@@tell-01]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
7	experienced	_	experience	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	-	_	0	IGNORE	true
10	landlord	_	landlord	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	3	APP_dom	true
11	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@e2@@landlord, 10@@p2@@person, 2@@p@@only, 7@@s@@experience-01, 3@@r@@problem, 5@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	found	_	find	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	her	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
6	colleague	_	colleague	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	one_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
9	one	_	one	CD	O	(d<root> / --LEX--)	1	()	21	APP_op1	true
10	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	9	MOD_s	true
11	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
12	clients	_	client	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	10	APP_o	true
13	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	midst	_	midst	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$	(mod(), s())	2	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	panic	_	panic	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	20	MOD_mod	true
20	attack	_	attack	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o2	true
22	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op2	true
23	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	help	_	help	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_s	true
25	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
26	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
27	am	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
28	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	29	MOD_mod	true
29	qualified	_	qualified	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@d@@1, 16@@s@@midst, 23@@p@@professional, 19@@p@@panic-01, 7@@n@@day, 20@@d@@attack-01, 31@@s@@provide-01, 5@@explicitanon0@@1, 22@@s@@need-01, 6@@s@@colleague, 10@@s@@include-91, 3@@d@@she, 12@@p@@person, 29@@s@@qualified-02, 21@@a@@and, 28@@explicitanon0@@-, 24@@d@@help-01, 2@@b@@find-01, 12@@h@@have-rel-role-91, 1@@d@@i, 12@@f@@client]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	6	MOD_mod	true
3	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
5	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
7	10%	_	10%	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	know-01	()	6	APP_o	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	EXPERIENCED	experienced	EXPERIENCED	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	vets	_	vet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_o	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[6@@s@@have-03, 2@@p@@probable, 21@@b@@area, 4@@explicitanon0@@-, 7@@explicitanon0@@10%, 16@@s@@EXPERIENCED-01, 1@@d@@She, 10@@d@@know-01, 17@@d@@vet, 5@@p@@even, 20@@p@@this, 18@@s@@do-02, 15@@p@@other, 12@@explicitanon0@@some]
sentence=1	During	during	during	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	session,	_	session,	NNS	O	_	and	_	0	IGNORE	true
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	demanded	_	demand	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	APP_o	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	physical	_	physical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	address,	_	address,	NNS	O	_	and	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	I've	i've	I've	NNP	O	_	-	_	0	IGNORE	true
13	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	kept	_	keep	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
15	private	_	private	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
16	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	14	MOD_o	true
17	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
19	enrolled	_	enrol	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	16	APP_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	witness	_	witness	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	23	APP_s	true
23	protection	_	protection	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	protect-01	(mod(), s())	24	MOD_mod	true
24	program	_	program	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
25	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@c@@demand-01, 24@@d@@program, 22@@p2@@person, 14@@s@@keep-02, 23@@i@@protect-01, 4@@d@@he, 22@@e2@@witness-01, 15@@s@@private-02, 16@@s@@cause-01, 19@@s@@enrol-01, 13@@n@@always, 9@@p@@physical, 7@@s@@have-03]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	5	MOD_s	true
5	treatments	_	treatment	NNS	O	(d<root> / --LEX--)	treat-03	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
8	surgeon	_	surgeon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
9	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
10	see,	_	see,	RB	O	_	and	_	0	IGNORE	true
11	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
12	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
13	you	_	you	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	2	MOD_s	true
14	can	_	can	MD	O	(g<root> / --LEX--  :ARG1 (a<o>)  :purpose-of (f<mod>))	possible-01	(mod(), o(s()))	3	MOD_mod	true
15	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	14	APP_o	true
16	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	treatment	_	treatment	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	treat-03	(s())	18	MOD_s	true
18	options	_	option	NNS	O	(d<root> / --LEX--)	opt-01	()	15	APP_o	true
19	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	decide	_	decide	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op1	true
22	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
23	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	2	MOD_s	true
24	do	_	do	VB	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-02	()	21	APP_s	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@see-01, 17@@s@@treat-03, 16@@explicitanon0@@several, 4@@s@@differ-02, 5@@d@@treat-03, 24@@t@@thing, 18@@d@@opt-01, 21@@s@@decide-01, 1@@d@@You, 14@@g@@possible-01, 13@@s@@you, 2@@s@@possible-01, 19@@w@@before, 8@@d@@surgeon, 9@@explicitanon0@@-, 15@@s@@have-03, 24@@d@@do-02, 23@@s@@thing]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	feel	_	feel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	tried	_	try	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
9	to	_	to	TO	O	_	and	_	0	IGNORE	true
10	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	bunch	_	bunch	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	services	_	service	NNS	O	(d<root> / --LEX--)	serve-01	()	10	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
18	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
19	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@explicitanon0@@bunch, 2@@p@@also, 20@@s@@need-01, 1@@d@@i, 7@@d@@they, 8@@c@@try-01, 19@@explicitanon0@@-, 10@@s@@sell-01, 5@@s@@feel-02, 15@@d@@serve-01, 4@@explicitanon0@@-]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	had	_	have	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-03	(o(poss_UNIFY_s()))	10	APP_op1	true
3	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
4	wedding	_	wedding	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	wed-01	(mod())	5	MOD_mod	true
5	luncheon	_	luncheon	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	2	APP_o	true
6	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	BJs	bjs	bj	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
9	restaurant,	_	restaurant,	NNP	O	_	shit	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	one	_	one	CD	O	_	1	_	0	IGNORE	true
14	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	10	APP_op2	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	17	MOD_s	true
17	choices	_	choice	NNS	O	(d<root> / --LEX--)	choose-01	()	14	APP_o	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	_	1	_	0	IGNORE	true
20	made	_	make	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@m@@luncheon, 7@@p@@this, 16@@b2@@good-02, 10@@a@@and, 4@@p@@wed-01, 14@@s@@include-91, 17@@d@@choose-01, 2@@l@@have-03, 1@@d@@i, 16@@m@@most, 8@@p@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	5	APP_op1	true
3	in	_	in	IN	O	_	after	_	0	IGNORE	true
4	two_weeks_ago	_name_	ago	RB	O	(d<root> / --LEX--)	10	()	2	APP_o	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	APP_op2	true
7	the	_	the	DT	O	_	bad-07	_	0	IGNORE	true
8	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	9	MOD_s	true
9	pedicure	_	pedicure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	that	_	that	WDT	O	_	1	_	0	IGNORE	true
11	I	i	I	PRP	O	_	1	_	0	IGNORE	true
12	have	_	have	VBP	O	_	1	_	0	IGNORE	true
13	had	_	have	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	MOD_s	true
14	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
15	my	_	my	PRP$	O	_	1	_	0	IGNORE	true
16	life	_	life	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@have-03, 4@@d@@10, 9@@d@@pedicure, 16@@n@@life, 8@@m@@most, 8@@b2@@bad-07, 6@@s@@have-03, 5@@a@@and, 2@@s@@be-located-at-91, 1@@d@@i]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	expect	_	expect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
5	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	requests	_	request	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
16	that_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@p@@even, 1@@s@@cause-01, 15@@s@@ask-02, 9@@explicitanon0@@some, 8@@s@@know-01, 12@@d@@request-01, 5@@d@@they, 3@@explicitanon0@@-, 4@@s@@expect-01, 2@@d@@we, 16@@n@@_NAME_]
sentence=1	On	on	on	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	event	_	event	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	quote	_	quote	UH	O	(r<root> / --LEX--  :ARG0 (y<s>)  :source-of (f<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_o	true
8	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
9	done,	_	done,	NNS	O	_	and	_	0	IGNORE	true
10	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
13	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1000	(mod())	15	MOD_mod	true
14	of	_	of	IN	O	_	100000000	_	0	IGNORE	true
15	dollars	_	dollar	NNS	O	(m<root> / --LEX--  :unit-of (a<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
16	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	competition	_	competition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	compete-01	(s())	11	MOD_s	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@local-02, 15@@m@@dollar, 7@@d@@i, 3@@n@@recent, 13@@explicitanon0@@1000, 4@@p@@event, 11@@s@@come-01, 5@@r@@quote-01, 19@@s@@compete-01, 10@@d@@they]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	cant	_	cant	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	speak	_	speak	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
4	for	_	for	IN	O	_	and	_	0	IGNORE	true
5	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	tests	_	test	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_op1	true
9	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
10	appointments	_	appointment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	likely-01	(mod())	18	MOD_mod	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	best	_	good	JJS	O	(m2<root> / most  :degree-of (g / --LEX--  :ARG1 (c<s>)))	good-02	(s())	18	MOD_s	true
18	interests	_	interest	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	23	APP_op1	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	us	_	us	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	(the	_	(the	ADD	O	_	_NAME_	_	0	IGNORE	true
22	patient)	_	patient)	NNS	O	_	cause-01	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
24	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
25	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
26	the	_	the	DT	O	_	-	_	0	IGNORE	true
27	ability	_	ability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	capable-01	(s())	23	APP_op2	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	decline	_	decline	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_s	true
30	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
31	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	suggest	_	suggest	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
34	to	_	to	IN	O	_	and	_	0	IGNORE	true
35	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@contrast-01, 12@@s@@recommend-01, 8@@d@@test-01, 23@@a@@and, 18@@s@@interest-01, 3@@s@@speak-01, 14@@p@@likely-01, 2@@explicitanon0@@-, 10@@d@@appointment, 24@@d@@you, 9@@a@@or, 7@@p@@any, 1@@d@@i, 17@@m2@@most, 27@@s@@capable-01, 30@@d@@anything, 5@@d@@they, 20@@p@@us, 29@@s@@decline-01, 17@@g@@good-02, 33@@s@@suggest-01, 11@@d@@they]
sentence=1	Everyone	everyone	Everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
2	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	14	APP_op1	true
3	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	signature	_	signature	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	dish	_	dish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	ingredients	_	ingredient	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
10	spices	_	spice	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	fun	_	fun	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op2	true
18	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	watching	_	watch	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
20	it	_	it	PRP	O	_	i	_	0	IGNORE	true
21	cook	_	cook	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_s	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@p@@signature, 8@@d@@ingredient, 2@@f@@possible-01, 9@@o@@and, 13@@s@@want-01, 6@@d@@dish, 10@@d@@spice, 19@@s@@watch-01, 14@@a@@and, 17@@s@@fun-01, 1@@d@@Everyone, 3@@s@@get-01, 21@@d@@cook-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	played	_	play	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op1	true
3	dumb	_	dumb	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	15	APP_op1	true
5	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_op2	true
6	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	questions	_	question	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	answers	_	answer	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	to	_	to	IN	O	_	thing	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
16	he	_	he	PRP	O	_	$LEMMA$	_	15	IGNORE	true
17	responded	_	respond	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	15	APP_op2	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	half	_	half	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	truths	_	truth	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	falsehoods	_	falsehood	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
25	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[10@@n@@already, 11@@s@@know-01, 19@@p@@half, 1@@d@@i, 21@@a@@and, 4@@a@@and, 24@@d@@falsehood, 13@@s@@answer-01, 3@@d@@dumb, 7@@d@@question-01, 5@@s@@ask-01, 20@@d@@truth, 23@@explicitanon0@@few, 15@@a@@and, 17@@s@@respond-01, 2@@s@@play-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	dropped	_	drop	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	sheet	_	sheet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	metal	_	metal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	copied	_	copy	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
12	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
13	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
14	th	_	th	UH	O	_	cause-01	_	0	IGNORE	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
17	needing	_	need	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	be	_	be	VB	O	_	person	_	0	IGNORE	true
20	replaced	_	replace	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
21	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[11@@s@@copy-01, 7@@d@@piece, 6@@p@@metal, 5@@p@@sheet, 17@@s@@need-01, 12@@s@@cause-01, 10@@s@@need-01, 2@@s@@drop-01, 1@@d@@i, 20@@d@@replace-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	APP_s	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	cancel	_	cancel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
10	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op1	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	$50	_	$50	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
13	fee	_	fee	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	(which	_	(which	NFP	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	staff	_	staff	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	signed	_	sign	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-up-03	(s())	17	MOD_s	true
20	me	_	I	PRP	O	_	i	_	0	IGNORE	true
21	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
22	stated	_	state	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_o	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	would	_	would	MD	O	_	i	_	0	IGNORE	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	have	_	have	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	22	APP_o	true
27	to	_	to	TO	O	_	and	_	0	IGNORE	true
28	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	APP_o	true
29	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
30	I	i	I	PRP	O	_	1	_	0	IGNORE	true
31	had	_	have	VBD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-03	(mod(), s())	26	MOD_mod	true
32	proof	_	proof	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	of	_	of	IN	O	_	prove-01	_	0	IGNORE	true
34	moving)	_	moving)	NN	O	_	$LEMMA$	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	31	APP_s	true
36	being	_	be	VBG	O	_	person	_	0	IGNORE	true
37	spoken	_	speak	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_op2	true
38	to	_	to	IN	O	_	-	_	0	IGNORE	true
39	in	_	in	IN	O	_	i	_	0	IGNORE	true
40	a	_	a	DT	O	_	thing	_	0	IGNORE	true
41	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	belittling	_	belittling	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	37	MOD_s	true
43	manner	_	manner	NN	O	_	$LEMMA$	_	0	IGNORE	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@cancel-01, 19@@s@@sign-up-03, 7@@s@@contrast-01, 1@@d@@i, 12@@explicitanon0@@_NUMBER_, 13@@d@@fee, 22@@c@@state-01, 28@@s@@pay-01, 17@@d@@person, 37@@d@@speak-01, 25@@explicitanon0@@-, 3@@s@@possible-01, 35@@a@@and, 9@@w@@after, 26@@o@@obligate-01, 8@@p@@only, 16@@p@@staff, 10@@s@@pay-01, 6@@d@@it, 42@@s@@belittling-01, 41@@s@@very, 31@@o@@have-03]
sentence=1	Well,	well,	Well,	NNP	O	_	and	_	0	IGNORE	true
2	again,	_	again,	NNP	O	_	and	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
4	am	_	be	VBP	O	_	person	_	0	IGNORE	true
5	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	faced	_	face	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	tax	_	tax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	bill	_	bill	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	$6,000+,	_	$6,000+,	NNP	O	_	1	_	0	IGNORE	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	due	_	due	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	on	_	on	IN	O	_	and	_	0	IGNORE	true
16	April_15,_2010	_name_	2010	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
18	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
19	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	Rod	_name_	Rod	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	23	APP_s	true
21	has	_	have	VBZ	O	_	obligate-01	_	0	IGNORE	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	say	_	say	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	17	APP_op2	true
24	to	_	to	IN	O	_	and	_	0	IGNORE	true
25	the	_	the	DT	O	_	-	_	0	IGNORE	true
26	matter	_	matter	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	is	_	be	VBZ	O	_	and	_	0	IGNORE	true
28	'well,	_	'well,	XX	O	_	-	_	0	IGNORE	true
29	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o2	true
30	won't	_	won't	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
31	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	23	MOD_s	true
32	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
33	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	true
34	a	_	a	DT	O	_	1	_	0	IGNORE	true
35	penalty.	_	penalty.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
36	'	_	'	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[20@@n@@_NAME_, 10@@d@@bill-01, 30@@explicitanon0@@-, 33@@s@@pay-01, 13@@p@@all, 14@@p@@due, 35@@d@@penalty., 29@@d@@you, 9@@p@@tax-01, 3@@d@@i, 17@@a@@and, 5@@n@@now, 23@@b@@say-01, 18@@p@@all, 31@@o@@obligate-01, 16@@explicitanon0@@_NUMBER_, 20@@p@@person, 6@@s@@face-01, 26@@a@@matter]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	neglected	_	neglect	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	tell	_	tell	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_o	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
9	working	_	work	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	at	_	at	IN	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	store	_	store	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	dining	_	dining	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	room	_	room	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	table	_	table	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	21	APP_s	true
20	had	_	have	VBD	O	_	person	_	0	IGNORE	true
21	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_o	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	was	_	be	VBD	O	_	person	_	0	IGNORE	true
25	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
28	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
29	in	_	in	RB	O	_	$LEMMA$	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@d@@i, 28@@s@@come-01, 1@@d@@He, 12@@d@@store, 16@@p@@room, 17@@d@@table, 15@@p@@dining, 21@@s@@order-01, 25@@s@@suppose-02, 5@@b@@tell-01, 8@@d@@person, 3@@c@@neglect-01, 2@@p@@also, 9@@t@@work-01, 7@@p@@other]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
3	took	_	take	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (f<s>)  :ARG2 (i<o2>))	$LEMMA$-10	(s(s_UNIFY_o2()), o())	0	ROOT	true
4	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	while	_	while	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
8	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
9	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	liked	_	like	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[3@@t@@take-10, 1@@p@@well, 6@@d@@while, 8@@s@@find-01, 4@@d@@us, 9@@d@@one, 12@@s@@like-01]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	figure	_	figure	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
4	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
5	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	want	_	want	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	21	MOD_mod	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	fix	_	fix	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	9	MOD_mod	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	fence	_	fence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	installed	_	instal	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
19	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
20	I'll	i'll	I'll	NNP	O	_	person	_	0	IGNORE	true
21	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
25	let	_	let	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	23	MOD_mod	true
26	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
27	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
28	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
29	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
30	about	_	about	IN	O	_	thing	_	0	IGNORE	true
31	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
32	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	treat	_	treat	VBP	O	(t<root> / thing  :ARG2-of (r / --LEX--  :ARG1 (g<o>)  :ARG0 (g2<s>)))	$LEMMA$-01	(s(), o())	25	APP_o	true
34	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
35	once	_	once	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
36	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-03	(mod(), s())	33	MOD_mod	true
38	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
39	money!!	_	money!!	NNS	O	_	i	_	0	IGNORE	true
40	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[33@@r@@treat-01, 11@@d@@time, 3@@s@@figure-01, 35@@n@@once, 7@@d@@want-01, 15@@d@@fence, 1@@s@@cause-01, 25@@s@@let-01, 29@@s@@know-01, 26@@d@@everyone, 38@@d@@your, 21@@s@@take-01, 18@@s@@instal-01, 9@@s@@take-01, 37@@s@@have-03, 5@@d@@they, 2@@d@@i, 13@@i@@fix-02, 28@@s@@possible-01, 6@@explicitanon0@@-, 33@@t@@thing, 23@@d@@time, 34@@d@@customer]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
6	a	_	a	DT	O	_	score-on-sc$LEMMA$le-91	_	0	IGNORE	true
7	$99	_	$99	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
8	rate,	_	rate,	CD	O	_	$LEMMA$	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
11	booked	_	book	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@d@@room, 10@@d@@i, 7@@p@@_NUMBER_, 11@@s@@book-01, 2@@s@@have-03, 1@@d@@They]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	email	_	email	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	3	MOD_mod	true
3	confirmation	_	confirmation	NN	O	(d<root> / --LEX--)	clarify-10	()	10	APP_s	true
4	(which	_	(which	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	car)	_	car)	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	warned	_	warn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	about	_	about	IN	O	_	name	_	0	IGNORE	true
12	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	suitcases,	_	suitcases,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	declaring	_	declare	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
15	that	_	that	IN	O	_	instead-of-91	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_dom	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	innkeepers,	_	innkeepers,	NNS	O	_	mean-01	_	0	IGNORE	true
19	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	longshoreman	_	longshoreman	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	14	APP_s	true
21	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[20@@r@@longshoreman, 14@@s@@declare-01, 2@@p@@email-01, 19@@explicitanon0@@-, 10@@s@@warn-01, 5@@d@@i, 16@@d@@we, 12@@p@@large, 6@@s@@read-01, 3@@d@@clarify-10]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	would	_	would	MD	O	_	thing	_	0	IGNORE	true
5	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	idea	_	idea	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
9	to	_	to	TO	O	_	concern-02	_	0	IGNORE	true
10	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_dom	true
11	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	few	_	few	JJ	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	$LEMMA$	()	18	APP_s	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
16	liked	_	like	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
17	would	_	would	MD	O	_	thing	_	0	IGNORE	true
18	look	_	look	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	APP_s	true
19	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
20	on	_	on	IN	O	_	thing	_	0	IGNORE	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	model	_	model	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	(by	_	(by	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	looking	_	look	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	dress	_	dress	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
28	online)	_	online)	ADD	O	_	and	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@like-01, 7@@s@@good-02, 10@@s@@see-01, 8@@r@@idea, 24@@b@@look-01, 26@@d@@dress, 22@@d@@model, 13@@t@@thing, 13@@explicitanon0@@few, 18@@s@@look-02, 2@@s@@think-01, 1@@d@@i, 23@@p@@(by]
sentence=1	Aside	aside	aside	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	from	_	from	IN	O	_	except-01	_	0	IGNORE	true
3	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
5	*mystery*,	_	*mystery*,	NN	O	_	except-01	_	0	IGNORE	true
6	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	13	MOD_mod	true
7	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	6	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	sales	_	sale	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	sell-01	(mod())	10	MOD_mod	true
10	ladies	_	lady	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
11	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	13	MOD_o	true
12	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	comfortable	_	comfortable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
14	telling	_	tell	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	13	MOD_mod	true
17	wrong	_	wrong	RB	O	(d<root> / --LEX--)	$LEMMA$-04	()	14	APP_o	true
18	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	about	_	about	IN	O	_	thing	_	0	IGNORE	true
21	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
22	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	dress	_	dress	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
24	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	loved	_	love	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
27	compared	_	compare	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	13	APP_o	true
28	to	_	to	IN	O	_	thing	_	0	IGNORE	true
29	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	36	MOD_mod	true
30	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	6	MOD_o	true
31	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	dresses	_	dress	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	that	_	that	WDT	O	_	member	_	0	IGNORE	true
34	I	i	I	PRP	O	_	1	_	0	IGNORE	true
35	was	_	be	VBD	O	_	person	_	0	IGNORE	true
36	trying	_	try	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	MOD_s	true
37	on	_	on	RP	O	_	thing	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@explicitanon0@@1, 30@@s@@include-91, 23@@d@@dress, 16@@s@@so, 14@@s@@tell-01, 17@@d@@wrong-04, 22@@p@@another, 11@@s@@person, 36@@s@@try-01, 12@@s@@quite, 9@@p@@sell-01, 10@@d@@lady, 26@@s@@love-01, 4@@p@@little, 7@@s@@include-91, 29@@explicitanon0@@1, 27@@s@@compare-01, 3@@p@@that, 13@@s@@comfortable-02, 32@@d@@dress]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	waited	_	wait	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_op1	true
3	about_20_minutes	_name_	minute	NNS	O	(d<root> / --LEX--)	_NAME_	()	2	APP_o	true
4	in	_	in	IN	O	_	after	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	store	_	store	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
7	part	_	part	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	2	MOD_mod	true
8	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
9	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_op1	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	assist	_	assist	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_s	true
14	me	_	I	PRP	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	35	APP_s	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	pull	_	pull	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
21	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
22	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	shop	_	shop	NN	O	(w2<root> / --LEX--  :destination-of (w<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
26	(that	_	(that	WP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
27	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
28	apparently	_	apparently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	apparent	(s())	32	MOD_s	true
29	what	_	what	WP	O	_	and	_	0	IGNORE	true
30	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
31	are	_	be	VBP	O	_	person	_	0	IGNORE	true
32	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	35	MOD_o	true
33	to	_	to	IN	O	_	thing	_	0	IGNORE	true
34	do,	_	do,	NN	O	_	thing	_	0	IGNORE	true
35	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
36	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
37	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	signs	_	sign	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_s	true
39	pointing	_	point	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	38	MOD_s	true
40	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
43	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
44	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
45	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	reason	_	reason	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
47	kept	_	keep	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	58	APP_op3	true
48	inside	_	inside	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
49	the	_	the	DT	O	_	he	_	0	IGNORE	true
50	garage,	_	garage,	NNS	O	_	-	_	0	IGNORE	true
51	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	35	MOD_s	true
52	you	_	you	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	35	MOD_s	true
53	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	54	MOD_mod	true
54	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	58	APP_op1	true
55	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
56	drving	_	drve	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	54	APP_s	true
57	up,	_	up,	NNS	O	_	thing	_	0	IGNORE	true
58	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	35	APP_o	true
59	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
60	purposely	_	purposely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	deliberate	(mod())	61	MOD_mod	true
61	block	_	block	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	58	APP_op2	true
62	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
63	front	_	front	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	64	MOD_mod	true
64	pull-up	_	pull-up	NN	O	(d<root> / --LEX--)	$LEMMA$	()	61	APP_o	true
65	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
66	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	68	MOD_mod	true
67	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	68	MOD_mod	true
68	Sear's	_name_	sear's	IN	O	(d<root> / --LEX--)	$LEMMA$	()	61	APP_s	true
69	use)	_	use)	NNP	O	_	$LEMMA$	_	0	IGNORE	true
70	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[54@@s@@see-01, 56@@d@@drve-01, 68@@d@@sear's, 13@@s@@assist-01, 58@@a@@and, 63@@p@@front, 48@@b@@inside, 22@@d@@car, 32@@s@@suppose-02, 39@@s@@point-01, 30@@d@@you, 38@@d@@sign, 26@@explicitanon0@@(that, 37@@p@@big, 15@@a@@and, 7@@h@@part, 2@@s@@wait-01, 60@@t@@deliberate, 53@@explicitanon0@@-, 67@@p@@other, 6@@d@@store, 64@@d@@pull-up, 18@@s@@tell-01, 1@@d@@i, 41@@p@@that, 9@@d@@anyone, 11@@s@@possible-01, 51@@s@@cause-01, 42@@t@@way, 52@@s@@you, 47@@s@@keep-01, 3@@d@@_NAME_, 20@@s@@pull-01, 28@@s@@apparent, 25@@w2@@shop, 61@@s@@block-01, 8@@w@@before, 45@@p@@some, 66@@p@@all, 35@@s@@contrast-01, 46@@p@@reason, 17@@n@@then]
sentence=1	A_few_minutes	_name_	minute	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
4	left,	_	left,	NNP	O	_	and	_	0	IGNORE	true
5	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	informed	_	inform	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	APP_op2	true
10	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
11	"I"	"i"	"i"	NN	O	_	and	_	0	IGNORE	true
12	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-15	(s(), o())	9	APP_o	true
13	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
14	wheel	_	wheel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	lock	_	lock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	(which	_	(which	-LRB-	O	_	cause-01	_	0	IGNORE	true
17	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
18	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	12	APP_o	true
19	have	_	have	VB	O	_	obligate-01	_	0	IGNORE	true
20	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-12	(s())	18	APP_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	car)	_	car)	NN	O	_	and	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@leave-12, 18@@s@@recommend-01, 15@@d@@lock, 8@@a@@and, 3@@d@@i, 9@@s@@inform-01, 7@@s@@call-02, 14@@p@@wheel, 1@@n@@_NAME_, 12@@s@@leave-15, 2@@w@@after, 17@@d@@they]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	employees	_	employee	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	employ-01	(s())	8	APP_dom	true
3	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	Sear's	_name_	Sear's	:	O	(d<root> / --LEX--)	_NAME_	()	2	APP_s	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	completely	_	completely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	complete-02	(s())	8	MOD_s	true
8	apathetic	_	apathetic	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
10	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
11	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	seem	_	seem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op2	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	sort	_	sort	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	management	_	management	NN	O	(d<root> / --LEX--)	manage-01	()	12	APP_s	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	true
21	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	MOD_s	true
22	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@complete-02, 15@@p@@any, 8@@r@@apathetic, 22@@s@@see-01, 12@@s@@seem-01, 21@@s@@possible-01, 4@@p@@this, 2@@s@@employ-01, 20@@d@@i, 5@@d@@_NAME_, 18@@d@@manage-01, 16@@p@@sort, 11@@explicitanon0@@-, 9@@a@@and]

