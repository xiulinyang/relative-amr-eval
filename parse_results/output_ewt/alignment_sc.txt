sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	reminds	_	remind	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	much	_	much	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	of	_	of	IN	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	ARVN	_name_	ARVN	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	officers	_	officer	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	2	APP_o	true
10	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
11	were	_	be	VBD	O	_	person	_	0	IGNORE	true
12	secretly	_	secretly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	secret	(mod())	13	MOD_mod	true
13	working	_	work	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	side	_	side	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	Vietnam	_name_	Vietnam	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[8@@n@@_NAME_, 9@@o@@officer, 19@@n@@_NAME_, 1@@d@@It, 19@@c@@country, 17@@d@@side, 12@@p@@secret, 5@@s@@much, 9@@h@@have-org-role-91, 16@@p@@other, 4@@s@@too, 2@@s@@remind-01, 8@@g@@government-organization, 13@@t@@work-01, 9@@p@@person]
sentence=1	(Kut	(kut	(Kut	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_op1	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	southeastern	_	southeastern	JJ	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	southeast	(mod(), poss())	6	MOD_mod	true
5	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_poss	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	6	APP_op2	true
8	an	_	an	DT	O	_	person	_	0	IGNORE	true
9	overwhelmingly	_	overwhelmingly	RB	O	(s<root> / --LEX--  :ARG2 (g<s>))	overwhelm-01	(s())	10	MOD_s	true
10	Shiite	_name_	shiite	JJ	O	(d<root> / --LEX--)	_NAME_	()	7	APP_s	true
11	population,	_	population,	NNS	O	_	oppose-01	_	0	IGNORE	true
12	who	_	who	WP	O	_	name	_	0	IGNORE	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	lookout	_	lookout	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
17	for	_	for	IN	O	_	-	_	0	IGNORE	true
18	Baathist	_name_	Baathist	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	saboteurs	_	saboteur	VBZ	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	16	APP_o	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
21	willingly	_	willingly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	will-02	(s())	22	MOD_s	true
22	turn	_	turn	VB	O	(d<root> / --LEX--)	$LEMMA$-over-12	()	20	APP_op2	true
23	them	_	they	PRP	O	_	person	_	0	IGNORE	true
24	in	_	in	RP	O	_	i	_	0	IGNORE	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 18@@p@@_NAME_, 9@@s@@overwhelm-01, 4@@h@@southeast, 19@@e2@@saboteur, 21@@s@@will-02, 16@@s@@lookout-01, 22@@d@@turn-over-12, 1@@c@@city, 7@@s@@have-03, 10@@d@@_NAME_, 20@@a@@and, 6@@a@@and, 5@@c@@country, 19@@p2@@person, 5@@n@@_NAME_]
sentence=1	Guerrillas	guerrillas	guerrilla	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	near	_	near	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
3	Hawijah	_name_	Hawijah	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
4	launched	_	launch	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	an	_	an	DT	O	_	1	_	0	IGNORE	true
6	attack	_	attack	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
7	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
8	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	6	MOD_s	true
9	6	_	6	CD	O	(p<root> / person  :quant (n / --LEX--))	_NUMBER_	()	8	APP_o	true
10	dead,	_	dead,	NNS	O	_	and	_	0	IGNORE	true
11	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-91	(s(), o())	6	MOD_o	true
12	4	_	4	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
13	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	soldiers	_	soldier	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@s@@near-02, 8@@s@@leave-13, 3@@c@@city, 9@@n@@_NUMBER_, 9@@p@@person, 13@@c@@country, 1@@d@@guerrilla, 6@@d@@attack-01, 3@@n@@_NAME_, 13@@n@@_NAME_, 12@@explicitanon0@@_NUMBER_, 11@@s@@include-91, 4@@s@@launch-01, 14@@d@@soldier]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	setting	_	set	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	road	_	road	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	blocks	_	block	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	at	_	at	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	positions	_	position	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	war	_	war	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	year,	_	year,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
20	indicates	_	indicate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
21	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	are	_	be	VBP	O	_	person	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
25	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	20	APP_o	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@d@@position, 17@@p@@last, 10@@s@@same-01, 25@@d@@person, 20@@s@@indicate-01, 24@@s@@same-01, 3@@b@@set-01, 5@@p@@road, 6@@d@@block-01, 1@@d@@They, 9@@p@@exact, 16@@n@@war]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
4	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_op1	true
7	do	_	do	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	6	APP_s	true
8	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
10	really,	_	really,	NNP	O	_	multi-sentence	_	0	IGNORE	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	23	APP_s	true
12	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	suggesting	_	suggest	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
17	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-out-17	(s())	19	APP_op1	true
18	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	14	APP_o	true
20	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	APP_op2	true
21	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	are	_	be	VBP	O	_	person	_	0	IGNORE	true
23	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_op2	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	dream	_	dream	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	26	MOD_mod	true
26	land	_	land	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@we, 17@@s@@go-out-17, 23@@s@@live-01, 20@@s@@fight-01, 1@@a@@and, 14@@s@@suggest-01, 11@@d@@person, 5@@d@@we, 25@@p@@dream-01, 9@@d@@it, 7@@b@@do-02, 6@@s@@possible-01, 4@@d@@nothing, 19@@a@@and, 26@@b@@land]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	rumours	_	rumour	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op1	true
4	about	_	about	IN	O	_	cause-01	_	0	IGNORE	true
5	preparations	_	preparation	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	prepare-02	(s(), o())	3	APP_s	true
6	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
7	slum	_	slum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	dwellers	_	dweller	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	$LEMMA$-01	(s())	5	APP_s	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	looting	_	loot	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	loot-01	(mod())	12	MOD_mod	true
12	spree	_	spree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
13	against	_	against	IN	O	_	-	_	0	IGNORE	true
14	banks,	_	banks,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	governmental	_	governmental	JJ	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	16	APP_op1	true
16	and	_	and	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
17	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	property	_	property	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
19	similar	_	similar	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	resemble-01	(s())	12	MOD_s	true
20	to	_	to	IN	O	_	thing	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
23	that	_	that	WDT	O	_	event	_	0	IGNORE	true
24	took	_	take	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
25	place	_	place	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	April,	_name_	april,	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	28	MOD_mod	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
29	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	32	APP_s	true
30	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	28	APP_op3	true
31	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	overheard	_	overhear	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_op2	true
33	youngsters	_	youngster	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
34	in	_	in	IN	O	_	i	_	0	IGNORE	true
35	my	_	my	PRP$	O	_	include-91	_	0	IGNORE	true
36	neighbourhood	_	neighbourhood	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
37	joking	_	joke	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	APP_op1	true
38	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
39	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	32	APP_o	true
41	saying	_	say	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	APP_op2	true
42	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_o	true
43	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
44	"This	"this	"This	JJR	O	_	thing	_	0	IGNORE	true
45	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
46	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
47	will	_	will	MD	O	_	i	_	0	IGNORE	true
48	be	_	be	VB	O	_	person	_	0	IGNORE	true
49	the	_	the	DT	O	_	ordinal-entity	_	0	IGNORE	true
50	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	45	MOD_mod	true
51	to	_	to	IN	O	_	-	_	0	IGNORE	true
52	loot,	_	loot,	NNP	O	_	and	_	0	IGNORE	true
53	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
54	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	55	MOD_mod	true
55	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	MOD_s	true
56	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_o	true
57	the	_	the	DT	O	_	thing	_	0	IGNORE	true
58	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
59	time"	_	time"	NNS	O	_	contrast-01	_	0	IGNORE	true
60	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@s@@resemble-01, 12@@d@@spree, 11@@p@@loot-01, 37@@s@@joke-01, 10@@p@@another, 42@@d@@thing, 18@@d@@property, 32@@s@@overhear-01, 30@@s@@person, 8@@w@@dweller-01, 7@@d@@slum, 31@@n@@already, 3@@s@@rumour-01, 27@@p@@and, 46@@d@@we, 55@@s@@get-01, 16@@o@@and, 41@@s@@say-01, 58@@p@@last, 29@@d@@i, 50@@o@@ordinal-entity, 8@@p@@person, 5@@s@@prepare-02, 33@@d@@youngster, 15@@g@@government-organization, 15@@g2@@govern-01, 45@@n@@time, 28@@a@@and, 50@@explicitanon0@@1, 40@@a@@and, 36@@b@@neighbourhood, 26@@p@@last, 54@@explicitanon0@@-, 17@@s@@public-02, 56@@d@@anything]
sentence=1	Someone	someone	Someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	called	_	call	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	MOD_s	true
4	himself	_	himself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	Abu_Hafs	_name_	Hafs	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
6	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	the_Ibn_Al-Khattab_Brigades	_name_	Brigades	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	3	APP_o2	true
8	(another	_	(another	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
9	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	group)	_	group)	NNS	O	_	have-org-role-91	_	0	IGNORE	true
11	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	21	APP_op1	true
12	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	Al-Jazeera	al-jazeera	Al-Jazeera	NNP	O	(p<root> / publication  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	describing	_	describe	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	enormous	_	enormous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	casualties	_	casualty	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
20	Marines	_name_	Marines	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
22	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	sweared	_	swear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
24	that	_	that	IN	O	_	name	_	0	IGNORE	true
25	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	26	MOD_mod	true
26	soldiers	_	soldier	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
27	were	_	be	VBD	O	_	person	_	0	IGNORE	true
28	mutilating	_	mutilate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_o	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	bodies	_	body	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	28	APP_o	true
31	of	_	of	IN	O	_	person	_	0	IGNORE	true
32	dead	_	dead	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
33	insurgents	_	insurgent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_poss	true
34	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[20@@c@@country, 25@@n@@_NAME_, 13@@p@@publication, 32@@s@@dead-01, 7@@n@@_NAME_, 5@@p@@person, 9@@s@@new-01, 33@@d@@insurgent, 14@@s@@describe-01, 25@@c@@country, 1@@d@@Someone, 30@@m@@body, 7@@o2@@organization, 20@@n@@_NAME_, 11@@s@@be-located-at-91, 17@@d@@casualty, 13@@n@@_NAME_, 23@@s@@swear-01, 8@@n@@_NAME_, 21@@a@@and, 3@@b@@call-01, 16@@p@@enormous, 5@@n@@_NAME_, 28@@s@@mutilate-01, 26@@d@@soldier]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	heavily	_	heavily	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	heavy	(mod())	4	MOD_mod	true
4	promoted	_	promote	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
6	the_Australasian_Radiation_Protection_Society	_name_	Society	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	press	_	press	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	release	_	release	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
11	titled	_	title	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	THE_MYTHS_OF_CHERNOBYL	_name_	CHERNOBYL	NNP	O	(d<root> / --LEX--)	_NAME_	()	11	APP_o	true
13	which	_	which	WDT	O	_	name	_	0	IGNORE	true
14	contained	_	contain	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
16	following	_	follow	VBG	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-04	()	14	APP_o	true
17	:	_	:	:	O	_	cause-01	_	0	IGNORE	true

nodealignment=[10@@l@@release, 9@@p@@press, 12@@d@@_NAME_, 1@@d@@this, 3@@t@@heavy, 16@@d@@follow-04, 14@@s@@contain-01, 16@@t@@thing, 6@@o2@@organization, 4@@s@@promote-02, 6@@n@@_NAME_, 11@@s@@title-01]
sentence=1	However,	_name_	however,	CD	O	_	and	_	0	IGNORE	true
2	in	_	in	IN	O	_	12	_	0	IGNORE	true
3	April_2001,	_name_	2001,	CD	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	IAEA	_name_	IAEA	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	published	_	publish	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	Fifteen_Years	_name_	Years	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	the_Chernobyl_Accident_-_Lessons	_name_	lesson	NNS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	learned.	_	learned.	NN	O	_	name	_	0	IGNORE	true
11	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
12	contradict	_	contradict	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	earlier	_	early	JJR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	early	(mod())	15	MOD_mod	true
15	reports	_	report	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@o2@@organization, 7@@d@@Years, 6@@s@@publish-01, 14@@e@@early, 14@@m@@more, 9@@n@@_NAME_, 12@@s@@contradict-01, 5@@n@@_NAME_, 15@@d@@report-01, 8@@n@@after]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	links	_	link	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	present	_	present	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	viewpoints	_	viewpoint	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	existed	_	exist	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	exist	_	exist	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
12	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	disaster	_	disaster	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
15	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
16	Chernobyl	_name_	Chernobyl	NNP	O	(d<root> / --LEX--)	_NAME_	()	15	APP_o	true
17	:	_	:	:	O	_	mean-01	_	0	IGNORE	true

nodealignment=[15@@s@@call-01, 10@@p@@still, 14@@a@@disaster, 3@@s@@present-01, 8@@s@@exist-01, 6@@d@@viewpoint, 2@@d@@link-01, 11@@s@@exist-01, 1@@p@@this, 5@@explicitanon0@@many, 16@@d@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
3	be	_	be	VB	O	_	person	_	0	IGNORE	true
4	interested	_	interested	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	interest-01	(o(s()))	0	ROOT	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	hearing	_	hear	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
8	conclusions	_	conclusion	NNS	O	(d<root> / --LEX--)	conclude-01	()	11	APP_op1	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	reached	_	reach	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
12	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
13	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	found	_	find	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_op2	true
15	that	_	that	DT	O	_	thing	_	0	IGNORE	true
16	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
17	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	convincing	_	convincing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	convince-01	(s())	14	MOD_s	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@s@@convince-01, 8@@d@@conclude-01, 4@@o@@interest-01, 11@@a@@and, 14@@d@@find-01, 9@@d@@you, 17@@s@@most, 10@@s@@reach-01, 1@@d@@i, 6@@s@@hear-01]
sentence=1	Remember	remember	remember	VB	O	(u<root> / --LEX--  :ARG0 (y / you)  :ARG1 (s<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	and	_	0	IGNORE	true
3	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	shoe	_	shoe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
5	sizing	_	sizing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
6	machines	_	machine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	radiation	_	radiation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	radiate-01	(mod())	13	MOD_mod	true
13	xray	_	xray	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true

nodealignment=[1@@u@@remember-01, 13@@p@@xray, 1@@y@@you, 14@@explicitanon0@@interrogative, 5@@s@@sizing-01, 6@@d@@machine, 12@@p@@radiate-01, 4@@d@@shoe, 10@@p@@form, 3@@p@@old]
sentence=1	S.	_name_	S.	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_op2	true
4	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	an	_	an	DT	O	_	thing	_	0	IGNORE	true
6	acquaintance	_	acquaintance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	who	_	who	WP	O	_	name	_	0	IGNORE	true
8	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
9	hosted	_	host	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	13	MOD_mod	true
13	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
15	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
16	years;	_name_	years;	NNP	O	_	and	_	0	IGNORE	true
17	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
18	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
19	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	21	MOD_mod	true
20	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	breaks	_	break	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@acquaintance, 18@@s@@see-01, 1@@n@@_NAME_, 15@@explicitanon0@@many, 12@@p@@this, 20@@p@@little, 3@@d@@i, 4@@s@@have-03, 24@@d@@heart, 10@@explicitanon0@@several, 13@@d@@child, 2@@a@@and, 19@@p@@this, 22@@s@@break-01, 9@@s@@host-01, 21@@d@@one, 1@@p@@person]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	4	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	1)_Assassinate	_name_	Assassinate	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op1	true
4	or	_	or	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
5	overthrow	_	overthrow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op2	true
6	Gen.	gen.	Gen.	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_o	true
7	Pervez_Musharraf,	_name_	Musharraf,	NFP	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	Pakistani	_name_	pakistani	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	military	_	military	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	"president"	_	"president"	''	O	_	name	_	0	IGNORE	true
12	who	_	who	WP	O	_	name	_	0	IGNORE	true
13	had	_	have	VBD	O	_	person	_	0	IGNORE	true
14	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	coup	_	coup	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
18	1999	_name_	1999	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	16	MOD_mod	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	has	_	have	VBZ	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
21	thrown	_	throw	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-in-02	(o2(), s(), o())	4	MOD_s	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_o2	true
27	against	_	against	IN	O	_	oppose-01	_	0	IGNORE	true
28	the	_	the	DT	O	_	oppose-01	_	0	IGNORE	true
29	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	21	MOD_mod	true
31	al-Qaeda	_name_	al-Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	30	APP_op2	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@n@@_NAME_, 21@@b@@throw-in-02, 14@@s@@make-01, 9@@c@@country, 26@@n@@_NAME_, 1@@d@@this, 18@@d@@date-entity, 3@@s@@Assassinate-01, 6@@d@@_NAME_, 31@@n@@_NAME_, 26@@c@@country, 24@@d@@lot, 16@@d@@coup, 4@@a@@or, 18@@explicitanon0@@_NUMBER_, 5@@s@@overthrow-01, 29@@n@@_NAME_, 31@@c2@@criminal-organization, 29@@c2@@criminal-organization, 10@@p@@military, 30@@a@@and]
sentence=1	MMA	_name_	MMA	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	captured	_	capture	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the_Northwest_Frontier_Province,	_name_	province,	NN	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	true
5	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	7	MOD_mod	true
7	shelters	_	shelter	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	Bin_Laden	_name_	Laden	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
9	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	al-Zawahiri,	al-zawahiri,	al-Zawahiri,	NNP	O	_	_NAME_	_	0	IGNORE	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	3	MOD_s	true
13	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	joint	_	joint	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	government	_	government	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	govern-01	(s(), o())	12	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	Baluchistan	_name_	Baluchistan	NNP	O	(p2<root> / province  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
19	Province,	province,	Province,	NNP	O	_	name	_	0	IGNORE	true
20	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
21	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Afghanistan	_name_	Afghanistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	border	_	border	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	16	APP_o	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@d@@_NAME_, 1@@d@@_NAME_, 8@@n@@_NAME_, 9@@d@@and, 15@@p@@joint, 18@@p2@@province, 16@@s@@govern-01, 23@@c@@country, 24@@s@@border-01, 18@@n@@_NAME_, 20@@p@@also, 12@@s@@be-located-at-91, 7@@s@@shelter-01, 3@@s@@capture-01, 23@@n@@_NAME_, 6@@p@@probable, 2@@p@@also]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	would	_	would	MD	O	_	name	_	0	IGNORE	true
3	thereby	_	thereby	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	cause-01	(mod())	4	MOD_mod	true
4	gain	_	gain	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
5	control	_	control	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	base	_	base	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	terrorist	_	terrorist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	operations,	_	operations,	NNP	O	_	and	_	0	IGNORE	true
13	which	_	which	WDT	O	_	name	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
16	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	nuclear	_	nuclear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nucleus	(mod())	18	MOD_mod	true
18	power	_	power	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@p@@power, 5@@s@@control-01, 11@@p@@terrorist, 3@@p@@cause-01, 9@@d@@base, 15@@p@@also, 17@@p@@nucleus, 8@@s@@major-02, 4@@c@@gain-02, 1@@d@@They]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	hand,	_	hand,	NFP	O	_	and	_	0	IGNORE	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
7	pressure	_	pressure	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	6	APP_s	true
8	Musharraf	_name_	Musharraf	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	take	_	take	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-out-11	(o(poss_UNIFY_s()))	14	APP_op1	true
11	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
12	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	uniform	_	uniform	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	7	APP_o2	true
15	run	_	run	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	APP_op2	true
16	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	president	_	president	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	in	_	in	IN	O	_	after	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	fair	_	fair	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
21	election,	_	election,	NNS	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	7	APP_o	true
23	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
24	repeal	_	repeal	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op2	true
25	the	_	the	DT	O	_	oppose-01	_	0	IGNORE	true
26	contentious	_	contentious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	controversy	(mod())	28	MOD_mod	true
27	"Legal	"legal	"Legal	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	Framework	framework	Framework	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
29	Order"	_name_	Order"	NNP	O	_	oppose-01	_	0	IGNORE	true
30	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	essentially	_	essentially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	essential	(mod())	32	MOD_mod	true
32	perpetuates	_	perpetuate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
33	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
34	dictatorship	_	dictatorship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
35	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@d@@president, 27@@p@@_NAME_, 8@@n@@_NAME_, 6@@s@@recommend-01, 26@@p@@controversy, 14@@a@@and, 32@@s@@perpetuate-01, 10@@l@@take-out-11, 5@@d@@it, 15@@s@@run-02, 7@@t@@pressure-01, 13@@m@@uniform, 20@@s@@fair-01, 31@@p@@essential, 22@@a@@and, 34@@d@@dictatorship, 28@@d@@Framework, 24@@s@@repeal-01]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	other,	_	other,	NNP	O	_	and	_	0	IGNORE	true
4	restrictions	_	restriction	NNS	O	(d<root> / --LEX--)	restrict-01	()	7	APP_s	true
5	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	lifted	_	lift	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	mainstream	_	mainstream	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
11	Muslim	_name_	muslim	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	League-N	league-n	League-N	NNS	O	(d<root> / --LEX--)	_NAME_	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
14	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_op2	true
15	People's_Party,	_name_	party,	NN	O	_	include-91	_	0	IGNORE	true
16	who	_	who	WP	O	_	name	_	0	IGNORE	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	MOD_s	true
18	defeat	_	defeat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	MMA	_name_	MMA	NNP	O	(d<root> / --LEX--)	_NAME_	()	18	APP_o	true
21	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
22	fair	_	fair	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
23	elections	_	election	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	elect-01	(mod())	18	MOD_mod	true
24	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	hogtied	_	hogtie	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
27	by	_	by	IN	O	_	person	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	secret	_	secret	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	police	_	police	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[11@@r@@religious-group, 13@@a@@and, 14@@n@@_NAME_, 11@@n@@_NAME_, 26@@o@@hogtie-01, 30@@d@@police, 29@@p@@secret, 7@@s@@lift-01, 14@@c@@country, 5@@s@@recommend-01, 12@@d@@_NAME_, 18@@s@@defeat-01, 17@@s@@possible-01, 20@@d@@_NAME_, 22@@s@@fair-01, 23@@n@@elect-01, 4@@d@@restrict-01, 25@@explicitanon0@@-, 10@@s@@mainstream-02]
sentence=1	Sharon's	sharon's	Sharon's	NNP	O	_	_NAME_	_	0	IGNORE	true
2	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	line	_	line	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
5	worked	_	work	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	tandem	_	tandem	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	Hamas's	hamas's	Hamas's	NNP	O	_	_NAME_	_	0	IGNORE	true
10	terrorism	_	terrorism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
11	to	_	to	TO	O	_	and	_	0	IGNORE	true
12	ratchet	_	ratchet	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-up-01	(mod(), s())	5	MOD_mod	true
13	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
14	tensions	_	tension	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	further	_	further	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
17	further,	_	further,	NNS	O	_	and	_	0	IGNORE	true
18	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
19	spill	_	spill	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-over-02	(s(), o())	14	MOD_s	true
20	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
21	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Muslim	_name_	muslim	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
26	serve	_	serve	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op2	true
27	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
28	a	_	a	DT	O	_	person	_	0	IGNORE	true
29	recruiting	_	recruiting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	recruit-01	(mod())	30	MOD_mod	true
30	tool	_	tool	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	26	APP_s	true
31	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
32	al-Qaeda	al-qaeda	al-Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	30	APP_poss	true
33	in	_	in	IN	O	_	i	_	0	IGNORE	true
34	its	_	its	PRP$	O	_	person	_	0	IGNORE	true
35	search	_	search	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	30	MOD_mod	true
36	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
37	agents	_	agent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
38	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	37	MOD_s	true
39	to	_	to	TO	O	_	person	_	0	IGNORE	true
40	hit	_	hit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	APP_o	true
41	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	40	APP_o	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@s@@serve-01, 15@@s@@further, 2@@s@@hard-02, 7@@t@@tandem, 41@@n@@_NAME_, 29@@p@@recruit-01, 24@@d@@world, 32@@n@@_NAME_, 23@@r@@religious-group, 37@@d@@agent, 23@@n@@_NAME_, 32@@c2@@criminal-organization, 41@@c@@country, 35@@i@@search-01, 10@@d@@terrorism, 40@@s@@hit-01, 12@@i@@ratchet-up-01, 30@@m@@tool, 14@@d@@tension, 5@@s@@work-01, 38@@c@@will-02, 3@@d@@line, 19@@s@@spill-over-02, 25@@a@@and]
sentence=1	"Can	"can	"Can	LS	O	_	_NAME_	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	name	_	name	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
5	general	_	general	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	3	APP_o	true
6	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	5	MOD_s	true
10	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	Pakistan?	pakistan?	pakistan?	NN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true
12	"	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@interrogative, 9@@s@@charge-05, 2@@d@@you, 5@@e@@general, 5@@p@@person, 3@@s@@name-01, 5@@h@@have-org-role-91]
sentence=1	Hiller	_name_	Hiller	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	asked,	_	asked,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	have-org-role-91	(s())	0	ROOT	true
3	inquiring	_	inquire	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
4	about	_	about	IN	O	_	person	_	0	IGNORE	true
5	Gen.	gen.	Gen.	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	governor	(s())	1	MOD_s	true
6	Pervaiz	_name_	Pervaiz	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
7	Musharraf,	musharraf,	Musharraf,	NNP	O	_	name	_	0	IGNORE	true
8	who	_	who	WP	O	_	name	_	0	IGNORE	true
9	seized	_	seize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
11	of	_	of	IN	O	_	person	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	October_12	_name_	12	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
15	.	_	.	.	O	_	11	_	0	IGNORE	true

nodealignment=[1@@p@@person, 5@@p2@@governor, 3@@s@@inquire-01, 13@@d@@country, 10@@s@@control-01, 14@@n@@_NAME_, 1@@n@@_NAME_, 2@@s@@have-org-role-91, 5@@h@@have-org-role-91, 6@@n@@_NAME_, 9@@s@@seize-01]
sentence=1	"Further,	_name_	"Further,	LS	O	_	say-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	it	_	it	PRP	O	_	i	_	0	IGNORE	true
5	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	disturbing	_	disturbing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	disturb-01	(s())	3	APP_o	true
8	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
9	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	made	_	make	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
11	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	12	MOD_mod	true
12	comments	_	comment	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
13	about	_	about	IN	O	_	person	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	nation	_	nation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	just_last_year	_name_	year	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	tested	_	test	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
19	nuclear	_	nuclear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nucleus	(mod())	20	MOD_mod	true
20	weapons	_	weapon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	--	_	--	:	O	_	-	_	0	IGNORE	true
22	shortly	_	shortly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	short-07	(s())	23	MOD_s	true
23	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
24	voicing	_	voice	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op1	true
25	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
26	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	opposition	_	opposition	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	oppose-01	(s())	24	APP_s	true
28	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
29	the_Comprehensive_Test_Ban_Treaty	_name_	Treaty	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	27	APP_s	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@d@@nation, 2@@d@@i, 29@@p@@person, 18@@s@@test-01, 20@@d@@weapon, 7@@s@@disturb-01, 23@@w@@after, 22@@s@@short-07, 5@@p@@even, 3@@s@@find-02, 27@@s@@oppose-01, 17@@n@@_NAME_, 12@@s@@comment-01, 11@@p@@this, 9@@d@@he, 19@@p@@nucleus, 6@@s@@more, 24@@s@@voice-01, 26@@s@@public-02, 29@@n@@_NAME_]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
4	body	_	body	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	proclaimed	_	proclaim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	bringing	_	bring	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
10	"stability"	_	"stability"	NNP	O	_	and	_	0	IGNORE	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	region	_	region	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	fall	_	fall	NN	O	(d2<root> / date-entity  :season (s / --LEX--)  :time-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	of	_	of	IN	O	_	and	_	0	IGNORE	true
17	1999	_name_	1999	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@d@@region, 1@@d@@this, 9@@t@@bring-01, 6@@n@@_NAME_, 4@@r@@body, 17@@d@@date-entity, 7@@s@@proclaim-01, 17@@explicitanon2@@_NUMBER_, 15@@d2@@date-entity, 6@@p@@person, 15@@s@@fall]
sentence=1	The	the	the	DT	O	(d<root> / --LEX--)	person	()	21	APP_o	true
2	Palestinians	_name_	Palestinians	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	21	MOD_mod	true
3	who	_	who	WP	O	_	person	_	0	IGNORE	true
4	have	_	have	VBP	O	_	person	_	0	IGNORE	true
5	been	_	be	VBN	O	_	person	_	0	IGNORE	true
6	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	1	MOD_s	true
7	to	_	to	TO	O	_	person	_	0	IGNORE	true
8	kill	_	kill	VB	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-01	(s())	6	APP_o	true
9	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
10	to	_	to	TO	O	_	person	_	0	IGNORE	true
11	end	_	end	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	8	MOD_mod	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Israeli	_name_	israeli	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
14	occupation	_	occupation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	occupy-01	(s(), o())	11	APP_o	true
15	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the_Gaza_Strip	_name_	Strip	NNP	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
18	the_West_Bank	_name_	Bank	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
19	were	_	be	VBD	O	_	person	_	0	IGNORE	true
20	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	driven	_	drive	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
22	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
23	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	24	MOD_mod	true
24	considerations	_	consideration	NNS	O	(d<root> / --LEX--)	consider-01	()	21	APP_s	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@d@@person, 8@@r@@kill-01, 17@@a@@and, 24@@d@@consider-01, 13@@n@@_NAME_, 16@@n4@@_NAME_, 11@@s@@end-01, 18@@n@@_NAME_, 23@@p@@economy, 20@@explicitanon0@@-, 6@@c@@will-02, 16@@b@@broadcast-program, 21@@s@@drive-02, 18@@o2@@organization, 2@@c@@country, 13@@c@@country, 2@@n@@_NAME_, 14@@s@@occupy-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	radical	_	radical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	Shiites,	_name_	shiites,	NN	O	(d<root> / --LEX--)	person	()	18	APP_s	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	generally	_	generally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	general-02	(s())	7	MOD_s	true
7	follow	_	follow	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	theocratic	_	theocratic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	notions	_	notion	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Iran's	iran's	Iran's	NNP	O	_	_NAME_	_	0	IGNORE	true
13	Ayatollah	ayatollah	Ayatollah	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	10	MOD_mod	true
14	Ruhollah	ruhollah	Ruhollah	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
15	Khomeini,	khomeini,	khomeini,	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	routinely	_	routinely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	routine	(mod())	18	MOD_mod	true
17	chant	_	chant	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
19	demonstrate	_	demonstrate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op2	true
20	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	Israel	_name_	Israel	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
22	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[4@@d@@person, 13@@p@@ayatollah, 17@@s@@chant-01, 6@@s@@general-02, 21@@n@@_NAME_, 10@@d@@notion, 19@@s@@demonstrate-01, 18@@a@@and, 21@@c@@country, 16@@t@@routine, 14@@n@@_NAME_, 3@@p@@radical, 9@@p@@theocratic, 7@@s@@follow-02, 2@@s@@more]
sentence=1	Worse	worse	bad	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	bad-04	(s())	6	MOD_s	true
2	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
3	Israel,	_name_	israel,	CD	O	_	name	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	assassination	_	assassination	NN	O	(d<root> / --LEX--)	assassinate-01	()	6	APP_s	true
6	drew	_	draw	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	denunciation	_	denunciation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	accuse-01	(s())	6	APP_o	true
9	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	from	_	from	IN	O	_	name	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	moderate	_	moderate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	cautious	_	cautious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	Grand	grand	Grand	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	16	MOD_mod	true
16	Ayatollah	ayatollah	Ayatollah	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
17	Ali_Sistani,	_name_	sistani,	NN	O	_	_NAME_	_	0	IGNORE	true
18	who	_	who	WP	O	_	name	_	0	IGNORE	true
19	wields	_	wield	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
20	enormous	_	enormous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	authority	_	authority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	Iraqi_Shiites	_name_	Shiites	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	22	MOD_mod	true
25	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@s@@draw-02, 5@@d@@assassinate-01, 12@@p@@moderate, 14@@p@@cautious, 8@@s@@accuse-01, 21@@s@@moral-02, 9@@p@@even, 22@@d@@authority, 1@@m@@more, 19@@s@@wield-01, 24@@n@@_NAME_, 15@@p@@grand, 1@@b@@bad-04, 20@@p@@enormous, 16@@d@@Ayatollah, 24@@r@@religious-group]
sentence=1	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	cities	_	city	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
3	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	Fallujah	_name_	Fallujah	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	2	MOD_mod	true
7	Ramadi	_name_	Ramadi	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_op2	true
8	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
9	on	_	on	IN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	truck	_	truck	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	route	_	route	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	8	APP_o	true
13	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	Amman	_name_	Amman	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
15	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	Baghdad,	_name_	baghdad,	CD	O	_	_NAME_	_	0	IGNORE	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	so	_	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	8	APP_s	true
19	came	_	come	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
20	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	influence	_	influence	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_s	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Salafi	_name_	Salafi	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
26	movement,	_	movement,	NNS	O	_	oppose-01	_	0	IGNORE	true
27	which	_	which	WDT	O	_	name	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	popular	_	popular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
30	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
31	Jordan	_name_	Jordan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	29	MOD_mod	true
32	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[11@@p@@truck, 12@@s@@route, 1@@c@@country, 7@@n@@_NAME_, 1@@n@@_NAME_, 25@@n@@_NAME_, 31@@n@@_NAME_, 18@@s@@cause-01, 22@@s@@influence-01, 25@@o2@@organization, 5@@c@@city, 31@@c@@country, 29@@s@@popular-02, 2@@d@@city, 14@@n@@_NAME_, 7@@c@@city, 5@@n@@_NAME_, 8@@s@@be-located-at-91, 6@@a@@and, 14@@c@@city]
sentence=1	Apart	apart	apart	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	from	_	from	IN	O	_	except-01	_	0	IGNORE	true
3	the	_	the	DT	O	_	name	_	0	IGNORE	true
4	1,200	_	1,200	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
5	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	lives	_	life	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	lost	_	lose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_o	true
8	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
9	1987,	_	1987,	NN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	name	_	0	IGNORE	true
11	Indian	_name_	indian	JJ	O	_	_NAME_	_	0	IGNORE	true
12	peacekeeping	_	peacekeeping	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	keep-01	(s())	13	MOD_s	true
13	force	_	force	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
14	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	16	MOD_s	true
15	immensely	_	immensely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	16	MOD_mod	true
16	unpopular	_	unpopular	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	popular-02	(s())	0	ROOT	true
17	not	_	not	RB	O	_	-	_	0	IGNORE	true
18	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	Tamil_Nadu	_name_	Nadu	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op3 (r<op3>)  :op1 (g<op1>)  :location-of (e<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	16	MOD_mod	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Jaffna	_name_	Jaffna	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	peninsula	_	peninsula	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
25	but	_	but	CC	O	_	contrast-01	_	0	IGNORE	true
26	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
27	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Sinhalese	_name_	sinhalese	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	majority	_	majority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op3	true
31	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
32	considered	_	consider	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
33	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	a	_	a	DT	O	_	person	_	0	IGNORE	true
35	violation	_	violation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	violate-01	(s())	32	APP_o	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
38	country's	_	country's	JJ	O	(d<root> / --LEX--)	_NAME_	()	39	APP_poss	true
39	sovereignty	_	sovereignty	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	35	APP_s	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@s@@extreme, 12@@s@@keep-01, 6@@d@@life, 20@@n@@_NAME_, 39@@m@@sovereignty, 5@@n@@_NAME_, 16@@p@@popular-02, 4@@explicitanon0@@_NUMBER_, 20@@c@@country, 13@@d@@force, 29@@e@@ethnic-group, 26@@p@@also, 38@@d@@_NAME_, 35@@s@@violate-01, 14@@s@@person, 30@@d@@majority, 29@@n@@_NAME_, 32@@s@@consider-01, 21@@a@@and, 5@@c@@country, 7@@s@@lose-02, 24@@d@@peninsula, 23@@n@@_NAME_, 16@@explicitanon0@@-]
sentence=1	While	while	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
3	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	ready	_	ready	JJ	O	(r<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (y<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), o(s()))	16	MOD_mod	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	enter	_	enter	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	into	_	into	IN	O	_	-	_	0	IGNORE	true
8	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
9	"defense	_	"defense	``	O	(d<root> / --LEX--)	_NAME_	()	10	APP_s	true
10	cooperation	_	cooperation	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	cooperate-01	(s())	6	APP_o	true
11	agreement"	_	agreement"	ADD	O	_	and	_	0	IGNORE	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	Sri_Lanka,	_name_	Lanka,	NNP	O	_	_NAME_	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	and	_	0	IGNORE	true
16	wary	_	wary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_o	true
17	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
18	being	_	be	VBG	O	_	person	_	0	IGNORE	true
19	drawn	_	draw	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_s	true
20	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	military	_	military	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	involvement	_	involvement	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	involve-01	(s(), o())	19	APP_s	true
24	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	island	_	island	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
27	nation's	_	nation'	VBD	O	_	_NAME_	_	0	IGNORE	true
28	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	31	MOD_mod	true
29	decades-old	_	decades-old	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	year	(mod())	31	MOD_mod	true
30	civil	_	civil	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
32	that	_	that	WDT	O	_	name	_	0	IGNORE	true
33	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	1	MOD_o	true
34	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_s	true
35	violent	_	violent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	violence	(mod())	36	MOD_mod	true
36	strife	_	strife	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	34	APP_o	true
37	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	ethnic	_	ethnic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
39	Tamils	_name_	Tamils	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	33	MOD_mod	true
40	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	Sinhalese	_name_	sinhalese	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	43	MOD_mod	true
43	majority	_	majority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
44	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
45	leaving	_	leave	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	31	MOD_s	true
46	over	_	over	RP	O	(p3<root> / person  :quant (a / --LEX--  :op1 (p<op1>)))	$LEMMA$	(op1())	48	APP_s	true
47	60,000	_	60,000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	46	APP_op1	true
48	dead	_	dead	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_s	true
49	on	_	on	IN	O	_	person	_	0	IGNORE	true
50	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
51	sides	_	side	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
52	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[10@@s@@cooperate-01, 6@@s@@enter-01, 16@@s@@wary, 42@@p@@_NAME_, 9@@d@@_NAME_, 33@@s@@person, 2@@n@@_NAME_, 50@@p@@both, 31@@d@@war, 46@@p3@@person, 30@@p@@civil, 45@@s@@leave-13, 29@@explicitanon0@@year, 38@@p@@ethnic, 43@@d@@majority, 26@@b@@island, 2@@c@@country, 47@@d@@_NUMBER_, 19@@s@@draw-02, 1@@s@@contrast-01, 51@@d@@side, 39@@c@@country, 46@@a@@over, 39@@n@@_NAME_, 28@@explicitanon0@@2, 35@@p@@violence, 21@@p@@any, 4@@r@@ready-02, 23@@s@@involve-01, 48@@s@@dead, 22@@d@@military, 34@@s@@see-01, 36@@s@@strife]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	explains	_	explain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	delay	_	delay	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
6	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	signing	_	signing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	sign-02	(s())	5	APP_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	formal	_	formal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	defense	_	defense	NN	O	(d<root> / --LEX--)	defend-01	()	13	APP_s	true
13	agreement	_	agreement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	agree-01	(s())	8	APP_s	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	1	MOD_s	true
16	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	heart	_	heart	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	15	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	Sri	_name_	Sri	NNP	O	_	_NAME_	_	0	IGNORE	true
21	Lankan	_name_	lankan	JJ	O	_	_NAME_	_	0	IGNORE	true
22	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	25	APP_s	true
23	Chandrika_Kumaratunga's	_name_	Kumaratunga's	NNP	O	(m<root> / --LEX--  :unit-of (a<mod>))	5	(mod())	1	MOD_mod	true
24	four-day	_name_	four-day	NNP	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	day	(mod())	25	MOD_mod	true
25	visit	_	visit	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_poss	true
26	to	_	to	IN	O	_	person	_	0	IGNORE	true
27	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	25	APP_o	true
28	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	25	MOD_mod	true
29	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@delay-01, 3@@s@@explain-01, 2@@d@@that, 24@@y@@day, 28@@n@@recent, 18@@h@@heart, 15@@s@@be-located-at-91, 11@@p@@formal, 13@@s@@agree-01, 1@@a@@and, 8@@s@@sign-02, 27@@c@@country, 24@@t@@temporal-quantity, 23@@m@@5, 27@@n@@_NAME_, 22@@p@@person, 25@@s@@visit-01, 12@@d@@defend-01, 22@@e@@president, 22@@h@@have-org-role-91]
sentence=1	A	a	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
2	veteran	_	veteran	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	29	MOD_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	India's	_name_	India's	NNP	O	_	_NAME_	_	0	IGNORE	true
5	military	_	military	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	intervention	_	intervention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	intervene-01	(s(), o())	2	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	Jaffna	_name_	Jaffna	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	peninsula	_	peninsula	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	help	_	help	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	6	MOD_mod	true
13	implement	_	implement	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	1987	_name_	1987	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	16	MOD_mod	true
16	Indo-Sri_Lanka_Peace_Accord	_name_	Accord	NNP	O	(t<root> / treaty  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
17	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
18	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	ambitiously	_	ambitiously	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	massive	(mod())	20	MOD_mod	true
20	provided	_	provide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
21	for	_	for	IN	O	_	and	_	0	IGNORE	true
22	the	_	the	DT	O	_	and	_	0	IGNORE	true
23	disarming	_	disarm	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	formidable	_	formidable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	LTTE	ltte	LTTE	NNP	O	(d<root> / --LEX--)	_NAME_	()	23	APP_s	true
28	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
29	Kalkat	_name_	Kalkat	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	30	APP_s	true
30	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
33	defense	_	defense	NN	O	(d<root> / --LEX--)	defend-01	()	34	APP_s	true
34	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
35	would	_	would	MD	O	_	thing	_	0	IGNORE	true
36	essentially	_	essentially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	essential	(mod())	39	MOD_mod	true
37	be	_	be	VB	O	_	person	_	0	IGNORE	true
38	a	_	a	DT	O	_	thing	_	0	IGNORE	true
39	reiteration	_	reiteration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	reiterate-01	(s(), o())	30	APP_o	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	older	_	old	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	old	(mod())	43	MOD_mod	true
43	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_o	true
44	minus	_	minus	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
45	its	_	its	PRP$	O	_	and	_	0	IGNORE	true
46	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
47	commitment	_	commitment	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	commit-01	(s())	44	MOD_s	true
48	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[36@@p@@essential, 29@@p@@person, 20@@s@@provide-01, 27@@d@@_NAME_, 39@@s@@reiterate-01, 6@@s@@intervene-01, 15@@explicitanon2@@_NUMBER_, 43@@d@@one, 10@@d@@peninsula, 12@@s@@help-01, 19@@t@@massive, 13@@s@@implement-01, 23@@s@@disarm-01, 47@@s@@commit-01, 15@@d@@date-entity, 34@@s@@deal-01, 5@@d@@military, 44@@p@@minus, 16@@n@@_NAME_, 16@@t@@treaty, 30@@s@@say-01, 2@@s@@veteran, 42@@p@@old, 9@@n@@_NAME_, 32@@s@@new-01, 26@@p@@formidable, 46@@p@@military, 33@@d@@defend-01, 29@@n@@_NAME_]
sentence=1	Kalkat,	_name_	Kalkat,	NNP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	4	MOD_mod	true
4	chairs	_	chair	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
5	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
6	independent	_	independent	JJ	O	(d<root> / --LEX--)	depend-01	()	4	APP_o	true
7	US-based_International_Council_on_Conflict_Resolution,	_name_	Resolution,	NNS	O	_	_NAME_	_	0	IGNORE	true
8	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	despite	_	despite	IN	O	_	-	_	0	IGNORE	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	failure	_	failure	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	fail-01	(o(s()))	24	APP_s	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	15	APP_poss	true
15	army	_	army	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_s	true
16	to	_	to	TO	O	_	-	_	0	IGNORE	true
17	disarm	_	disarm	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	APP_o	true
19	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	subdue	_	subdue	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	Tigers,	tigers,	tigers,	NN	O	_	name	_	0	IGNORE	true
23	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
24	remained	_	remain	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
25	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
26	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	capable	_	capable	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	27	MOD_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	influencing	_	influence	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o	true
31	the	_	the	DT	O	_	thing	_	0	IGNORE	true
32	course	_	course	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	30	APP_o	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
37	talks	_	talk	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_poss	true
38	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@s@@remain-01, 11@@o@@fail-01, 26@@p@@only, 36@@d@@peace, 1@@d@@_NAME_, 3@@n@@current, 32@@m@@course, 14@@n@@_NAME_, 35@@n@@current, 28@@o@@capable-01, 15@@m@@army, 14@@c@@country, 27@@d@@power, 17@@s@@disarm-01, 4@@s@@chair-01, 30@@s@@influence-01, 18@@a@@or, 23@@c@@country, 6@@d@@depend-01, 8@@s@@say-01, 19@@p@@even, 23@@n@@_NAME_, 37@@s@@talk-01, 20@@s@@subdue-01]
sentence=1	Japan's	japan's	Japan's	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	21	APP_o	true
2	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
3	envoy,	_	envoy,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	have-org-role-91	(s())	4	MOD_s	true
4	Yasushi	_name_	Yasushi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
5	Akashi,	akashi,	Akashi,	NNP	O	_	_NAME_	_	0	IGNORE	true
6	who	_	who	WP	O	_	name	_	0	IGNORE	true
7	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_s	true
8	for	_	for	IN	O	_	and	_	0	IGNORE	true
9	tangible	_	tangible	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	progress	_	progress	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_s	true
15	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	would	_	would	MD	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	person	(op1(), mod())	21	MOD_mod	true
19	be	_	be	VB	O	_	person	_	0	IGNORE	true
20	released,	_	released,	NNP	O	_	and	_	0	IGNORE	true
21	came	_	come	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	0	ROOT	true
22	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
23	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	visits	_	visit	NNS	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	21	MOD_mod	true
25	to	_	to	IN	O	_	person	_	0	IGNORE	true
26	Colombo	_name_	Colombo	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_o	true
28	Kilinochchi	_name_	Kilinochchi	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	27	APP_op2	true
29	in	_	in	IN	O	_	i	_	0	IGNORE	true
30	early_November	_name_	November	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	21	MOD_mod	true
31	a	_	a	DT	O	_	1	_	0	IGNORE	true
32	frustrated	_	frustrated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	frustrate-01	(s())	33	MOD_s	true
33	man	_	man	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@c@@city, 30@@explicitanon2@@_NAME_, 13@@d@@peace, 32@@s@@frustrate-01, 27@@a@@and, 24@@t@@visit-01, 22@@a@@back, 1@@o2@@organization, 4@@p@@person, 2@@s@@special-02, 17@@d@@money, 18@@w@@person, 1@@n@@_NAME_, 30@@d@@date-entity, 4@@n@@_NAME_, 7@@s@@call-03, 33@@p@@man, 3@@s@@have-org-role-91, 28@@n@@_NAME_, 26@@c@@city, 26@@n@@_NAME_, 9@@p@@tangible, 10@@s@@progress-01, 21@@g@@come-01, 14@@s@@process-02, 15@@n@@before]
sentence=1	Apart	apart	apart	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	from	_	from	IN	O	_	except-01	_	0	IGNORE	true
3	the	_	the	DT	O	_	name	_	0	IGNORE	true
4	1,200	_	1,200	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
5	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	lives	_	life	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	lost	_	lose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_o	true
8	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
9	1987,	_	1987,	NN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	name	_	0	IGNORE	true
11	Indian	_name_	indian	JJ	O	_	_NAME_	_	0	IGNORE	true
12	peacekeeping	_	peacekeeping	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	keep-01	(s())	13	MOD_s	true
13	force	_	force	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
14	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	16	MOD_s	true
15	immensely	_	immensely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	16	MOD_mod	true
16	unpopular	_	unpopular	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	popular-02	(s())	0	ROOT	true
17	not	_	not	RB	O	_	-	_	0	IGNORE	true
18	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	Tamil_Nadu	_name_	Nadu	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op3 (r<op3>)  :op1 (g<op1>)  :location-of (e<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	16	MOD_mod	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Jaffna	_name_	Jaffna	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	peninsula	_	peninsula	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
25	but	_	but	CC	O	_	contrast-01	_	0	IGNORE	true
26	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
27	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Sinhalese	_name_	sinhalese	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	majority	_	majority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op3	true
31	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
32	considered	_	consider	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
33	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	a	_	a	DT	O	_	person	_	0	IGNORE	true
35	violation	_	violation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	violate-01	(s())	32	APP_o	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
38	country's	_	country's	JJ	O	(d<root> / --LEX--)	_NAME_	()	39	APP_poss	true
39	sovereignty	_	sovereignty	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	35	APP_s	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@p@@also, 39@@m@@sovereignty, 35@@s@@violate-01, 6@@d@@life, 5@@c@@country, 13@@d@@force, 29@@e@@ethnic-group, 38@@d@@_NAME_, 29@@n@@_NAME_, 32@@s@@consider-01, 16@@explicitanon0@@-, 23@@n@@_NAME_, 21@@a@@and, 4@@explicitanon0@@_NUMBER_, 14@@s@@person, 30@@d@@majority, 12@@s@@keep-01, 7@@s@@lose-02, 16@@p@@popular-02, 15@@s@@extreme, 20@@c@@country, 5@@n@@_NAME_, 20@@n@@_NAME_, 24@@d@@peninsula]
sentence=1	Unreported	unreported	unreporte	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	edit-01	(s(), o())	0	ROOT	true
2	by	_	by	IN	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	media,	_	media,	NNP	O	_	and	_	0	IGNORE	true
6	the_Valley_of_Kashmir	_name_	Kashmir	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
9	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	ethnic	_	ethnic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
12	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	11	APP_op2	true
13	genocide	_	genocide	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
16	resulted	_	result	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	in	_	in	IN	O	_	and	_	0	IGNORE	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	fleeing	_	fleeing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-05	(s())	16	APP_o	true
20	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	valley	_	valley	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Hindu	_name_	Hindu	NNP	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
29	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
30	have	_	have	VBP	O	_	person	_	0	IGNORE	true
31	been	_	be	VBN	O	_	person	_	0	IGNORE	true
32	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
33	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
34	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	32	MOD_mod	true
35	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	habitation	_	habitation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	39	APP_s	true
37	was	_	be	VBD	O	_	person	_	0	IGNORE	true
38	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	$LEMMA$	(mod())	39	MOD_mod	true
39	recorded	_	record	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op1	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[28@@d@@family, 6@@p@@person, 34@@w@@since, 39@@s@@record-01, 27@@r@@religious-group, 36@@s@@habitation, 1@@s@@edit-01, 13@@d@@genocide-01, 32@@s@@live-01, 35@@d@@human, 25@@p@@all, 24@@p@@almost, 6@@n@@_NAME_, 10@@d@@ethnic, 8@@s@@see-01, 4@@p@@international, 11@@a@@and, 19@@s@@fleeing-05, 38@@explicitanon0@@first, 16@@s@@result-01, 12@@d@@culture, 22@@s@@valley, 27@@n@@_NAME_, 38@@o@@ordinal-entity]
sentence=1	Over	over	over	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
2	nine	_	nine	CD	O	_	name	_	0	IGNORE	true
3	dozen	_	dozen	NN	O	(d<root> / --LEX--)	12	()	1	APP_op1	true
4	temples	_	temple	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	had	_	have	VBD	O	_	person	_	0	IGNORE	true
7	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	the	_	the	DT	O	_	name	_	0	IGNORE	true
9	Hindu	_name_	Hindu	NNP	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	13	MOD_o	true
12	been	_	be	VBN	O	_	person	_	0	IGNORE	true
13	destroyed,	_	destroyed,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	0	ROOT	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	building	_	building	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	build-01	(mod())	19	MOD_mod	true
19	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
21	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
23	urinals	_	urinal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
24	.	_	.	.	O	_	product	_	0	IGNORE	true

nodealignment=[18@@p@@build-01, 21@@p@@other, 9@@r@@religious-group, 16@@s@@use-01, 1@@s@@over, 3@@d@@12, 13@@s@@and, 20@@a@@and, 7@@s@@serve-01, 4@@d@@temple, 23@@d@@urinal, 10@@d@@population, 9@@n@@_NAME_, 15@@d@@some, 11@@s@@person, 19@@d@@material]
sentence=1	Realists,	realists,	realists,	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	35	APP_s	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
4	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_op2	true
6	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	5	APP_s	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
10	Democratic	_name_	democratic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	democracy	(mod())	12	MOD_mod	true
11	foreign	_	foreign	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	policy	_	policy	NN	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :topic-of (a2<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
13	establishment	_	establishment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
14	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
15	as	_	as	IN	O	_	and	_	0	IGNORE	true
16	Strobe	_name_	Strobe	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
17	Talbott,	talbott,	talbott,	NN	O	_	have-org-role-91	_	0	IGNORE	true
18	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	have	_	have	VBP	O	_	person	_	0	IGNORE	true
20	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	MOD_s	true
21	sought	_	seek	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	MOD_s	true
22	to	_	to	TO	O	_	and	_	0	IGNORE	true
23	divest	_	divest	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_o	true
24	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	defensive	_	defensive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	defend-01	(mod())	28	MOD_mod	true
28	capability	_	capability	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	capable-01	(s())	23	APP_o2	true
29	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	nuclear	_	nuclear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nucleus	(mod())	32	MOD_mod	true
32	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
33	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
34	Asia,	_name_	Asia,	NNP	O	_	name	_	0	IGNORE	true
35	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
36	the	_	the	DT	O	_	thing	_	0	IGNORE	true
37	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
38	feasible	_	feasible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
39	solution	_	solution	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	solve-01	(s(), o())	44	MOD_s	true
40	for	_	for	IN	O	_	and	_	0	IGNORE	true
41	Kashmir	_name_	Kashmir	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	39	APP_o	true
42	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
43	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
44	acceptance	_	acceptance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	accept-01	(s())	35	APP_o	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	the	_	the	DT	O	_	person	_	0	IGNORE	true
47	status	_	status	NN	O	(d<root> / --LEX--)	$LEMMA$-quo	()	44	APP_s	true
48	quo	_	quo	NN	O	_	$LEMMA$	_	0	IGNORE	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[44@@s@@accept-01, 41@@n2@@_NAME_, 20@@s@@long-03, 4@@p@@even, 16@@n@@_NAME_, 5@@s@@include-01, 38@@s@@feasible-01, 12@@h@@policy-01, 9@@n@@_NAME_, 6@@o@@member, 10@@p@@democracy, 31@@p@@nucleus, 27@@p@@defend-01, 21@@c@@seek-01, 13@@d@@establishment, 28@@s@@capable-01, 11@@d@@foreign, 2@@a@@and, 23@@b@@divest-01, 9@@c@@country, 47@@d@@status-quo, 30@@p@@another, 41@@w@@world-region, 39@@s@@solve-01, 3@@p@@this, 35@@s@@understand-01, 37@@p@@only, 24@@n@@_NAME_, 24@@c@@country, 32@@d@@power, 6@@h@@have-org-role-91, 6@@p@@person]
sentence=1	Simultaneously,	simultaneously,	simultaneously,	ADD	O	_	name	_	0	IGNORE	true
2	New_Delhi	_name_	Delhi	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
3	would	_	would	MD	O	_	person	_	0	IGNORE	true
4	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	degree	_	degree	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	autonomy	_	autonomy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	6	APP_mod	true
9	for	_	for	IN	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	state	_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
12	that	_	that	WDT	O	_	name	_	0	IGNORE	true
13	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
14	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	cut	_	cut	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	APP_o	true
16	popular	_	popular	JJ	O	(d<root> / --LEX--)	populace	()	17	APP_s	true
17	support	_	support	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_o	true
18	off	_	off	RP	O	_	person	_	0	IGNORE	true
19	from	_	from	IN	O	_	person	_	0	IGNORE	true
20	jihadis	_	jihadi	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
21	attempting	_	attempt	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	20	MOD_s	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	convert	_	convert	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_o	true
24	Kashmir	_name_	Kashmir	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	23	APP_o	true
25	into	_	into	IN	O	_	-	_	0	IGNORE	true
26	a	_	a	DT	O	_	person	_	0	IGNORE	true
27	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	28	MOD_mod	true
28	Afghanistan	_name_	Afghanistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_o2	true
29	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[27@@o@@ordinal-entity, 16@@d@@populace, 27@@explicitanon0@@2, 14@@s@@help-01, 23@@b@@convert-01, 8@@s@@autonomy, 28@@c@@country, 17@@s@@support-01, 11@@d@@state, 20@@d@@jihadi, 24@@n2@@_NAME_, 6@@s@@degree, 2@@n@@_NAME_, 2@@c@@country, 21@@c@@attempt-01, 24@@w@@world-region, 15@@s@@cut-02, 4@@s@@ensure-01, 28@@n@@_NAME_]
sentence=1	Bill_Clinton	_name_	Clinton	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	understood	_	understand	VBD	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	$LEMMA$-01	(mod(), s(), o())	0	ROOT	true
3	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	end	_	end	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	term	_	term	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
11	office	_	office	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	yet,	_	yet,	NN	O	_	person	_	0	IGNORE	true
13	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	Colin_Powell	_name_	Powell	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	34	MOD_mod	true
15	(who	_	(who	NNP	O	_	_NAME_	_	0	IGNORE	true
16	appears	_	appear	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	34	MOD_s	true
17	to	_	to	TO	O	_	name	_	0	IGNORE	true
18	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
19	an	_	an	DT	O	_	name	_	0	IGNORE	true
20	affinity	_	affinity	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	16	APP_o	true
21	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
22	generals	_	general	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	20	APP_o	true
23	active	_	active	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	activity-06	(s())	22	MOD_s	true
24	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
25	politics),	_	politics),	NNP	O	_	cause-01	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	pendulum	_	pendulum	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	34	APP_s	true
28	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
29	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	30	APP_s	true
30	policy	_	policy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	27	APP_poss	true
31	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
32	once	_	once	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	swung	_	swing	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_mod	true
35	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	quixotic	_	quixotic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	effort	_	effort	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_o	true
39	to	_	to	TO	O	_	slash	_	0	IGNORE	true
40	prize	_	prize	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	APP_s	true
41	at	_	at	IN	O	_	name	_	0	IGNORE	true
42	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	44	MOD_mod	true
43	the_Valley_of_Kashmir	_name_	Kashmir	NNP	O	(d<root> / --LEX--)	_NAME_	()	40	APP_s	true
44	loose	_	loose	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	40	APP_o	true
45	from	_	from	IN	O	_	country	_	0	IGNORE	true
46	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	44	APP_s	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@p@@person, 3@@d@@this, 1@@n@@_NAME_, 38@@s@@effort-01, 44@@s@@loose-03, 23@@s@@activity-06, 11@@t@@office, 33@@p@@again, 20@@s@@affinity, 34@@s@@swing-01, 14@@n@@_NAME_, 27@@m@@pendulum, 46@@n@@_NAME_, 16@@o@@appear-02, 2@@c2@@understand-01, 40@@s@@prize-01, 37@@p@@quixotic, 46@@c@@country, 43@@d@@_NAME_, 22@@e@@general, 42@@p@@at-least, 22@@h@@have-org-role-91, 32@@p@@once, 6@@s@@end-01, 29@@c@@country, 9@@d@@term, 29@@n@@_NAME_, 1@@p@@person, 30@@s@@policy-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	overwhelming	_	overwhelming	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	majority	_	majority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Muslims	_name_	Muslims	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	9	MOD_mod	true
6	in	_	in	IN	O	_	person	_	0	IGNORE	true
7	Kashmir	_name_	Kashmir	NNP	O	(n3<root> / --LEX--  :name-of (w / world-region  :location-of (s<mod>)))	_NAME_	(mod())	16	MOD_mod	true
8	would	_	would	MD	O	_	thing	_	0	IGNORE	true
9	be	_	be	VB	O	(d<root> / --LEX--)	person	()	10	APP_s	true
10	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
12	such	_	such	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	outcome,	_	outcome,	NN	O	_	cause-01	_	0	IGNORE	true
15	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
16	for	_	for	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	10	MOD_o	true
17	the	_	the	DT	O	_	and	_	0	IGNORE	true
18	tiny	_	tiny	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	jihadi	_	jihadi	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	segment	_	segment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
21	patronized	_	patronize	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
22	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	the_U.S._State_Department	_name_	Department	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
25	the_Pakistan_Army,	_name_	Army,	NNP	O	_	_NAME_	_	0	IGNORE	true
26	which	_	which	WDT	O	_	name	_	0	IGNORE	true
27	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
28	like	_	like	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	APP_op2	true
29	to	_	to	TO	O	_	person	_	0	IGNORE	true
30	even	_	even	RB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	28	APP_s	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	score	_	score	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_o	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	30	APP_s	true
35	for	_	for	IN	O	_	and	_	0	IGNORE	true
36	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
37	catastrophic	_	catastrophic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	defeat	_	defeat	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_o2	true
39	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
40	Bangladesh	_name_	Bangladesh	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	38	APP_s	true
41	in	_	in	IN	O	_	name	_	0	IGNORE	true
42	1971	_name_	1971	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	38	MOD_mod	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@p@@_NAME_, 37@@p@@catastrophic, 30@@b@@even-01, 40@@c@@country, 42@@explicitanon2@@_NUMBER_, 20@@d@@segment, 23@@n@@_NAME_, 16@@s@@and, 15@@s@@except-01, 42@@d@@date-entity, 7@@w@@world-region, 12@@p@@such, 3@@d@@majority, 40@@n@@_NAME_, 5@@r@@religious-group, 7@@n3@@_NAME_, 38@@s@@defeat-01, 34@@c@@country, 10@@s@@happy-01, 32@@d@@score-01, 21@@s@@patronize-01, 34@@n@@_NAME_, 28@@s@@like-02, 9@@d@@person, 23@@g@@government-organization, 5@@n@@_NAME_, 2@@p@@overwhelming, 24@@a@@and, 18@@p@@tiny]
sentence=1	Unreported	unreported	unreporte	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	edit-01	(s(), o())	0	ROOT	true
2	by	_	by	IN	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	media,	_	media,	NNP	O	_	and	_	0	IGNORE	true
6	the_Valley_of_Kashmir	_name_	Kashmir	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
9	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	ethnic	_	ethnic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
12	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	11	APP_op2	true
13	genocide	_	genocide	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
16	resulted	_	result	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	in	_	in	IN	O	_	and	_	0	IGNORE	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	fleeing	_	fleeing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-05	(s())	16	APP_o	true
20	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	valley	_	valley	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Hindu	_name_	Hindu	NNP	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
29	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
30	have	_	have	VBP	O	_	person	_	0	IGNORE	true
31	been	_	be	VBN	O	_	person	_	0	IGNORE	true
32	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
33	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
34	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	32	MOD_mod	true
35	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	habitation	_	habitation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	39	APP_s	true
37	was	_	be	VBD	O	_	person	_	0	IGNORE	true
38	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	$LEMMA$	(mod())	39	MOD_mod	true
39	recorded	_	record	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op1	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[16@@s@@result-01, 38@@explicitanon0@@first, 19@@s@@fleeing-05, 12@@d@@culture, 13@@d@@genocide-01, 35@@d@@human, 22@@s@@valley, 27@@n@@_NAME_, 38@@o@@ordinal-entity, 25@@p@@all, 36@@s@@habitation, 34@@w@@since, 11@@a@@and, 1@@s@@edit-01, 32@@s@@live-01, 6@@p@@person, 8@@s@@see-01, 4@@p@@international, 24@@p@@almost, 6@@n@@_NAME_, 10@@d@@ethnic, 39@@s@@record-01, 28@@d@@family, 27@@r@@religious-group]
sentence=1	Over	over	over	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
2	nine	_	nine	CD	O	_	name	_	0	IGNORE	true
3	dozen	_	dozen	NN	O	(d<root> / --LEX--)	12	()	1	APP_op1	true
4	temples	_	temple	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	had	_	have	VBD	O	_	person	_	0	IGNORE	true
7	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	the	_	the	DT	O	_	name	_	0	IGNORE	true
9	Hindu	_name_	Hindu	NNP	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	13	MOD_o	true
12	been	_	be	VBN	O	_	person	_	0	IGNORE	true
13	destroyed,	_	destroyed,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	0	ROOT	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	building	_	building	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	build-01	(mod())	19	MOD_mod	true
19	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
21	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
23	urinals	_	urinal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
24	.	_	.	.	O	_	product	_	0	IGNORE	true

nodealignment=[10@@d@@population, 1@@s@@over, 15@@d@@some, 20@@a@@and, 18@@p@@build-01, 4@@d@@temple, 19@@d@@material, 9@@n@@_NAME_, 11@@s@@person, 21@@p@@other, 16@@s@@use-01, 3@@d@@12, 13@@s@@and, 7@@s@@serve-01, 23@@d@@urinal, 9@@r@@religious-group]
sentence=1	Despite	despite	despite	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	5	MOD_s	true
2	Sept._11,	_name_	11,	CD	O	_	_NAME_	_	0	IGNORE	true
3	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	supports	_	support	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	have-concession-91	_	0	IGNORE	true
7	Kashmir	_name_	Kashmir	NNP	O	(n3<root> / --LEX--  :name-of (w / world-region  :location-of (s<mod>)))	_NAME_	(mod())	8	MOD_mod	true
8	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	back	_	back	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	jihad	_	jihad	NN	O	(d<root> / --LEX--)	_NAME_	()	10	APP_o	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	part	_	part	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	price	_	price	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	1	MOD_s	true
17	Washington	_name_	Washington	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
18	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
19	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
20	to	_	to	TO	O	_	and	_	0	IGNORE	true
21	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	19	MOD_mod	true
22	Pervez	_name_	Pervez	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	Musharraf	musharraf	Musharraf	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
24	happy	_	happy	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@p@@person, 3@@c@@country, 10@@s@@back-01, 8@@d@@group, 11@@d@@_NAME_, 7@@n3@@_NAME_, 1@@s@@despite, 21@@s@@keep-02, 4@@p@@still, 23@@n@@_NAME_, 17@@n@@_NAME_, 19@@s@@pay-01, 7@@w@@world-region, 17@@g@@government-organization, 5@@s@@support-01, 16@@s@@price-01, 22@@n@@_NAME_, 24@@d@@happy-01, 3@@n@@_NAME_]
sentence=1	The_U.S._State_Department	_name_	Department	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
3	the	_	the	DT	O	_	so	_	0	IGNORE	true
4	misnamed	_	misname	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
5	think	_	think	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-tank	(mod())	6	MOD_mod	true
6	tanks	_	tank	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	follow	_	follow	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	lead	_	lead	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
11	have	_	have	VBP	O	_	person	_	0	IGNORE	true
12	held	_	hold	VBN	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-04	(o2(), s(), o())	0	ROOT	true
13	numerous	_	numerous	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	conferences	_	conference	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	on	_	on	IN	O	_	and	_	0	IGNORE	true
16	Kashmir	_name_	Kashmir	NNP	O	(w<root> / world-region  :name (n / --LEX--)  :location-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	and,	_	and,	NNS	O	_	name	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	them,	_	them,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
23	solution	_	solution	NN	O	(d<root> / --LEX--)	solve-01	()	29	APP_dom	true
24	that	_	that	WDT	O	_	name	_	0	IGNORE	true
25	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
26	emerged	_	emerge	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
27	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	valley	_	valley	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	35	APP_op1	true
30	prized	_	prize	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_s	true
31	loose	_	loose	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	30	MOD_s	true
32	from	_	from	IN	O	_	-	_	0	IGNORE	true
33	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	control	_	control	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	30	APP_o	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o2	true
36	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	its	_	its	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
38	own	_	own	JJ	O	_	person	_	0	IGNORE	true
39	version	_	version	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	35	APP_op2	true
40	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
41	Ibrahim_Rugova	_name_	Rugova	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	39	APP_poss	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@a@@and, 13@@explicitanon0@@numerous, 33@@n@@_NAME_, 8@@s@@follow-01, 19@@p@@most, 10@@d@@lead-01, 6@@d@@tank, 16@@w@@world-region, 1@@n@@_NAME_, 2@@a@@and, 14@@d@@conference, 16@@n@@_NAME_, 5@@p@@think-tank, 26@@s@@emerge-01, 12@@t@@hold-04, 29@@r@@valley, 4@@s@@misname-01, 23@@d@@solve-01, 1@@g@@government-organization, 31@@s@@loose-03, 30@@s@@prize-01, 34@@s@@control-01, 39@@m@@version, 41@@n@@_NAME_, 41@@p@@person, 33@@c@@country]
sentence=1	Despite	despite	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
2	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	wrinkles,	_	wrinkles,	NNP	O	_	and	_	0	IGNORE	true
4	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	remains	_	remain	VBZ	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
6	a	_	a	DT	O	_	have-concession-91	_	0	IGNORE	true
7	part-democracy	_	part-democracy	NN	O	(p<root> / political-party  :name (n / --LEX--))	democracy	()	5	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	merely	_	merely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	signing	_	sign	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-04	(s())	25	APP_s	true
11	on	_	on	RP	O	_	cause-01	_	0	IGNORE	true
12	to	_	to	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
16	paper	_	paper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	calls	_	call	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	14	MOD_s	true
19	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
20	an	_	an	DT	O	_	1	_	0	IGNORE	true
21	independent	_	independent	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	depend-01	(s())	22	MOD_s	true
22	Kashmir	_name_	Kashmir	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	18	APP_o	true
23	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
25	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	8	APP_op2	true
26	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
27	into	_	into	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
29	trouble	_	trouble	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	25	APP_o	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	writing	_	write	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_o	true
32	an	_	an	DT	O	_	resemble-01	_	0	IGNORE	true
33	op-ed	_	op-ed	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	sense-02	(s())	34	MOD_s	true
34	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	against	_	against	IN	O	_	oppose-01	_	0	IGNORE	true
36	Sonia_Gandhi	_name_	Gandhi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	37	APP_op1	true
37	or	_	or	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	34	MOD_mod	true
38	Atal_Behari_Vajpayee	_name_	Vajpayee	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	37	APP_op2	true
39	would	_	would	MD	O	_	name	_	0	IGNORE	true
40	instantly	_	instantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	instant	(s())	31	MOD_s	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@call-03, 9@@p@@merely, 10@@s@@sign-on-04, 36@@p@@person, 22@@w@@world-region, 2@@explicitanon0@@many, 8@@a@@and, 22@@n2@@_NAME_, 26@@d@@you, 25@@s@@get-04, 16@@p@@paper, 21@@s@@depend-01, 14@@d@@piece, 38@@p@@person, 4@@n@@_NAME_, 33@@s@@sense-02, 40@@s@@instant, 31@@s@@write-01, 29@@s@@trouble, 37@@a@@or, 24@@explicitanon0@@-, 4@@c@@country, 34@@d@@piece, 38@@n@@_NAME_, 5@@s@@remain-01, 7@@n@@democracy, 7@@p@@political-party, 36@@n@@_NAME_]
sentence=1	Once	once	once	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	Manmohan_Singh	_name_	Singh	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	5	APP_s	true
5	shows	_	show	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	23	MOD_mod	true
6	that	_	that	IN	O	_	and	_	0	IGNORE	true
7	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
9	little	_	little	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	appetite	_	appetite	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
11	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	suicide,	_	suicide,	NNP	O	_	and	_	0	IGNORE	true
13	Musharraf	_name_	Musharraf	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
14	will	_	will	MD	O	_	person	_	0	IGNORE	true
15	face	_	face	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op1	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	moment	_	moment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	truth:	_	truth:	CD	O	_	$LEMMA$	_	0	IGNORE	true
20	accept	_	accept	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op2	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	inevitable,	_	inevitable,	NNS	O	_	cause-01	_	0	IGNORE	true
23	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
24	once	_	once	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	ramp	_	ramp	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	30	APP_op1	true
27	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	insurgency	_	insurgency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_op3	true
31	spawn	_	spawn	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_op2	true
32	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
33	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	34	MOD_s	true
34	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	31	APP_s	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	killers	_	killer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	kill-01	()	34	APP_mod	true
37	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
38	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	39	MOD_s	true
39	hit	_	hit	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	36	MOD_s	true
40	not	_	not	RB	O	_	-	_	0	IGNORE	true
41	merely	_	merely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
42	Mumbai	_name_	Mumbai	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	43	APP_op1	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	39	APP_o	true
44	New_Delhi	_name_	Delhi	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	43	APP_op2	true
45	but	_	but	CC	O	_	contrast-01	_	23	IGNORE	true
46	London	_name_	London	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	47	APP_op1	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	39	APP_o2	true
48	Chicago	_name_	Chicago	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	47	APP_op2	true
49	as	_	as	RB	O	_	$LEMMA$	_	0	IGNORE	true
50	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	39	MOD_mod	true
51	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@n@@_NAME_, 5@@t@@show-01, 25@@p@@again, 13@@p@@person, 3@@n@@_NAME_, 46@@n@@_NAME_, 36@@e2@@kill-01, 43@@a@@and, 48@@n@@_NAME_, 17@@d@@moment, 50@@p@@as-well, 23@@a@@or, 44@@c@@city, 9@@explicitanon0@@little, 38@@s@@possible-01, 20@@d@@accept-01, 44@@n@@_NAME_, 24@@p@@once, 33@@s@@fresh-04, 4@@g2@@govern-01, 41@@p@@merely, 36@@p2@@person, 10@@d@@appetite, 42@@n@@_NAME_, 46@@c@@city, 42@@c@@city, 26@@s@@ramp-up-02, 15@@s@@face-01, 47@@a@@and, 34@@explicitanon0@@lot, 39@@b@@hit-01, 48@@c@@city, 29@@d@@insurgency, 4@@g@@government-organization, 31@@s@@spawn-01, 30@@a@@and]
sentence=1	The	the	the	DT	O	_	include-91	_	0	IGNORE	true
2	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
3	country	_	country	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_s	true
4	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
5	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
6	shown	_	show	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	understands	_	understand	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	realities	_	reality	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	South_Asia	_name_	Asia	NNP	O	(w<root> / world-region  :name (n / --LEX--)  :location-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_dom	true
16	.	_	.	.	O	_	have-mod-91	_	0	IGNORE	true

nodealignment=[15@@n@@_NAME_, 6@@c@@show-01, 2@@explicitanon0@@1, 13@@n@@_NAME_, 3@@r@@country, 15@@c@@country, 9@@s@@understand-01, 11@@d@@reality, 13@@w@@world-region]
sentence=1	Under	under	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	4	MOD_s	true
3	Hu_Jintao,	_name_	jintao,	CD	O	_	_NAME_	_	0	IGNORE	true
4	Beijing	_name_	Beijing	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
6	opened	_	open	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	10	APP_op1	true
7	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
8	to	_	to	IN	O	_	and	_	0	IGNORE	true
9	New_Delhi	_name_	Delhi	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
11	Prime	prime	Prime	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	12	MOD_mod	true
12	Minister	minister	Minister	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	13	MOD_s	true
13	Wen_Jiabao	_name_	Jiabao	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	expected	_	expect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
16	to	_	to	TO	O	_	name	_	0	IGNORE	true
17	visit	_	visit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_s	true
18	early	_	early	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
19	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	year,	_	year,	NNS	O	_	and	_	0	IGNORE	true
21	making	_	make	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op3	true
22	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	17	APP_o	true
23	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	formally	_	formally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	official	(mod())	25	MOD_mod	true
25	accepting	_	accept	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	APP_op1	true
26	Sikkim	_name_	Sikkim	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
27	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	part	_	part	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	25	APP_o	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
32	backing	_	back	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op2	true
33	India	_name_	India	NNP	O	_	_NAME_	_	0	IGNORE	true
34	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
35	a	_	a	DT	O	_	1	_	0	IGNORE	true
36	permanent	_	permanent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	member	_	member	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (p<s>)))	$LEMMA$	(s())	32	APP_s	true
38	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
39	the_U.N._Security_Council	_name_	Council	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	37	APP_s	true
40	--	_	--	:	O	_	-	_	0	IGNORE	true
41	thus	_	thus	RB	O	_	cause-01	_	0	IGNORE	true
42	leaving	_	leave	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	MOD_s	true
43	Washington	_name_	Washington	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	42	APP_o	true
44	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
45	the	_	the	DT	O	_	and	_	0	IGNORE	true
46	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
47	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
48	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	46	MOD_s	true
49	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
50	"permanent	_	"permanent	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	56	MOD_mod	true
51	five"	_	five"	NFP	O	_	-	_	0	IGNORE	true
52	that	_	that	WDT	O	_	name	_	0	IGNORE	true
53	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
54	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	56	MOD_mod	true
55	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
56	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	10	MOD_s	true
57	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	10	MOD_s	true
58	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[43@@n@@_NAME_, 12@@h@@have-org-role-91, 50@@p@@_NAME_, 13@@p@@person, 6@@s@@open-out-03, 15@@s@@expect-01, 30@@c@@country, 56@@s@@do-02, 22@@p@@person, 28@@s@@part, 39@@n@@_NAME_, 26@@n@@_NAME_, 43@@c@@city, 32@@s@@back-01, 21@@d@@make-01, 37@@p2@@member, 46@@p@@only, 22@@f@@friend, 2@@h@@have-org-role-91, 22@@h@@have-rel-role-91, 42@@s@@leave-01, 37@@h@@have-org-role-91, 9@@n@@_NAME_, 18@@n@@early, 48@@s@@include-91, 26@@c@@country, 9@@c@@city, 25@@s@@accept-01, 10@@a@@and, 24@@t@@official, 54@@explicitanon0@@-, 39@@o2@@organization, 12@@p2@@minister, 13@@n@@_NAME_, 57@@s@@so, 30@@n@@_NAME_, 19@@p@@next, 31@@a@@and, 4@@c@@city, 55@@n@@yet, 4@@n@@_NAME_, 36@@p@@permanent, 11@@p@@prime, 2@@p2@@president, 17@@s@@visit-01]
sentence=1	Four	four	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	3	MOD_mod	true
2	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	months,	_	months,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	took	_	take	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_mod	true
8	advantage	_	advantage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	little-known,	_	little-known,	JJ	O	_	so	_	0	IGNORE	true
12	little-invoked	_	little-invoked	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	provoke-01	(s())	13	MOD_s	true
13	regulation	_	regulation	NN	O	(d<root> / --LEX--)	regulate-01	()	7	APP_o2	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	allowed	_	allow	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	desert	_	desert	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
19	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	"band	_	"band	XX	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	of	_	of	IN	O	_	person	_	0	IGNORE	true
22	brothers"	_	brothers"	CD	O	_	mean-01	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@d@@"band, 12@@explicitanon0@@-, 2@@p@@whole, 7@@b@@take-01, 4@@n@@after, 13@@d@@regulate-01, 1@@explicitanon0@@4, 12@@n@@provoke-01, 3@@p@@months,, 18@@s@@desert-01, 15@@s@@allow-01, 6@@d@@he, 8@@d@@advantage]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	brings	_	bring	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	May_1972	_name_	1972	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	2	MOD_mod	true
7	—	_	—	:	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
9	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	been	_	be	VBN	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-1	(s(), o())	2	MOD_o	true
14	focus	_	focus	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	news	_	news	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	reports	_	report	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
20	—	_	—	VBD	O	_	multi-sentence	_	0	IGNORE	true
21	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
22	Bush_“deserted”	_name_	“deserted”	NNP	O	_	_NAME_	_	0	IGNORE	true
23	(according	_	(accorde	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_s	true
24	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	anti-Bush	_name_	anti-bush	JJ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_o	true
26	filmmaker	_	filmmaker	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	36	MOD_s	true
27	Michael_Moore)	_name_	Moore)	NNP	O	_	and	_	0	IGNORE	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o2	true
29	went	_	go	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	28	APP_op2	true
30	“AWOL”	“awol”	“awol”	JJ	O	_	$LEMMA$	_	0	IGNORE	true
31	(according	_	(accorde	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	29	APP_s	true
32	to	_	to	IN	O	_	and	_	0	IGNORE	true
33	Terry_McAuliffe,	_name_	McAuliffe,	NNP	O	_	_NAME_	_	0	IGNORE	true
34	chairman	_	chairman	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (p<s>)))	$FORM$	(s())	31	APP_s	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	2	MOD_o	true
37	Democratic	democratic	Democratic	NNP	O	(p2<root> / political-party  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	38	MOD_mod	true
38	National	national	National	NNP	O	(d<root> / --LEX--)	nation	()	34	APP_s	true
39	Committee)	committee)	Committee)	NNP	O	_	have-org-role-91	_	0	IGNORE	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@explicitanon0@@many, 4@@d@@story, 28@@a@@or, 2@@b@@bring-01, 18@@p@@news, 38@@d@@nation, 14@@s@@focus-01, 34@@h@@have-org-role-91, 34@@p2@@chairman, 25@@n@@_NAME_, 31@@s@@(accorde-01, 23@@d@@(accorde-01, 29@@s@@go-02, 1@@d@@that, 16@@s@@so, 25@@p@@person, 19@@d@@report-01, 13@@s@@-1, 26@@s@@filmmaker, 36@@s@@have-org-role-91, 37@@n@@_NAME_, 37@@p2@@political-party, 6@@n@@_DATE_]
sentence=1	Requests	requests	request	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
2	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	1	MOD_s	true
3	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	weren’t	_	weren’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
5	unusual,	_	unusual,	NNP	O	_	-	_	0	IGNORE	true
6	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	retired	_	retire	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	Col.	col.	Col.	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	governor	(s())	9	MOD_s	true
9	William_Campenni,	_name_	Campenni,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
10	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
11	flew	_	fly	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n2 / --LEX--)  :time-of (i<mod>))	_NAME_	(mod())	11	MOD_mod	true
14	in	_	in	IN	O	_	person	_	0	IGNORE	true
15	1970	_name_	1970	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	16	APP_op1	true
16	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
17	1971	_name_	1971	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	16	APP_op2	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@n2@@_NAME_, 3@@d@@that, 15@@explicitanon0@@_NUMBER_, 7@@s@@retire-01, 8@@h@@have-org-role-91, 16@@d@@and, 15@@d@@date-entity, 17@@d@@date-entity, 6@@s@@say-01, 9@@p@@_NAME_, 4@@explicitanon0@@-, 17@@explicitanon0@@_NUMBER_, 13@@p@@person, 8@@p2@@governor, 2@@s@@resemble-01, 11@@d@@fly-01, 1@@d@@request-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	1971	_name_	1971	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
3	evaluation	_	evaluation	NN	O	(d<root> / --LEX--)	evaluate-01	()	4	APP_s	true
4	called	_	call	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	Bush	_name_	Bush	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
6	“an	_	“an	.	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
7	exceptionally	_	exceptionally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	extreme	(mod())	8	MOD_mod	true
8	fine	_	fine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
9	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	officer	_	officer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o2	true
12	pilot”	_	pilot”	FW	O	_	person	_	0	IGNORE	true
13	who	_	who	WP	O	_	name	_	0	IGNORE	true
14	“continually	_	“continually	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	collective	(mod())	15	MOD_mod	true
15	flies	_	fly	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
16	intercept	_	intercept	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
17	missions	_	mission	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	unit	_	unit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
21	to	_	to	TO	O	_	and	_	0	IGNORE	true
22	increase	_	increase	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
23	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	proficiency	_	proficiency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
25	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	further.	_	further.	NN	O	_	$LEMMA$	_	0	IGNORE	true
27	”	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[2@@d@@date-entity, 10@@d@@officer, 6@@n@@_NAME_, 7@@t@@extreme, 5@@n@@_NAME_, 16@@p@@intercept-01, 11@@a@@and, 25@@p@@even, 4@@b@@call-01, 24@@d@@proficiency, 2@@explicitanon2@@_NUMBER_, 15@@s@@fly-01, 20@@d@@unit, 17@@d@@mission, 6@@p@@person, 14@@t@@collective, 22@@i@@increase-01, 9@@p@@young, 3@@d@@evaluate-01, 8@@s@@fine-02]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Kerry	_name_	Kerry	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	camp	_	camp	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	blames	_	blame	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
6	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Swift	_name_	swift	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	boat	_	boat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
10	veterans’	_	veterans’	CD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	12	MOD_s	true
11	attack,	_	attack,	NNP	O	_	and	_	0	IGNORE	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
13	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
16	spent	_	spend	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	MOD_s	true
17	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	talking	_	talk	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
20	to	_	to	IN	O	_	and	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	Swifties	_name_	Swifties	NNPS	O	(d<root> / --LEX--)	_NAME_	()	19	APP_o	true
23	gets	_	get	VBZ	O	_	$LEMMA$-01	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
26	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	true
27	they	_	they	PRP	O	_	person	_	0	IGNORE	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	APP_o	true
30	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	entirely	_	entirely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	entire	(mod())	29	MOD_mod	true
32	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
33	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
34	own	_	own	JJ	O	_	person	_	0	IGNORE	true
35	reasons	_	reason	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
36	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@s@@blame-01, 10@@s@@have-org-role-91, 3@@d@@camp, 9@@d@@boat, 5@@n@@_NAME_, 22@@d@@_NAME_, 2@@n@@_NAME_, 5@@p@@person, 18@@d@@time, 31@@s@@entire, 25@@s@@sense-01, 29@@s@@do-02, 17@@explicitanon0@@much, 16@@s@@spend-02, 35@@d@@reason, 13@@d@@anyone, 12@@s@@contrast-01, 19@@t@@talk-01, 8@@p@@swift]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	interim	_	interim	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	5	APP_s	true
4	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
5	promised	_	promise	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
6	security	_	security	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	measures	_	measure	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
10	reduce	_	reduce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
12	violence	_	violence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	of	_	of	IN	O	_	date-entity	_	0	IGNORE	true
16	elections,	_	elections,	NNP	O	_	_NAME_	_	0	IGNORE	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
18	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	19	APP_s	true
19	fail	_	fail	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	17	APP_o	true
20	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
21	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_o	true
22	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
23	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	17	MOD_o	true
24	will	_	will	MD	O	_	thing	_	0	IGNORE	true
25	be	_	be	VB	O	_	thing	_	0	IGNORE	true
26	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	APP_o	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	protect	_	protect	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
29	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
30	5,000	_	5,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	34	MOD_mod	true
31	(or	_	(or	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
32	so)	_name_	so)	JJ	O	_	thing	_	0	IGNORE	true
33	balloting	_	balloting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	34	MOD_mod	true
34	centres	_	centre	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@interim, 28@@s@@protect-01, 5@@s@@promise-01, 23@@s@@they, 3@@g2@@govern-01, 31@@p@@(or, 7@@s@@measure-02, 17@@s@@contrast-01, 33@@p@@balloting-01, 30@@explicitanon0@@_NUMBER_, 26@@s@@possible-01, 18@@d@@i, 21@@s@@see-01, 3@@g@@government-organization, 14@@n@@day, 6@@d@@security, 34@@d@@centre, 10@@s@@reduce-01, 19@@o@@fail-01, 12@@d@@violence, 29@@p@@all]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	minister	_	minister	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	4	APP_s	true
3	reportedly	_	reportedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	report-01	(s())	4	MOD_s	true
4	handed	_	hand	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-out-03	(o2(), s(), o())	0	ROOT	true
5	out	_	out	RP	O	_	and	_	0	IGNORE	true
6	100	_	100	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
7	dollar	_	dollar	NN	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	4	APP_o	true
8	'gifts'	_	'gifts'	CD	O	_	person	_	0	IGNORE	true
9	to	_	to	IN	O	_	person	_	0	IGNORE	true
10	journalists	_	journalist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
11	attending	_	attend	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	a	_	a	DT	O	_	person	_	0	IGNORE	true
13	press	_	press	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	conference	_	conference	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	for	_	for	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	have-org-role-91	(mod())	4	MOD_mod	true
16	Allawi,	allawi,	allawi,	CD	O	_	_NAME_	_	0	IGNORE	true
17	a	_	a	DT	O	_	person	_	0	IGNORE	true
18	practice	_	practice	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
19	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
20	brings	_	bring	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	MOD_s	true
21	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
22	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	23	MOD_s	true
23	memories	_	memory	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	to	_	to	IN	O	_	person	_	0	IGNORE	true
25	many	_	many	JJ	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	20	APP_o2	true
26	Iraqis	_name_	Iraqis	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
27	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@1, 11@@s@@attend-01, 2@@h@@have-org-role-91, 20@@b@@bring-01, 23@@d@@memory, 22@@s@@bad-07, 2@@p@@person, 18@@t@@practice-01, 14@@d@@conference, 25@@n@@many, 6@@explicitanon0@@_NUMBER_, 3@@s@@report-01, 15@@p@@have-org-role-91, 4@@b@@hand-out-03, 21@@a@@back, 26@@c@@country, 7@@d2@@dollar, 10@@d@@journalist, 26@@n@@_NAME_, 7@@m2@@monetary-quantity, 13@@p@@press, 2@@e@@minister, 25@@p@@person]
sentence=1	Indeed,	indeed,	Indeed,	NNP	O	_	name	_	0	IGNORE	true
2	Sistani's	sistani's	Sistani's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	agents	_	agent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
4	all	_	all	RB	O	_	$LEMMA$	_	0	IGNORE	true
5	over	_	over	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	all-$LEMMA$	(op1(), mod())	3	MOD_mod	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
8	have	_	have	VBP	O	_	person	_	0	IGNORE	true
9	been	_	be	VBN	O	_	person	_	0	IGNORE	true
10	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	active	_	active	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	activity-06	(o(s()))	0	ROOT	true
12	in	_	in	IN	O	_	name	_	0	IGNORE	true
13	educating	_	educate	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	Shia	shia	Shia	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	on	_	on	IN	O	_	thing	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	merits	_	merit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
19	of	_	of	IN	O	_	person	_	0	IGNORE	true
20	elections,	_	elections,	NNS	O	_	_NAME_	_	0	IGNORE	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
23	led	_	lead	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	13	MOD_s	true
24	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	assassination	_	assassination	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	assassinate-01	(s())	23	APP_o	true
27	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
28	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
29	least	_	least	RBS	O	(p3<root> / person  :quant (a / --LEX--  :op1 (p<op1>)))	at-$LEMMA$	(op1())	26	APP_s	true
30	two	_	two	CD	O	(d<root> / --LEX--)	2	()	29	APP_op1	true
31	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	30	MOD_s	true
32	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@d@@agent, 31@@s@@include-91, 10@@s@@quite, 30@@d@@2, 18@@d@@merit, 11@@c@@activity-06, 15@@n@@_NAME_, 2@@n@@_NAME_, 7@@d@@country, 15@@r@@religious-group, 29@@a@@at-least, 13@@s@@educate-01, 5@@b@@all-over, 14@@n@@_NAME_, 14@@c@@country, 26@@s@@assassinate-01, 29@@p3@@person, 23@@t@@lead-03]
sentence=1	Again	again	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
5	official	_	official	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	written	_	write	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	statement	_	statement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	state-01	(s())	0	ROOT	true
8	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	Sistani's	_name_	Sistani's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_poss	true
10	office	_	office	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_s	true
11	confirming	_	confirm	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	allegation,	_	allegation,	NNS	O	_	and	_	0	IGNORE	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	true
16	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	intentional	_	intentional	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	intend-01	(s())	11	MOD_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@this, 16@@s@@think-01, 18@@s@@intend-01, 1@@p@@again, 5@@p@@official, 6@@s@@write-01, 10@@m@@office, 11@@s@@confirm-01, 9@@n@@_NAME_, 9@@p@@person, 4@@explicitanon0@@-, 7@@s@@state-01, 15@@d@@i]
sentence=1	Chalabi	_name_	Chalabi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	describing	_	describe	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	17	APP_s	true
3	Sha'lan	_name_	Sha'lan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	person	_	0	IGNORE	true
6	"Ba'athist"	"ba'athist"	"ba'athist"	CD	O	_	person	_	0	IGNORE	true
7	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
8	a	_	a	DT	O	_	person	_	0	IGNORE	true
9	"former	_	"former	XX	O	(s<root> / --LEX--  :ARG0 (y<s>))	_NAME_	(s())	11	MOD_s	true
10	double	_	double	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	agent	_	agent	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	MOD_s	true
12	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	Saddam	_name_	Saddam	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_op2	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	MOD_op1	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	CIA",	_name_	CIA",	NNS	O	_	_NAME_	_	0	IGNORE	true
17	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
18	Sha'lan	_name_	Sha'lan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	dismisses	_	dismiss	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	Chalabi	_name_	Chalabi	NNP	O	_	$LEMMA$	_	0	IGNORE	true
21	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	"thief"	_	"thief"	NNP	O	_	include-91	_	0	IGNORE	true
24	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
25	an	_	an	DT	O	_	n$LEMMA$me	_	0	IGNORE	true
26	"Iranian	"iranian	"iranian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	27	MOD_mod	true
27	stooge	_	stooge	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	who	_	who	WP	O	_	name	_	0	IGNORE	true
29	longs	_	long	VBZ	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	27	MOD_s	true
30	for	_	for	IN	O	_	name	_	0	IGNORE	true
31	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
32	own	_	own	JJ	O	_	person	_	0	IGNORE	true
33	origins	_	origin	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	29	APP_o	true
34	by	_	by	IN	O	_	thing	_	0	IGNORE	true
35	defending	_	defend	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	true
36	Iran"	iran"	Iran"	NNP	O	_	cause-01	_	0	IGNORE	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@l@@long-01, 3@@p@@person, 33@@m@@origin, 13@@p@@person, 14@@a@@and, 18@@p@@person, 2@@b@@describe-01, 18@@n@@_NAME_, 24@@d@@and, 17@@s@@contrast-01, 1@@p@@person, 27@@p@@stooge, 11@@s@@agent, 19@@s@@dismiss-01, 1@@n@@_NAME_, 7@@d@@and, 3@@n@@_NAME_, 9@@s@@_NAME_, 35@@b@@defend-01, 13@@n@@_NAME_, 26@@p@@_NAME_, 10@@p@@double]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
3	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	interesting	_	interesting	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	5	MOD_s	true
5	conversation	_	conversation	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	converse-01	(s(), o())	0	ROOT	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	a	_	a	DT	O	_	own-01	_	0	IGNORE	true
8	middle-aged	_	middle-aged	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	25	(s())	10	MOD_s	true
9	taxi	_	taxi	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	driver	_	driver	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	drive-01	(s())	5	APP_o	true
11	who	_	who	WP	O	_	name	_	0	IGNORE	true
12	used	_	use	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
15	in	_	in	IN	O	_	name	_	0	IGNORE	true
16	Fallujah	_name_	Fallujah	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
19	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	at	_	at	IN	O	_	name	_	0	IGNORE	true
21	relatives	_	relative	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	MOD_s	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	Amiriya,	amiriya,	amiriya,	CD	O	_	_NAME_	_	0	IGNORE	true
24	Baghdad	_name_	Baghdad	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
25	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[24@@n@@_NAME_, 10@@w@@drive-01, 14@@s@@live-01, 21@@s@@relative, 16@@n@@_NAME_, 10@@p@@person, 24@@c@@city, 19@@n@@now, 8@@s@@25, 4@@s@@interesting, 16@@c@@city, 1@@d@@i, 9@@d@@taxi, 5@@t@@converse-01]
sentence=1	Leaving	leaving	leave	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
2	aside	_	aside	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
4	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
5	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	views	_	view	VBZ	O	(d<root> / --LEX--)	$LEMMA$-02	()	8	APP_s	true
8	conflicts	_	conflict	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	historical	_	historical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	history	(mod())	12	MOD_mod	true
12	examples	_	example	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	in	_	in	IN	O	_	-	_	0	IGNORE	true
14	the	_	the	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	person	(mod())	1	MOD_mod	true
15	region,	_	region,	NNS	O	_	-	_	0	IGNORE	true
16	Sunnis	_name_	Sunnis	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	have	_	have	VBP	O	_	person	_	0	IGNORE	true
18	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	19	MOD_mod	true
19	offered	_	offer	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
20	an	_	an	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	1	MOD_mod	true
21	alternative	_	alternative	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	choice,	_	choice,	NNS	O	_	and	_	0	IGNORE	true
23	which	_	which	WDT	O	_	i	_	0	IGNORE	true
24	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	25	MOD_mod	true
25	leads	_	lead	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	19	MOD_s	true
26	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
27	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
28	guess	_	guess	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_o2	true
29	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	opinion	_	opinion	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	opine-01	()	44	APP_s	true
32	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_o	true
33	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
34	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
35	Fallujan	_name_	Fallujan	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	37	MOD_mod	true
36	taxi	_	taxi	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
37	driver	_	driver	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	drive-01	(s())	32	APP_s	true
38	above	_	above	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
39	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
40	precisely	_	precisely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	precise	(mod())	44	MOD_mod	true
41	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
42	they	_	they	PRP	O	_	person	_	0	IGNORE	true
43	are	_	be	VBP	O	_	person	_	0	IGNORE	true
44	planning	_	plan	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	28	APP_o	true
45	to	_	to	TO	O	_	thing	_	0	IGNORE	true
46	implement	_	implement	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	44	APP_o	true
47	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[31@@d@@opine-01, 16@@c@@country, 26@@d@@one, 14@@explicitanon0@@person, 19@@s@@offer-01, 38@@b@@above, 35@@c@@city, 12@@d@@example, 11@@p@@history, 6@@p@@this, 32@@s@@hold-01, 44@@c@@plan-01, 28@@s@@guess-01, 37@@p@@person, 1@@c@@leave-01, 25@@b@@lead-03, 18@@n@@ever, 24@@n@@eventual, 16@@n@@_NAME_, 35@@n@@_NAME_, 21@@d@@alternative, 7@@d@@view-02, 10@@p@@other, 36@@d@@taxi, 8@@s@@conflict-01, 40@@p@@precise, 31@@t@@thing, 46@@s@@implement-01, 37@@w@@drive-01, 20@@explicitanon0@@-]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
3	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	conversation	_	conversation	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	converse-01	(o2(), s(), o())	0	ROOT	true
5	some_months_ago	_name_	ago	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
6	with	_	with	IN	O	_	name	_	0	IGNORE	true
7	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
8	retired	_	retired	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	Ba'athist	_name_	Ba'athist	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	old-timer	_	old-timer	JJ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o2	true
11	who	_	who	WP	O	_	name	_	0	IGNORE	true
12	claimed	_	claim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	that	_	that	IN	O	_	name	_	0	IGNORE	true
14	Ba'athists	_name_	ba'athist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
15	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	4	APP_o	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	means	_	mean	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
18	to	_	to	TO	O	_	name	_	0	IGNORE	true
19	stage	_	stage	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_op1	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	third	_name_	third	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	22	MOD_mod	true
22	coup	_	coup	FW	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	d'etat	_	d'etat	FW	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (h<op2>)  :op1 (d<op1>)  :purpose-of (s2<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	17	MOD_mod	true
25	return	_	return	NN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	24	APP_op2	true
26	to	_	to	IN	O	_	up-$LEMMA$	_	0	IGNORE	true
27	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	within	_	within	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	after	(op1(), mod())	25	MOD_mod	true
29	10_hours	_name_	hour	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	30	APP_op1	true
30	of	_	of	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	up-to	(op1(), mod())	4	MOD_mod	true
31	an	_	an	DT	O	_	1	_	0	IGNORE	true
32	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
33	withdrawal	_	withdrawal	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	withdraw-01	(s())	28	APP_op1	true
34	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[14@@d@@ba'athist, 12@@s@@claim-01, 9@@p@@Ba'athist, 33@@s@@withdraw-01, 5@@p@@_NAME_, 29@@m@@hour, 32@@c@@country, 15@@d@@have-03, 25@@g@@return-01, 27@@d@@power, 23@@explicitanon0@@d'etat, 29@@t@@temporal-quantity, 30@@s@@up-to, 32@@n@@_NAME_, 1@@d@@i, 19@@s@@stage-01, 17@@d@@mean, 28@@w@@after, 21@@explicitanon0@@3, 22@@d@@coup, 24@@a@@and, 4@@b@@converse-01, 10@@n@@_NAME_, 3@@p@@another, 21@@o@@ordinal-entity, 10@@p@@person, 8@@s@@retired-01]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	see	_	see	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	APP_s	true
5	that	_	that	IN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
8	fatal	_	fatal	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
9	misconception,	_	misconception,	NNS	O	_	-	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_o	true
13	Sunnis	_name_	Sunnis	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	harm,	_	harm,	NNS	O	_	and	_	0	IGNORE	true
15	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
16	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	going	_	go	VBG	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	18	APP_s	true
23	anywhere	_	anywhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
24	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@p@@also, 20@@n@@_NAME_, 17@@explicitanon0@@-, 25@@n@@soon, 4@@b@@see-01, 18@@s@@believe-01, 24@@s@@so, 8@@d@@fatal, 23@@d@@anywhere, 20@@c@@country, 15@@s@@cause-01, 12@@s@@do-02, 5@@d@@that, 22@@g@@go-02, 2@@d@@i, 13@@d@@Sunnis, 1@@h@@contrast-01]
sentence=1	Any	any	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	10	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	assumes	_	assume	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
5	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	elections	_	election	NNS	O	(d<root> / --LEX--)	elect-01	()	6	APP_op1	true
9	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	realises	_	realise	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	realize-01	(s())	12	APP_s	true
11	this,	_	this,	NNP	O	_	and	_	0	IGNORE	true
12	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
14	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	Sistani	_name_	Sistani	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
18	to	_	to	TO	O	_	-	_	0	IGNORE	true
19	call	_	call	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-03	(o2(s_UNIFY_o()), s())	12	APP_o	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
22	to	_	to	TO	O	_	and	_	0	IGNORE	true
23	withdraw	_	withdraw	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o2	true
24	its	_	its	PRP$	O	_	and	_	0	IGNORE	true
25	troops,	_	troops,	NNS	O	_	and	_	0	IGNORE	true
26	despite	_	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
27	what	_	what	WP	O	_	and	_	0	IGNORE	true
28	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
30	saying	_	say	VBG	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	$LEMMA$-01	(mod(), s(), o())	19	MOD_mod	true
31	now,	_	now,	RB	O	_	thing	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
33	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	19	MOD_mod	true
34	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
36	ensured	_	ensure	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_op1	true
37	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
38	insurgency	_	insurgency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
39	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
40	out	_	out	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-06	(s())	44	APP_op1	true
41	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
42	the	_	the	DT	O	_	-	_	0	IGNORE	true
43	picture,	_	picture,	NNS	O	_	and	_	0	IGNORE	true
44	or	_	or	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	33	MOD_mod	true
45	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
46	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
47	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	44	APP_op2	true
48	an	_	an	DT	O	_	-	_	0	IGNORE	true
49	alternative	_	alternative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
50	foreign	_	foreign	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
51	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_s	true
52	(in	_	(in	NFP	O	_	mean-01	_	0	IGNORE	true
53	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
54	case	_	case	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-04	(mod())	51	MOD_mod	true
55	Iran)	iran)	iran)	CD	O	_	mean-01	_	0	IGNORE	true
56	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
57	back	_	back	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-up-04	(mod())	47	MOD_mod	true
58	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
59	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
60	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@cause-01, 50@@p@@foreign, 47@@s@@have-03, 33@@w@@until, 13@@explicitanon0@@-, 15@@n@@_NAME_, 53@@p@@this, 21@@c@@country, 44@@a@@or, 36@@d@@ensure-01, 19@@t@@call-03, 8@@d@@elect-01, 51@@d@@power, 32@@explicitanon0@@-, 9@@p@@also, 49@@p@@alternative, 10@@s@@realize-01, 15@@p@@person, 1@@p@@any, 57@@o@@back-up-04, 38@@d@@insurgency, 54@@p@@case-04, 5@@d@@power, 40@@s@@out-06, 14@@p@@even, 23@@s@@withdraw-01, 6@@w@@after, 4@@s@@assume-01, 2@@g2@@govern-01, 2@@g@@government-organization, 30@@c2@@say-01, 21@@n@@_NAME_]
sentence=1	Posada	_name_	Posada	NNS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	recommend-01	(s(), o())	0	ROOT	true
3	have	_	have	VB	O	_	person	_	0	IGNORE	true
4	told	_	tell	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_s	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	inquisitive	_	inquisitive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	7	MOD_s	true
7	journalist	_	journalist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
8	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	doorstep	_	doorstep	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
12	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	11	MOD_s	true
13	Meiring	_name_	Meiring	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
14	told	_	tell	VBD	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	12	APP_o	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
17	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	reporter	_	reporter	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	report-01	()	14	APP_o2	true
19	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
20	bothered	_	bother	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
21	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
22	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	bloody	_	bloody	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	trail	_	trail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Philippines,	_name_	philippines,	NN	O	_	_NAME_	_	0	IGNORE	true
28	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	"If	"if	"If	.	O	_	cause-01	_	0	IGNORE	true
30	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
31	harms	_	harm	VBZ	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	42	MOD_mod	true
32	me	_	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	in	_	in	IN	O	_	i	_	0	IGNORE	true
34	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
35	way,	_	way,	NN	O	_	and	_	0	IGNORE	true
36	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
37	will	_	will	MD	O	_	thing	_	0	IGNORE	true
38	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	APP_op1	true
39	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
40	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
41	then,	_	then,	NNP	O	_	and	_	0	IGNORE	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	14	APP_o	true
43	you'll	_	you'll	PRP	O	_	i	_	0	IGNORE	true
44	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-03	(s())	42	APP_op2	true
45	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
46	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
47	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
48	am.	_	am.	VBP	O	_	_NAME_	_	0	IGNORE	true
49	"	_	"	''	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[11@@d@@something, 23@@p@@bloody, 16@@s@@single-02, 21@@s@@follow-02, 17@@c@@country, 18@@p2@@person, 10@@b@@doorstep, 18@@e2@@report-01, 36@@d@@you, 31@@o@@harm-01, 17@@n@@_NAME_, 2@@s@@recommend-01, 7@@d@@journalist, 42@@a@@and, 20@@s@@bother-01, 40@@d@@power, 4@@b@@tell-01, 14@@w@@tell-01, 6@@s@@inquisitive, 1@@p@@person, 1@@n@@_NAME_, 5@@p@@any, 24@@d@@trail, 12@@s@@resemble-01, 38@@s@@find-01, 30@@d@@this, 44@@s@@find-out-03, 34@@p@@any, 13@@n@@_NAME_, 13@@p@@person]
sentence=1	Meiring's	meiring's	meiring's	PRP$	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
2	crimes	_	crime	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	5	APP_op1	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	fresh,	_	fresh,	ADD	O	_	and	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	wave	_	wave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	false	_	false	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	flag	_	flag	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	which	_	which	WDT	O	_	name	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
13	"War	"war	"War	``	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
14	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
15	Terror.	_name_	Terror.	NNP	O	_	_NAME_	_	0	IGNORE	true
16	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@p@@false, 1@@p@@person, 13@@s@@"War-01, 5@@a@@and, 6@@s@@wave-01, 9@@d@@flag, 2@@s@@crime-02, 1@@n@@_NAME_]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	happened	_	happen	VBD	O	_	event	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-rel-role-91	(s(), o())	14	MOD_o	true
5	Philippines	_name_	Philippines	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	14	MOD_mod	true
6	which,	_	which,	NNP	O	_	resemble-01	_	0	IGNORE	true
7	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	14	MOD_s	true
8	Pakistan,	_name_	pakistan,	CD	O	_	_NAME_	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	vulnerable	_	vulnerable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	node	_	node	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
15	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	business	_	business	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	intelligence	_	intelligence	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	agencies	_	agency	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_s	true
22	terrorist	_	terrorist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	terrorism	(mod())	23	MOD_mod	true
23	organizations	_	organization	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
24	conduct	_	conduct	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_o	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	each	_	each	DT	O	_	$LEMMA$	_	0	IGNORE	true
27	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[14@@d@@node, 22@@p@@terrorism, 5@@c@@country, 24@@s@@conduct-02, 17@@o@@business, 19@@p@@intelligence, 5@@n@@_NAME_, 23@@d@@organization, 27@@p@@other, 11@@p@@important, 1@@d@@They, 20@@d@@agency, 4@@s@@have-rel-role-91, 21@@a@@and, 7@@s@@resemble-01, 13@@p@@vulnerable]
sentence=1	Posada's	_name_	Posada's	NNP	O	_	contrast-01	_	0	IGNORE	true
2	crimes,	_	crimes,	NNP	O	_	and	_	0	IGNORE	true
3	on	_	on	IN	O	_	contrast-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	other	_	other	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
6	hand,	_	hand,	NNS	O	_	have-concession-91	_	0	IGNORE	true
7	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	5	APP_s	true
8	seem	_	seem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
9	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
10	ancient	_	ancient	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	history,	_	history,	NNS	O	_	-	_	0	IGNORE	true
12	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	to	_	to	IN	O	_	resemble-01	_	0	IGNORE	true
14	a	_	a	DT	O	_	-	_	0	IGNORE	true
15	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	8	APP_s	true
16	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
17	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	know	_	know	VBP	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	15	MOD_s	true
19	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	history	_	history	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	18	APP_o	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@s@@contrast-01, 15@@d@@person, 18@@l@@know-01, 7@@s@@obligate-01, 20@@m@@history, 17@@explicitanon0@@-, 12@@p@@especially, 8@@s@@seem-01, 10@@p@@ancient]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	to	_	to	IN	O	_	say-01	_	0	IGNORE	true
3	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	1	MOD_mod	true
4	who	_	who	WP	O	_	person	_	0	IGNORE	true
5	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
6	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
8	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
9	crimes,	_	crimes,	NNS	O	_	-	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
11	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op2	true
13	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[12@@d@@that, 1@@a@@and, 3@@p@@that, 6@@p@@even, 7@@s@@know-01, 5@@explicitanon0@@-, 10@@explicitanon0@@-, 11@@p@@even]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	doubt	_	doubt	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	extradited	_	extradite	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
7	to	_	to	IN	O	_	person	_	0	IGNORE	true
8	Venezuela,	_name_	Venezuela,	NFP	O	_	_NAME_	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_o	true
14	that	_	that	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_mod	true
17	be	_	be	VB	O	_	thing	_	0	IGNORE	true
18	answered	_	answer	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	Yes	yes	yes	UH	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@he, 12@@p@@only, 14@@p@@that, 6@@s@@extradite-01, 1@@d@@i, 18@@s@@answer-01, 2@@s@@doubt-01, 13@@t@@way, 21@@d@@yes, 15@@d@@question-01, 16@@s@@possible-01]
sentence=1	I've	i've	I've	NNP	O	_	multi-sentence	_	0	IGNORE	true
2	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	book-	_	book-	NN	O	_	and	_	0	IGNORE	true
5	it's	_	it's	PRP	O	_	and	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	8	MOD_mod	true
8	person	_	person	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	memoir	_	memoir	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
10	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	ring	_	ring	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	truth,	_	truth,	NNP	O	_	multi-sentence	_	0	IGNORE	true
15	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
17	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	wider	_	wide	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	wide-02	(s())	22	MOD_s	true
22	context	_	context	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
24	confirmed	_	confirm	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
25	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
26	allegations	_	allegation	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	24	APP_o	true
27	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
28	Contra	_name_	Contra	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
29	drug	_	drug	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
30	connections	_	connection	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	connect-01	(s(), o())	26	APP_s	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	led	_	lead	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	26	MOD_s	true
33	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
34	Terrell	_name_	Terrell	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	35	APP_s	true
35	becoming	_	become	VBG	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	32	APP_o	true
36	a	_	a	DT	O	_	1	_	0	IGNORE	true
37	target	_	target	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	APP_o	true
38	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
39	discrediting	_	discredit	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	37	APP_o	true
40	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	TWIG	_name_	TWIG	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	44	MOD_mod	true
43	counterintelligence	_	counterintelligence	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	44	MOD_s	true
44	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
45	that	_	that	WDT	O	_	name	_	0	IGNORE	true
46	ran	_	run	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	44	MOD_s	true
47	interference	_	interference	NN	O	(d<root> / --LEX--)	interfere-01	()	46	APP_o	true
48	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
49	the	_	the	DT	O	_	person	_	0	IGNORE	true
50	Contra	_name_	Contra	NNP	O	_	_NAME_	_	0	IGNORE	true
51	effort,	_	effort,	NNP	O	_	person	_	0	IGNORE	true
52	staffed	_	staffed	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	44	MOD_o	true
53	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
54	covert	_	covert	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
55	ops	_	op	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
56	types	_	type	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_s	true
57	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	56	MOD_s	true
58	Ollie_North,_Robert_Owen,	_name_	Owen,	NNP	O	_	mean-01	_	0	IGNORE	true
59	Vince_Cannistaro	_name_	Cannistaro	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	60	APP_op2	true
60	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	56	MOD_op1	true
61	Buck_Revell	_name_	Revell	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	60	APP_op3	true
62	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[47@@d@@interfere-01, 7@@explicitanon0@@1, 54@@p@@covert, 15@@p@@especially, 16@@s@@cause-01, 21@@b@@wide-02, 61@@p@@person, 60@@a@@and, 18@@explicitanon0@@much, 52@@s@@staffed-01, 59@@n@@_NAME_, 9@@d@@memoir, 30@@s@@connect-01, 29@@d@@drug, 35@@o@@become-01, 12@@y@@ring, 17@@s@@so, 61@@n@@_NAME_, 32@@t@@lead-03, 59@@p@@person, 42@@p@@_NAME_, 39@@s@@discredit-01, 43@@s@@counterintelligence, 7@@o@@ordinal-entity, 34@@n@@_NAME_, 44@@d@@group, 24@@s@@confirm-01, 34@@p@@person, 8@@p@@person, 56@@d@@type, 28@@d@@Contra, 55@@p@@op, 26@@s@@allege-01, 37@@s@@target-01, 2@@s@@read-01, 57@@s@@include-01, 22@@d@@context, 21@@m@@more, 46@@s@@run-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	6	MOD_s	true
6	convince	_	convince	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	3	MOD_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	jury	_	jury	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
11	been	_	be	VBN	O	_	possible-01	_	0	IGNORE	true
12	able	_	able	JJ	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	6	APP_o2	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
15	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	relevant	_	relevant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	documents	_	document	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
19	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	20	APP_poss	true
20	files	_	file	NNS	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$-01	(mod(), poss())	17	MOD_mod	true
21	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
22	Wilson	_name_	Wilson	NNP	O	(p<root> / person  :name (n / --LEX--)  :topic-of (a<mod>))	_NAME_	(mod())	20	MOD_mod	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@d@@They, 16@@s@@relevant-01, 20@@w@@file-01, 6@@t@@convince-01, 12@@f@@possible-01, 3@@d@@someone, 22@@n@@_NAME_, 19@@g@@government-organization, 22@@p@@person, 14@@s@@see-01, 15@@p@@all, 5@@s@@possible-01, 19@@n@@_NAME_, 17@@d@@document, 8@@d@@jury, 2@@s@@need-01]
sentence=1	Third	_name_	third	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	2	MOD_mod	true
2	ranking	_	ranking	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
3	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
4	officer,	_	officer,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
5	Briggs	_name_	Briggs	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	signed	_	sign	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	declaration	_	declaration	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	state-01	(o(s()))	6	APP_o	true
9	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	February	_name_	February	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	2	(mod())	6	MOD_mod	true
11	3rd,	_	3rd,	NN	O	_	3	_	0	IGNORE	true
12	1983,	_	1983,	XX	O	_	and	_	0	IGNORE	true
13	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	November	_name_	November	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	11	(mod())	20	MOD_mod	true
16	8th,	_	8th,	CD	O	_	1	_	0	IGNORE	true
17	1982,	_	1982,	JJ	O	_	and	_	0	IGNORE	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	had	_	have	VBD	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
20	authorized	_	authorize	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	search	_	search	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	25	APP_poss	true
25	records	_	record	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	22	APP_s	true
26	"for	_	"for	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
29	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
31	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	pertains	_	pertain	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
34	to	_	to	IN	O	_	and	_	0	IGNORE	true
35	Edwin_P._Wilson,	_name_	wilson,	CD	O	_	_NAME_	_	0	IGNORE	true
36	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	MOD_op1	true
37	the	_	the	DT	O	_	he	_	0	IGNORE	true
38	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	allegations	_	allegation	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	36	APP_op2	true
40	concerning	_	concern	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
41	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
42	activities	_	activity	NNS	O	(d<root> / --LEX--)	$LEMMA$-06	()	39	APP_s	true
43	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	39	MOD_mod	true
44	February_28th,	_name_	28th,	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	_NAME_	(mod())	43	MOD_mod	true
45	1971,	_	1971,	CD	O	_	and	_	0	IGNORE	true
46	when	_	when	WRB	O	_	i	_	0	IGNORE	true
47	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
48	retired	_	retire	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	43	APP_op1	true
49	from	_	from	IN	O	_	-	_	0	IGNORE	true
50	the	_	the	DT	O	_	person	_	0	IGNORE	true
51	CIA.	cia.	cia.	NN	O	_	_NAME_	_	0	IGNORE	true
52	"	_	"	''	O	_	and	_	0	IGNORE	true

nodealignment=[1@@o@@ordinal-entity, 3@@n@@_NAME_, 22@@s@@search-01, 27@@p@@any, 39@@s@@allege-01, 5@@n@@_NAME_, 3@@g@@government-organization, 24@@n@@_NAME_, 10@@d@@date-entity, 25@@m@@record, 24@@g@@government-organization, 36@@a@@or, 44@@explicitanon1@@_NAME_, 8@@c@@state-01, 1@@explicitanon0@@3, 28@@d@@material, 33@@s@@pertain-01, 31@@p@@any, 15@@explicitanon1@@11, 20@@s@@authorize-01, 2@@s@@ranking-01, 43@@w@@after, 42@@d@@activity-06, 6@@c@@sign-01, 38@@p@@various, 48@@d@@retire-01, 10@@explicitanon0@@2]
sentence=1	Police	police	Police	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	Bernard	_name_	Bernard	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
4	confessed	_	confess	VBD	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), o(s()))	17	APP_op1	true
5	to	_	to	IN	O	_	person	_	0	IGNORE	true
6	detectives	_	detective	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	4	APP_o2	true
7	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	had	_	have	VBD	O	_	$LEMMA$-06	_	0	IGNORE	true
10	sex	_	sex	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	November_2002	_name_	2002	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
18	admitted	_	admit	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	17	APP_op2	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	knowing	_	know	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_o	true
21	about	_	about	IN	O	_	name	_	0	IGNORE	true
22	sexual	_	sexual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	sex-01	(mod())	23	MOD_mod	true
23	acts	_	act	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_o	true
24	involving	_	involve	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	23	MOD_o	true
25	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_s	true
27	a	_	a	DT	O	_	1	_	0	IGNORE	true
28	dog	_	dog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
29	that	_	that	WDT	O	_	event	_	0	IGNORE	true
30	occurred	_	occur	VBD	O	_	event	_	0	IGNORE	true
31	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
32	Hosanna_Church	_name_	Church	NNP	O	(n3<root> / --LEX--  :name-of (w / worship-place  :location-of (i<mod>)))	_NAME_	(mod())	26	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@a@@and, 13@@p@@young, 16@@explicitanon2@@_NUMBER_, 17@@a@@and, 18@@c@@admit-01, 24@@s@@involve-01, 32@@n3@@_NAME_, 14@@d@@girl, 23@@d@@act-02, 22@@p@@sex-01, 6@@e2@@detective, 1@@d@@Police, 25@@d@@child, 16@@d@@date-entity, 3@@p@@person, 4@@s@@confess-01, 3@@n@@_NAME_, 32@@w@@worship-place, 2@@s@@say-01, 6@@p2@@person, 10@@s@@sex-01, 20@@s@@know-01, 28@@d@@dog]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	Monday,	monday,	monday,	ADD	O	_	name	_	0	IGNORE	true
3	Louis	louis	Louis	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
4	Lamonica,	lamonica,	lamonica,	CD	O	_	year	_	0	IGNORE	true
5	45,	_	45,	CD	O	_	mean-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
7	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	pastor	_	pastor	NN	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	3	MOD_s	true
9	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	Hosanna	_name_	Hosanna	NNP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_o	true
11	Church,	_name_	church,	NN	O	_	have-org-role-91	_	0	IGNORE	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	booked	_	book	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	16	MOD_mod	true
16	counts	_	count	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_op1	true
17	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
18	aggravated	_	aggravated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	rape	_	rape	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
21	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	22	MOD_mod	true
22	count	_	count	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_op2	true
23	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
24	crime	_	crime	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	APP_s	true
25	against	_	against	IN	O	_	-	_	0	IGNORE	true
26	nature	_	nature	NN	O	(d<root> / --LEX--)	$FORM$	()	24	APP_s	true
27	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
28	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	walked	_	walk	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	27	APP_op1	true
30	in	_	in	RP	O	_	$LEMMA$	_	0	IGNORE	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	the_Livingston_Parish_Sheriff's_Office	_name_	Office	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	29	APP_s	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	MOD_op1	true
34	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_op2	true
35	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	34	APP_s	true
37	implicate	_	implicate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	APP_s	true
38	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
39	in	_	in	IN	O	_	i	_	0	IGNORE	true
40	a	_	a	DT	O	_	thing	_	0	IGNORE	true
41	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
42	at	_	at	IN	O	_	thing	_	0	IGNORE	true
43	the	_	the	DT	O	_	person	_	0	IGNORE	true
44	church	_	church	NN	O	_	$LEMMA$	_	0	IGNORE	true
45	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
46	reportedly	_	reportedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	report-01	(s())	48	MOD_s	true
47	occurred	_	occur	VBD	O	_	name	_	0	IGNORE	true
48	two_years_ago	_name_	ago	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	41	MOD_mod	true
49	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[26@@d@@nature, 20@@a@@and, 8@@h@@have-org-role-91, 32@@g@@government-organization, 7@@n@@former, 8@@j@@pastor, 27@@w@@after, 16@@s@@count, 21@@explicitanon0@@1, 10@@d@@_NAME_, 46@@s@@report-01, 36@@s@@possible-01, 41@@d@@situation, 34@@s@@say-01, 48@@n@@_NAME_, 38@@d@@other, 18@@s@@aggravated-02, 13@@s@@book-01, 37@@s@@implicate-01, 32@@n@@_NAME_, 3@@d@@Louis, 29@@s@@walk-01, 33@@a@@and, 24@@s@@crime-02, 15@@explicitanon0@@2, 19@@d@@rape-01, 22@@s@@count]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	an	_	an	DT	O	_	1	_	0	IGNORE	true
6	arms	_	arm	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	depot	_	depot	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the_Liberation_Tigers_of_Tamil	_name_	Tamil	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	Eelam	eelam	Eelam	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_poss	true
11	(LTTE),	(ltte),	(LTTE),	.	O	_	$LEMMA$	_	0	IGNORE	true
12	who	_	who	WP	O	_	name	_	0	IGNORE	true
13	operate	_	operate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	freely	_	freely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	free-04	(s())	13	MOD_s	true
16	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the_Andaman_Sea	_name_	Sea	NNP	O	(n3<root> / --LEX--  :name-of (s2 / sea  :mod-of (p2<mod>)))	_NAME_	(mod())	13	MOD_mod	true
18	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@d@@It, 17@@s2@@sea, 10@@c@@company, 4@@s@@become-01, 14@@p@@almost, 17@@n3@@_NAME_, 7@@m@@depot, 9@@p@@_NAME_, 10@@n@@_NAME_, 13@@s@@operate-01, 6@@p@@arm, 3@@p@@also, 15@@s@@free-04]
sentence=1	Information	information	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	pointing	_	point	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	direction	_	direction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
10	the	_	the	DT	O	_	name	_	0	IGNORE	true
11	December_26	_name_	26	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	9	APP_op1	true
12	tsunami,	_	tsunami,	NNS	O	_	name	_	0	IGNORE	true
13	which	_	which	WDT	O	_	name	_	0	IGNORE	true
14	took	_	take	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	heavy	_	heavy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	toll	_	toll	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_mod	true
18	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Andamans	_name_	Andamans	NNPS	O	(n2<root> / --LEX--  :name-of (c2 / country  :mod-of (i<mod>)))	_NAME_	(mod())	17	MOD_mod	true
21	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[20@@n2@@_NAME_, 8@@d@@light, 1@@d@@information, 5@@d@@direction, 20@@c2@@country, 11@@d@@date-entity, 9@@w@@after, 4@@p@@this, 6@@s@@come-01, 17@@d@@toll, 11@@explicitanon2@@_NUMBER_, 16@@p@@heavy, 2@@s@@point-01]
sentence=1	Correspondents	correspondents	correspondent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	flocked	_	flock	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true
4	in	_	in	RP	O	_	cause-01	_	0	IGNORE	true
5	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
6	cover	_	cover	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-03	(mod(), s(), o())	3	MOD_mod	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	tsunami	_	tsunami	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	9	MOD_s	true
11	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	9	APP_o	true
13	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	miserable	_	miserable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
20	surrounding	_	surround	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
21	the	_	the	DT	O	_	name	_	0	IGNORE	true
22	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	navy's	_	navy's	.	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	9	MOD_mod	true
24	Far_Eastern_Naval_Command,	_name_	Command,	NFP	O	_	name	_	0	IGNORE	true
25	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	being	_	be	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	9	MOD_s	true
27	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
28	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	with	_	with	IN	O	_	-	_	0	IGNORE	true
30	India's	_name_	India's	NNP	O	_	_NAME_	_	0	IGNORE	true
31	"blue	_	"blue	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	32	MOD_mod	true
32	water	_	water	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
33	navy"	_	navy"	ADD	O	_	and	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@correspondent, 8@@d@@tsunami, 18@@p@@security, 27@@s@@establish-01, 23@@b@@_NAME_, 20@@s@@surround-01, 12@@s@@have-03, 26@@s@@person, 19@@d@@situation, 31@@p@@_NAME_, 22@@c@@country, 13@@p@@another, 25@@n@@now, 6@@s@@cover-03, 14@@d@@story, 17@@p@@miserable, 32@@p@@water, 10@@s@@person, 3@@s@@flock-01, 9@@s@@find-01, 11@@p@@also, 22@@n@@_NAME_]
sentence=1	The_Andaman_Sea	_name_	Sea	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	conduit	_	conduit	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	9	APP_op1	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
8	traffic,	_	traffic,	NNP	O	_	and	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
10	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	572	_	572	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
12	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	islands	_	island	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_dom	true
16	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
17	constitute	_	constitute	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
19	Andaman	_name_	Andaman	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	Nicobar	_name_	Nicobar	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
23	are	_	be	VBP	O	_	person	_	0	IGNORE	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	27	MOD_s	true
26	transit	_	transit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	27	MOD_mod	true
27	base	_	base	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	9	APP_op2	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@p@@large, 19@@n@@_NAME_, 27@@r@@base, 14@@p@@small, 9@@a@@and, 17@@s@@constitute-01, 11@@explicitanon0@@_NUMBER_, 21@@n@@_NAME_, 1@@n2@@_NAME_, 15@@d@@island, 26@@p@@transit-01, 4@@s@@major-02, 7@@p@@this, 22@@d@@group, 1@@n@@newspaper, 5@@r@@conduit, 25@@s@@natural-03]
sentence=1	Since	since	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	"Sea	"sea	"sea	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	Tigers"	tigers"	Tigers"	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	1	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
7	LTTE,	ltte,	ltte,	XX	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	true
8	better	_	better	RB	O	(g<root> / --LEX--  :degree (m / more)  :manner-of (t<mod>))	good-02	(mod())	9	MOD_mod	true
9	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
10	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
11	the_Tamil_Tigers,	_name_	tigers,	NN	O	_	_NAME_	_	0	IGNORE	true
12	are	_	be	VBP	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
15	who	_	who	WP	O	_	name	_	0	IGNORE	true
16	rule	_	rule	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	Andaman	_name_	Andaman	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	16	APP_o	true
19	Sea:	sea:	Sea:	NNP	O	_	and	_	0	IGNORE	true
20	they	_	they	PRP	O	_	person	_	0	IGNORE	true
21	carry	_	carry	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	arms	_	arm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
25	drugs	_	drug	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
26	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
27	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
28	own	_	own	JJ	O	_	$LEMMA$-01	_	0	IGNORE	true
29	use	_	use	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	21	MOD_mod	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	MOD_op1	true
31	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
33	deliver	_	deliver	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	30	APP_op2	true
34	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	rebels	_	rebel	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	33	APP_s	true
36	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
37	Aceh	_name_	Aceh	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	38	APP_op1	true
38	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	35	MOD_mod	true
39	all	_	all	RB	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op2	true
40	along	_	along	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	38	MOD_mod	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	east	_	east	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	coast	_	coast	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	40	APP_op1	true
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
45	Africa	_name_	Africa	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	43	APP_poss	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[45@@n@@_NAME_, 9@@s@@know-02, 1@@s@@cause-01, 18@@w@@world-region, 33@@s@@deliver-01, 31@@p@@also, 8@@m@@more, 45@@c@@continent, 35@@p2@@person, 29@@o@@use-01, 37@@n@@_NAME_, 39@@d@@all, 7@@d@@_NAME_, 18@@n2@@_NAME_, 4@@p@@and, 16@@s@@rule-03, 3@@p@@_NAME_, 30@@a@@and, 21@@s@@carry-01, 40@@b@@along, 43@@h@@coast, 35@@e2@@rebel-01, 42@@p@@east, 38@@b@@and, 24@@a@@and, 25@@d@@drug, 37@@c@@country, 23@@d@@arm, 8@@g@@good-02]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	13	MOD_s	true
5	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	Bangladeshis,	bangladeshis,	Bangladeshis,	VBG	O	_	_NAME_	_	0	IGNORE	true
8	who	_	who	WP	O	_	name	_	0	IGNORE	true
9	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	15	MOD_s	true
10	millions	_	million	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000000	(mod())	13	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
13	countrymen	_	countryman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	have	_	have	VBP	O	_	person	_	0	IGNORE	true
15	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-11	(s(), o())	0	ROOT	true
16	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
17	densely	_	densely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	huge	(mod())	18	MOD_mod	true
18	populated	_	populated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	homeland	_	homeland	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	to	_	to	TO	O	_	person	_	0	IGNORE	true
21	settle	_	settle	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-03	(mod(), s(), o())	15	MOD_mod	true
22	elsewhere	_	elsewhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@number, 4@@s@@include-91, 2@@p@@large, 22@@d@@elsewhere, 17@@s@@huge, 21@@s@@settle-03, 18@@s@@populated-01, 13@@d@@countryman, 15@@s@@leave-11, 5@@d@@they, 10@@m@@multiple, 10@@explicitanon0@@1000000, 19@@d@@homeland, 9@@s@@resemble-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	formidable	_	formidable	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
3	enemy,	_	enemy,	NNS	O	_	this	_	0	IGNORE	true
4	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	MOD_s	true
6	the	_	the	DT	O	_	name	_	0	IGNORE	true
7	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	8	APP_poss	true
8	army	_	army	NN	O	(m<root> / --LEX--  :poss (i<poss>))	_NAME_	(poss())	5	APP_o2	true
9	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	11	MOD_s	true
11	eye	_	eye	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	mid-1980s,	_	mid-1980s,	NN	O	_	_NAME_	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
16	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	operating	_	operate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
18	in	_	in	IN	O	_	name	_	0	IGNORE	true
19	northeastern	_	northeastern	JJ	O	(h<root> / --LEX--  :part-of (i<poss>))	northeast	(poss())	21	APP_op1	true
20	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_poss	true
21	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
22	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	the_Andaman_Sea	_name_	Sea	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_op2	true
24	for	_	for	IN	O	_	or	_	0	IGNORE	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	MOD_s	true
27	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@c@@country, 7@@c@@country, 23@@c@@country, 5@@b@@give-01, 26@@s@@long-03, 19@@h@@northeast, 23@@n@@_NAME_, 2@@d@@formidable, 17@@s@@operate-01, 7@@n@@_NAME_, 8@@m@@_NAME_, 11@@d@@eye, 20@@n@@_NAME_, 1@@p@@this, 10@@s@@black-05, 21@@b@@and]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	3	MOD_s	true
3	threat	_	threat	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$en-01	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the_Andaman_Islands	_name_	Islands	NNPS	O	(i<root> / island  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	name	_	0	IGNORE	true
8	steady	_	steady	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
9	building-up	_	building-up	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	ports	_	port	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
13	conduits	_	conduit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	serve	_	serve	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	the_Tamil_Tigers	_name_	Tigers	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
18	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	host	_	host	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	less-strong	_	less-strong	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	militant	_	militant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
24	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[22@@p@@militant, 16@@p@@person, 17@@a@@and, 16@@n@@_NAME_, 19@@explicitanon0@@host, 15@@s@@serve-01, 12@@a@@and, 21@@p@@less-strong, 13@@d@@conduit, 11@@d@@port, 5@@i@@island, 9@@s@@building-up-01, 3@@s@@threaten-01, 23@@d@@group, 5@@n@@_NAME_, 2@@s@@real-04, 8@@s@@steady]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Ten	ten	Ten	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	10	(mod())	3	MOD_mod	true
3	Degree	degree	Degree	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	Channel	channel	Channel	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	divides	_	divide	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Andamans,	_name_	andamans,	NN	O	_	_NAME_	_	0	IGNORE	true
8	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	the	_	the	DT	O	_	more	_	0	IGNORE	true
11	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	23	MOD_mod	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	heavily	_	heavily	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	heavy	(mod())	15	MOD_mod	true
15	populated	_	populated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
16	northern	_	northern	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	north	(mod())	11	MOD_mod	true
17	islands,	_	islands,	NNP	O	_	mean-01	_	0	IGNORE	true
18	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
20	20	_	20	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	21	MOD_mod	true
21	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
22	so	_	so	RB	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	Nicobar_Islands	_name_	Islands	NNPS	O	(i<root> / island  :name (n / --LEX--))	_NAME_	()	5	APP_o2	true
24	in	_	in	IN	O	_	oil	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	south	_	south	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	.	_	.	.	O	_	include-91	_	0	IGNORE	true

nodealignment=[20@@explicitanon0@@_NUMBER_, 2@@explicitanon0@@10, 11@@f2@@large, 3@@p@@Degree, 11@@m@@more, 22@@explicitanon0@@so, 16@@p@@north, 23@@n@@_NAME_, 21@@d@@or, 15@@s@@populated-01, 26@@b@@south, 5@@b@@divide-01, 23@@i@@island, 13@@s@@more, 4@@d@@Channel, 14@@s@@heavy]
sentence=1	On	on	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	South_Andaman,	_name_	andaman,	RB	O	_	_NAME_	_	0	IGNORE	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	heavily	_	heavily	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	heavy	(mod())	6	MOD_mod	true
6	populated	_	populated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	island,	_	island,	NNP	O	_	product	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	Port_Blair,	_name_	Blair,	NNP	O	_	_NAME_	_	0	IGNORE	true
10	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
12	the	_	the	DT	O	_	become-01	_	0	IGNORE	true
13	capital	_	capital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
15	the	_	the	DT	O	_	most	_	0	IGNORE	true
16	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	town	_	town	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
19	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
21	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	archipelago	_	archipelago	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@d@@capital, 14@@a@@and, 16@@p@@only, 22@@b@@archipelago, 5@@s@@heavy, 18@@d@@town, 6@@s@@populated-01, 21@@p@@entire, 4@@s@@most, 17@@p@@large]
sentence=1	Islamabad	_name_	Islamabad	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	accuses	_	accuse	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
3	New_Delhi	_name_	Delhi	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	using	_	use	VBG	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	2	APP_o2	true
6	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
7	consulates	_	consulate	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	in	_	in	IN	O	_	name	_	0	IGNORE	true
9	Kandahar	_name_	Kandahar	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	10	APP_op1	true
10	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	7	MOD_mod	true
11	Jalalabad	_name_	Jalalabad	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	10	APP_op2	true
12	to	_	to	TO	O	_	name	_	0	IGNORE	true
13	train	_	train	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o2	true
14	Balochi	_name_	balochi	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	insurgents	_	insurgent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	who	_	who	WP	O	_	person	_	0	IGNORE	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	active	_	active	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	activity-06	(s())	15	MOD_s	true
19	in	_	in	IN	O	_	name	_	0	IGNORE	true
20	Pakistani	_name_	pakistani	JJ	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	Balochistan	_name_	Balochistan	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	18	MOD_mod	true
22	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@w@@world-region, 11@@n@@_NAME_, 9@@c@@city, 20@@c@@country, 14@@n@@_NAME_, 1@@c@@city, 18@@s@@activity-06, 13@@s@@train-01, 1@@n@@_NAME_, 11@@c@@city, 20@@n@@_NAME_, 10@@b@@and, 2@@t@@accuse-01, 3@@c@@city, 21@@b@@_NAME_, 5@@i@@use-01, 15@@d@@insurgent, 9@@n@@_NAME_, 7@@d@@consulate, 3@@n@@_NAME_]
sentence=1	Since	since	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
2	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	9	()	1	APP_op1	true
3	11,	_	11,	JJ	O	_	name	_	0	IGNORE	true
4	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
5	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
6	been	_	be	VBN	O	_	person	_	0	IGNORE	true
7	repeatedly	_	repeatedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	repeat-01	(s())	8	MOD_s	true
8	accused	_	accuse	VBN	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	25	APP_s	true
9	by	_	by	IN	O	_	and	_	0	IGNORE	true
10	Afghan	_name_	afghan	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
12	Western	_name_	western	JJ	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	11	APP_op2	true
13	leaders	_	leader	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	lead-02	(s())	8	APP_s	true
14	of	_	of	IN	O	_	name	_	0	IGNORE	true
15	harbouring	_	harbour	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o2	true
16	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n2 / --LEX--)  :mod-of (m<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	extremists	_	extremist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	who	_	who	WP	O	_	person	_	0	IGNORE	true
19	had	_	have	VBD	O	_	person	_	0	IGNORE	true
20	pledged	_	pledge	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	17	MOD_s	true
21	to	_	to	TO	O	_	person	_	0	IGNORE	true
22	disrupt	_	disrupt	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	elections,	_name_	elections,	NNS	O	(d<root> / --LEX--)	_NAME_	()	22	APP_o	true
25	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
26	at	_	at	IN	O	_	person	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	highest	_	high	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	high-02	(s())	29	MOD_s	true
29	level	_	level	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
32	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
33	avoided	_	avoid	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	25	APP_o	true
34	criticising	_	criticise	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_o	true
35	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	36	MOD_s	true
36	Pervaiz_Musharraf	_name_	Musharraf	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	34	APP_o	true
37	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
38	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
39	grounds	_	ground	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	33	MOD_o	true
40	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
41	he	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
43	helping	_	help	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
44	the	_	the	DT	O	_	person	_	0	IGNORE	true
45	US	_name_	US	NNP	O	_	name	_	0	IGNORE	true
46	catch	_	catch	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_s	true
47	Al_Qaeda	_name_	Qaeda	NNP	O	(n2<root> / --LEX--  :name-of (c2 / criminal-organization  :mod-of (s<mod>)))	_NAME_	(mod())	48	MOD_mod	true
48	elements	_	element	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
49	inside	_	inside	IN	O	_	$LEMMA$	_	0	IGNORE	true
50	Pakistan	_name_	Pakistan	NNP	O	_	_NAME_	_	0	IGNORE	true
51	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[16@@c2@@criminal-organization, 46@@s@@catch-01, 15@@s@@harbour-01, 39@@s@@cause-01, 4@@n@@_NAME_, 31@@n@@_NAME_, 24@@d@@_NAME_, 29@@p@@level, 22@@s@@disrupt-01, 1@@w@@since, 48@@d@@element, 31@@c@@country, 47@@n2@@_NAME_, 43@@s@@help-01, 35@@p2@@president, 35@@h@@have-org-role-91, 17@@d@@extremist, 28@@m@@most, 16@@n2@@_NAME_, 10@@n@@_NAME_, 36@@n@@_NAME_, 13@@w@@lead-02, 25@@s@@contrast-01, 7@@s@@repeat-01, 2@@explicitanon0@@9, 4@@c@@country, 11@@a@@and, 33@@c@@avoid-01, 12@@w@@world-region, 36@@p@@person, 47@@c2@@criminal-organization, 2@@d@@date-entity, 12@@n2@@_NAME_, 13@@p@@person, 34@@s@@criticise-01, 28@@b2@@high-02, 20@@c@@pledge-01, 10@@c@@country, 8@@t@@accuse-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	meeting	_	meeting	NN	O	(d<root> / --LEX--)	meet-03	()	4	APP_o	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	pushed	_	push	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-04	(o2(), s(), o())	0	ROOT	true
5	together	_	together	RB	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
6	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
10	the_US_Defence_Department	_name_	Department	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	9	APP_op2	true
11	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
12	were	_	be	VBD	O	_	person	_	0	IGNORE	true
13	desperately	_	desperately	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	desperate-02	(s())	14	MOD_s	true
14	anxious	_	anxious	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	MOD_s	true
15	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
16	secure	_	secure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	APP_o	true
17	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	peaceful	_	peaceful	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	election	_	election	NN	O	(d<root> / --LEX--)	elect-01	()	22	APP_op1	true
20	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
21	Afghanistan	_name_	Afghanistan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	non-interference	_	non-interference	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	provoke-01	(s())	22	APP_op2	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	alleged	_	alleged	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	29	MOD_s	true
27	Pakistani	_name_	Pakistani	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
28	backed	_	back	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_o	true
29	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
30	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[16@@s@@secure-02, 2@@d@@meet-03, 26@@s@@allege-01, 29@@n@@_NAME_, 13@@s@@desperate-02, 28@@s@@back-01, 21@@n@@_NAME_, 29@@c2@@criminal-organization, 22@@a@@and, 10@@n@@_NAME_, 14@@c@@anxious-01, 21@@c@@country, 27@@n@@_NAME_, 18@@p@@peaceful, 8@@n@@_NAME_, 24@@s@@provoke-01, 5@@d@@together, 8@@g@@government-organization, 9@@a@@and, 27@@c@@country, 4@@b@@push-04, 10@@g@@government-organization, 19@@d@@elect-01]
sentence=1	‘’Pakistan	_name_	‘’Pakistan	NNP	O	(p2<root> / province  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	APP_o	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	force	_	force	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	deployed	_	deploy	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
8	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
9	Baluchistan	_name_	Baluchistan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	which	_	which	WDT	O	_	name	_	0	IGNORE	true
11	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	15	MOD_s	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
13	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	before,’’	_	before,’’	ADD	O	_	and	_	0	IGNORE	true
15	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	Lt.	lt.	Lt.	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	governor	(s())	17	MOD_s	true
17	General	general	General	NNP	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$REPL$	(s())	18	MOD_s	true
18	David_Barno	_name_	Barno	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
19	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[9@@c@@country, 17@@h2@@have-org-role-91, 15@@s@@say-01, 16@@h@@have-org-role-91, 9@@n@@_NAME_, 5@@p@@large, 1@@n@@_NAME_, 18@@n@@_NAME_, 17@@m@@general, 16@@p2@@governor, 2@@n@@now, 12@@explicitanon0@@-, 3@@s@@have-03, 18@@p@@person, 1@@p2@@province, 11@@s@@be-located-at-91, 6@@d@@force, 7@@s@@deploy-01]
sentence=1	Also	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	several_days	_name_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	elections	_	election	NNS	O	(d<root> / --LEX--)	elect-01	()	3	APP_op1	true
6	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	closed	_	close	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	border	_	border	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
10	crossing	_	crossing	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
11	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
13	Chaman	_name_	Chaman	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
14	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
15	Baluchistan	_name_	Baluchistan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	which	_	which	WDT	O	_	name	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
20	entry	_	entry	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	enter-01	(mod(), s())	21	MOD_mod	true
21	point	_	point	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
22	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
24	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n2 / --LEX--)  :mod-of (m<mod>))	_NAME_	(mod())	21	MOD_mod	true
25	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	Afghanistan	_name_	Afghanistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[15@@c@@country, 24@@c2@@criminal-organization, 13@@n@@_NAME_, 24@@n2@@_NAME_, 1@@p@@also, 11@@d@@point, 21@@p@@point, 15@@n@@_NAME_, 19@@s@@key-02, 10@@s@@crossing-01, 20@@i@@enter-01, 6@@c@@country, 7@@s@@close-01, 9@@d@@border-01, 5@@d@@elect-01, 26@@c@@country, 6@@n@@_NAME_, 26@@n@@_NAME_, 2@@n@@day, 3@@w@@before]
sentence=1	However	however	however	RB	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
3	military	_	military	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	officers	_	officer	NNS	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	5	APP_s	true
5	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
6	regular	_	regular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	8	MOD_s	true
7	army	_	army	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	officers	_	officer	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	24	APP_s	true
9	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
10	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
11	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	5	MOD_o	true
12	them	_	they	PRP	O	_	person	_	0	IGNORE	true
13	Pashtun	_name_	Pashtun	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
14	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
15	leading	_	lead	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	MOD_s	true
16	units	_	unit	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	15	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the_Frontier_Corps	_name_	Corps	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	16	APP_poss	true
19	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	border	_	border	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	16	MOD_s	true
24	remain	_	remain	VBP	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	5	APP_o	true
25	deeply	_	deeply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	deep-02	(s())	26	MOD_s	true
26	sympathetic	_	sympathetic	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	sympathize-01	(s(), o())	24	APP_o	true
27	to	_	to	IN	O	_	and	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	APP_o	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	mullahs	_	mullah	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	30	APP_op2	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	JUI	jui	JUI	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	32	APP_poss	true
36	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[8@@o@@officer, 35@@n@@_NAME_, 8@@p@@person, 29@@c2@@criminal-organization, 8@@h@@have-org-role-91, 24@@f@@remain-01, 2@@n@@_NAME_, 1@@s@@contrast-01, 18@@m@@military, 4@@j@@officer, 3@@d@@military, 4@@h@@have-org-role-91, 7@@d@@army, 25@@s@@deep-02, 2@@c@@country, 32@@m@@mullah, 29@@n@@_NAME_, 26@@s@@sympathize-01, 6@@s@@regular-03, 11@@s@@include-91, 5@@s@@say-01, 13@@p@@_NAME_, 23@@s@@border-01, 15@@s@@lead-02, 18@@n@@_NAME_, 10@@explicitanon0@@many, 16@@m@@unit, 35@@o2@@organization, 30@@a@@and]
sentence=1	Moreover	moreover	moreover	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
6	covert	_	covert	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	attempts	_	attempt	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
11	try	_	try	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
12	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
13	bring	_	bring	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
14	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	to	_	to	IN	O	_	person	_	0	IGNORE	true
16	Kabul	_name_	Kabul	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
17	leading	_	lead	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	MOD_s	true
18	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
19	commanders,	_	commanders,	NNS	O	_	and	_	0	IGNORE	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	have	_	have	VBP	O	_	person	_	0	IGNORE	true
22	been	_	be	VBN	O	_	person	_	0	IGNORE	true
23	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	MOD_s	true
24	quietly	_	quietly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quiet-04	(s())	23	MOD_s	true
25	in	_	in	IN	O	_	-	_	0	IGNORE	true
26	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
27	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
28	have	_	have	VBP	O	_	person	_	0	IGNORE	true
29	taken	_	take	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
30	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
31	part	_	part	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$icipate-01	(s(), o())	18	MOD_s	true
32	in	_	in	IN	O	_	-	_	0	IGNORE	true
33	the	_	the	DT	O	_	-	_	0	IGNORE	true
34	Taliban	_name_	Taliban	NNP	O	_	_NAME_	_	0	IGNORE	true
35	insurgency	_	insurgency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
36	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[26@@n@@_NAME_, 24@@s@@quiet-04, 16@@n@@_NAME_, 16@@c@@city, 14@@a@@back, 6@@p@@covert, 30@@explicitanon0@@-, 4@@n@@now, 26@@c@@country, 18@@c2@@criminal-organization, 18@@n@@_NAME_, 5@@s@@major-02, 31@@s@@participate-01, 35@@d@@insurgency, 12@@d@@and, 7@@s@@attempt-01, 23@@s@@live-01, 13@@s@@bring-01, 11@@i@@try-01, 17@@s@@lead-01]
sentence=1	With	with	with	IN	O	_	-	_	0	IGNORE	true
2	the	_	the	DT	O	_	-	_	0	IGNORE	true
3	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	failure	_	failure	NN	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	fail-01	(mod(), o(s()))	15	MOD_mod	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	disrupt	_	disrupt	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Afghan	_name_	Afghan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
9	elections,	_	elections,	NNS	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	militants	_	militant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
12	are	_	be	VBP	O	_	person	_	0	IGNORE	true
13	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	isolated	_	isolated	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	from	_	from	IN	O	_	-	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	mainstream	_	mainstream	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	Taliban	_name_	Taliban	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	who	_	who	WP	O	_	person	_	0	IGNORE	true
21	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	MOD_s	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	return	_	return	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	21	APP_o	true
24	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@disrupt-01, 4@@d@@fail-01, 8@@n@@_NAME_, 8@@c@@country, 14@@s@@more, 3@@n@@_NAME_, 15@@s@@isolated-01, 3@@c2@@criminal-organization, 21@@c@@want-01, 11@@d@@militant, 13@@p@@even, 23@@g@@return-01, 24@@d@@home, 19@@d@@Taliban, 18@@s@@mainstream-02]
sentence=1	Islamabad	_name_	Islamabad	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	accuses	_	accuse	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
3	New_Delhi	_name_	Delhi	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	using	_	use	VBG	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	2	APP_o2	true
6	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
7	consulates	_	consulate	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	in	_	in	IN	O	_	name	_	0	IGNORE	true
9	Kandahar	_name_	Kandahar	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	10	APP_op1	true
10	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	7	MOD_mod	true
11	Jalalabad	_name_	Jalalabad	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	10	APP_op2	true
12	to	_	to	TO	O	_	name	_	0	IGNORE	true
13	train	_	train	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o2	true
14	Balochi	_name_	balochi	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	insurgents	_	insurgent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	who	_	who	WP	O	_	person	_	0	IGNORE	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	active	_	active	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	activity-06	(s())	15	MOD_s	true
19	in	_	in	IN	O	_	name	_	0	IGNORE	true
20	Pakistani	_name_	pakistani	JJ	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	Balochistan	_name_	Balochistan	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	18	MOD_mod	true
22	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[10@@b@@and, 3@@n@@_NAME_, 3@@c@@city, 21@@b@@_NAME_, 7@@d@@consulate, 15@@d@@insurgent, 11@@c@@city, 18@@s@@activity-06, 9@@c@@city, 2@@t@@accuse-01, 9@@n@@_NAME_, 1@@c@@city, 14@@n@@_NAME_, 20@@c@@country, 5@@i@@use-01, 11@@n@@_NAME_, 20@@n@@_NAME_, 1@@n@@_NAME_, 13@@s@@train-01, 14@@w@@world-region]
sentence=1	In	in	in	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
3	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
4	regional	_	regional	JJ	O	(d<root> / --LEX--)	region	()	5	APP_s	true
5	shift	_	shift	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	27	MOD_mod	true
6	reflecting	_	reflect	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	newly	_	newly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	new-01	(s())	9	MOD_s	true
9	strengthened	_	strengthen	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	position	_	position	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	6	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Karzai,_Iran,	_name_	Iran,	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	27	APP_s	true
13	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
15	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_op2	true
16	which	_	which	WDT	O	_	name	_	0	IGNORE	true
17	have	_	have	VBP	O	_	person	_	0	IGNORE	true
18	traditionally	_	traditionally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	tradition	(mod())	19	MOD_mod	true
19	backed	_	back	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
20	the	_	the	DT	O	_	and	_	0	IGNORE	true
21	Tajik	_name_	Tajik	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
22	dominated	_	dominate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
23	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	Northern_Alliance	_name_	Alliance	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
25	made	_	make	VBD	O	_	cause-01	_	0	IGNORE	true
26	strenuous	_	strenuous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	efforts	_	effort	NNS	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
28	to	_	to	TO	O	_	and	_	0	IGNORE	true
29	convince	_	convince	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	27	APP_o	true
30	presidential	_	presidential	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	president	(mod())	31	MOD_mod	true
31	candidate	_	candidate	NN	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	32	MOD_s	true
32	Younis_Qanooni	_name_	Qanooni	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	29	APP_o	true
33	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
34	strike	_	strike	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	42	APP_op1	true
35	a	_	a	DT	O	_	thing	_	0	IGNORE	true
36	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	34	APP_o	true
37	with	_	with	IN	O	_	-	_	0	IGNORE	true
38	Karzai	_name_	Karzai	NNP	O	_	_NAME_	_	0	IGNORE	true
39	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	34	MOD_mod	true
40	the	_	the	DT	O	_	person	_	0	IGNORE	true
41	elections	_	election	NNS	O	(d<root> / --LEX--)	elect-01	()	39	APP_op1	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	29	APP_o2	true
43	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	45	MOD_mod	true
44	to	_	to	TO	O	_	and	_	0	IGNORE	true
45	oppose	_	oppose	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	42	APP_op2	true
46	Karzai	_name_	Karzai	NNP	O	_	person	_	0	IGNORE	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@h2@@have-org-role-91, 13@@n@@_NAME_, 21@@n@@_NAME_, 21@@c@@country, 15@@c@@country, 13@@c@@country, 26@@p@@strenuous, 45@@s@@oppose-01, 14@@a@@and, 27@@c@@effort-01, 29@@t@@convince-01, 15@@n@@_NAME_, 41@@d@@elect-01, 12@@n@@_NAME_, 31@@m@@candidate, 24@@n@@_NAME_, 32@@p@@person, 30@@p@@president, 19@@s@@back-01, 36@@s@@deal-01, 5@@s@@shift-01, 42@@a@@and, 23@@n@@former, 43@@explicitanon0@@-, 32@@n@@_NAME_, 24@@o2@@organization, 12@@c@@country, 9@@s@@strengthen-01, 10@@s@@position-02, 8@@s@@new-01, 39@@w@@before, 4@@d@@region, 3@@s@@major-02, 22@@s@@dominate-01, 34@@c@@strike-01, 18@@p@@tradition, 6@@s@@reflect-01]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	enhanced	_	enhance	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
3	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	presence	_	presence	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	present-02	(s(), o())	11	APP_s	true
5	in	_	in	IN	O	_	name	_	0	IGNORE	true
6	western	_	western	JJ	O	(h<root> / --LEX--  :part-of (i<poss>))	west	(poss())	4	APP_o	true
7	Afghanistan	_name_	Afghanistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_poss	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	MOD_s	true
11	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	ousting	_	ousting	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	Ismail_Khan,	_name_	Khan,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	_NAME_	(s(), o())	11	MOD_o	true
17	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
18	warlord	_	warlord	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
20	Governor	governor	Governor	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	19	APP_op2	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	Herat	_name_	Herat	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	province	_	province	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
25	month,	_	month,	NNP	O	_	_NAME_	_	0	IGNORE	true
26	who	_	who	WP	O	_	name	_	0	IGNORE	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-13	(s())	30	MOD_s	true
30	ally	_	ally	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	Iranian	_name_	iranian	JJ	O	(n2<root> / --LEX--  :name-of (c2 / country  :mod-of (i<mod>)))	_NAME_	(mod())	33	MOD_mod	true
33	hardliners	_	hardliner	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
34	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[4@@s@@present-02, 11@@s@@possible-01, 23@@d@@province, 22@@n@@_NAME_, 20@@h@@have-org-role-91, 9@@p@@only, 32@@c2@@country, 16@@s@@_NAME_, 24@@p@@last, 7@@c@@country, 18@@d@@warlord, 10@@s@@make-02, 19@@a@@and, 12@@w@@after, 7@@n@@_NAME_, 2@@s@@enhance-01, 3@@c@@country, 3@@n@@_NAME_, 29@@s@@close-13, 30@@s@@ally-01, 33@@d@@hardliner, 32@@n2@@_NAME_, 20@@p2@@Governor, 14@@d@@ousting-01, 6@@h@@west]
sentence=1	(And,	(and,	(and,	XX	O	_	-	_	0	IGNORE	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	shrapnel	_	shrapnel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	forearm	_	forearm	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	caused	_	cause	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
11	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	minor	_	minor	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	wound	_	wound	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
15	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
16	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
17	killed	_	kill	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
18	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	hit	_	hit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op1	true
21	an	_	an	DT	O	_	thing	_	0	IGNORE	true
22	eye	_	eye	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
24	gone	_	go	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
25	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	and	_	0	IGNORE	true
27	brain;	_	brain;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	ballistic	_	0	IGNORE	true
29	shrapnel	_	shrapnel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
30	being	_	be	VBG	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
31	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
33	body	_	body	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
34	demonstrates	_	demonstrate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
35	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
37	in	_	in	IN	O	_	i	_	0	IGNORE	true
38	mortal	_	mortal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	danger	_	danger	NN	O	(d<root> / --LEX--)	en$LEMMA$-01	()	40	APP_op1	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	34	APP_o	true
41	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	42	MOD_mod	true
42	absent	_	absent	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	40	APP_op2	true
43	yourself	_	yourself	PRP	O	_	-	_	0	IGNORE	true
44	from	_	from	IN	O	_	-	_	0	IGNORE	true
45	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@kill-01, 14@@d@@wound-01, 5@@p@@shrapnel, 33@@d@@body, 41@@explicitanon0@@-, 34@@s@@demonstrate-01, 22@@d@@eye, 8@@b@@forearm, 29@@d@@shrapnel, 40@@a@@and, 20@@s@@hit-01, 10@@s@@cause-01, 24@@s@@go-01, 42@@d@@absent-01, 39@@d@@endanger-01, 23@@a@@and, 13@@s@@minor-02, 11@@p@@only, 38@@p@@mortal, 3@@d@@piece]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	for	_	for	IN	O	_	benefit-01	_	0	IGNORE	true
3	those	_	those	DT	O	_	that	_	0	IGNORE	true
4	who	_	who	WP	O	(d<root> / --LEX--)	person	()	18	APP_s	true
5	later	_	later	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	late	(mod())	4	MOD_mod	true
6	abstain,	_	abstain,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	18	MOD_s	true
7	"visual-spatial	_	"visual-spatial	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
8	abilities,	_	abilities,	NNP	O	_	and	_	0	IGNORE	true
9	abstraction,	_	abstraction,	NNS	O	_	and	_	0	IGNORE	true
10	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	solving	_	solve	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
12	,	_	,	,	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	18	MOD_op1	true
14	short-term	_	short-term	JJ	O	(d<root> / --LEX--)	long-03	()	13	APP_op3	true
15	memory,	_	memory,	NNS	O	_	executive	_	0	IGNORE	true
16	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	18	MOD_s	true
17	the	_	the	DT	O	_	most	_	0	IGNORE	true
18	slowest	_	slow	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	cool-04	(s())	0	ROOT	true
19	to	_	to	TO	O	_	name	_	0	IGNORE	true
20	recover.	_	recover.	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
21	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[6@@s@@-, 11@@s@@solve-01, 4@@d@@person, 10@@d@@problem, 16@@s@@person, 14@@d@@long-03, 18@@m@@most, 7@@p@@"visual-spatial, 18@@b2@@cool-04, 5@@n@@late, 13@@a@@and, 1@@p@@even]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	little-noted	_	little-noted	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	interview	_	interview	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_s	true
4	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	Blount's	_name_	Blount's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_o2	true
6	nephew	_	nephew	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	3	APP_s	true
7	Murph_Archibald,	_name_	archibald,	XX	O	_	_NAME_	_	0	IGNORE	true
8	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	appeared	_	appear	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
10	on	_	on	IN	O	_	name	_	0	IGNORE	true
11	National_Public_Radio's	_name_	Radio's	NNP	O	(b<root> / broadcast-program  :name (n / --LEX--)  :medium-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	"All	"all	"All	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	Things	things	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	Considered	considered	consider	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
15	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
16	March	march	March	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	3	(mod())	14	MOD_mod	true
17	30,	_	30,	NNP	O	_	1	_	0	IGNORE	true
18	2004,	_	2004,	NN	O	_	and	_	0	IGNORE	true
19	gives	_	give	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	devastating	_	devastating	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	devastate-01	(s())	22	MOD_s	true
22	insight	_	insight	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	APP_o	true
23	into	_	into	IN	O	_	-	_	0	IGNORE	true
24	what	_	what	WP	O	_	thing	_	0	IGNORE	true
25	it	_	it	PRP	O	_	thing	_	0	IGNORE	true
26	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
27	like	_	like	IN	O	(t2<root> / thing  :ARG1-of (g / --LEX--  :ARG2 (a<s>)))	resemble-01	(s())	22	APP_s	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	have	_	have	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	27	APP_s	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	suffer	_	suffer	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_s	true
32	through	_	through	IN	O	_	and	_	0	IGNORE	true
33	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_s	true
34	in	_	in	IN	O	_	after	_	0	IGNORE	true
35	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
36	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@b@@give-01, 22@@s@@insight, 36@@n@@period, 27@@g@@resemble-01, 6@@f@@nephew, 33@@n@@_NAME_, 6@@h@@have-rel-role-91, 3@@s@@interview-01, 33@@p@@person, 31@@s@@suffer-01, 5@@p@@person, 11@@b@@broadcast-program, 16@@explicitanon1@@3, 11@@n@@_NAME_, 13@@d@@thing, 35@@p@@that, 5@@n@@_NAME_, 27@@t2@@thing, 6@@p@@person, 14@@s@@consider-01, 29@@s@@obligate-01, 21@@s@@devastate-01, 9@@s@@appear-01, 1@@p@@this, 2@@s@@little-noted-01, 12@@p@@_NAME_]
sentence=1	For	for	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	weeks,	_name_	weeks,	NNS	O	_	multiple	_	0	IGNORE	true
3	reporters	_	reporter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	report-01	()	4	APP_s	true
4	scoured	_	scour	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Alabama	_name_	Alabama	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
6	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	search	_	search	NN	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
8	of	_	of	IN	O	_	person	_	0	IGNORE	true
9	pilots	_	pilot	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	10	APP_op1	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
11	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	who	_	who	WP	O	_	person	_	0	IGNORE	true
13	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
14	have	_	have	VB	O	_	person	_	0	IGNORE	true
15	remembered	_	remember	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	MOD_s	true
16	seeing	_	see	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
17	Mr.	mr.	Mr.	NNP	O	_	have-org-role-91	_	0	IGNORE	true
18	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
19	at	_	at	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	serving	_	serve	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	the_National_Guard	_name_	Guard	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
27	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@search-01, 4@@s@@scour-01, 11@@d@@anyone, 9@@e2@@pilot-01, 10@@a@@or, 26@@m@@military, 26@@n@@_NAME_, 3@@e2@@report-01, 13@@s@@possible-01, 9@@p2@@person, 5@@n@@_NAME_, 16@@s@@see-01, 18@@p@@person, 15@@c@@remember-01, 5@@s@@state, 3@@p2@@person, 18@@n@@_NAME_, 24@@v@@serve-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	throughout	_	throughout	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	Alabama,	_name_	Alabama,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
4	there	_	there	EX	O	_	have-org-role-91	_	0	IGNORE	true
5	were	_	be	VBD	O	(d<root> / --LEX--)	person	()	1	APP_o	true
6	Republicans	_name_	Republicans	NNPS	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
8	Democrats	_name_	Democrats	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	1	MOD_s	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
13	Red_Blount	_name_	Blount	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@s@@contrast-01, 13@@p@@person, 8@@d@@Democrats, 10@@c@@want-01, 6@@n@@_NAME_, 13@@n@@_NAME_, 12@@s@@help-01, 6@@p@@political-party, 7@@a@@and, 5@@d@@person, 2@@b@@throughout]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	impression	_	impression	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	was	_	be	VBD	O	_	i	_	0	IGNORE	true
5	that	_	that	IN	O	_	-	_	0	IGNORE	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
7	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	seem	_	seem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
9	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	10	MOD_mod	true
10	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	interest-01	(s(), o())	8	APP_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	campaign	_	campaign	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
14	as	_	as	IN	O	_	equal	_	0	IGNORE	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	people	_	people	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	person	(mod())	10	MOD_mod	true
18	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	were	_	be	VBD	O	_	person	_	0	IGNORE	true
20	working	_	work	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	state	_	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	headquarters	_	headquarters	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[20@@t@@work-01, 16@@p@@other, 24@@d@@headquarters, 23@@p@@state, 13@@d@@campaign-01, 6@@d@@he, 7@@explicitanon0@@-, 9@@s@@equal, 17@@p@@person, 8@@s@@seem-01, 2@@p@@overall, 3@@s@@impression-01, 10@@s@@interest-01]
sentence=1	In	in	in	IN	O	_	elect-01	_	0	IGNORE	true
2	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-15	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	house	_	house	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	rented	_	rent	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	disrepair--with	_	disrepair--with	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	4	MOD_o	true
12	damage	_	damage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
13	to	_	to	IN	O	_	post-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	walls	_	wall	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	chandelier	_	chandelier	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
19	destroyed--that	_	destroyed--that	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	Montgomery	_name_	Montgomery	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
23	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
24	owned	_	own	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	MOD_s	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	grumble	_	grumble	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
28	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	unpaid	_	unpaid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	pay-01	(s())	32	MOD_s	true
31	repair	_	repair	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	32	APP_s	true
32	bill	_	bill	NN	O	(f<root> / --LEX--  :ARG3 (c<s>)  :topic-of (i<mod>))	$LEMMA$-01	(mod(), s())	27	MOD_mod	true
33	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[21@@n@@_NAME_, 10@@s@@such, 32@@f@@bill-01, 18@@d@@chandelier, 26@@p@@still, 4@@s@@leave-15, 16@@a@@and, 11@@s@@disrepair--with, 30@@s@@pay-01, 27@@s@@grumble-01, 31@@d@@repair-01, 8@@s@@rent-01, 24@@s@@own-01, 22@@d@@family, 12@@s@@damage-01, 6@@d@@house, 15@@d@@wall, 19@@explicitanon0@@-, 3@@d@@he]
sentence=1	Archibald,	archibald,	archibald,	XX	O	_	person	_	0	IGNORE	true
2	a	_	a	DT	O	_	middle	_	0	IGNORE	true
3	middle-class	_	middle-class	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
4	Alabama	_name_	Alabama	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	3	MOD_mod	true
5	boy--who,	_	boy--who,	NNP	O	_	cause-01	_	0	IGNORE	true
6	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
8	way,	_	way,	NN	O	_	mean-01	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
11	a	_	a	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	registered	_	registered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
13	Democrat--didn't	democrat--didn't	democrat--didn't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	0	ROOT	true
15	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[16@@d@@story, 12@@s@@registered-02, 4@@n2@@_NAME_, 4@@s@@state, 11@@d@@a, 3@@p@@middle-class, 10@@n@@now, 14@@s@@resemble-01, 15@@p@@that, 13@@explicitanon0@@-]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-14	(s(), o())	2	APP_s	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
8	hands	_	hand	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	5	APP_o	true
9	of	_	of	IN	O	_	-	_	0	IGNORE	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_poss	true
12	who	_	who	WP	O	_	resemble-01	_	0	IGNORE	true
13	spent	_	spend	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-02	(o(poss_UNIFY_s()))	11	MOD_s	true
14	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	life	_	life	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	13	MOD_s	true
17	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@l@@spend-02, 8@@h@@hand, 15@@m@@life, 3@@explicitanon0@@-, 1@@d@@It, 16@@s@@resemble-01, 5@@s@@leave-14, 11@@d@@man, 2@@s@@recommend-01, 17@@d@@this]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	air	_	air	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	traffic	_	traffic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	controllers	_	controller	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	$LEMMA$	(s())	1	APP_s	true
5	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	Baghdad	_name_	Baghdad	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	1	MOD_s	true
8	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	record	_	record	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
10	of	_	of	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	1	MOD_mod	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	flights,	_	flights,	NNS	O	_	include-91	_	0	IGNORE	true
13	which	_	which	WDT	O	_	event	_	0	IGNORE	true
14	supposedly	_	supposedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	suppose-01	(s())	15	MOD_s	true
15	took	_	take	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-11	(s())	10	MOD_s	true
16	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
17	between_July_2004	_name_	2004	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	and	_	and	CC	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	1	MOD_mod	true
19	July_2005	_name_	2005	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	2003	()	18	APP_op1	true
20	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[14@@s@@suppose-01, 8@@explicitanon0@@-, 15@@s@@take-out-11, 19@@explicitanon0@@2003, 3@@d@@traffic, 4@@w@@controller, 6@@c@@city, 17@@explicitanon0@@_NAME_, 7@@s@@have-03, 18@@w@@and, 1@@h@@contrast-01, 10@@p@@person, 2@@p@@air, 6@@n@@_NAME_, 19@@d@@date-entity, 9@@s@@record-01, 4@@p@@person]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	26	MOD_mod	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	sentencing	_	sentencing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_op1	true
4	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	true
5	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	26	MOD_s	true
6	Robinson's	_name_	Robinson's	NNP	O	_	_NAME_	_	0	IGNORE	true
7	tearful	_	tearful	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	supporters	_	supporter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	support-01	()	5	APP_o	true
9	"turned	_	"turned	''	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	26	APP_op1	true
10	to	_	to	IN	O	_	name	_	0	IGNORE	true
11	Claudia_Vercellotti,	_name_	vercellotti,	NN	O	_	have-org-role-91	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	leader	_	leader	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	lead-02	(s())	9	APP_o	true
15	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
16	the_Survivors_Network_for_Those_Abused	_name_	abuse	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	14	MOD_o	true
17	by	_	by	IN	O	_	name	_	0	IGNORE	true
18	Priests	priests	priest	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	[SNAP],	_name_	[SNAP],	NNP	O	_	include-91	_	0	IGNORE	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	had	_	have	VBD	O	_	person	_	0	IGNORE	true
22	helped	_	help	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	18	MOD_s	true
23	reopen	_	reopen	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	case,	_	case,	NNS	O	_	and	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
27	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	26	APP_op2	true
28	her,	_	her,	NN	O	_	and	_	0	IGNORE	true
29	'I	'i	'i	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_o	true
31	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
32	rot	_	rot	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_s	true
33	in	_	in	RP	O	_	i	_	0	IGNORE	true
34	hell!'	_	hell!'	.	O	_	$LEMMA$	_	0	IGNORE	true
35	"	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[8@@e2@@support-01, 27@@s@@tell-01, 31@@d@@you, 16@@s@@_NAME_, 1@@w@@after, 5@@s@@include-91, 14@@p@@person, 13@@s@@local-02, 23@@s@@reopen-01, 3@@d@@sentencing-01, 7@@p@@tearful, 30@@s@@hope-01, 4@@explicitanon0@@1, 32@@d@@rot-01, 26@@a@@and, 18@@d@@priest, 22@@c@@help-01, 14@@w@@lead-02, 8@@p2@@person, 9@@t@@"turned-01]
sentence=1	Dekalb_County	_name_	County	NNP	O	(c3<root> / county  :name (n3 / --LEX--)  :location-of (f<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	Police	police	Police	NNPS	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
3	Chief	chief	Chief	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	4	MOD_s	true
4	Louis_Graham...the	_name_	Graham...the	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
5	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	reopened	_	reopen	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	investigations	_	investigation	NNS	O	(d<root> / --LEX--)	investigate-01	()	7	APP_o	true
10	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	year,	_	year,	NNS	O	_	and	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
13	mysteriously	_	mysteriously	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	sudden	(mod())	14	MOD_mod	true
14	stepping	_	step	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-down-04	(s())	0	ROOT	true
15	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@police, 4@@p@@_NAME_, 5@@d@@man, 7@@s@@reopen-01, 1@@n3@@_NAME_, 13@@t@@sudden, 9@@d@@investigate-01, 3@@g@@chief, 14@@s@@step-down-04, 3@@h@@have-org-role-91, 1@@c3@@county, 10@@p@@last]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	APP_op2	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_o	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	county	_	county	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	find	_	find	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
13	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
14	replacement...is	_	replacement...is	JJ	O	_	person	_	0	IGNORE	true
15	none	_	none	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
16	other	_	other	JJ	O	_	$LEMMA$	_	0	IGNORE	true
17	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	Lee_Brown,	_name_	Brown,	NNP	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	supervisor	_	supervisor	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	23	MOD_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	(d<root> / --LEX--)	person	()	1	APP_s	true
24	Atlanta	_name_	Atlanta	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	21	APP_o	true
25	PD,	pd,	PD,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
26	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
27	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	1	APP_op1	true
28	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
29	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
32	murders	_	murder	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_op1	true
33	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	29	MOD_mod	true
34	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
35	subsequent	_	subsequent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	investigation	_	investigation	NN	O	(d<root> / --LEX--)	investigate-01	()	33	APP_op2	true
37	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[33@@d@@and, 4@@s@@include-91, 24@@c@@city, 35@@p@@subsequent, 1@@a@@and, 24@@n@@_NAME_, 23@@d@@person, 36@@d@@investigate-01, 21@@h@@have-org-role-91, 27@@s@@be-located-at-91, 21@@g@@supervisor, 32@@d@@murder-01, 29@@d@@office, 15@@p@@none, 8@@d@@county, 3@@p@@all, 20@@p@@original, 10@@s@@get-01, 12@@i@@find-01, 5@@d@@person]
sentence=1	That's	that's	that's	PRP	O	(d<root> / --LEX--)	person	()	4	APP_dom	true
2	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	domain	_	domain	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	those	_	those	DT	O	_	that	_	0	IGNORE	true
7	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
8	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	.	_	.	.	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true

nodealignment=[1@@d@@person, 4@@r@@domain, 8@@explicitanon0@@-, 2@@p@@still, 9@@explicitanon0@@-]
sentence=1	Now,	now,	Now,	NNP	O	_	name	_	0	IGNORE	true
2	FLDS	flds	FLDS	NNP	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
3	leader	_	leader	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	lead-02	(s(), o())	4	MOD_s	true
4	Warren_Jeffs	_name_	Jeffs	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
5	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
6	been	_	be	VBN	O	_	person	_	0	IGNORE	true
7	added	_	add	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
8	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	FBI's	fbi's	fbi'	NNS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	"Ten	"ten	"Ten	``	O	_	person	_	0	IGNORE	true
14	Most	most	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	Wanted	wanted	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	Fugitives,"	fugitives,"	Fugitives,"	NNS	O	_	cause-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	move	_	move	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-02	(mod())	7	MOD_mod	true
19	that	_	that	WDT	O	_	name	_	0	IGNORE	true
20	caps	_	cap	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
21	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
22	enforcement's	_	enforcement's	.	O	_	affect-01	_	0	IGNORE	true
23	dramatic	_	dramatic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	change	_	change	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	20	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	approach	_	approach	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	24	APP_o	true
27	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	polygamous	_	polygamous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o2	true
31	in	_	in	IN	O	_	person	_	0	IGNORE	true
32	recent	_	recent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	years...[because	_	years...[because	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	24	MOD_mod	true
34	of]	_	of]	NNP	O	_	person	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	impact	_	impact	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
37	that	_	that	WDT	O	_	affect-01	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	group's	_	group's	XX	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	possible-01	(s(), o())	7	MOD_o	true
40	practices,	_	practices,	NN	O	_	person	_	0	IGNORE	true
41	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
42	enforcement	_	enforcement	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	enforce-01	(s())	43	APP_s	true
43	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	39	APP_s	true
44	say,	_	say,	NN	O	_	person	_	0	IGNORE	true
45	are	_	be	VBP	O	_	person	_	0	IGNORE	true
46	having	_	have	VBG	O	_	person	_	0	IGNORE	true
47	on	_	on	IN	O	_	-	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	vulnerable	_	vulnerable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
51	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
52	the	_	the	DT	O	_	person	_	0	IGNORE	true
53	sect,	_	sect,	NNS	O	_	include-91	_	0	IGNORE	true
54	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	56	MOD_mod	true
55	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_op1	true
56	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	50	MOD_mod	true
57	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_op2	true
58	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@political-party, 56@@a@@and, 7@@s@@add-02, 15@@s@@want-01, 32@@p@@recent, 57@@d@@woman, 29@@p@@polygamous, 18@@t@@move-02, 14@@s@@most, 3@@s@@lead-02, 39@@s@@possible-01, 4@@n@@_NAME_, 43@@o@@official, 42@@s@@enforce-01, 54@@p@@particular, 4@@p@@person, 2@@n@@_NAME_, 50@@p@@vulnerable, 43@@p@@person, 49@@s@@most, 26@@d@@approach-02, 24@@b@@change-01, 30@@d@@group, 11@@d@@list-01, 33@@explicitanon2@@_NAME_, 10@@n@@_NAME_, 36@@d@@impact-01, 43@@h@@have-org-role-91, 23@@p@@dramatic, 55@@d@@child, 5@@s@@cause-01, 33@@d@@date-entity, 21@@d@@law, 41@@d@@law, 20@@s@@cap-01]
sentence=1	When	when	when	WRB	O	_	he	_	0	IGNORE	true
2	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	invaded	_	invade	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
4	Kuwait,	kuwait,	kuwait,	CD	O	_	and	_	0	IGNORE	true
5	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	18	MOD_s	true
7	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	8	MOD_mod	true
8	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	transported	_	transport	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	Jordan	_name_	Jordan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	smuggled	_	smuggle	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	--	_	--	:	O	_	mean-01	_	0	IGNORE	true
20	Germany,	germany,	Germany,	NNP	O	_	and	_	0	IGNORE	true
21	France,	france,	france,	CD	O	_	and	_	0	IGNORE	true
22	Canada,	canada,	canada,	CD	O	_	and	_	0	IGNORE	true
23	Denmark,	denmark,	denmark,	NN	O	_	and	_	0	IGNORE	true
24	England,	england,	england,	CD	O	_	_NAME_	_	0	IGNORE	true
25	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
26	--	_	--	:	O	_	$LEMMA$	_	0	IGNORE	true
27	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
28	they	_	they	PRP	O	_	person	_	0	IGNORE	true
29	were	_	be	VBD	O	_	person	_	0	IGNORE	true
30	raised	_	raise	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	25	MOD_o	true
31	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
32	guardians	_	guardian	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	30	APP_s	true
33	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
34	were	_	be	VBD	O	_	person	_	0	IGNORE	true
35	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	37	MOD_mod	true
36	Mujahedeen	_name_	Mujahedeen	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	37	APP_o	true
37	supporters	_	supporter	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	support-01	(s(), o())	32	MOD_s	true
38	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[37@@s@@support-01, 12@@n@@_NAME_, 5@@explicitanon0@@many, 3@@v@@invade-01, 10@@s@@transport-01, 32@@p2@@person, 13@@a@@and, 32@@e2@@guardian, 25@@c@@country, 7@@p@@this, 14@@n@@then, 6@@s@@include-91, 2@@n@@_NAME_, 15@@s@@smuggle-01, 18@@d@@country, 36@@n@@_NAME_, 2@@c@@country, 25@@n@@_NAME_, 35@@p@@usual, 12@@c@@country, 8@@d@@girl, 36@@o2@@organization, 17@@p@@various, 30@@s@@raise-03]
sentence=1	One	one	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	has	_	have	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
4	wonder	_	wonder	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
6	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	mean-01	(s(), o())	2	MOD_s	true
7	bright	_	bright	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	fellows	_	fellow	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	12	APP_op1	true
12	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
13	military	_	military	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
15	set	_	set	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	8	MOD_s	true
16	up	_	up	RP	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	deals	_	deal	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	15	APP_o	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	21	MOD_mod	true
21	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	18	APP_s	true
22	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	know	_	know	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_op1	true
24	what	_	what	WP	O	_	thing	_	0	IGNORE	true
25	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	are,	_	are,	VBP	O	_	and	_	0	IGNORE	true
27	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
28	care,	_	care,	NNS	O	_	thing	_	0	IGNORE	true
29	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
30	know	_	know	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_op2	true
31	perfectly	_	perfectly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	perfect-02	(s())	32	MOD_s	true
32	well	_	well	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@d@@person, 11@@g@@government-organization, 31@@s@@perfect-02, 2@@o@@obligate-01, 13@@d@@military, 11@@g2@@govern-01, 10@@d@@our, 8@@d@@fellow, 6@@s@@mean-01, 27@@explicitanon0@@-, 15@@s@@set-up-03, 29@@a@@or, 7@@s@@bright-02, 22@@explicitanon0@@-, 20@@p@@this, 1@@d@@one, 30@@d@@know-01, 12@@b@@and, 4@@s@@wonder-01, 18@@s@@deal-01, 32@@t@@well, 23@@d@@know-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	more	_	more	JJR	O	_	$LEMMA$	_	0	IGNORE	true
3	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
4	more,	_	more,	NNS	O	_	shit	_	0	IGNORE	true
5	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
6	metal	_	metal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	evolves	_	evolve	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
8	into	_	into	IN	O	_	-	_	0	IGNORE	true
9	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	music	_	music	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	belongs	_	belong	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	everyone,	_	everyone,	NNS	O	_	and	_	0	IGNORE	true
17	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
19	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	1	APP_s	true
20	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	weirder	_	weird	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	noble	(s())	22	MOD_s	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@s@@get-03, 11@@p@@international, 14@@s@@belong-01, 22@@d@@something, 6@@d@@metal, 7@@t@@evolve-01, 1@@s@@contrast-01, 12@@d@@music, 23@@m@@more, 23@@b@@noble, 10@@p@@huge]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_dom	true
3	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
4	carry	_	carry	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	2	MOD_s	true
5	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
6	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	10	MOD_mod	true
7	underground	_	underground	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	arms/drugs/sex	_	arms/drugs/sex	NFP	O	(d<root> / --LEX--)	sex	()	9	APP_s	true
9	trafficking	_	trafficking	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	traffic-01	(s())	10	APP_s	true
10	deals	_	deal	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
11	are	_	be	VBP	O	_	person	_	0	IGNORE	true
12	trauma	_	trauma	VBG	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
13	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	16	MOD_s	true
14	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
15	controlled	_	control	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
16	slaves	_	slave	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[16@@r@@slave, 4@@s@@carry-out-03, 9@@s@@traffic-01, 14@@d@@mind, 2@@d@@person, 15@@s@@control-01, 13@@s@@base-02, 12@@d@@trauma, 6@@p@@this, 8@@d@@sex, 7@@p@@underground, 10@@s@@deal-01]
sentence=1	Perhaps	perhaps	perhaps	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
4	look	_	look	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_s	true
5	at	_	at	IN	O	_	have-concession-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	name	_	0	IGNORE	true
7	death	_	death	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	die-01	(mod())	8	MOD_mod	true
8	metal	_	metal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	phenomenon	_	phenomenon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	less	_	less	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	an	_	an	DT	O	_	thing	_	0	IGNORE	true
13	invitation	_	invitation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	invite-01	(s())	4	APP_o2	true
14	to	_	to	IN	O	_	-	_	0	IGNORE	true
15	violence	_	violence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	than	_	than	IN	O	_	or	_	0	IGNORE	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
19	couter-cultural	_	couter-cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	response	_	response	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	respond-01	(s(), o())	4	MOD_o	true
21	to	_	to	IN	O	_	and	_	0	IGNORE	true
22	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
23	over	_	over	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	hypocrisy	_	hypocrisy	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	20	APP_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	percentage	_	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	'Church-Morality'	'church-morality'	'church-morality'	NN	O	_	and	_	0	IGNORE	true
32	crowd,	_	crowd,	NNP	O	_	and	_	0	IGNORE	true
33	which	_	which	WDT	O	_	i	_	0	IGNORE	true
34	gives	_	give	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
35	a	_	a	DT	O	_	thing	_	0	IGNORE	true
36	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
37	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
38	lip	_	lip	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	service	_	service	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	24	MOD_s	true
40	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	loving	_	love	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_o	true
42	thy	_	thy	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_o	true
43	neighbor,	_	neighbor,	NNS	O	_	and	_	0	IGNORE	true
44	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	39	MOD_s	true
45	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	46	MOD_mod	true
46	apply	_	apply	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	44	APP_o	true
47	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
48	love	_	love	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	46	APP_s	true
49	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
51	beyond	_	beyond	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	46	MOD_mod	true
52	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
53	own	_	own	JJ	O	_	person	_	0	IGNORE	true
54	congregation	_	congregation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_op1	true
55	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@p@@large, 8@@p@@metal, 19@@p@@couter-cultural, 20@@s@@respond-01, 13@@s@@invite-01, 51@@b@@beyond, 10@@s@@less, 54@@d@@congregation, 41@@d@@love-01, 45@@explicitanon0@@-, 50@@s@@far, 44@@s@@contrast-01, 24@@m@@hypocrisy, 4@@b@@look-01, 36@@explicitanon0@@lot, 49@@s@@very, 15@@d@@violence, 39@@s@@service, 2@@d@@we, 46@@s@@apply-02, 7@@p@@die-01, 28@@d@@percentage, 9@@d@@phenomenon, 48@@d@@love-01, 34@@s@@give-01, 38@@p@@lip, 3@@s@@recommend-01, 42@@d@@thy, 23@@p@@over]
sentence=1	We're	_name_	We're	NNP	O	_	and	_	0	IGNORE	true
2	entering	_	enter	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
5	interesting	_	interesting	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	11	MOD_s	true
6	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
7	perhaps	_	perhaps	RB	O	(d<root> / --LEX--)	possible-01	()	2	APP_s	true
8	previously	_	previously	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	previous	(mod())	9	MOD_mod	true
9	unexplored	_	unexplored	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	dispute-01	(s())	11	MOD_s	true
10	socio-political-spiritual	_	socio-political-spiritual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	territory	_	territory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
12	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	require	_	require	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
16	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	examination	_	examination	NN	O	(d<root> / --LEX--)	examine-01	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
19	serious	_	serious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	introspection	_	introspection	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	.	_	.	.	O	_	you	_	0	IGNORE	true

nodealignment=[11@@d@@territory, 20@@d@@introspection, 4@@p@@some, 7@@d@@possible-01, 19@@s@@serious-02, 9@@explicitanon0@@-, 2@@s@@enter-01, 5@@s@@interesting, 12@@b@@here, 14@@s@@possible-01, 18@@a@@and, 8@@n@@previous, 17@@d@@examine-01, 9@@n@@dispute-01, 10@@p@@socio-political-spiritual, 15@@s@@require-01, 16@@p@@further]
sentence=1	Here	here	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	thought:	_	thought:	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	22	MOD_s	true
5	When	when	when	WRB	O	_	event	_	0	IGNORE	true
6	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
7	appartently	_	appartently	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	permanent	(mod())	9	MOD_mod	true
8	cognitively	_	cognitively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	ideology	(mod())	9	MOD_mod	true
9	functional	_	functional	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	take	_	take	NN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	22	MOD_mod	true
11	actions	_	action	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	act-02	(s())	10	APP_o	true
12	that	_	that	WDT	O	_	and	_	0	IGNORE	true
13	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	senseless	_	senseless	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	ground-02	(s())	11	MOD_s	true
15	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
16	incompetent,	_	incompetent,	NNS	O	_	and	_	0	IGNORE	true
17	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	sign	_	sign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$al-07	(s(), o())	0	ROOT	true
23	that	_	that	IN	O	_	contrast-01	_	0	IGNORE	true
24	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	22	MOD_s	true
26	ulterior	_	ulterior	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
27	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
28	hidden	_	hide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
29	motives	_	motive	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[29@@d@@motive, 14@@p@@ground-02, 8@@t@@ideology, 9@@d@@functional, 21@@p@@certain, 13@@s@@seem-01, 10@@t@@take-01, 14@@explicitanon0@@-, 22@@s@@signal-07, 25@@s@@have-03, 27@@d@@or, 11@@s@@act-02, 1@@b@@here, 20@@s@@most, 7@@t@@permanent, 15@@d@@and, 26@@p@@ulterior, 28@@s@@hide-01, 4@@s@@thing]
sentence=1	One	one	one	CD	O	(d<root> / --LEX--)	1	()	4	APP_s	true
2	man's	_	man'	NNS	O	_	person	_	0	IGNORE	true
3	relentless	_	relentless	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	search	_	search	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_s	true
5	for	_	for	IN	O	_	and	_	0	IGNORE	true
6	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
7	missing	_	miss	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	son	_	son	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	4	APP_o	true
9	led	_	lead	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-03	(o2(s_UNIFY_o()), s())	0	ROOT	true
10	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	uncover	_	uncover	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
13	one	_	one	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	1	(s())	9	APP_o2	true
14	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	13	MOD_s	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	shocking	_	shocking	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	shock-01	(s())	18	MOD_s	true
18	crimes	_	crime	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	12	APP_s	true
19	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
20	post-war	_	post-war	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	war	(mod())	21	MOD_mod	true
21	Italy	_name_	Italy	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	18	MOD_mod	true
22	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	tale	_	tale	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
25	of	_	of	IN	O	_	and	_	0	IGNORE	true
26	satanism	_	satanism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	24	MOD_mod	true
28	violence	_	violence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
31	gripped	_	grip	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
34	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	more_than_a_year	_name_	year	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	31	MOD_mod	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@d@@country, 21@@n@@_NAME_, 3@@t@@relentless, 17@@s@@shock-01, 16@@s@@most, 1@@d@@1, 14@@s@@include-91, 7@@s@@miss-01, 13@@s@@1, 12@@s@@uncover-01, 4@@s@@search-01, 8@@h@@have-rel-role-91, 28@@d@@violence, 8@@p@@person, 20@@n@@war, 31@@s@@grip-01, 27@@a@@and, 9@@t@@lead-03, 26@@d@@satanism, 21@@c@@country, 35@@b@@_NAME_, 24@@p@@tale, 8@@f@@son, 18@@d@@crime-02]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	emerged	_	emerge	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	that	_	that	IN	O	_	interrogative	_	0	IGNORE	true
4	Chiara,	chiara,	chiara,	CD	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
7	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
8	disappeared	_	disappear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	Fabio,	_name_	fabio,	CD	O	_	_NAME_	_	0	IGNORE	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_s	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	collection	_	collection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	collect-01	(s())	11	APP_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	satanic	_	satanic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	literature	_	literature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
18	paraphernalia	_	paraphernalia	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	bedroom	_	bedroom	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
22	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[21@@b@@bedroom, 17@@a@@and, 18@@d@@paraphernalia, 13@@s@@collect-01, 16@@d@@literature, 11@@s@@have-03, 8@@s@@disappear-01, 6@@d@@girl, 2@@s@@emerge-01, 15@@p@@satanic]
sentence=1	When	when	when	WRB	O	_	person	_	0	IGNORE	true
2	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
3	apparently	_	apparently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	apparent	(s())	5	MOD_s	true
4	cognitively	_	cognitively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	ideology	(mod())	5	MOD_mod	true
5	functional	_	functional	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	take	_	take	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
7	actions	_	action	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	act-02	(mod(), s())	18	MOD_mod	true
8	that	_	that	WDT	O	_	and	_	0	IGNORE	true
9	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	senseless	_	senseless	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	ground-02	(s())	7	MOD_s	true
11	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
12	incompetent,	_	incompetent,	NNS	O	_	and	_	0	IGNORE	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
16	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	sign	_	sign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$al-07	(s(), o())	0	ROOT	true
19	that	_	that	IN	O	_	have-mod-91	_	0	IGNORE	true
20	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	18	MOD_s	true
22	ulterior	_	ulterior	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
24	hidden	_	hide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
25	motives	_	motive	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@v@@act-02, 10@@explicitanon0@@-, 25@@d@@motive, 16@@s@@most, 11@@d@@and, 9@@s@@seem-01, 17@@p@@certain, 3@@s@@apparent, 24@@s@@hide-01, 21@@s@@have-03, 22@@p@@ulterior, 18@@s@@signal-07, 4@@t@@ideology, 5@@d@@functional, 10@@p@@ground-02, 23@@d@@or]
sentence=1	Seems	seems	seem	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
5	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	clear	_	clear	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	8	MOD_s	true
8	distinction	_	distinction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	distinguish-01	(s())	1	APP_s	true
9	being	_	be	VBG	O	_	person	_	0	IGNORE	true
10	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
11	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	'imaginary'	_	'imaginary'	NNP	O	_	mean-01	_	0	IGNORE	true
14	Whore	whore	Whore	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	MOD_s	true
15	of	_	of	IN	O	(d<root> / --LEX--)	person	()	1	APP_o	true
16	Babalon	babalon	Babalon	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	20	MOD_s	true
20	Whore	whore	whore	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	Babylon,	babylon,	babylon,	CD	O	_	_NAME_	_	0	IGNORE	true
23	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
24	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
25	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	global	_	global	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	globe	(mod())	27	MOD_mod	true
27	system	_	system	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
28	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[20@@d@@whore, 26@@p@@globe, 19@@s@@actual-02, 8@@s@@distinguish-01, 25@@p@@this, 27@@p@@system, 7@@s@@clear-06, 14@@s@@Whore, 16@@p@@_NAME_, 1@@s@@seem-01, 15@@d@@person]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	resisted	_	resist	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	asking	_	ask	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	questions	_	question	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
8	have	_	have	VB	O	_	person	_	0	IGNORE	true
9	required	_	require	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	either	_	either	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	them	_	they	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_o	true
15	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@p@@any, 2@@c@@resist-01, 14@@s@@think-01, 5@@t@@thing, 1@@d@@i, 9@@s@@require-01, 10@@d@@either, 3@@s@@ask-01, 12@@p@@they, 5@@d@@question-01]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
3	read	_	read	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	letter,	_	letter,	NNS	O	_	and	_	0	IGNORE	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	considered	_	consider	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	vast	_	vast	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	contrast	_	contrast	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	7	APP_o	true
11	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	morality	_	morality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o2	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	whoever	_	whoever	WP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	wrote	_	write	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
18	it,	_	it,	NNS	O	_	and	_	0	IGNORE	true
19	vs.	_	vs.	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	that	_	that	DT	O	_	thing	_	0	IGNORE	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	mind	_	mind	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_poss	true
27	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
28	once	_	once	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	MOD_s	true
30	"Bring	"bring	"bre	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	26	MOD_s	true
31	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
32	on!	_	on!	.	O	_	$LEMMA$	_	0	IGNORE	true
33	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[26@@d@@man, 2@@d@@i, 9@@p@@vast, 28@@n@@once, 16@@d@@whoever, 10@@b@@contrast-01, 30@@s@@_NAME_, 17@@s@@write-01, 23@@h@@mind, 14@@d@@morality, 31@@d@@it, 29@@s@@say-01, 7@@b@@consider-02, 3@@s@@read-01, 12@@d@@mind]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	believe	_	believe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
7	serious	_	serious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
8	metal	_	metal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	fans	_	fan	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
10	who	_	who	WP	O	_	name	_	0	IGNORE	true
11	frequent	_	frequent	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	RI	_name_	RI	NNP	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@explicitanon0@@-, 9@@d@@fan, 7@@s@@serious-02, 2@@explicitanon0@@-, 12@@t@@thing, 1@@d@@i, 11@@s@@frequent-01, 12@@n@@_NAME_, 3@@s@@believe-01, 8@@p@@metal]
sentence=1	Whie	whie	whie	UH	O	_	-	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	subscribe	_	subscribe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	46	APP_snt1	true
5	to	_	to	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	30	MOD_o	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	notion	_	notion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	watch	_	watch	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	10	MOD_o	true
14	listen	_	listen	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	to	_	to	TO	O	_	-	_	0	IGNORE	true
16	have	_	have	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
17	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
18	effect	_	effect	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	on	_	on	IN	O	_	affect-01	_	0	IGNORE	true
20	our	_	our	PRP$	O	_	thing	_	0	IGNORE	true
21	behavior	_	behavior	NN	O	(d<root> / --LEX--)	behave-01	()	46	APP_snt2	true
22	(which	_	(which	.	O	_	$LEMMA$	_	0	IGNORE	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
25	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	30	APP_s	true
26	patently	_	patently	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	massive	(mod())	24	MOD_mod	true
27	rediculous),	_	rediculous),	NNP	O	_	i	_	0	IGNORE	true
28	it	_	it	PRP	O	_	i	_	0	IGNORE	true
29	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
30	bother	_	bother	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
31	me	_	I	PRP	O	_	cause-01	_	0	IGNORE	true
32	when	_	when	WRB	O	_	i	_	0	IGNORE	true
33	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	34	APP_s	true
34	single	_	single	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-out-04	(mod(), s(), o())	30	MOD_mod	true
35	out	_	out	RP	O	_	rate-entity-91	_	0	IGNORE	true
36	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	38	MOD_s	true
38	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
39	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
40	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	38	MOD_mod	true
41	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
42	pin	_	pin	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	34	MOD_mod	true
43	the	_	the	DT	O	_	he	_	0	IGNORE	true
44	blame	_	blame	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	42	APP_o	true
45	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
46	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	30	APP_o	true

nodealignment=[38@@d@@group, 34@@t@@single-out-04, 5@@s@@cause-01, 40@@g@@person, 25@@d@@person, 26@@t@@massive, 2@@d@@i, 14@@s@@listen-01, 33@@d@@person, 12@@s@@watch-01, 7@@d@@notion, 42@@r2@@pin-01, 21@@d@@behave-01, 3@@explicitanon0@@-, 30@@s@@bother-01, 44@@d@@blame-01, 4@@s@@subscribe-01, 13@@a@@or, 46@@m@@multi-sentence, 37@@s@@specific-02, 24@@s@@think-01, 17@@explicitanon0@@-, 11@@d@@we, 10@@d@@thing]
sentence=1	Again,	again,	Again,	NNP	O	_	and	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
5	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	3	APP_o	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_op1	true
8	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
9	sink	_	sink	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	far	_	far	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
15	egos,	_name_	egos,	NNS	O	_	and	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_dom	true
17	begin	_	begin	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
19	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	APP_s	true
20	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	metaphors	_	metaphor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	literaly	_	literaly	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@s@@too, 26@@p@@literaly, 11@@p@@far, 19@@s@@take-04, 17@@s@@begin-01, 9@@s@@sink-01, 7@@d@@person, 3@@s@@think-01, 2@@d@@i, 5@@r@@problem, 22@@d@@metaphor, 24@@s@@bit, 16@@a@@and, 21@@s@@personal-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	15	APP_s	true
3	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
4	but	_	but	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	except-01	(s(), o())	15	MOD_o	true
5	respect	_	respect	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
6	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	5	APP_s	true
8	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
9	adhear	_	adhear	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	to	_	to	IN	O	_	name	_	0	IGNORE	true
11	non-violence,	_	non-violence,	NNP	O	_	and	_	0	IGNORE	true
12	forgiveness,	_	forgiveness,	NNP	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	_	$LEMMA$	_	9	IGNORE	true
14	charity,	_	charity,	NNP	O	_	and	_	0	IGNORE	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
16	it's	_	it's	PRP$	O	_	contrast-01	_	0	IGNORE	true
17	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	15	APP_o	true
18	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	thing	(s(), o())	15	MOD_s	true
19	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_dom	true
20	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	Christians	_name_	Christians	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	18	MOD_mod	true
22	(or	_	(or	ADD	O	_	person	_	0	IGNORE	true
23	'Smartwolves')	'smartwolves')	'Smartwolves')	NNS	O	_	have-org-role-91	_	0	IGNORE	true
24	do	_	do	VBP	O	_	person	_	0	IGNORE	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	28	MOD_mod	true
26	have	_	have	VB	O	(d<root> / --LEX--)	$LEMMA$-03	()	19	APP_o	true
27	a	_	a	DT	O	_	person	_	0	IGNORE	true
28	monopoly	_	monopoly	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
29	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	lifestyle	_	lifestyle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@d@@have-03, 3@@d@@nothing, 25@@explicitanon0@@-, 21@@n@@_NAME_, 31@@p@@particular, 28@@d@@monopoly, 2@@b@@have-03, 32@@p@@lifestyle, 7@@d@@person, 4@@s@@except-01, 17@@r@@important, 9@@s@@adhear-01, 15@@s@@contrast-01, 1@@d@@i, 19@@s@@remember-01, 30@@p@@that, 21@@r@@religious-group, 5@@s@@respect-01, 18@@s@@thing]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	refer	_	refer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
5	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	between	_	between	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
8	Pakistan	_name_	Pakistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_op1	true
9	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	Morocco,	morocco,	morocco,	CD	O	_	_NAME_	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	predominantly	_	predominantly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	large	(mod())	15	MOD_mod	true
14	Arab,	_name_	Arab,	NNP	O	_	and	_	0	IGNORE	true
15	predominantly	_	predominantly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	predominant	(mod())	16	MOD_mod	true
16	Moslem,	_name_	moslem,	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_s	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
18	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
19	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
20	non-Arab	_name_	non-arab	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	25	MOD_mod	true
21	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
24	non-Moslem	_name_	non-moslem	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	25	MOD_mod	true
25	minorities	_	minority	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
26	.	_	.	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	oppose-01	(mod())	2	MOD_mod	true

nodealignment=[8@@n@@_NAME_, 21@@d@@and, 15@@s@@predominant, 7@@b@@between, 23@@s@@significant-02, 19@@explicitanon0@@many, 2@@s@@refer-01, 6@@d@@area, 16@@s@@and, 8@@c@@country, 17@@s@@contrast-01, 13@@p@@large, 26@@p@@oppose-01, 18@@s@@include-01, 1@@d@@i, 20@@n@@_NAME_, 22@@p@@also, 24@@p@@_NAME_, 25@@d@@minority, 20@@c@@country, 5@@p@@entire]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	millions	_	million	NNS	O	(p<root> / person  :quant (m / multiple  :op1 (explicitanon0 / --LEX--)))	1000000	()	9	APP_s	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	in	_	in	IN	O	_	name	_	0	IGNORE	true
6	the	_	the	DT	O	_	name	_	0	IGNORE	true
7	Iran-Iraq	iran-iraq	Iran-Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	war	_	war	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
9	had	_	have	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-to-do-with-04	(o2(), s(), o())	0	ROOT	true
10	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
11	to	_	to	TO	O	_	name	_	0	IGNORE	true
12	do	_	do	VB	O	_	person	_	0	IGNORE	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	Israel	_name_	Israel	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
15	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[2@@explicitanon0@@1000000, 9@@b@@have-to-do-with-04, 14@@n@@_NAME_, 2@@p@@person, 10@@d@@nothing, 8@@v@@war-01, 14@@c@@country, 4@@s@@die-01, 2@@m@@multiple, 7@@n@@_NAME_, 7@@c@@country]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	1	APP_op1	true
4	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	happening	_	happen	VBG	O	_	event	_	0	IGNORE	true
7	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	region,	_	region,	NNS	O	_	include-91	_	0	IGNORE	true
10	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	only_30_years	_name_	year	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
12	ago,	_	ago,	DT	O	_	_NAME_	_	0	IGNORE	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	believed	_	believe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
15	to	_	to	TO	O	_	include-91	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	most	_	0	IGNORE	true
18	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	wealthy	_	wealthy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
23	world,	_	world,	NNS	O	_	_NAME_	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_op2	true
25	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	Moslem	_name_	Moslem	NNP	O	(d<root> / --LEX--)	_NAME_	()	24	APP_op2	true
28	area,	_	area,	NNP	O	_	include-91	_	0	IGNORE	true
29	which	_	which	WDT	O	_	name	_	0	IGNORE	true
30	developed,	_	developed,	NNS	O	_	person	_	0	IGNORE	true
31	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
34	in	_	in	IN	O	_	i	_	0	IGNORE	true
35	history,	_	history,	NNS	O	_	include-91	_	0	IGNORE	true
36	one	_	one	CD	O	_	1	_	0	IGNORE	true
37	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	MOD_s	true
38	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
39	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	advanced	_	advanced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	41	MOD_s	true
41	cultures	_	culture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
42	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
43	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
44	world	_	world	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
45	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@a@@and, 37@@s@@include-91, 11@@explicitanon0@@year, 44@@p@@world, 14@@s@@believe-01, 20@@d@@part, 27@@d@@_NAME_, 40@@s@@advanced-02, 33@@n@@point, 1@@a@@and, 18@@p@@next, 3@@s@@include-91, 19@@p@@wealthy, 4@@d@@this, 32@@p@@some, 41@@d@@culture, 39@@s@@most, 2@@p@@all]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	word	_	word	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	about	_	about	IN	O	_	contrast-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	millions	_	million	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000000	(mod())	10	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	decent,	_	decent,	NNP	O	_	so	_	0	IGNORE	true
8	honest,	_	honest,	NNS	O	_	multiple	_	0	IGNORE	true
9	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	2	MOD_mod	true
11	who	_	who	WP	O	_	name	_	0	IGNORE	true
12	are	_	be	VBP	O	_	person	_	0	IGNORE	true
13	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	devout	_	devout	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	Moslems	_name_	Moslems	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
19	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
21	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
22	grew	_	grow	VBD	O	(d<root> / --LEX--)	$LEMMA$-up-04	()	21	APP_o	true
23	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	Moslem	_name_	Moslem	NNP	O	_	$LEMMA$	_	0	IGNORE	true
26	families:	_	families:	NNP	O	_	and	_	0	IGNORE	true
27	They	they	They	PRP	O	_	person	_	0	IGNORE	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	double	_	double	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	30	MOD_mod	true
30	victims	_	victim	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op1	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
33	outside	_	outside	JJ	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	world,	_	world,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_s	true
35	which	_	which	WDT	O	_	i	_	0	IGNORE	true
36	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	develops	_	develop	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	43	MOD_s	true
38	Islamophobia,	islamophobia,	islamophobia,	CD	O	_	cause-01	_	0	IGNORE	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
42	own	_	own	JJ	O	_	person	_	0	IGNORE	true
43	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
44	which	_	which	WDT	O	_	i	_	0	IGNORE	true
45	breaks	_	break	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	43	MOD_s	true
46	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
47	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
48	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
49	being	_	be	VBG	O	_	cause-01	_	0	IGNORE	true
50	totally	_	totally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	total	(mod())	51	MOD_mod	true
51	dysfunctional	_	dysfunctional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
52	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@d@@victim, 20@@p@@religious, 29@@p@@double-01, 51@@p@@dysfunctional, 14@@p@@devout, 5@@m@@multiple, 36@@n@@now, 9@@s@@good-02, 21@@s@@contrast-01, 37@@s@@develop-02, 2@@s@@word-01, 10@@g@@person, 33@@b@@outside, 43@@d@@environment, 45@@s@@break-01, 22@@d@@grow-up-04, 18@@explicitanon0@@-, 47@@d@@heart, 16@@d@@or, 50@@s@@total, 34@@s@@and, 39@@a@@and, 5@@explicitanon0@@1000000, 15@@p@@Moslems, 19@@s@@very]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the_last_few_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
5	have	_	have	VBP	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
6	amplified	_	amplify	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	four	_	four	CD	O	(p<root> / person  :quant (n / --LEX--))	4	()	6	APP_o	true
8	issues,	_	issues,	NNS	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	existed,	_	existed,	JJ	O	_	-	_	0	IGNORE	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
14	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	6	MOD_s	true
15	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	18	MOD_mod	true
16	been	_	be	VBN	O	_	-	_	0	IGNORE	true
17	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	18	MOD_mod	true
18	rampant	_	rampant	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
19	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
20	in	_	in	IN	O	_	after	_	0	IGNORE	true
21	the	_	the	DT	O	_	-	_	0	IGNORE	true
22	present	_	present	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	upheaval	_	upheaval	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
24	in	_	in	IN	O	_	after	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	region	_	region	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@n@@_NAME_, 18@@d@@rampant, 23@@n@@upheaval, 14@@s@@-, 15@@n@@ever, 22@@n@@present, 7@@n@@4, 17@@s@@equal, 7@@p@@person, 26@@b@@region, 11@@n@@always, 2@@d@@event, 13@@s@@contrast-01, 6@@s@@amplify-01]
sentence=1	More	more	More	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_s	true
3	die	_	die	VBP	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
5	AIDS	aids	AIDS	NNP	O	(d2<root> / disease  :name (n2 / --LEX--))	_NAME_	()	3	APP_o	true
6	in	_	in	IN	O	_	after	_	0	IGNORE	true
7	one_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	day	(mod())	3	MOD_mod	true
8	in	_	in	IN	O	_	person	_	0	IGNORE	true
9	Africa	_name_	Africa	NNP	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	3	MOD_mod	true
10	than	_	than	IN	O	_	name	_	0	IGNORE	true
11	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
12	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	name	(s(), o())	3	MOD_o	true
13	Russians	_name_	Russians	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	12	MOD_mod	true
14	who	_	who	WP	O	_	name	_	0	IGNORE	true
15	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
16	in	_	in	IN	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	hands	_	hand	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	15	MOD_mod	true
19	of	_	of	IN	O	_	name	_	0	IGNORE	true
20	Chechnya-based	chechnya-based	chechnya-based	JJ	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
21	Moslem	_name_	Moslem	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
22	suicide	_	suicide	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	murderers	_	murderer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	murder-01	()	18	APP_poss	true
24	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
25	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	conflict	_	conflict	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_s	true
27	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op1	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@n2@@_NAME_, 22@@p@@suicide, 3@@s@@die-01, 20@@n@@_NAME_, 21@@p@@_NAME_, 13@@n@@_NAME_, 24@@w@@since, 26@@d@@conflict-01, 9@@c3@@continent, 15@@s@@die-01, 18@@h@@hand, 23@@e2@@murder-01, 5@@n2@@_NAME_, 2@@d@@person, 11@@p@@all, 5@@d2@@disease, 7@@n@@day, 12@@s@@name, 23@@p2@@person, 25@@p@@that, 13@@c@@country, 27@@s@@start-01, 1@@explicitanon0@@More, 20@@c@@city]
sentence=1	Saddam	_name_	Saddam	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	killed	_	kill	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	every_month	_name_	month	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	2	APP_o	true
6	than	_	than	IN	O	_	and	_	0	IGNORE	true
7	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	those	_	those	DT	O	_	person	_	0	IGNORE	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
11	from	_	from	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
12	suicide	_	suicide	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	murders	_	murder	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
14	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Coalition	coalition	Coalition	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	occupation	_	occupation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	occupy-01	(s())	14	APP_op1	true
18	of	_	of	IN	O	_	person	_	0	IGNORE	true
19	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
20	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@p@@person, 13@@d@@murder-01, 10@@s@@die-01, 5@@d@@person, 4@@explicitanon0@@more, 1@@n@@_NAME_, 17@@s@@occupy-01, 14@@w@@since, 2@@s@@kill-01, 12@@p@@suicide, 3@@explicitanon0@@month, 7@@p@@all, 19@@c@@country, 11@@s@@cause-01, 16@@p@@Coalition, 19@@n@@_NAME_]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	norms	_	norm	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	politics	_	politic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_s	true
7	diplomacy	_	diplomacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	are	_	be	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	1	APP_o	true
9	childish,	_	childish,	NNS	O	_	and	_	0	IGNORE	true
10	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
11	comparison	_	comparison	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	level	_	level	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	APP_o	true
15	of	_	of	IN	O	_	and	_	0	IGNORE	true
16	incitement	_	incitement	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_mod	true
18	total	_	total	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	absolute	_	absolute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	deliberate	_	deliberate	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
21	fabrications,	_	fabrications,	NNS	O	_	interrogative	_	0	IGNORE	true
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
23	have	_	have	VBP	O	_	person	_	0	IGNORE	true
24	reached	_	reach	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
25	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	heights	_	height	NNS	O	(d<root> / --LEX--)	high-02	()	24	APP_o	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
29	region	_	region	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
30	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
31	are	_	be	VBP	O	_	person	_	0	IGNORE	true
32	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_o	true
33	about	_	about	IN	O	_	-	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@b@@region, 16@@d@@incitement, 14@@s@@level, 3@@s@@norm, 24@@s@@reach-01, 18@@p@@total, 26@@d@@high-02, 8@@s@@person, 19@@p@@absolute, 32@@s@@talk-01, 30@@d@@we, 25@@s@@new-01, 6@@a@@and, 7@@d@@diplomacy, 20@@d@@deliberate, 1@@h@@contrast-01, 17@@a@@and, 5@@d@@politic]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	1	_	0	IGNORE	true
3	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	5	MOD_mod	true
4	daily	_name_	daily	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	5	MOD_mod	true
5	occurrence	_	occurrence	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	that	_	that	IN	O	_	1	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	17	APP_s	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	finance,	_	finance,	NNP	O	_	mean-01	_	0	IGNORE	true
12	arm	_	arm	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
14	dispatch	_	dispatch	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
15	suicide	_	suicide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
16	murderers,	_	murderers,	NNS	O	_	person	_	0	IGNORE	true
17	condemn	_	condemn	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_dom	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	act	_	act	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	in	_	in	IN	O	_	name	_	0	IGNORE	true
21	English	_name_	English	NNP	O	(l<root> / language  :name (n / --LEX--)  :medium-of (t<mod>))	_NAME_	(mod())	17	MOD_mod	true
22	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	front	_	front	NN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	in-$LEMMA$-of	(op1(), mod())	17	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	western	_	western	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	26	MOD_mod	true
26	TV	tv	tv	NN	O	(d<root> / --LEX--)	television	()	23	APP_op1	true
27	cameras,	_	cameras,	NNS	O	_	and	_	0	IGNORE	true
28	talking	_	talk	VBG	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
29	to	_	to	IN	O	_	and	_	0	IGNORE	true
30	a	_	a	DT	O	_	1	_	0	IGNORE	true
31	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
32	audience,	_	audience,	NNP	O	_	include-91	_	0	IGNORE	true
33	which	_	which	WDT	O	_	i	_	0	IGNORE	true
34	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	partly	_	partly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	part	(mod())	36	MOD_mod	true
36	believes	_	believe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
37	them	_	they	PRP	O	_	person	_	0	IGNORE	true
38	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@l@@language, 36@@s@@believe-01, 3@@explicitanon0@@1, 9@@d@@person, 25@@n@@_NAME_, 25@@w@@world-region, 19@@d@@act, 17@@s@@condemn-01, 13@@a@@and, 4@@r@@rate-entity-91, 23@@b@@in-front-of, 4@@t@@temporal-quantity, 26@@d@@television, 31@@d@@world, 12@@s@@arm-01, 5@@r@@occurrence, 35@@s@@part, 34@@p@@even, 14@@s@@dispatch-01, 4@@d@@day, 15@@d@@suicide, 8@@s@@same-01, 21@@n@@_NAME_, 28@@p@@talk-01]
sentence=1	Incitement	incitement	incitement	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	incite-01	(s())	13	APP_s	true
2	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
3	Arab	_name_	Arab	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	1	APP_s	true
4	TV,	tv,	tv,	CD	O	_	person	_	0	IGNORE	true
5	accompanied	_	accompany	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
6	by	_	by	IN	O	_	person	_	0	IGNORE	true
7	horror	_	horror	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	pictures	_	picture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	mutilated	_	mutilated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	bodies,	_	bodies,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
13	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	powerful	_	powerful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	weapon	_	weapon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	those	_	those	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	who	_	who	WP	O	_	person	_	0	IGNORE	true
20	lie,	_	lie,	VBP	O	_	person	_	0	IGNORE	true
21	distort	_	distort	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	MOD_s	true
24	to	_	to	TO	O	_	person	_	0	IGNORE	true
25	destroy	_	destroy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_o	true
26	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@powerful-02, 5@@s@@accompany-01, 8@@d@@picture, 13@@s@@become-01, 10@@s@@mutilated-01, 23@@c@@want-01, 26@@d@@everything, 16@@d@@weapon, 11@@p@@bodies,, 7@@p@@horror, 1@@s@@incite-01, 3@@e@@ethnic-group, 25@@s@@destroy-01, 3@@n@@_NAME_, 21@@s@@distort-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	game	_	game	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
6	in	_	in	IN	O	_	and	_	0	IGNORE	true
7	town:	_name_	town:	XX	O	_	and	_	0	IGNORE	true
8	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
9	actual	_	actual	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	murderer	_	murderer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	murder-01	(s())	12	MOD_s	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	32	APP_op1	true
13	"the	_	"the	``	O	_	_NAME_	_	0	IGNORE	true
14	military	_	military	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	wing",	_	wing",	VB	O	_	mean-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
18	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	pays	_	pay	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	him,	_	him,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
21	equips	_	equip	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
22	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
24	sends	_	send	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
25	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
27	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_op2	true
29	"the	_	"the	``	O	_	_NAME_	_	0	IGNORE	true
30	political	_	political	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	wing"	_	wing"	NNS	O	_	mean-01	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	head	_	head	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	operation	_	operation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
38	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
39	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	32	APP_op3	true
40	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
41	"spiritual	_	"spiritual	XX	O	(d<root> / --LEX--)	_NAME_	()	39	APP_o	true
42	leader"	_	leader"	NFP	O	_	mean-01	_	0	IGNORE	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@d@@operation, 9@@s@@actual-02, 21@@s@@equip-01, 24@@s@@send-01, 5@@d@@game, 39@@s@@call-01, 4@@s@@new-01, 12@@s@@call-01, 14@@d@@military, 10@@s@@murder-01, 27@@n@@now, 17@@p@@one, 32@@a@@and, 41@@d@@_NAME_, 34@@s@@head-01, 28@@s@@call-01, 19@@s@@pay-01, 30@@d@@political]
sentence=1	Huge	huge	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	amounts	_	amount	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	money,	_	money,	NNS	O	_	cause-01	_	0	IGNORE	true
5	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
6	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
7	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
8	solved	_	solve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
9	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	dysfunctional	_	dysfunctional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	part	_	part	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
18	world,	_	world,	NNS	O	_	_NAME_	_	0	IGNORE	true
19	are	_	be	VBP	O	_	person	_	0	IGNORE	true
20	channeled	_	channel	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
21	into	_	into	IN	O	_	-	_	0	IGNORE	true
22	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	24	MOD_mod	true
23	concentric	_	concentric	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	24	MOD_s	true
24	spheres	_	sphere	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	supporting	_	support	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
26	death	_	death	NN	O	(d<root> / --LEX--)	die-01	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_o	true
28	murder	_	murder	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op2	true
29	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@p@@dysfunctional, 1@@p@@huge, 27@@a@@and, 23@@s@@concentric, 15@@b@@part, 10@@p@@social, 26@@d@@die-01, 22@@explicitanon0@@3, 13@@p@@this, 9@@explicitanon0@@many, 28@@d@@murder-01, 8@@s@@solve-01, 2@@d@@amount, 24@@d@@sphere, 20@@s@@channel-01, 6@@s@@possible-01, 25@@s@@support-01, 11@@d@@problem]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	surrounded	_	surround	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	by	_	by	IN	O	_	and	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	8	MOD_mod	true
7	wider	_	wide	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	wide-02	(s())	8	MOD_s	true
8	circle	_	circle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	direct	_	direct	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
11	supporters,	_	supporters,	NNP	O	_	and	_	0	IGNORE	true
12	planners,	_	planners,	NNS	O	_	and	_	0	IGNORE	true
13	commanders,	_	commanders,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	preachers,	_	preachers,	NNS	O	_	include-91	_	0	IGNORE	true
15	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	whom	_	whom	WP	O	_	person	_	0	IGNORE	true
18	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	8	MOD_s	true
19	a	_	a	DT	O	_	person	_	0	IGNORE	true
20	living,	_	living,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
21	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	24	MOD_mod	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	comfortable	_	comfortable	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	18	APP_o	true
25	living,	_	living,	NNPS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_s	true
26	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
27	serving	_	serve	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
28	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
29	terror	_	terror	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	infrastructure	_	infrastructure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@s@@and, 15@@p@@all, 6@@o@@ordinal-entity, 27@@b@@serve-01, 21@@p@@usual, 18@@s@@make-05, 24@@d@@comfortable-02, 6@@explicitanon0@@2, 23@@s@@very, 10@@s@@direct-02, 8@@d@@circle, 1@@d@@They, 7@@m@@more, 30@@d@@infrastructure, 29@@p@@terror, 7@@b@@wide-02, 3@@s@@surround-01]
sentence=1	Finally,	finally,	Finally,	NNP	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	and	(mod())	3	MOD_mod	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	third	_name_	third	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	6	MOD_mod	true
6	circle	_	circle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	so-called	_	so-called	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	call-01	(s())	1	MOD_s	true
9	religious,	_	religious,	NNP	O	_	and	_	0	IGNORE	true
10	educational	_	educational	JJ	O	(d<root> / --LEX--)	educate-01	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
12	welfare	_	welfare	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
13	organizations,	_	organizations,	NNS	O	_	and	_	0	IGNORE	true
14	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
15	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	16	MOD_s	true
16	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
17	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	good,	_	good,	NNS	O	_	and	_	0	IGNORE	true
19	feed	_	feed	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	hungry	_	hungry	JJ	O	(d<root> / --LEX--)	hunger-01	()	19	APP_o	true
22	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
23	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
24	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
25	schooling,	_	schooling,	NNS	O	_	and	_	0	IGNORE	true
26	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	3	MOD_s	true
27	brainwash	_	brainwash	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	26	APP_o	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	generation	_	generation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	with	_	with	IN	O	_	-	_	0	IGNORE	true
32	hatred,	_	hatred,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
33	lies	_	lie	NNS	O	(d<root> / --LEX--)	$LEMMA$-08	()	34	APP_op1	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_o	true
35	ignorance	_	ignorance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op2	true
36	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[34@@a@@and, 3@@s@@find-01, 29@@s@@new-01, 35@@d@@ignorance, 1@@explicitanon0@@and, 23@@s@@provide-01, 24@@d@@some, 17@@p@@some, 26@@s@@contrast-01, 8@@s@@call-01, 19@@t@@feed-01, 15@@s@@actual-02, 21@@d@@hunger-01, 16@@s@@do-02, 10@@d@@educate-01, 2@@d@@we, 6@@d@@circle, 5@@o@@ordinal-entity, 22@@d@@and, 30@@d@@generation, 12@@d@@welfare, 5@@explicitanon0@@3, 11@@a@@and, 33@@d@@lie-08, 27@@s@@brainwash-01]
sentence=1	Figuratively	figuratively	figuratively	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	respect-01	(mod())	8	MOD_mod	true
2	speaking,	_	speaking,	VBZ	O	_	and	_	0	IGNORE	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	outer	_	outer	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	circle	_	circle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	guardian,	_	guardian,	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	include-91	(dom())	11	APP_s	true
9	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
10	makes	_	make	VBZ	O	_	$LEMMA$-02	_	0	IGNORE	true
11	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	en$LEMMA$-01	(s(), o())	0	ROOT	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_s	true
15	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	APP_o	true
17	listen	_	listen	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	inwards	_	inwards	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
21	inner	_	inner	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	circle	_	circle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	terror	_	terror	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	MOD_op1	true
26	incitement,	_	incitement,	NNS	O	_	shit	_	0	IGNORE	true
27	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	22	MOD_s	true
28	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	true
29	to	_	to	IN	O	_	except-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
31	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
32	outside	_	outside	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
33	.	_	.	.	O	_	except-01	_	0	IGNORE	true

nodealignment=[21@@p@@inner, 16@@a@@and, 18@@p@@inwards, 27@@s@@instead-of-91, 24@@d@@terror, 1@@p@@respect-01, 3@@p@@this, 4@@p@@outer, 5@@d@@circle, 14@@d@@person, 11@@s@@ensure-01, 22@@d@@circle, 15@@s@@look-01, 25@@a@@and, 8@@r@@include-91, 32@@b@@outside, 17@@s@@listen-01, 31@@d@@world]
sentence=1	Mrs.	mrs.	Mrs.	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	_NAME_	(s())	24	MOD_s	true
2	Arafat,	_name_	arafat,	NN	O	_	and	_	0	IGNORE	true
3	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
4	lives	_	live	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	MOD_s	true
5	in	_	in	IN	O	_	person	_	0	IGNORE	true
6	Paris	_name_	Paris	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	daughter,	_	daughter,	NNP	O	_	person	_	0	IGNORE	true
10	receives	_	receive	VBZ	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	24	MOD_s	true
11	tens	_	ten	NNS	O	(o<root> / --LEX--  :op1 (b<op1>))	multiple	(op1())	24	APP_s	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1000	(mod())	15	MOD_mod	true
14	of	_	of	IN	O	_	100000000	_	0	IGNORE	true
15	dollars	_	dollar	NNS	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	11	APP_op1	true
16	per	_	per	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	rate-entity-91	(s(), o())	10	APP_o2	true
17	month	_	month	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	16	APP_o	true
18	from	_	from	IN	O	_	and	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	allegedly	_	allegedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	21	MOD_s	true
21	bankrupt	_	bankrupt	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	Palestinian	_name_	palestinian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	Authority,	authority,	authority,	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	24	MOD_s	true
24	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	typical	_	typical	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
27	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
28	ringleader	_	ringleader	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	lead-02	(s(), o())	30	MOD_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	the	_	the	DT	O	(g<root> / --LEX--  :consist (r<mod>))	have-org-role-91	(mod())	24	MOD_mod	true
31	Al-Aksa	_name_	Al-Aksa	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	28	APP_o	true
32	brigade,	_	brigade,	NNP	O	_	person	_	0	IGNORE	true
33	reporting	_	report	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
34	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
35	Arafat,	_name_	arafat,	NN	O	_	-	_	0	IGNORE	true
36	receives	_	receive	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
37	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
38	a	_	a	DT	O	_	1	_	0	IGNORE	true
39	cash	_	cash	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	payment	_	payment	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	pay-01	(s(), o())	36	APP_s	true
41	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
42	a	_	a	DT	O	_	1	_	0	IGNORE	true
43	couple	_	couple	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
45	hundred	_	hundred	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	100	(mod())	24	MOD_mod	true
46	dollars,	_	dollars,	NNS	O	_	cause-01	_	0	IGNORE	true
47	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
48	performing	_	perform	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	APP_s	true
49	murders	_	murder	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
50	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
51	the	_	the	DT	O	_	person	_	0	IGNORE	true
52	retail	_	retail	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	level	_	level	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@t@@report-01, 21@@s@@bankrupt-01, 22@@c@@country, 48@@s@@perform-02, 15@@d2@@dollar, 27@@s@@local-02, 28@@s@@lead-02, 52@@p@@retail, 31@@n@@_NAME_, 22@@n@@_NAME_, 26@@s@@typical-02, 31@@p@@person, 10@@i@@receive-01, 11@@o@@multiple, 1@@p2@@_NAME_, 37@@p@@only, 17@@m@@month, 6@@n@@_NAME_, 49@@d@@murder-01, 15@@m2@@monetary-quantity, 13@@explicitanon0@@1000, 24@@s@@contrast-01, 6@@c@@city, 17@@t@@temporal-quantity, 30@@g@@have-org-role-91, 1@@h@@have-org-role-91, 53@@t@@level, 43@@d@@couple, 23@@s@@_NAME_, 40@@s@@pay-01, 4@@s@@live-01, 20@@s@@allege-01, 45@@explicitanon0@@100, 36@@s@@receive-01, 16@@s@@rate-entity-91, 39@@p@@cash]
sentence=1	Do	do	Do	VBP	O	_	person	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	raid	_	raid	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	interrogative	_	0	IGNORE	true
5	mosque,	_	mosque,	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	true
6	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
7	serves	_	serve	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	terrorist	_	terrorist	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	ammunition	_	ammunition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
12	storage	_	storage	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
13	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[2@@d@@you, 7@@s@@serve-01, 12@@s@@storage-01, 10@@d@@terrorist, 11@@d@@ammunition, 13@@explicitanon0@@interrogative, 5@@d@@_NAME_, 3@@s@@raid-01]
sentence=1	Do	do	Do	VBP	O	_	interrogative	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	storm	_	storm	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	interrogative	_	0	IGNORE	true
5	church	_	church	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-over-12	(s(), o())	5	MOD_o	true
7	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
8	by	_	by	IN	O	_	i	_	0	IGNORE	true
9	terrorists	_	terrorist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
11	took	_	take	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	priests	_	priest	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	hostages	_	hostage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
15	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[5@@d@@church, 3@@s@@storm-01, 9@@d@@terrorist, 2@@d@@you, 14@@d@@hostage, 15@@explicitanon0@@interrogative, 11@@b@@take-01, 13@@d@@priest, 6@@s@@take-over-12]
sentence=1	Do	do	Do	VBP	O	_	person	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	shoot	_	shoot	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	an	_	an	DT	O	_	interrogative	_	0	IGNORE	true
5	arch-murderer	_	arch-murderer	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	slash	()	3	APP_o	true
6	who	_	who	WP	O	_	name	_	0	IGNORE	true
7	deliberately	_	deliberately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	deliberate	(mod())	8	MOD_mod	true
8	moves	_	move	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	location	_	location	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	to	_	to	IN	O	_	person	_	0	IGNORE	true
13	another,	_	another,	NNP	O	_	thing	_	0	IGNORE	true
14	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	surrounded	_	surround	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
16	by	_	by	IN	O	_	multiple	_	0	IGNORE	true
17	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[3@@s@@shoot-01, 2@@d@@you, 17@@d@@child, 18@@explicitanon0@@interrogative, 5@@p2@@person, 5@@e2@@slash, 10@@p@@one, 14@@n@@always, 8@@t@@move-01, 7@@t@@deliberate, 15@@s@@surround-01, 11@@d@@location]
sentence=1	International	international	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
11	sends	_	send	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	9	MOD_s	true
12	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	throw	_	throw	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_o2	true
15	stones,	_	stones,	NNP	O	_	and	_	0	IGNORE	true
16	stands	_	stand	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
17	behind	_	behind	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	and	_	and	CC	O	_	$LEMMA$	_	5	IGNORE	true
20	shoots	_	shoot	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	9	MOD_s	true
21	with	_	with	IN	O	_	-	_	0	IGNORE	true
22	immunity	_	immunity	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
24	cannot	_	cannot	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	23	APP_op2	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	arrested	_	arrest	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
27	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	26	MOD_o	true
28	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	sheltered	_	shelter	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	27	APP_s	true
31	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	a	_	a	DT	O	_	1	_	0	IGNORE	true
33	Government	_name_	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	30	APP_s	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@g2@@govern-01, 14@@s@@throw-01, 4@@explicitanon0@@-, 12@@d@@child, 20@@s@@shoot-02, 26@@d@@arrest-01, 5@@s@@know-01, 33@@g@@government-organization, 27@@s@@cause-01, 23@@a@@and, 24@@s@@possible-01, 17@@b@@behind, 2@@d@@law, 9@@d@@someone, 11@@t@@send-01, 16@@s@@stand-01, 8@@s@@handle-01, 1@@p@@international, 30@@s@@shelter-01, 22@@t@@immunity]
sentence=1	International	international	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	deal	_	deal	VB	O	(i2<root> / --LEX--  :ARG0 (i<s>)  :ARG2 (t<o>)  :purpose-of (l<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	leader	_	leader	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	lead-02	(s())	8	APP_s	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	murderers	_	murderer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	murder-01	()	11	APP_s	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	royally	_	royally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	just-02	(mod())	19	MOD_mod	true
17	and	_	and	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	5	MOD_o	true
18	comfortably	_	comfortably	RB	O	(s<root> / --LEX--  :ARG0 (y<s>))	comfortable-02	(s())	19	MOD_s	true
19	hosted	_	host	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
20	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	(d<root> / --LEX--)	person	()	5	APP_o	true
22	country,	_	country,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
23	which	_	which	WDT	O	_	i	_	0	IGNORE	true
24	pretends	_	pretend	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	condemn	_	condemn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
27	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
28	acts	_	act	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	26	APP_o	true
29	or	_	or	CC	O	_	$LEMMA$	_	24	IGNORE	true
30	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	claims	_	claim	NNS	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	MOD_s	true
32	to	_	to	TO	O	_	thing	_	0	IGNORE	true
33	be	_	be	VB	O	_	person	_	0	IGNORE	true
34	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	weak	_	weak	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	31	APP_o	true
36	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
37	arrest	_	arrest	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	35	MOD_mod	true
38	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@law, 17@@s@@and, 19@@s@@host-01, 11@@p@@person, 28@@d@@act-02, 4@@explicitanon0@@-, 35@@s@@weak-02, 13@@p2@@person, 24@@s@@pretend-01, 18@@s@@comfortable-02, 5@@s@@know-01, 30@@p@@just, 11@@w@@lead-02, 31@@c@@claim-01, 16@@t@@just-02, 21@@d@@person, 34@@s@@too, 8@@i2@@deal-01, 1@@p@@international, 26@@s@@condemn-01, 13@@e2@@murder-01, 37@@o@@arrest-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	0	ROOT	true
3	thing	_	thing	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	9	MOD_mod	true
9	crooks	_	crook	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
10	demand	_	demand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op1	true
11	protection	_	protection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	protect-01	(s())	10	APP_o	true
12	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	international	_	international	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	law,	_	law,	NN	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_s	true
16	define	_	define	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	15	APP_op2	true
17	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
18	those	_	those	DT	O	_	that	_	0	IGNORE	true
19	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
20	attack	_	attack	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
21	them	_	they	PRP	O	_	person	_	0	IGNORE	true
22	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
23	"war	_	"war	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o2	true
24	criminals,"	_	criminals,"	NNP	O	_	person	_	0	IGNORE	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	Western	western	western	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	media	_	medium	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	repeating	_	repeat	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	allegations	_	allegation	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	allege-01	()	29	APP_o	true
32	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[27@@n@@_NAME_, 17@@p@@all, 31@@d@@allege-01, 27@@w@@world-region, 8@@p@@this, 23@@d@@"war, 6@@p@@all, 26@@explicitanon0@@some, 10@@s@@demand-01, 16@@b@@define-01, 20@@s@@attack-01, 2@@s@@amaze-01, 11@@s@@protect-01, 13@@d@@international, 28@@d@@medium, 9@@d@@crook, 31@@t@@thing, 29@@s@@repeat-01, 15@@a@@and]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	an	_	an	DT	O	_	resemble-01	_	0	IGNORE	true
4	ideology	_	ideology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
6	claims	_	claim	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	supremacy	_	supremacy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	dominate-01	(s())	6	APP_o	true
8	over	_	over	IN	O	_	-	_	0	IGNORE	true
9	Western	western	western	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
11	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[2@@s@@have-03, 4@@d@@ideology, 9@@w@@world-region, 7@@s@@dominate-01, 1@@d@@It, 9@@n@@_NAME_, 10@@d@@culture, 6@@s@@claim-01]
sentence=1	Iran	_name_	Iran	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	sponsors	_	sponsor	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	49	APP_op1	true
3	Syrian	_name_	syrian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
4	terrorism,	_	terrorism,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	49	MOD_s	true
5	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	certainly	_	certainly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	certain	(mod())	12	MOD_mod	true
8	behind	_	behind	RB	O	(a<root> / --LEX--  :op1 (p<op1>)  :mod-of (g<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
9	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
12	action	_	action	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
13	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
14	Iraq,	iraq,	Iraq,	NNP	O	_	and	_	0	IGNORE	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	18	MOD_mod	true
18	funding	_	fund	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
19	the	_	the	DT	O	_	product	_	0	IGNORE	true
20	Hezbollah	_name_	Hezbollah	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
21	and,	_	and,	NFP	O	_	include-91	_	0	IGNORE	true
22	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	it,	_	it,	NNS	O	_	and	_	0	IGNORE	true
24	the	_	the	DT	O	_	and	_	0	IGNORE	true
25	Palestinian	_name_	palestinian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	27	MOD_mod	true
26	Hamas	_name_	Hamas	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
28	Islamic	_name_	Islamic	NNP	O	(r<root> / religious-group  :name (n / --LEX--))	_NAME_	()	27	APP_op2	true
29	Jihad;	jihad;	jihad;	CD	O	_	and	_	0	IGNORE	true
30	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	performed	_	perform	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	49	APP_op2	true
32	acts	_	act	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	31	APP_s	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	terror	_	terror	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
35	at	_	at	IN	O	_	include-91	_	0	IGNORE	true
36	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	31	MOD_mod	true
37	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	Europe	_name_	Europe	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op3 (r<op3>)  :op1 (g<op1>)  :location-of (e<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	31	MOD_mod	true
40	in	_	in	IN	O	_	name	_	0	IGNORE	true
41	South_America	_name_	America	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	39	APP_op2	true
42	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
43	probably	_	probably	RB	O	(d<root> / --LEX--)	probable	()	47	APP_op2	true
44	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
45	in	_	in	IN	O	_	person	_	0	IGNORE	true
46	Uzbekistan	_name_	Uzbekistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	47	APP_op1	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	39	APP_op3	true
48	Saudi_Arabia	_name_	Arabia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	47	APP_op3	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
50	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
51	truly	_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	true-01	(s())	52	MOD_s	true
52	leads	_	lead	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	49	APP_op3	true
53	a	_	a	DT	O	_	1	_	0	IGNORE	true
54	multi-national	_	multi-national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	multinational	(mod())	55	MOD_mod	true
55	terror	_	terror	NN	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_s	true
56	consortium,	_	consortium,	NNP	O	_	counter-01	_	0	IGNORE	true
57	which	_	which	WDT	O	_	name	_	0	IGNORE	true
58	includes,	_	includes,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	name	(s(), o())	49	MOD_s	true
59	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
60	minor	_	minor	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	62	MOD_s	true
61	players,	_	players,	NNS	O	_	include-91	_	0	IGNORE	true
62	Syria,_Lebanon	_name_	Lebanon	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	63	APP_op1	true
63	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	58	APP_o	true
64	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	66	MOD_mod	true
65	Shiite	_name_	shiite	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	66	MOD_mod	true
66	elements	_	element	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_op2	true
67	in	_	in	IN	O	_	oppose-01	_	0	IGNORE	true
68	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	66	MOD_mod	true
69	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[51@@s@@true-01, 9@@explicitanon0@@much, 65@@p@@_NAME_, 25@@c@@country, 62@@n@@_NAME_, 47@@a@@and, 39@@a@@and, 26@@o2@@organization, 38@@n@@_NAME_, 3@@n@@_NAME_, 41@@w@@world-region, 68@@c@@country, 28@@n@@_NAME_, 62@@o2@@organization, 68@@n@@_NAME_, 7@@p@@certain, 66@@d@@element, 64@@p@@certain, 28@@r@@religious-group, 3@@c@@country, 12@@d@@action, 52@@s@@lead-02, 63@@a@@and, 58@@s@@name, 49@@a@@and, 41@@n2@@_NAME_, 18@@s@@fund-01, 48@@n@@_NAME_, 54@@p@@multinational, 27@@a@@and, 48@@c@@country, 60@@s@@minor, 55@@d@@terror, 31@@s@@perform-02, 8@@a@@behind, 20@@o2@@organization, 2@@s@@sponsor-01, 42@@d@@and, 34@@p@@terror, 4@@s@@and, 17@@s@@full, 1@@n@@_NAME_, 20@@n@@_NAME_, 46@@n@@_NAME_, 46@@c@@country, 44@@p@@also, 43@@d@@probable, 1@@c@@country, 25@@n@@_NAME_, 26@@n@@_NAME_, 36@@p@@at-least, 32@@d@@act-02, 38@@c@@continent]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	crucial	_	crucial	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	stop	_	stop	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_dom	true
6	Saudi	_name_	saudi	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
8	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	financial	_	financial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	finance	(mod())	10	MOD_mod	true
10	support	_	support	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_op2	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	outer	_	outer	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	circle,	_	circle,	NNS	O	_	include-91	_	0	IGNORE	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	fertile	_	fertile	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	breeding	_	breeding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	breed-01	(s())	20	MOD_s	true
20	ground	_	ground	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	terror	_	terror	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@n@@_NAME_, 22@@p@@terror, 9@@p@@finance, 3@@r@@crucial, 7@@a@@and, 19@@s@@breed-01, 18@@p@@fertile, 10@@s@@support-01, 13@@d@@outer, 8@@p@@other, 20@@b@@ground, 5@@s@@stop-01, 6@@c@@country]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	act	_	act	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_op1	true
7	decisively	_	decisively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	objective	(mod())	6	MOD_mod	true
8	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	oppose-01	_	0	IGNORE	true
10	campaign	_	campaign	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	lies	_	lie	NNS	O	(d<root> / --LEX--)	$LEMMA$-08	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
14	fabrications	_	fabrication	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op2	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_dom	true
16	to	_	to	TO	O	_	oppose-01	_	0	IGNORE	true
17	monitor	_	monitor	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
18	those	_	those	DT	O	_	that	_	0	IGNORE	true
19	Western	western	western	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	media	_	medium	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	who	_	who	WP	O	_	name	_	0	IGNORE	true
22	collaborate	_	collaborate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	out	_	out	IN	O	_	cause-01	_	0	IGNORE	true
26	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
27	naivety,	_	naivety,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	financial	_	financial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	finance	(mod())	29	MOD_mod	true
29	interests	_	interest	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_op1	true
30	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_o	true
31	ignorance	_	ignorance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
32	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[28@@p@@finance, 14@@d@@fabrication-01, 29@@d@@interest-01, 4@@r@@important, 22@@s@@collaborate-01, 17@@s@@monitor-01, 12@@d@@lie-08, 19@@n@@_NAME_, 19@@w@@world-region, 30@@a@@or, 7@@t@@objective, 20@@d@@medium, 31@@d@@ignorance, 3@@p@@also, 15@@a@@and, 10@@s@@campaign-01, 13@@a@@and, 6@@s@@act-02]
sentence=1	The	the	the	DT	O	(explicitanon1<root> / Britain  :op1-of (n / --LEX--  :name-of (c<mod>)))	name	(mod())	6	MOD_mod	true
2	Spanish	_name_	spanish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	country	(mod())	3	MOD_mod	true
3	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	will	_	will	MD	O	_	name	_	0	IGNORE	true
5	surely	_	surely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	sure-02	(s())	6	MOD_s	true
6	end	_	end	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-up-03	(o(s()))	0	ROOT	true
7	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
8	being	_	be	VBG	O	_	person	_	0	IGNORE	true
9	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	10	MOD_mod	true
10	costly	_	costly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_o	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	European	_name_	european	JJ	O	(n<root> / --LEX--  :name-of (c2 / continent  :location-of (c<mod>)))	_NAME_	(mod())	18	MOD_mod	true
14	countries,	_	countries,	NNP	O	_	and	_	0	IGNORE	true
15	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
16	France,	_name_	France,	NNP	O	_	name	_	0	IGNORE	true
17	who	_	who	WP	O	_	name	_	0	IGNORE	true
18	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	6	MOD_o	true
19	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	expelling	_	expel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op1	true
21	inciting	_	incite	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	preachers	_	preacher	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	MOD_s	true
24	forbidding	_	forbid	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op2	true
25	veils	_	veil	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
27	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
28	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
29	who	_	who	WP	O	_	person	_	0	IGNORE	true
30	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	28	MOD_s	true
31	troops	_	troop	NNS	O	(d<root> / --LEX--)	troop	()	30	APP_o	true
32	to	_	to	IN	O	_	person	_	0	IGNORE	true
33	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	30	APP_o2	true
34	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[12@@p@@other, 25@@d@@veil, 13@@n@@_NAME_, 24@@s@@forbid-01, 6@@o@@end-up-03, 1@@n@@name, 28@@d@@other, 19@@n@@now, 27@@s@@include-01, 3@@d@@story, 31@@d@@troop, 9@@s@@extreme, 15@@s@@include-01, 5@@s@@sure-02, 20@@s@@expel-01, 18@@s@@person, 30@@b@@send-01, 33@@c@@country, 1@@explicitanon1@@Britain, 23@@a@@and, 21@@s@@incite-01, 2@@p@@country, 22@@d@@preacher, 10@@s@@costly, 13@@c2@@continent, 33@@n@@_NAME_]
sentence=1	According	according	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	0	ROOT	true
2	to	_	to	IN	O	_	say-01	_	0	IGNORE	true
3	senior	_	senior	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	counter	_	counter	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	terrorism	_	terrorism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
6	officials,	_	officials,	NNS	O	_	include-91	_	0	IGNORE	true
7	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
9	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_op1	true
10	abroad,	_	abroad,	NNS	O	_	include-91	_	0	IGNORE	true
11	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
13	supporters	_	supporter	NNS	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	support-01	(mod(), s(), o())	1	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	17	MOD_mod	true
16	militant	_	militant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	islamists	_	islamist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	1	APP_o	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	blended	_	blend	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	into	_	into	IN	O	_	-	_	0	IGNORE	true
23	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	were	_	be	VBD	O	_	person	_	0	IGNORE	true
26	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	19	MOD_s	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	act	_	act	VB	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-02	(mod(), s())	26	MOD_mod	true
29	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
30	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	part	_	part	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	35	APP_s	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	network	_	network	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_poss	true
35	requested	_	request	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	28	MOD_mod	true
36	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@b@@and, 13@@c2@@support-01, 8@@d@@here, 35@@v@@request-01, 3@@p@@senior, 15@@p@@this, 28@@b@@act-02, 34@@d@@network, 19@@d@@person, 23@@d@@society, 30@@p@@another, 16@@p@@militant, 17@@d@@islamist, 5@@d@@terrorism, 26@@s@@available-02, 31@@h@@part, 21@@s@@blend-01, 4@@s@@counter-01, 1@@s@@say-01]
sentence=1	An_early_September_2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	2003	(mod())	4	MOD_mod	true
2	Newsweek	_name_	Newsweek	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	article	_	article	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
4	included	_	include	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	rumor	_	rumor	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
7	by	_	by	IN	O	_	name	_	0	IGNORE	true
8	a	_	a	DT	O	_	name	_	0	IGNORE	true
9	Taliban	_name_	Taliban	NNP	O	(c2<root> / criminal-organization  :name (n2 / --LEX--)  :mod-of (m<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	source	_	source	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	at	_	at	IN	O	_	person	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	meeting	_	meeting	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	meet-03	(mod())	19	MOD_mod	true
15	in	_	in	IN	O	_	12	_	0	IGNORE	true
16	April_2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
17	Bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	planning	_	plan	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
20	an	_	an	DT	O	_	1	_	0	IGNORE	true
21	"unbelievable"	_	"unbelievable"	NNP	O	_	and	_	0	IGNORE	true
22	biological	_	biological	JJ	O	(d<root> / --LEX--)	biology	()	19	APP_o	true
23	attack,	_	attack,	VBZ	O	_	and	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	plans	_	plan	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
26	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
27	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
28	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
29	suffered	_	suffer	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
30	a	_	a	DT	O	_	1	_	0	IGNORE	true
31	setback	_	setback	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
32	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
34	arrest	_	arrest	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	Khalid_Shaikh_Mohammed	_name_	Mohammed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
37	("KSM")	("ksm")	("KSM")	NNP	O	_	name	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@p@@person, 36@@p@@person, 2@@n@@_NAME_, 22@@d@@biology, 25@@s@@plan-01, 9@@n2@@_NAME_, 10@@d@@source, 29@@s@@suffer-01, 16@@explicitanon0@@_NUMBER_, 19@@s@@plan-01, 17@@n@@_NAME_, 6@@s@@rumor-01, 9@@c2@@criminal-organization, 3@@d@@article, 4@@s@@include-01, 1@@explicitanon0@@2003, 34@@s@@arrest-01, 31@@d@@setback, 36@@n@@_NAME_, 14@@n@@meet-03]
sentence=1	On	on	on	IN	O	_	cause-01	_	0	IGNORE	true
2	August	_name_	August	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	8	(mod())	3	MOD_mod	true
3	9,	_	9,	CD	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	1	(mod())	7	MOD_mod	true
4	2004,	_name_	2004,	CD	O	_	and	_	0	IGNORE	true
5	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	announced	_	announce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	in	_	in	IN	O	_	person	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Spring	spring	spring	NN	O	(d2<root> / date-entity  :season (s / --LEX--)  :time-of (t<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	2001,	_	2001,	CD	O	_	and	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
16	named	_	name	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
17	El-Shukrijumah,	_name_	El-Shukrijumah,	NFP	O	_	person	_	0	IGNORE	true
18	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	Jafar_the_Pilot,	_name_	pilot,	NN	O	_	_NAME_	_	0	IGNORE	true
22	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	part	_	part	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	15	MOD_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	"second	_	"second	XX	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	wave,"	_	wave,"	NNP	O	_	and	_	0	IGNORE	true
29	had	_	have	VBD	O	_	person	_	0	IGNORE	true
30	been	_	be	VBN	O	_	person	_	0	IGNORE	true
31	casing	_	case	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
32	New_York_City	_name_	City	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	33	MOD_mod	true
33	helicopters	_	helicopter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@spring, 2@@explicitanon1@@8, 24@@s@@part, 27@@d@@"second, 33@@d@@helicopter, 19@@s@@know-02, 3@@explicitanon4@@1, 7@@s@@announce-01, 32@@n@@_NAME_, 18@@p@@also, 15@@d@@man, 11@@d2@@date-entity, 32@@c@@city, 31@@s@@case-01]
sentence=1	"The	"the	"the	DT	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
2	Prophet's	prophet's	Prophet's	NNP	O	_	_NAME_	_	0	IGNORE	true
3	guidance,"	_	guidance,"	NNP	O	_	publication-91	_	0	IGNORE	true
4	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Michael_Scheuer,	_name_	Scheuer,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
6	an	_	an	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
7	al-Qaeda	_name_	al-qaeda	JJ	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
8	analyst	_	analyst	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	analyze-01	(s(), o())	4	MOD_s	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	11	MOD_mod	true
11	retired	_	retire	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	from	_	from	IN	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	CIA	_name_	CIA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
15	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	once	_	once	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	headed	_	head	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	its	_	its	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
19	Bin_Laden	_name_	Laden	NNP	O	(d<root> / --LEX--)	_NAME_	()	17	APP_o	true
20	unit,	_	unit,	.	O	_	and	_	0	IGNORE	true
21	"was	_	"was	NNP	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
22	always,	_	always,	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
23	Before	before	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	40	MOD_mod	true
24	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
25	attack	_	attack	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op1	true
26	someone,	_	someone,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	4	MOD_s	true
27	warn	_	warn	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
28	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	clearly..."	_	clearly..."	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	mean-01	(mod())	4	MOD_mod	true
31	The	the	the	DT	O	_	person	_	0	IGNORE	true
32	anthrax	_	anthrax	NN	O	(d<root> / --LEX--)	_NAME_	()	33	APP_s	true
33	mailings	_	mailing	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_s	true
34	followed	_	follow	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	pattern	_	pattern	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	34	APP_o	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	letters	_	letter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
39	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
40	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	38	MOD_s	true
41	in	_	in	IN	O	_	10	_	0	IGNORE	true
42	January_1997	_name_	1997	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	40	MOD_mod	true
43	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
44	newspaper	_	newspaper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	branches	_	branch	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
46	in	_	in	IN	O	_	i	_	0	IGNORE	true
47	Washington,	washington,	washington,	CD	O	_	_NAME_	_	0	IGNORE	true
48	D.C.	_name_	D.C.	NNP	O	_	_NAME_	_	0	IGNORE	true
49	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	45	MOD_mod	true
50	New_York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	49	APP_op1	true
51	City,	_name_	City,	NNP	O	_	and	_	0	IGNORE	true
52	as	_	as	RB	O	_	and	_	0	IGNORE	true
53	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
54	as	_	as	IN	O	_	and	_	0	IGNORE	true
55	symbolic	_	symbolic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	symbolize-01	(mod())	56	MOD_mod	true
56	targets	_	target	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_op2	true
57	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@n@@recent, 11@@s@@retire-01, 4@@s@@say-01, 19@@d@@_NAME_, 50@@c@@city, 32@@d@@_NAME_, 39@@d@@they, 8@@s@@analyze-01, 26@@s@@and, 24@@d@@you, 30@@p@@mean-01, 17@@s@@head-01, 14@@g@@government-organization, 14@@n@@_NAME_, 29@@s@@very, 40@@s@@send-01, 42@@explicitanon0@@_NUMBER_, 55@@p@@symbolize-01, 44@@p@@newspaper, 56@@d@@target, 33@@s@@mailing-01, 49@@b@@and, 27@@s@@warn-01, 45@@d@@branch, 38@@d@@letter, 7@@n@@_NAME_, 23@@w@@before, 7@@c2@@criminal-organization, 34@@s@@follow-01, 1@@n@@_NAME_, 36@@s@@pattern, 50@@n@@_NAME_, 25@@d@@attack-01, 16@@n@@once]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	an	_	an	DT	O	_	thing	_	0	IGNORE	true
4	e-mail	_	e-mail	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	by	_	by	IN	O	_	write-01	_	0	IGNORE	true
6	Moussaoui,_however,_dated	_name_	date	VBD	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
7	July	july	July	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	7	(mod())	4	MOD_mod	true
8	31,	_	31,	NNP	O	_	and	_	0	IGNORE	true
9	2001	_	2001	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
10	indicating	_	indicate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
11	that	_	that	IN	O	_	and	_	0	IGNORE	true
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	sought	_	seek	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
16	a	_	a	DT	O	_	thing	_	0	IGNORE	true
17	crop	_	crop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	dusting	_	dusting	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	19	MOD_mod	true
19	course	_	course	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	was	_	be	VBD	O	_	date-interval	_	0	IGNORE	true
22	to	_	to	TO	O	_	name	_	0	IGNORE	true
23	last	_	last	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
24	up_to_6_months	_name_	month	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	23	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@t@@temporal-quantity, 6@@d@@_NAME_, 19@@d@@course, 23@@s@@last-01, 7@@d@@date-entity, 17@@d@@crop, 7@@explicitanon0@@7, 15@@s@@take-01, 18@@r@@dusting-01, 4@@s@@e-mail-01, 24@@m@@month, 9@@explicitanon0@@_NUMBER_, 13@@s@@seek-01, 10@@s@@indicate-01]
sentence=1	Although	although	although	IN	O	_	have-concession-91	_	0	IGNORE	true
2	Ramzi_Binalshibh	_name_	Binalshibh	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	provided	_	provide	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_o2	true
4	him	_	he	PRP	O	_	and	_	0	IGNORE	true
5	$14,000	_	$14,000	NNP	O	(d<root> / --LEX--)	_NUMBER_	()	3	APP_o	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	July,	_name_	July,	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
8	accused	_	accuse	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
9	September_11	_name_	11	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	conspirator	_	conspirator	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	11	MOD_s	true
11	Zacarias_Moussaoui	_name_	Moussaoui	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
12	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
13	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	trial	_	trial	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	try-02	(mod())	15	MOD_mod	true
15	judge	_	judge	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o2	true
16	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	he	_	he	PRP	O	_	person	_	0	IGNORE	true
18	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	APP_o	true
19	an	_	an	DT	O	_	thing	_	0	IGNORE	true
20	al_Qaeda	_name_	Qaeda	NNP	O	(n2<root> / --LEX--  :name-of (c2 / criminal-organization  :mod-of (s<mod>)))	_NAME_	(mod())	21	MOD_mod	true
21	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	would	_	would	MD	O	_	name	_	0	IGNORE	true
24	have	_	have	VB	O	_	person	_	0	IGNORE	true
25	come	_	come	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
26	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	terrorist	_	terrorist	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	attacks	_	attack	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op1	true
30	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@p@@person, 3@@b@@provide-01, 15@@d@@judge-01, 2@@p@@person, 20@@c2@@criminal-organization, 26@@w@@after, 14@@p@@try-02, 9@@n@@_NAME_, 12@@b@@tell-01, 7@@d@@date-entity, 28@@d@@terrorist, 2@@n@@_NAME_, 18@@s@@have-03, 25@@s@@come-01, 20@@n2@@_NAME_, 8@@s@@accuse-01, 11@@n@@_NAME_, 10@@s@@conspirator, 7@@explicitanon2@@_NUMBER_, 5@@d@@_NUMBER_, 21@@d@@mission, 29@@s@@attack-01]
sentence=1	Al_Qaeda's	_name_	Qaeda's	NNP	O	_	_NAME_	_	0	IGNORE	true
2	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	3	MOD_mod	true
3	operative,	_	operative,	NNP	O	(d<root> / --LEX--)	have-org-role-91	()	17	APP_s	true
4	Hambali,	_name_	Hambali,	NNP	O	_	_NAME_	_	0	IGNORE	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	17	MOD_s	true
7	at	_	at	IN	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	person	_	0	IGNORE	true
9	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
10	January_2000	_name_	2000	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	11	MOD_mod	true
11	meeting	_	meeting	NN	O	(d<root> / --LEX--)	meet-03	()	6	APP_o	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	supervised	_	supervised	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
14	Sufaat,	_name_	sufaat,	CD	O	_	_NAME_	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	and	_	0	IGNORE	true
16	been	_	be	VBN	O	_	and	_	0	IGNORE	true
17	captured	_	capture	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
18	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[10@@explicitanon2@@_NUMBER_, 3@@d@@have-org-role-91, 2@@p@@region, 13@@s@@supervised-01, 6@@s@@be-located-at-91, 11@@d@@meet-03, 10@@d@@date-entity, 9@@s@@key-02, 17@@s@@capture-01]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
3	require	_	require	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	who	_	who	WP	O	_	capable-01	_	0	IGNORE	true
6	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	MOD_s	true
7	access	_	access	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	to	_	to	IN	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
10	strain	_	strain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
11	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@d@@that, 10@@d@@strain-01, 3@@s@@require-01, 6@@s@@have-03, 4@@d@@someone, 7@@s@@access-01]
sentence=1	The_Wall_Street_Journal	_name_	Journal	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	2	APP_s	true
2	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	1	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	computer	_	computer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
6	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
7	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	Zawahiri	_name_	Zawahiri	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
9	contains	_	contain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	June_1999	_name_	1999	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
12	memo	_	memo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	that	_	that	IN	O	_	name	_	0	IGNORE	true
14	"said	_	"said	XX	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	program	_	program	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	should	_	should	MD	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	recommend-01	(mod(), s())	9	MOD_mod	true
18	seek	_	seek	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
19	cover	_	cover	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
21	talent	_	talent	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
22	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
23	educational	_	educational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	educate-01	(mod())	18	MOD_mod	true
24	institutions,	_	institutions,	NNS	O	_	and	_	0	IGNORE	true
25	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
28	were	_	be	VBD	O	_	person	_	0	IGNORE	true
29	'more	_	'more	RB	O	_	$LEMMA$	_	0	IGNORE	true
30	beneficial	_	beneficial	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	benefit-01	(s())	23	MOD_s	true
31	to	_	to	IN	O	_	thing	_	0	IGNORE	true
32	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	MOD_op1	true
34	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_op2	true
35	easy	_	easy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	36	MOD_s	true
36	access	_	access	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_s	true
37	to	_	to	IN	O	_	and	_	0	IGNORE	true
38	specialists,	_	specialists,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
39	which	_	which	WDT	O	_	i	_	0	IGNORE	true
40	will	_	will	MD	O	_	thing	_	0	IGNORE	true
41	greatly	_	greatly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	great	(mod())	42	MOD_mod	true
42	benefit	_	benefit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	MOD_s	true
43	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
44	in	_	in	IN	O	_	i	_	0	IGNORE	true
45	the	_	the	DT	O	_	person	_	0	IGNORE	true
46	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	42	MOD_mod	true
47	stage,	_	stage,	.	O	_	mean-01	_	0	IGNORE	true
48	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	42	APP_o	true
49	willing.'	_name_	willing.'	NNP	O	_	-	_	0	IGNORE	true
50	'	_	'	''	O	_	expressive	_	0	IGNORE	true
51	'	_	'	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[20@@a@@and, 18@@s@@seek-01, 27@@s@@say-01, 30@@s@@benefit-01, 16@@d@@program, 41@@s@@great, 42@@s@@benefit-01, 9@@s@@contain-01, 5@@d@@computer, 46@@explicitanon0@@1, 33@@a@@and, 36@@d@@access-01, 11@@d@@date-entity, 19@@d@@cover, 2@@s@@report-01, 1@@n@@newspaper, 34@@s@@allow-01, 6@@s@@use-01, 23@@p@@educate-01, 21@@d@@talent, 12@@d@@memo, 48@@n@@_NAME_, 8@@p@@person, 17@@r@@recommend-01, 8@@n@@_NAME_, 46@@o@@ordinal-entity, 1@@n2@@_NAME_, 35@@s@@easy-05, 11@@explicitanon2@@_NUMBER_, 48@@p@@person]
sentence=1	According	according	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	0	ROOT	true
2	to	_	to	IN	O	_	say-01	_	0	IGNORE	true
3	senior	_	senior	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	counter	_	counter	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	terrorism	_	terrorism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
6	officials,	_	officials,	NNS	O	_	include-91	_	0	IGNORE	true
7	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
9	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_op1	true
10	abroad,	_	abroad,	NNS	O	_	include-91	_	0	IGNORE	true
11	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
13	supporters	_	supporter	NNS	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	support-01	(mod(), s(), o())	1	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	17	MOD_mod	true
16	militant	_	militant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	islamists	_	islamist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	1	APP_o	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	blended	_	blend	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	into	_	into	IN	O	_	-	_	0	IGNORE	true
23	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	were	_	be	VBD	O	_	person	_	0	IGNORE	true
26	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	19	MOD_s	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	act	_	act	VB	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-02	(mod(), s())	26	MOD_mod	true
29	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
30	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	part	_	part	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	35	APP_s	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	network	_	network	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_poss	true
35	requested	_	request	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	28	MOD_mod	true
36	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@d@@islamist, 23@@d@@society, 3@@p@@senior, 26@@s@@available-02, 13@@c2@@support-01, 16@@p@@militant, 30@@p@@another, 5@@d@@terrorism, 15@@p@@this, 34@@d@@network, 21@@s@@blend-01, 1@@s@@say-01, 19@@d@@person, 9@@b@@and, 31@@h@@part, 4@@s@@counter-01, 8@@d@@here, 28@@b@@act-02, 35@@v@@request-01]
sentence=1	A	a	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
2	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	3	MOD_mod	true
3	released	_	release	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	islamist	_	islamist	NN	O	(r<root> / religious-group  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	had	_	have	VBD	O	_	person	_	0	IGNORE	true
7	been	_	be	VBN	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-13	(s())	10	MOD_s	true
10	associate	_	associate	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
11	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Zawahiri	_name_	Zawahiri	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	that	_	that	IN	O	_	and	_	0	IGNORE	true
15	Zawahiri	_name_	Zawahiri	NNP	O	_	_NAME_	_	0	IGNORE	true
16	spent	_	spend	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_op1	true
17	a_decade	_name_	decade	NN	O	(d<root> / --LEX--)	_NAME_	()	16	APP_s	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
19	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
20	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
21	15	_	15	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	23	MOD_mod	true
22	separate	_	separate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	attempts	_	attempt	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
24	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
25	recruit	_	recruit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	necessary	_	necessary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	28	MOD_s	true
28	expertise	_	expertise	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
29	to	_	to	TO	O	_	thing	_	0	IGNORE	true
30	weaponize	_	weaponize	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	27	MOD_mod	true
31	anthrax	_	anthrax	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
32	in	_	in	IN	O	_	after	_	0	IGNORE	true
33	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	34	APP_op1	true
34	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	30	MOD_mod	true
35	the_Middle_East	_name_	East	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	34	APP_op2	true
36	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[4@@r@@religious-group, 12@@p@@person, 25@@s@@recruit-01, 18@@a@@and, 34@@b@@and, 4@@n@@_NAME_, 21@@explicitanon0@@_NUMBER_, 33@@n@@_NAME_, 23@@s@@attempt-01, 28@@d@@expertise, 30@@i@@weaponize-01, 17@@d@@_NAME_, 3@@s@@release-01, 33@@c@@country, 16@@s@@spend-02, 35@@w@@world-region, 2@@n@@recent, 27@@s@@need-01, 22@@s@@separate-02, 35@@n2@@_NAME_, 31@@d@@anthrax, 13@@s@@say-01, 12@@n@@_NAME_, 10@@s@@associate-01, 9@@s@@close-13]
sentence=1	Significantly,	significantly,	significantly,	CD	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	individual	_	individual	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
4	who	_	who	WP	O	_	person	_	0	IGNORE	true
5	isolated	_	isolate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	nearly_a_quarter_century_ago	_name_	ago	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	(now	_	(now	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
9	retired),	_	retired),	XX	O	_	cause-01	_	0	IGNORE	true
10	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	being	_	be	VBG	O	_	person	_	0	IGNORE	true
12	contacted,	_	contacted,	VBN	O	_	and	_	0	IGNORE	true
13	does	_	do	VBZ	O	_	-	_	0	IGNORE	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
15	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	report	_	report	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
17	that	_	that	IN	O	_	1	_	0	IGNORE	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	necessarily	_	necessarily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	20	MOD_s	true
20	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	copy	_	copy	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	20	APP_s	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	strain	_	strain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
27	to	_	to	IN	O	_	-	_	0	IGNORE	true
28	Ft._Detrick	_name_	Detrick	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
29	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[23@@t@@thing, 16@@s@@report-01, 26@@d@@strain, 7@@n@@_NAME_, 19@@s@@need-01, 5@@s@@isolate-01, 14@@explicitanon0@@-, 22@@p@@only, 23@@c@@copy-01, 15@@p@@even, 28@@p@@person, 20@@s@@send-01, 6@@d@@it, 3@@d@@individual, 28@@n@@_NAME_, 8@@p@@_NAME_]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	Fall_2004,	_name_	2004,	CD	O	_	and	_	0	IGNORE	true
3	MSNBC,	msnbc,	msnbc,	RB	O	_	_NAME_	_	0	IGNORE	true
4	relying	_	rely	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
5	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
6	an	_	an	DT	O	_	1	_	0	IGNORE	true
7	unnamed	_	unnamed	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	name-01	(s())	8	MOD_s	true
8	FBI	_name_	FBI	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
9	spokesperson,	_	spokesperson,	NNP	O	_	and	_	0	IGNORE	true
10	reports	_	report	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	that	_	that	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	FBI	_name_	FBI	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
15	narrowed	_	narrow	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_s	true
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
17	pool	_	pool	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	labs	_	lab	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_s	true
24	Ames	_name_	Ames	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
25	that	_	that	WDT	O	_	name	_	0	IGNORE	true
26	was	_	be	VBD	O	_	possible-01	_	0	IGNORE	true
27	a	_	a	DT	O	_	1	_	0	IGNORE	true
28	match	_	match	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
29	from	_	from	IN	O	_	year	_	0	IGNORE	true
30	16	_	16	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	15	APP_o	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	4	_	4	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	30	MOD_mod	true
33	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	10	APP_o	true
34	cannot	_	cannot	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	33	APP_o	true
35	rule	_	rule	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-02	(s())	34	APP_s	true
36	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
37	that	_	that	IN	O	_	thing	_	0	IGNORE	true
38	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	was	_	be	VBD	O	_	person	_	0	IGNORE	true
40	made	_	make	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_s	true
41	overseas	_	overseas	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
42	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[32@@p@@_NUMBER_, 7@@n@@name-01, 4@@s@@rely-01, 10@@s@@report-01, 8@@g@@government-organization, 15@@s@@narrow-01, 8@@n@@_NAME_, 7@@explicitanon0@@-, 35@@s@@rule-out-02, 28@@s@@match-01, 20@@s@@know-01, 17@@s@@pool-01, 33@@s@@contrast-01, 34@@s@@possible-01, 41@@b@@overseas, 24@@d@@Ames, 40@@d@@make-01, 23@@s@@have-03, 19@@d@@lab, 30@@explicitanon0@@_NUMBER_, 30@@t@@temporal-quantity]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	reported	_	reported	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	finding	_	finding	NN	O	(d<root> / --LEX--)	find-01	()	6	APP_s	true
4	at	_	at	IN	O	_	and	_	0	IGNORE	true
5	Dugway	dugway	Dugway	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	undermines	_	undermine	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	argument	_	argument	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	argue-01	(s())	6	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	both	_	both	PDT	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	atom	_	0	IGNORE	true
12	"bomb	_	"bomb	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	bomb	(mod())	14	MOD_mod	true
13	Iraq"	iraq"	Iraq"	NNP	O	_	and	_	0	IGNORE	true
14	crowd	_	crowd	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
16	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
17	liberals	_	liberal	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$-02	()	15	APP_op2	true
18	focused	_	focus	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
19	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
20	Dr.	dr.	Dr.	NNP	O	_	governor	_	0	IGNORE	true
21	Steve_Hatfill	_name_	Hatfill	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
22	who	_	who	WP	O	_	name	_	0	IGNORE	true
23	object	_	object	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	MOD_s	true
24	to	_	to	IN	O	_	name	_	0	IGNORE	true
25	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	27	APP_s	true
26	biodefense	_	biodefense	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	research	_	research	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_o	true
28	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	23	MOD_o	true
29	they	_	they	PRP	O	_	person	_	0	IGNORE	true
30	view	_	view	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	APP_s	true
31	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
33	being	_	be	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	6	MOD_o	true
34	useful	_	useful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	30	APP_s	true
35	for	_	for	IN	O	_	thing	_	0	IGNORE	true
36	offensive	_	offensive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	offend-01	(mod())	37	MOD_mod	true
37	purposes	_	purpose	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
38	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[5@@c@@city, 25@@n@@_NAME_, 15@@a@@and, 33@@s@@person, 28@@s@@cause-01, 25@@c@@country, 36@@p@@offend-01, 2@@s@@reported-01, 30@@s@@view-02, 3@@d@@find-01, 37@@d@@purpose, 27@@s@@research-01, 6@@s@@undermine-01, 18@@s@@focus-01, 26@@p@@biodefense, 21@@p@@person, 12@@p@@bomb, 5@@n@@_NAME_, 17@@p@@person, 14@@d@@crowd, 17@@l@@liberal-02, 34@@s@@useful-05, 8@@s@@argue-01, 23@@s@@object-01, 21@@n@@_NAME_]
sentence=1	Zacarias_Moussaoui,	_name_	Moussaoui,	NNP	O	_	person	_	0	IGNORE	true
2	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	MOD_s	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	crop	_	crop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	dusting	_	dusting	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
7	manual	_	manual	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	when	_	when	WRB	O	_	i	_	0	IGNORE	true
9	he	_	he	PRP	O	_	have-rel-role-91	_	0	IGNORE	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	arrested,	_	arrested,	NNP	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
13	at	_	at	IN	O	_	and	_	0	IGNORE	true
14	Sufaat's	sufaat's	Sufaat's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_poss	true
15	condominium	_	condominium	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	12	APP_s	true
16	in	_	in	IN	O	_	person	_	0	IGNORE	true
17	2000	_name_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	12	MOD_mod	true
18	when	_	when	WRB	O	_	i	_	0	IGNORE	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	was	_	be	VBD	O	_	person	_	0	IGNORE	true
21	trying	_	try	VBG	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	12	MOD_mod	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	arrange	_	arrange	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
24	for	_	for	IN	O	_	and	_	0	IGNORE	true
25	flight	_	flight	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	fly-01	(mod())	26	MOD_mod	true
26	lessons	_	lesson	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	Malaysia	_name_	Malaysia	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	26	MOD_mod	true
29	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[26@@d@@lesson, 14@@n@@_NAME_, 21@@s2@@try-01, 14@@p@@person, 5@@d@@crop, 11@@explicitanon0@@arrested,, 3@@s@@have-03, 28@@n@@_NAME_, 12@@s@@stay-01, 6@@i@@dusting-01, 17@@explicitanon0@@_NUMBER_, 15@@m@@condominium, 17@@d@@date-entity, 28@@c@@country, 25@@p@@fly-01, 7@@d@@manual, 23@@s@@arrange-01]
sentence=1	Yet	yet	yet	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	read	_	read	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	about	_	about	IN	O	_	thing	_	0	IGNORE	true
6	at	_	at	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	was	_	be	VBD	O	_	have-concession-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	arrest	_	arrest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	son	_	son	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	15	MOD_s	true
15	Ahmed_Abdul_Qadoos,	_name_	Qadoos,	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
16	who	_	who	WP	O	_	name	_	0	IGNORE	true
17	receives	_	receive	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	14	MOD_s	true
18	a	_	a	DT	O	_	-	_	0	IGNORE	true
19	stipend	_	stipend	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	from	_	from	IN	O	_	and	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	UN	_name_	UN	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	17	APP_o2	true
23	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
24	being	_	be	VBG	O	_	person	_	0	IGNORE	true
25	officially	_	officially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	official	(mod())	26	MOD_mod	true
26	low-IQ	low-iq	low-iq	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	27	MOD_mod	true
27	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	17	MOD_o	true
28	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
29	lead	_	lead	VB	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	poisoning	_	poisoning	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	poison-01	(s())	27	APP_s	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@b@@son, 8@@n@@time, 29@@d@@lead, 2@@p@@all, 14@@h@@have-rel-role-91, 19@@d@@stipend, 25@@p@@official, 27@@s@@cause-01, 26@@p@@_NAME_, 4@@s@@read-01, 30@@s@@poison-01, 22@@n@@_NAME_, 22@@o2@@organization, 3@@d@@you, 11@@d@@arrest-01, 15@@n@@_NAME_, 17@@b@@receive-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	Khalid_Mohammed	_name_	Mohammed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
5	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
6	authorities	_	authority	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
7	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	Aafia_Siddiqui,	_name_	Siddiqui,	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
9	who	_	who	WP	O	_	name	_	0	IGNORE	true
10	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
11	a	_	a	DT	O	_	person	_	0	IGNORE	true
12	PhD	_name_	phd	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	Brandeis	_name_	Brandeis	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	in	_	in	IN	O	_	name	_	0	IGNORE	true
16	neurology	_	neurology	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@have-03, 6@@d@@authority, 5@@b@@tell-01, 14@@c@@city, 12@@d@@phd, 3@@p@@person, 3@@n@@_NAME_, 16@@p@@neurology, 14@@n@@_NAME_, 8@@n@@_NAME_, 8@@p@@person]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	have	_	have	VB	O	_	person	_	0	IGNORE	true
4	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
5	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
6	in	_	in	IN	O	_	name	_	0	IGNORE	true
7	Hamilton,	hamilton,	hamilton,	CD	O	_	include-91	_	0	IGNORE	true
8	Canada	_name_	Canada	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	5	MOD_mod	true
9	--	_	--	:	O	_	and	_	0	IGNORE	true
10	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	Egyptian	_name_	Egyptian	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	al-Maati,	al-maati,	al-maati,	XX	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	_NAME_	(mod())	2	MOD_mod	true
14	who	_	who	WP	O	_	name	_	0	IGNORE	true
15	apparently	_	apparently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	apparent	(s())	20	MOD_s	true
16	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
17	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
18	received	_	receive	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
19	pilot	_	pilot	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
20	training	_	training	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	train-01	(s(), o())	18	APP_o	true
21	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[13@@y@@_NAME_, 20@@s@@train-01, 5@@s@@see-01, 12@@c@@country, 8@@c@@country, 15@@s@@apparent, 1@@d@@He, 16@@p@@also, 18@@c@@receive-01, 12@@n@@_NAME_, 2@@s@@possible-01, 8@@n@@_NAME_, 19@@d@@pilot]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	late	_	late	JJ	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
3	September	september	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	9	()	2	APP_op1	true
4	2001,	_	2001,	CD	O	_	and	_	0	IGNORE	true
5	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	announced	_	announce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	that	_	that	IN	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	12	APP_s	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	seeking	_	seek	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_s	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	blanket	_	blanket	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	waiver	_	waiver	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	waive-01	(s())	12	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
18	lift	_	lift	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
19	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	restrictions	_	restriction	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	restrict-01	(s())	18	APP_o	true
21	on	_	on	IN	O	_	-	_	0	IGNORE	true
22	aid	_	aid	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	20	APP_s	true
23	to	_	to	IN	O	_	person	_	0	IGNORE	true
24	military	_	military	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_poss	true
26	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	units	_	unit	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	22	APP_s	true
28	in	_	in	IN	O	_	person	_	0	IGNORE	true
29	connection	_	connection	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	connect-01	(s(), o())	7	MOD_s	true
30	with	_	with	IN	O	_	-	_	0	IGNORE	true
31	pursuing	_	pursue	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_o	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	militant	_	militant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	islamists	_	islamist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[34@@d@@islamist, 26@@p@@security, 22@@s@@aid-01, 20@@s@@restrict-01, 2@@w@@late, 29@@s@@connect-01, 33@@p@@militant, 10@@h@@have-org-role-91, 31@@s@@pursue-01, 25@@d@@and, 10@@e@@President, 7@@s@@announce-01, 24@@p@@military, 19@@p@@all, 15@@s@@waive-01, 3@@d@@date-entity, 27@@m@@unit, 18@@s@@lift-01, 10@@p@@person, 14@@p@@blanket, 3@@explicitanon0@@9, 12@@c@@seek-01]
sentence=1	The	the	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
2	purpose	_	purpose	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	have-$LEMMA$-91	(o(s()))	0	ROOT	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	letter	_	letter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	bombs	_	bomb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
7	--	_	--	:	O	_	cause-01	_	0	IGNORE	true
8	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
9	resulted	_	result	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
11	minimal	_	minimal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	MOD_s	true
12	casualty	_	casualty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	--	_	--	:	O	_	cause-01	_	0	IGNORE	true
14	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
15	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
16	send	_	send	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@p@@letter, 18@@d@@message, 9@@s@@result-01, 12@@d@@casualty, 11@@s@@minimal, 6@@d@@bomb, 16@@s@@send-01, 2@@o@@have-purpose-91]
sentence=1	According	according	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	0	ROOT	true
2	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	controversial	_	controversial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	"Feith	"feith	"Feith	.	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	true
6	memo,"	_	memo,"	ADD	O	_	include-91	_	0	IGNORE	true
7	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	summarized	_	summarize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	purported	_	purported	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	10	MOD_s	true
10	intelligence	_	intelligence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	showing	_	show	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	an	_	an	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
13	Iraqi/Al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	connection,	_	connection,	.	O	_	name	_	0	IGNORE	true
15	Osama_Bin_Laden	_name_	Laden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
16	had	_	have	VBD	O	_	person	_	0	IGNORE	true
17	asked	_	ask	VBN	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o(s_UNIFY_o2()))	1	APP_o	true
18	Iraqi	_name_	iraqi	JJ	O	_	_NAME_	_	0	IGNORE	true
19	intelligence	_	intelligence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o2	true
20	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	technical	_	technical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	assistance	_	assistance	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	assist-01	(s(), o())	17	APP_o	true
23	in	_	in	IN	O	_	thing	_	0	IGNORE	true
24	sending	_	send	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
25	letter	_	letter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	bombs	_	bomb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	a_half_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	17	MOD_mod	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	Al_Hayat	_name_	Hayat	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	31	MOD_mod	true
31	letters	_	letter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
32	were	_	be	VBD	O	_	person	_	0	IGNORE	true
33	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op1	true
34	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[24@@s@@send-01, 4@@p@@controversial, 21@@p@@technical, 8@@s@@summarize-01, 10@@d@@intelligence, 11@@s@@show-01, 9@@s@@allege-01, 1@@s@@say-01, 13@@c2@@criminal-organization, 31@@d@@letter, 25@@p@@letter, 19@@d@@intelligence, 5@@d@@_NAME_, 26@@d@@bomb, 27@@n@@year, 22@@t@@assist-01, 13@@n@@_NAME_, 33@@s@@send-01, 30@@n@@_NAME_, 17@@w@@ask-02, 15@@n@@_NAME_, 28@@w@@before, 15@@p@@person]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	sender	_	sender	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	hijack-01	()	5	APP_s	true
3	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	5	MOD_mod	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	announcing	_	announce	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	that	_	that	IN	O	_	have-mod-91	_	0	IGNORE	true
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	Egyptian	_name_	egyptian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
12	Islamic	islamic	islamic	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	Jihad,_Egyptian_Islamic_Group	_name_	Group	NNP	O	(d<root> / --LEX--)	_NAME_	()	14	APP_op1	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o	true
15	Jihad-al	jihad-al	Jihad-al	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	14	APP_op2	true
16	Qaeda,	qaeda,	Qaeda,	NFP	O	_	and	_	0	IGNORE	true
17	which	_	which	WDT	O	_	i	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	22	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	name	_	name	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	14	MOD_s	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	group	_	group	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	22	MOD_mod	true
27	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
28	merger	_	merger	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	merge-01	(s())	26	APP_op1	true
29	of	_	of	IN	O	_	person	_	0	IGNORE	true
30	the_Egyptian_Islamic_Jihad	_name_	Jihad	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
32	al_Qaeda	_name_	Qaeda	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	31	APP_op2	true
33	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[32@@n@@_NAME_, 30@@n@@_NAME_, 12@@r@@religious-group, 30@@o2@@organization, 32@@c2@@criminal-organization, 11@@n@@_NAME_, 21@@p@@full, 31@@a@@and, 14@@a@@or, 2@@p2@@person, 22@@s@@name-01, 15@@o2@@organization, 5@@s@@announce-01, 3@@p@@probable, 2@@e2@@hijack-01, 19@@s@@actual-02, 15@@n@@_NAME_, 28@@s@@merge-01, 11@@c@@country, 12@@n@@_NAME_, 13@@d@@_NAME_, 26@@w@@after]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	Hadith	_name_	Hadith	NNP	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
5	Messenger	messenger	Messenger	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	of	_	of	IN	O	_	person	_	0	IGNORE	true
7	Allah	allah	Allah	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	explains	_	explain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	souls	_	soul	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	15	APP_s	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	martyrs	_	martyr	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_poss	true
15	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	8	APP_o	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
18	hearts	_	heart	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	11	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	green	_	green	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	MOD_s	true
21	birds	_	bird	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_poss	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	fly	_	fly	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	wherever	_	wherever	WRB	O	_	$LEMMA$	_	0	IGNORE	true
25	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	please	_	please	VBP	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
27	in	_	in	IN	O	_	regardless-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Paradise	_name_	Paradise	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@green-03, 18@@h@@heart, 7@@n@@_NAME_, 29@@b@@Paradise, 26@@b@@please-01, 14@@d@@martyr, 23@@s@@fly-01, 11@@h@@soul, 21@@d@@bird, 8@@s@@explain-01, 3@@l@@Hadith, 5@@d@@Messenger, 15@@s@@be-located-at-91]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	judge,	_	judge,	NNS	O	_	person	_	0	IGNORE	true
3	frustrated	_	frustrate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
4	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	apparent	_	apparent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	MOD_s	true
7	lack	_	lack	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	progress,	_	progress,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
10	encouraged	_	encourage	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
11	that	_	that	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	parties	_	party	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	reach	_	reach	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
15	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	negotiated	_	negotiate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	compromise	_	compromise	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
20	permit	_	permit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	limited	_	limited	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	limit-01	(s())	23	MOD_s	true
23	discovery	_	discovery	NN	O	(d<root> / --LEX--)	discover-01	()	25	APP_s	true
24	to	_	to	TO	O	_	and	_	0	IGNORE	true
25	proceed	_	proceed	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
26	(and	_	(and	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	10	MOD_s	true
27	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
28	judge	_	judge	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
29	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
30	directed	_	direct	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
31	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
33	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	35	APP_s	true
34	to	_	to	TO	O	_	thing	_	0	IGNORE	true
35	file	_	file	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	30	APP_s	true
36	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	Answer	answer	answer	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_o	true
38	to	_	to	IN	O	_	thing	_	0	IGNORE	true
39	the	_	the	DT	O	_	person	_	0	IGNORE	true
40	Complaint)	_name_	Complaint)	NNP	O	_	thing	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@d@@party, 23@@d@@discover-01, 33@@g2@@govern-01, 10@@s@@encourage-01, 25@@s@@proceed-01, 21@@p@@some, 22@@s@@limit-01, 3@@s@@frustrate-01, 26@@s@@(and, 17@@d@@compromise-01, 16@@s@@negotiate-01, 33@@g@@government-organization, 37@@s@@answer-01, 7@@d@@lack-01, 35@@c@@file-01, 6@@s@@apparent, 14@@s@@reach-01, 30@@s@@direct-01, 20@@s@@permit-01]
sentence=1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	quick	_	quick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
4	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	follow	_	follow	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-up-03	(mod(), s())	4	MOD_mod	true
7	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
8	on	_	on	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
13	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	MOD_o	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o2	true
15	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	13	MOD_mod	true
16	inviting	_	invite	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	speak	_	speak	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
20	at	_	at	IN	O	_	person	_	0	IGNORE	true
21	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	forthcoming	_	forthcoming	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	congress,	_	congress,	NN	O	_	mean-01	_	0	IGNORE	true
24	Risk	risk	risk	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	25	MOD_mod	true
25	2001	_name_	2001	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	19	MOD_mod	true
26	Australia,	_name_	australia,	CD	O	_	and	_	0	IGNORE	true
27	which	_	which	WDT	O	_	date-interval	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	taking	_	take	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
30	place	_	place	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	Sydney	_name_	Sydney	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	25	MOD_mod	true
33	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	20	_	20	CD	O	(d<root> / date-entity  :day (explicitanon2 / --LEX--))	_NUMBER_	()	35	APP_op1	true
35	&	_	&	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
36	21	_	21	CD	O	(d<root> / date-entity  :day (explicitanon2 / --LEX--))	_NUMBER_	()	35	APP_op2	true
37	August_2001	_name_	2001	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_DATE_	(mod())	25	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@n@@recent, 1@@p@@just, 4@@d@@message-01, 6@@i@@follow-up-03, 32@@n@@_NAME_, 19@@s@@speak-01, 35@@d@@&, 34@@explicitanon2@@_NUMBER_, 25@@explicitanon2@@_NUMBER_, 32@@c@@city, 37@@explicitanon0@@_DATE_, 22@@n@@forthcoming, 13@@b@@send-01, 16@@s@@invite-01, 36@@d@@date-entity, 12@@d@@i, 21@@d@@our, 24@@a@@risk-01, 14@@d@@you, 25@@d@@date-entity, 3@@s@@quick-02, 10@@d@@email, 36@@explicitanon2@@_NUMBER_, 34@@d@@date-entity]
sentence=1	Secondly,	secondly,	Secondly,	LS	O	_	and	_	0	IGNORE	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	out	_	out	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	0	ROOT	true
6	price	_	price	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
7	performers	_	performer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	perform-01	(s())	27	MOD_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_o	true
11	in	_	in	IN	O	_	person	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
14	job	_	job	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	group	_	group	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
16	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	performers	_	performer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	perform-01	(s())	7	MOD_s	true
22	respectively	_	respectively	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	respective	(mod())	21	MOD_mod	true
23	eg.	_	eg.	VBP	O	_	mean-01	_	0	IGNORE	true
24	Paul_Thomas,_Jason_Choate,	_name_	Choate,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
25	Todd_DeCook	_name_	DeCook	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
27	Peter_Makkai	_name_	Makkai	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_op2	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@a@@and, 6@@s@@price-01, 15@@b@@group, 2@@d@@he, 7@@s@@perform-01, 21@@s@@perform-01, 9@@d@@you, 25@@n@@_NAME_, 5@@s@@out-06, 4@@p@@still, 27@@n@@_NAME_, 20@@s@@strong-02, 25@@p@@person, 18@@s@@excellent-02, 22@@p@@respective, 27@@p@@person, 10@@s@@have-03, 14@@p@@job, 13@@s@@same-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	entities	_	entity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	need	_	need	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
9	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
10	change	_	change	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
11	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
13	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	assigned	_	assign	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	12	APP_op2	true
15	to	_	to	IN	O	_	thing	_	0	IGNORE	true
16	a	_	a	DT	O	_	thing	_	0	IGNORE	true
17	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@s@@assign-01, 8@@s@@need-01, 12@@a@@or, 17@@d@@group, 11@@d@@group, 10@@s@@change-01, 1@@d@@i, 4@@explicitanon0@@few, 7@@s@@possible-01, 2@@s@@have-03, 5@@d@@entity]
sentence=1	Maybe	maybe	maybe	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	9	APP_o	true
5	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	1	APP_s	true
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
11	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	tax	_	tax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_dom	true
13	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
14	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	MOD_s	true
15	have	_	have	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	18	MOD_s	true
16	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
17	be	_	be	VB	O	_	thing	_	0	IGNORE	true
18	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
19	would	_	would	MD	O	_	thing	_	0	IGNORE	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	foreign	_	foreign	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	tax	_	tax	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	9	APP_s	true
23	.	_	.	.	O	_	monetary-quantity	_	0	IGNORE	true

nodealignment=[8@@d@@they, 18@@s@@provide-01, 6@@s@@go-01, 22@@r@@tax-01, 2@@p@@this, 15@@s@@obligate-01, 3@@d@@one, 11@@p@@only, 21@@p@@foreign, 4@@s@@recommend-01, 12@@d@@tax-01, 14@@s@@possible-01, 5@@p@@also, 1@@s@@possible-01, 9@@s@@cause-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	Friday	_name_	Friday	NNP	O	(d<root> / date-entity  :weekday (t / --LEX--)  :time-of (c<mod>))	$REPL$	(mod())	5	MOD_mod	true
3	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
4	Michael	michael	Michael	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	goes	_	go	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-03	(o(s()))	0	ROOT	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	visit	_	visit	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	at	_	at	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	name	(mod())	5	MOD_mod	true
10	St._Francis,	_name_	francis,	CD	O	_	_NAME_	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	MOD_s	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	his	_	he	PRP$	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
15	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	school	_	school	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	MOD_poss	true
17	(so	_	(so	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
18	far,	_	far,	NN	O	_	-	_	0	IGNORE	true
19	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
20	good)	_	good)	NN	O	_	and	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@t@@_name_, 16@@m@@school, 8@@s@@visit-01, 15@@s@@new-01, 2@@d@@date-entity, 9@@b@@name, 12@@s@@possible-01, 5@@c@@go-03, 19@@s@@so, 1@@p@@this, 14@@p@@he, 4@@n@@_NAME_, 4@@p@@person]
sentence=1	Most	most	Most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	Fridays	_name_	friday	NNS	O	(d<root> / date-entity  :weekday (w / --LEX--))	$LEMMA$	()	6	APP_s	true
3	I'm	i'm	I'm	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
4	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	TRY	try	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	you	_	0	IGNORE	true
8	pick	_	pick	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-06	(s(), o())	6	APP_o	true
9	Michael	_name_	Michael	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
10	up	_	up	RP	O	_	i	_	0	IGNORE	true
11	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_o	true
12	I'm	i'm	i'm	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	person	(mod())	6	MOD_mod	true
13	away	_	away	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	much,	_	much,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_o	true
16	which	_	which	WDT	O	_	i	_	0	IGNORE	true
17	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
18	leaving	_	leave	VBG	O	(d<root> / --LEX--)	$LEMMA$-11	()	17	APP_o	true
19	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
20	445	_	445	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	19	APP_op1	true
21	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	MOD_op1	true
22	so	_	so	RB	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	.	_	.	.	O	_	up-to	_	0	IGNORE	true

nodealignment=[9@@n@@_NAME_, 15@@s@@cause-01, 1@@p@@Most, 20@@explicitanon0@@_NUMBER_, 6@@c@@try-01, 22@@d@@so, 2@@d@@date-entity, 21@@a@@or, 20@@d@@date-entity, 18@@d@@leave-11, 17@@s@@mean-01, 9@@p@@person, 14@@s@@so, 12@@explicitanon0@@person, 19@@w@@by, 13@@a@@away, 2@@w@@friday, 8@@s@@pick-up-06, 11@@s@@cause-01]
sentence=1	I'm	i'm	I'm	NNS	O	_	i	_	0	IGNORE	true
2	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	for	_	for	IN	O	_	or	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	confidentiality	_	confidentiality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	agreement,	_	agreement,	NNS	O	_	and	_	0	IGNORE	true
7	which	_	which	WDT	O	_	capable-01	_	0	IGNORE	true
8	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	true
9	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	Bart's	_name_	bart's	JJ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_poss	true
12	files	_	file	NNS	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	14	MOD_mod	true
13	(haven't	_	(haven't	ADD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	checked	_	check	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
15	closely	_	closely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	close-10	(s())	14	MOD_s	true
16	yet)	_	yet)	NNP	O	_	thing	_	0	IGNORE	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@w@@file, 2@@s@@look-01, 8@@s@@possible-01, 11@@n@@_NAME_, 14@@s@@check-01, 5@@d@@confidentiality, 11@@p@@person, 13@@explicitanon0@@-, 15@@s@@close-10]
sentence=1	I'm	i'm	I'm	NNS	O	_	i	_	0	IGNORE	true
2	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	for	_	for	IN	O	_	or	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	confidentiality	_	confidentiality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	agreement,	_	agreement,	NNS	O	_	and	_	0	IGNORE	true
7	which	_	which	WDT	O	_	capable-01	_	0	IGNORE	true
8	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	true
9	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	Bart's	_name_	bart's	JJ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_poss	true
12	files	_	file	NNS	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	14	MOD_mod	true
13	(haven't	_	(haven't	ADD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	checked	_	check	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
15	closely	_	closely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	close-10	(s())	14	MOD_s	true
16	yet)	_	yet)	NNP	O	_	thing	_	0	IGNORE	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@look-01, 8@@s@@possible-01, 15@@s@@close-10, 11@@n@@_NAME_, 11@@p@@person, 12@@w@@file, 14@@s@@check-01, 5@@d@@confidentiality, 13@@explicitanon0@@-]
sentence=1	Yo	yo	Yo	NNP	O	_	$REPL$	_	0	IGNORE	true
2	mama`s	_	mama`s	NNP	O	_	and	_	0	IGNORE	true
3	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
4	fat,	_	fat,	VBZ	O	_	expressive	_	0	IGNORE	true
5	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	restaurants	_	restaurant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	town	_	town	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
11	signs	_	sign	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	say:	_	say:	XX	O	_	and	_	0	IGNORE	true
14	"Maximum	"maximum	"Maximum	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	Occupancy:	_name_	Occupancy:	-LRB-	O	_	year	_	0	IGNORE	true
16	240	_	240	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	17	MOD_mod	true
17	Patrons	patrons	Patrons	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
18	OR	or	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
19	Yo_Mama"_Yo	_name_	Yo	NNP	O	(d<root> / --LEX--)	_NAME_	()	21	APP_o	true
20	mama`s	_	mama`s	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	10	MOD_o	true
21	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	20	MOD_s	true
22	fat,	_	fat,	NN	O	_	cause-01	_	0	IGNORE	true
23	when	_	when	WRB	O	_	i	_	0	IGNORE	true
24	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	ran	_	run	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	28	MOD_mod	true
26	away,	_	away,	NNP	O	_	and	_	0	IGNORE	true
27	they	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	10	MOD_o	true
28	had	_	have	VBD	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	10	MOD_s	true
29	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
30	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o	true
31	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	33	MOD_mod	true
33	sides	_	side	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	30	APP_o	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	milk	_	milk	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	carton	_	carton	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_poss	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@s@@they, 11@@d@@sign, 21@@s@@so, 33@@h@@side, 37@@d@@carton, 16@@explicitanon0@@_NUMBER_, 10@@s@@have-03, 9@@b@@town, 20@@s@@and, 28@@h@@obligate-01, 32@@explicitanon0@@4, 5@@p@@all, 25@@v@@run-02, 31@@p@@all, 17@@d@@Patrons, 14@@p@@"Maximum, 19@@d@@_NAME_, 36@@p@@milk, 7@@d@@restaurant, 18@@a@@or, 3@@s@@so, 30@@s@@use-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	are	_	be	VBP	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	-1	_	0	IGNORE	true
5	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	stages	_	stage	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
10	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
11	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	draft	_	draft	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	cover	_	cover	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
18	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	which	_	which	WDT	O	_	i	_	0	IGNORE	true
20	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
21	introduce	_	introduce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
22	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	for	_	for	IN	O	_	thing	_	0	IGNORE	true
24	inclusion	_	inclusion	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	include-01	(mod(), s())	21	MOD_mod	true
25	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	Globalflash	_name_	Globalflash	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
27	(	_	(	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Enron_Europe	_name_	Europe	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	newsletter	_	newsletter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@p@@cover, 21@@s@@introduce-01, 13@@t@@draft-01, 8@@p@@this, 5@@p@@final, 9@@s@@process-02, 16@@d@@letter, 29@@n@@_NAME_, 24@@i@@include-01, 18@@n@@_NAME_, 26@@o2@@organization, 1@@d@@We, 6@@s@@stage, 22@@d@@this, 26@@n@@_NAME_, 30@@p@@newsletter]
sentence=1	Given	given	give	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	short	_	short	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	9	MOD_s	true
4	notice,	_	notice,	NNP	O	_	-	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	will	_	will	MD	O	_	person	_	0	IGNORE	true
7	politely	_	politely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	polite-01	(mod())	8	MOD_mod	true
8	decline	_	decline	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	16	APP_s	true
9	to	_	to	TO	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	16	MOD_mod	true
10	participate	_	participate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	at	_	at	IN	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	hearing	_	hearing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
14	on	_	on	IN	O	_	and	_	0	IGNORE	true
15	Monday,	monday,	monday,	ADD	O	_	and	_	0	IGNORE	true
16	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
17	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
18	let	_	let	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	Senator	senator	Senator	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	22	APP_s	true
22	know	_	know	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	18	APP_s	true
23	that,	_	that,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	general,	_	general,	NNP	O	_	and	_	0	IGNORE	true
26	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	intend	_	intend	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	22	APP_o	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	engage	_	engage	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_op1	true
30	actively	_	actively	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	activity-06	(s())	29	MOD_s	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	29	APP_o	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	27	APP_o	true
35	plan	_	plan	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	34	APP_op2	true
36	to	_	to	TO	O	_	thing	_	0	IGNORE	true
37	help	_	help	VB	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	35	APP_o	true
38	California	_name_	California	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	37	APP_o2	true
39	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	37	APP_o	true
40	a	_	a	DT	O	_	thing	_	0	IGNORE	true
41	solution	_	solution	NN	O	(d<root> / --LEX--)	solve-01	()	39	APP_o	true
42	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
43	works	_	work	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	41	MOD_s	true
44	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
45	everybody	_	everybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_o	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[41@@d@@solve-01, 21@@e@@senator, 34@@a@@and, 35@@c@@plan-01, 21@@h@@have-org-role-91, 45@@d@@everybody, 8@@c@@decline-01, 13@@d@@hearing-01, 7@@t@@polite-01, 18@@s@@let-01, 16@@s@@contrast-01, 38@@s@@state, 37@@w@@help-01, 9@@p@@thing, 3@@s@@short-07, 20@@s@@good-02, 30@@s@@activity-06, 22@@c@@know-01, 21@@p@@person, 5@@d@@we, 10@@s@@participate-01, 29@@s@@engage-01, 33@@d@@process-02, 38@@n@@_NAME_, 27@@c@@intend-01, 39@@s@@find-01, 43@@s@@work-09]
sentence=1	HR	hr	HR	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
3	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	purchased	_	purchase	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
8	CONFIRMIT	_name_	CONFIRMIT	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	execute	_	execute	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
12	anonymous	_	anonymous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	surveys	_	survey	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@c@@company, 6@@d@@tool, 12@@p@@anonymous, 11@@s@@execute-01, 10@@s@@possible-01, 4@@s@@purchase-01, 13@@d@@survey-01, 3@@n@@already, 1@@n@@_NAME_, 8@@n@@_NAME_]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	hoping	_	hope	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	Corp	_name_	Corp	NNP	O	(d<root> / --LEX--)	_NAME_	()	6	APP_s	true
5	will	_	will	MD	O	_	person	_	0	IGNORE	true
6	foot	_	foot	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
7	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
8	bill	_	bill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
11	pilot	_	pilot	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
14	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	18	MOD_mod	true
18	test	_	test	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
19	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
22	implementing	_	implement	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op1	true
23	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
24	company-wide	_	company-wide	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
25	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[18@@s@@test-01, 22@@s@@implement-01, 19@@p@@this, 24@@p@@company-wide, 14@@s@@allow-01, 17@@s@@full, 3@@s@@hope-01, 1@@d@@They, 6@@s@@foot-01, 23@@d@@it, 8@@d@@bill, 4@@d@@_NAME_, 11@@o@@pilot-01, 21@@w@@before, 20@@d@@tool]
sentence=1	Are	are	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
2	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	offices	_	office	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	(eg	_	(eg	.	O	_	_NAME_	_	0	IGNORE	true
5	Tokyo)	tokyo)	Tokyo)	NNS	O	_	-	_	0	IGNORE	true
6	unreachable	_	unreachable	JJ	O	(p<root> / possible-01  :ARG1 (j / --LEX--  :ARG1 (t<s>))  :polarity (explicitanon0 / -))	defend-01	(s())	7	APP_op1	true
7	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	those	_	those	DT	O	_	that	_	0	IGNORE	true
12	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
13	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	7	APP_op2	true
14	home	_	home	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	offices	_	office	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	7	MOD_mod	true

nodealignment=[3@@d@@office, 6@@j@@defend-01, 14@@p@@home, 7@@a@@or, 16@@explicitanon0@@interrogative, 10@@p@@only, 6@@explicitanon0@@-, 15@@d@@office, 2@@p@@whole, 13@@s@@have-03, 6@@p@@possible-01]
sentence=1	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	4	MOD_s	true
2	-for	_	-for	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
3	volumes	_	volume	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
4	flowing	_	flow	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	bondad-which	_	bondad-which	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	deal	_	deal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
11	763736	_	763736	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
12	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	10	MOD_s	true
13	is	_	be	VBZ	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	2	MOD_mod	true
14	bondad	_	bondad	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	gda;for	_	gda;for	NNP	O	(d<root> / --LEX--)	or	()	17	APP_o	true
16	blanco-deal	_	blanco-deal	JJ	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
17	number	_	number	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	19	APP_o	true
18	759933-price	_	759933-price	CD	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
19	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	2	APP_o	true
20	nonbondad	_	nonbondad	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	gd	_	gd	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	a	_	a	DT	O	_	$FORM$	_	0	IGNORE	true

nodealignment=[18@@d@@_NAME_, 4@@s@@flow-01, 20@@p@@nonbondad, 11@@p@@_NUMBER_, 14@@p@@bondad, 16@@c@@company, 17@@s@@number, 10@@d@@number, 19@@s@@be, 12@@t@@thing, 7@@p@@bondad-which, 3@@d@@volume, 1@@s@@actual-02, 16@@n@@_NAME_, 13@@p@@person, 2@@s@@-for, 9@@p@@deal-01, 15@@d@@or, 12@@c@@price-01]
sentence=1	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	4	MOD_s	true
2	-for	_	-for	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
3	volumes	_	volume	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
4	flowing	_	flow	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	bondad-which	_	bondad-which	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	deal	_	deal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
11	763736	_	763736	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
12	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	10	MOD_s	true
13	is	_	be	VBZ	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	2	MOD_mod	true
14	bondad	_	bondad	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	gda;for	_	gda;for	NNP	O	(d<root> / --LEX--)	or	()	17	APP_o	true
16	blanco-deal	_	blanco-deal	JJ	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
17	number	_	number	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	19	APP_o	true
18	759933-price	_	759933-price	CD	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
19	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	2	APP_o	true
20	nonbondad	_	nonbondad	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	gd	_	gd	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	a	_	a	DT	O	_	$FORM$	_	0	IGNORE	true

nodealignment=[19@@s@@be, 12@@t@@thing, 15@@d@@or, 16@@c@@company, 13@@p@@person, 18@@d@@_NAME_, 3@@d@@volume, 20@@p@@nonbondad, 12@@c@@price-01, 16@@n@@_NAME_, 4@@s@@flow-01, 1@@s@@actual-02, 10@@d@@number, 7@@p@@bondad-which, 9@@p@@deal-01, 17@@s@@number, 14@@p@@bondad, 11@@p@@_NUMBER_, 2@@s@@-for]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
4	been	_	be	VBN	O	_	person	_	0	IGNORE	true
5	modified	_	modify	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	mark-up	_	mark-up	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	faxed	_	fax	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	13	MOD_o	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	Toni_Donohue	_name_	Donohue	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_o2	true
18	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	a_few_hours_ago	_name_	ago	RB	O	(p<root> / publication  :name (n / --LEX--)  :location-of (a<mod>))	_NAME_	(mod())	15	MOD_mod	true
20	.	_	.	.	O	_	say-01	_	0	IGNORE	true

nodealignment=[14@@d@@you, 17@@p@@person, 17@@n@@_NAME_, 15@@b@@fax-01, 1@@p@@this, 5@@s@@modify-01, 13@@d@@mark-up, 19@@n@@_NAME_, 2@@d@@document, 8@@s@@change-01, 18@@b@@here, 19@@p@@publication]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	contain	_	contain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
5	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	confidential,	_	confidential,	NNP	O	_	-	_	0	IGNORE	true
9	privileged	_	privileged	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	and/or	_	and/or	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	and-or	(mod())	12	MOD_mod	true
11	attorney	_	attorney	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	13	MOD_s	true
13	product	_	product	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
14	for	_	for	IN	O	_	or	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	sole	_	sole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	intended	_	intend	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	intend-01	(s())	21	MOD_s	true
21	recipient(s)	_	recipient(s)	NNP	O	(d<root> / --LEX--)	_NAME_	()	17	APP_s	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@d@@_NAME_, 17@@s@@use-01, 12@@s@@work-01, 2@@d@@email, 11@@p@@attorney, 13@@p@@product, 16@@p@@sole, 5@@d@@material, 1@@p@@this, 20@@s@@intend-01, 9@@s@@privileged-01, 4@@s@@contain-01, 10@@p@@and-or, 3@@s@@possible-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
3	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	18	MOD_mod	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	contacts	_	contact	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
6	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o2	true
10	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	8	MOD_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	touch	_	touch	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	15	MOD_mod	true
15	guest	_	guest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	speakers,	_	speakers,	NNS	O	_	and	_	0	IGNORE	true
17	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	18	MOD_mod	true
18	let	_	let	VB	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
19	us	_	us	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
20	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_o	true
21	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	ethink@enron.com	_	ethink@enron.com	ADD	O	(p<root> / publication  :name (n / --LEX--)  :medium-of (u<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@know-01, 4@@p@@any, 12@@s@@touch-01, 22@@p@@publication, 19@@b@@us, 7@@s@@possible-01, 17@@explicitanon0@@+, 18@@w@@let-01, 5@@d@@contact-01, 2@@d@@you, 10@@s@@get-04, 22@@n@@ethink@enron.com, 8@@s@@help-01, 3@@m@@have-03, 14@@p@@this, 9@@d@@us, 15@@d@@guest]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	shall	_	shall	MD	O	_	possible-01	_	0	IGNORE	true
3	invite	_	invite	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
4	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_o	true
6	who	_	who	WP	O	_	this	_	0	IGNORE	true
7	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	electricity	_	electricity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	my	_	my	PRP$	O	_	include-91	_	0	IGNORE	true
12	group	_	group	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	join	_	join	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o2	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@work-01, 1@@d@@i, 12@@b@@group, 4@@explicitanon0@@some, 9@@d@@electricity, 3@@t@@invite-01, 5@@d@@person, 14@@s@@join-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
3	allocate	_	allocate	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_s	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
7	Global	global	Global	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o2	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	would	_	would	MD	O	_	thing	_	0	IGNORE	true
10	solve	_	solve	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	10	APP_o	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	Cargill	_name_	Cargill	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	17	APP_s	true
17	using	_	use	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	APP_dom	true
18	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	he	(s(), o())	2	MOD_o	true
19	line,	_	line,	NNS	O	_	mean-01	_	0	IGNORE	true
20	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	over	_	over	IN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	limit,	_	limit,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
25	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
26	me	_	I	PRP	O	_	i	_	0	IGNORE	true
27	knowing..	_	knowing..	ADD	O	_	thing	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@n@@_NAME_, 10@@s@@solve-01, 20@@s@@put-01, 16@@d@@person, 22@@d@@over, 17@@s@@use-01, 12@@r@@problem, 14@@p@@other, 7@@d@@_NAME_, 1@@d@@We, 3@@b@@allocate-01, 5@@d@@piece, 25@@explicitanon0@@-, 18@@s@@he, 2@@s@@recommend-01]
sentence=1	"Other	"other	"other	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
2	Provisions:	_name_	Provisions:	.	O	_	thing	_	0	IGNORE	true
3	On	on	on	IN	O	_	thing	_	0	IGNORE	true
4	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	Payment	payment	Payment	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	pay-01	(mod())	9	MOD_mod	true
6	Date,	_name_	Date,	NNP	O	_	and	_	0	IGNORE	true
7	[ENA]	[ena]	[ena]	XX	O	_	and	_	0	IGNORE	true
8	shall	_	shall	MD	O	_	i	_	0	IGNORE	true
9	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	[a	_	[a	CD	O	_	monetary-quantity	_	0	IGNORE	true
11	fee	_	fee	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	of]	_	of]	CD	O	_	$LEMMA$	_	0	IGNORE	true
13	[an	_	[an	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	amount	_	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
15	equal	_	equal	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	14	MOD_s	true
16	to]	_	to]	CD	O	_	$LEMMA$	_	0	IGNORE	true
17	USD{38,000?],	usd{38,000?],	usd{38,000?],	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
19	amount	_	amount	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
20	shall	_	shall	MD	O	_	cause-01	_	0	IGNORE	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	subject	_	subject	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
23	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	netting	_	netting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	provisions	_	provision	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	22	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	[Master	[master	[Master	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	Agreement	agreement	agreement	NN	O	(d<root> / --LEX--)	agree-01	()	26	APP_poss	true
31	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
32	how	_	how	WRB	O	(d<root> / --LEX--)	amr-unknown	()	35	APP_o	true
33	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	9	MOD_o	true
34	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
35	refer	_	refer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_s	true
36	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
37	the	_	the	DT	O	_	thing	_	0	IGNORE	true
38	agreement?]	_	agreement?]	NN	O	_	$LEMMA$	_	0	IGNORE	true
39	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[33@@s@@cause-01, 15@@s@@equal-01, 13@@p@@_NAME_, 26@@h@@provision, 35@@s@@refer-01, 22@@s@@subject-01, 30@@d@@agree-01, 32@@d@@amr-unknown, 25@@p@@netting, 29@@p@@[Master, 14@@d@@amount, 34@@d@@you, 1@@p@@"other, 4@@p@@each, 9@@s@@pay-01, 5@@p@@pay-01, 11@@d@@fee]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	change	_	change	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	is	_	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
4	mainly	_	mainly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	main	(mod())	2	MOD_mod	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	the_Settlement_Date	_name_	Date	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
7	text,	_	text,	NNP	O	_	include-91	_	0	IGNORE	true
8	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
9	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	6	MOD_s	true
10	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_o	true
11	"...Two	"...two	"...two	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	13	MOD_mod	true
12	business	_	business	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	days	_	day	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
15	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
16	date	_	date	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Transaction..."	transaction..."	Transaction..."	NNP	O	_	$LEMMA$	_	0	IGNORE	true
20	shall	_	shall	MD	O	_	thing	_	0	IGNORE	true
21	read	_	read	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
22	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
23	follow	_	follow	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	21	MOD_s	true
24	:	_	:	:	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@s@@change-01, 13@@t@@temporal-quantity, 14@@w@@after, 23@@s@@follow-04, 11@@explicitanon0@@2, 16@@d@@date, 13@@y@@day, 21@@d@@read-01, 4@@p@@main, 12@@p@@business, 10@@s@@include-91, 6@@d@@Date, 9@@s@@instead-of-91]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
4	have	_	have	VB	O	_	$LEMMA$-04	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	filled	_	fill	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-02	(s())	6	MOD_s	true
8	out	_	out	RP	O	_	request-confirmation-91	_	0	IGNORE	true
9	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_o	true
14	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	insurance	_	insurance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	insure-02	(s())	16	APP_s	true
16	coverage	_	coverage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cover-01	(s())	13	APP_s	true
17	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	Enron	_name_	Enron	NNP	O	(t<root> / --LEX--  :manner-of (h<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[16@@s@@cover-01, 13@@s@@have-03, 10@@s@@say-01, 15@@s@@insure-02, 12@@explicitanon0@@-, 2@@s@@need-01, 1@@d@@i, 18@@t@@_NAME_, 6@@d@@form, 14@@d@@health, 7@@s@@fill-out-02]
sentence=1	Yes,	_name_	yes,	RB	O	_	and	_	0	IGNORE	true
2	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
5	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	carotid	_	carotid	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	artery	_	artery	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
10	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
12	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	that	_	that	WDT	O	_	i	_	0	IGNORE	true
14	transports	_	transport	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_s	true
15	blood	_	blood	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	brain	_	brain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@p@@this, 15@@d@@blood, 18@@d@@brain, 4@@n@@time, 9@@d@@artery, 2@@s@@contrast-01, 14@@b@@transport-01, 8@@p@@carotid]
sentence=1	Peggy_Banczak	_name_	Banczak	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	ENA	_name_	ENA	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	lawyer	_	lawyer	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	handles	_	handle	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	Mexico	_name_	Mexico	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
9	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 8@@n@@_NAME_, 1@@p@@person, 4@@n@@_NAME_, 7@@s@@handle-01, 8@@c@@country, 5@@r@@lawyer]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the_next_week	_name_	week	NN	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	3	APP_op2	true
3	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
4	so,	_	so,	NN	O	_	_NAME_	_	0	IGNORE	true
5	we'll	_	we'll	NN	O	_	person	_	0	IGNORE	true
6	be	_	be	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	18	MOD_mod	true
7	sending	_	send	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	APP_op1	true
8	around	_	around	IN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	discussion	_	discussion	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	discuss-01	(mod())	11	MOD_mod	true
11	paper	_	paper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	which	_	which	WDT	O	_	and	_	0	IGNORE	true
13	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	crystallizes	_	crystallize	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	issues,	_	issues,	NNPS	O	_	and	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
19	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	will	_	will	MD	O	_	thing	_	0	IGNORE	true
21	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	18	APP_op2	true
22	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	18	APP_s	true
23	talk	_	talk	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	21	APP_o	true
24	to	_	to	IN	O	_	and	_	0	IGNORE	true
25	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
26	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	26	MOD_s	true
28	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
29	as	_	as	RB	O	_	equal	_	0	IGNORE	true
30	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
31	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	meeting	_	meeting	NN	O	(d<root> / --LEX--)	meet-03	()	31	APP_op1	true
34	to	_	to	TO	O	_	and	_	0	IGNORE	true
35	go	_	go	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-through-20	(mod(), s())	23	MOD_mod	true
36	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@b@@send-01, 31@@w@@before, 26@@explicitanon0@@many, 22@@s@@thing, 6@@p@@person, 2@@n2@@_NAME_, 3@@a@@or, 14@@s@@hope-01, 8@@d@@around, 28@@d@@you, 27@@s@@include-91, 21@@c@@try-01, 18@@a@@and, 10@@o@@discuss-01, 11@@d@@paper, 2@@n@@newspaper, 15@@s@@crystallize-01, 35@@i@@go-through-20, 33@@d@@meet-03, 30@@s@@possible-01, 23@@s@@talk-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	27	MOD_s	true
3	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	5	MOD_mod	true
4	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	dates	_	date	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	meeting,	_	meeting,	NNS	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
11	suggest	_	suggest	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
12	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	27	MOD_s	true
13	in	_	in	IN	O	_	after	_	0	IGNORE	true
14	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	15	MOD_mod	true
15	parts	_	part	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
16	--	_	--	:	O	_	and	_	0	IGNORE	true
17	first,	_	first,	NNP	O	_	and	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	27	APP_op1	true
20	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
22	panel	_	panel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	5:00-6:30	_	5:00-6:30	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
26	p.m.,	_	p.m.,	NN	O	(d<root> / --LEX--)	and	()	27	APP_op2	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
28	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	dinner	_	dinner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op3	true
31	with	_	with	IN	O	_	be-located-at-91	_	0	IGNORE	true
32	Chairman	chairman	Chairman	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	33	MOD_s	true
33	Levitt	_name_	Levitt	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	30	MOD_mod	true
34	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	6:30-8:30_p.m	_name_	p.m	NN	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	$LEMMA$	()	2	APP_o	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@a@@and, 11@@s@@suggest-01, 26@@d@@and, 22@@d@@panel, 10@@d@@i, 14@@explicitanon0@@2, 5@@n@@date, 19@@s@@meet-03, 32@@h@@have-org-role-91, 30@@d@@dinner, 25@@n@@5:00-6:30, 32@@p2@@chairman, 15@@t@@part, 35@@explicitanon0@@p.m, 23@@p@@only, 33@@n@@_NAME_, 3@@explicitanon0@@3, 2@@s@@be-located-at-91, 4@@s@@possible-01, 28@@n@@then, 12@@s@@be-located-at-91, 35@@u@@url-entity]
sentence=1	Although	although	although	IN	O	_	have-concession-91	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	attachments	_	attachment	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_op2	true
7	are	_	be	VBP	O	_	have-concession-91	_	0	IGNORE	true
8	believed	_	believe	VBN	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	45	MOD_mod	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	be	_	be	VB	O	_	have-concession-91	_	0	IGNORE	true
11	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-04	(s(), o())	8	APP_s	true
12	of	_	of	IN	O	_	-	_	0	IGNORE	true
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	virus	_	virus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	defect	_	defect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
20	affect	_	affect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	computer	_	computer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	into	_	into	IN	O	_	-	_	0	IGNORE	true
25	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
28	received	_	receive	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
29	and	_	and	CC	O	_	$LEMMA$	_	20	IGNORE	true
30	opened,	_	opened,	NNS	O	_	and	_	0	IGNORE	true
31	it	_	it	PRP	O	_	i	_	0	IGNORE	true
32	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
33	the	_	the	DT	O	_	and	_	0	IGNORE	true
34	responsibility	_	responsibility	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	responsible-03	(o(s()))	45	APP_op1	true
35	of	_	of	IN	O	_	thing	_	0	IGNORE	true
36	the	_	the	DT	O	_	thing	_	0	IGNORE	true
37	recipient	_	recipient	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	receive-01	()	34	APP_s	true
38	to	_	to	TO	O	_	thing	_	0	IGNORE	true
39	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_o	true
40	that	_	that	IN	O	_	instead-of-91	_	0	IGNORE	true
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
43	virus	_	virus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
44	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	39	APP_o	true
45	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
46	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	47	MOD_mod	true
47	responsibility	_	responsibility	NN	O	(d<root> / --LEX--)	responsible-03	()	49	APP_o	true
48	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
49	accepted	_	accept	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	45	APP_op2	true
50	by	_	by	IN	O	_	government-organization	_	0	IGNORE	true
51	Century_Development	_name_	Development	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	52	APP_op1	true
52	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_s	true
53	any	_	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_op2	true
54	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
55	its	_	its	PRP$	O	_	government-organization	_	0	IGNORE	true
56	affiliates	_	affiliate	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	MOD_s	true
57	for	_	for	IN	O	_	and	_	0	IGNORE	true
58	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	60	MOD_mod	true
59	loss	_	loss	NN	O	(d<root> / --LEX--)	lose-02	()	60	APP_op1	true
60	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_o2	true
61	damage	_	damage	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	60	APP_op2	true
62	arising	_	arise	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	60	MOD_s	true
63	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
64	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	68	MOD_mod	true
65	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
66	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
67	its	_	its	PRP$	O	_	-	_	0	IGNORE	true
68	use	_	use	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	62	APP_o	true
69	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@a@@and, 11@@s@@free-04, 16@@p@@other, 53@@d@@any, 13@@p@@any, 3@@d@@email, 44@@s@@free-04, 37@@p2@@person, 58@@p@@any, 14@@d@@virus, 21@@p@@any, 43@@d@@virus, 23@@d@@system, 51@@o2@@organization, 49@@b@@accept-01, 46@@explicitanon0@@-, 60@@a@@or, 51@@n@@_NAME_, 37@@e2@@receive-01, 61@@d@@damage-01, 34@@c@@responsible-03, 64@@p@@any, 68@@d@@use-01, 59@@d@@lose-02, 22@@p@@computer, 20@@s@@affect-01, 52@@a@@or, 45@@a@@and, 56@@s@@affiliate-01, 62@@s@@arise-01, 2@@p@@this, 5@@p@@any, 47@@d@@responsible-03, 15@@a@@or, 6@@d@@attachment-01, 17@@d@@defect, 8@@s@@believe-01, 19@@s@@possible-01, 39@@s@@ensure-01, 28@@s@@receive-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	not,	_	not,	NN	O	_	have-polarity-91	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
5	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	will	_	will	MD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
9	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[6@@p@@else, 8@@s@@will-01, 9@@explicitanon0@@interrogative, 5@@d@@someone]
sentence=1	1)	_	1)	LS	O	_	have-purpose-91	_	0	IGNORE	true
2	Highlighting	highlighting	highlight	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
3	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
5	will	_	will	MD	O	_	i	_	0	IGNORE	true
6	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	related	_	relate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	4	MOD_s	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	enovate	_	enovate	NN	O	(d<root> / --LEX--)	_NAME_	()	11	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
15	2)	_	2)	CD	O	_	2	_	0	IGNORE	true
16	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	designated	_	designate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	representative	_	representative	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	represent-01	()	21	APP_s	true
20	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	14	APP_op2	true
21	sign	_	sign	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_s	true
22	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
24	confidentiality	_	confidentiality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	agreement	_	agreement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	agree-01	(s())	21	APP_o	true
26	.	_	.	.	O	_	before	_	0	IGNORE	true

nodealignment=[23@@s@@appropriate-02, 4@@d@@information, 19@@e2@@represent-01, 13@@d@@_NAME_, 24@@d@@confidentiality, 21@@s@@sign-02, 19@@p2@@person, 18@@s@@designate-01, 25@@s@@agree-01, 8@@s@@provide-01, 2@@s@@highlight-01, 17@@p@@each, 14@@a@@and, 20@@s@@recommend-01, 11@@s@@relate-01, 6@@p@@only]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	less	_	less	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	complicated	_	complicated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	complicate-01	(s())	0	ROOT	true
5	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
6	me	_	I	PRP	O	_	i	_	0	IGNORE	true
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	initial	_	initial	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (m<op1>)  :topic-of (p<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	4	MOD_mod	true
10	fax	_	fax	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_op2	true
11	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	to	_	to	TO	O	_	except-01	_	0	IGNORE	true
13	track	_	track	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-down-02	(s())	22	APP_op1	true
14	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
15	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	who	_	who	WP	O	_	-	_	0	IGNORE	true
17	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
19	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	about	_	about	IN	O	_	-	_	0	IGNORE	true
21	it	_	it	PRP	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
23	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	22	APP_op2	true
24	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	initial	_	initial	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
27	it	_	it	PRP	O	_	i	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@a@@and, 19@@d@@anything, 13@@s@@track-down-02, 21@@a@@it, 17@@explicitanon0@@-, 9@@a@@and, 10@@s@@fax-01, 1@@d@@It, 15@@d@@someone, 3@@s@@less, 4@@s@@complicate-01, 23@@s@@get-04, 26@@d@@initial-01, 8@@s@@initial-01, 18@@s@@know-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	not,	_	not,	NN	O	_	have-polarity-91	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
5	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	will	_	will	MD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
9	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[5@@d@@someone, 8@@s@@will-01, 9@@explicitanon0@@interrogative, 6@@p@@else]
sentence=1	1)	_	1)	LS	O	_	have-purpose-91	_	0	IGNORE	true
2	Highlighting	highlighting	highlight	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
3	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
5	will	_	will	MD	O	_	i	_	0	IGNORE	true
6	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	related	_	relate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	4	MOD_s	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	enovate	_	enovate	NN	O	(d<root> / --LEX--)	_NAME_	()	11	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
15	2)	_	2)	CD	O	_	2	_	0	IGNORE	true
16	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	designated	_	designate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	representative	_	representative	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	represent-01	()	21	APP_s	true
20	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	14	APP_op2	true
21	sign	_	sign	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_s	true
22	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
24	confidentiality	_	confidentiality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	agreement	_	agreement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	agree-01	(s())	21	APP_o	true
26	.	_	.	.	O	_	before	_	0	IGNORE	true

nodealignment=[4@@d@@information, 24@@d@@confidentiality, 19@@p2@@person, 2@@s@@highlight-01, 14@@a@@and, 23@@s@@appropriate-02, 6@@p@@only, 8@@s@@provide-01, 17@@p@@each, 20@@s@@recommend-01, 19@@e2@@represent-01, 11@@s@@relate-01, 21@@s@@sign-02, 18@@s@@designate-01, 13@@d@@_NAME_, 25@@s@@agree-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	played	_	play	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	version	_	version	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	Uno	_name_	Uno	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
9	"African_Uno"	_name_	Uno"	NNP	O	_	_NAME_	_	0	IGNORE	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	complex,	_	complex,	NNS	O	_	-	_	0	IGNORE	true
13	fast	_	fast	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
16	times,	_	times,	NNS	O	_	-	_	0	IGNORE	true
17	physically	_	physically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	physical	(mod())	18	MOD_mod	true
18	challenging	_	challenging	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	challenge-01	(s())	5	MOD_s	true
19	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@s@@fast-02, 18@@s@@challenge-01, 2@@s@@play-01, 5@@d@@version, 1@@d@@We, 7@@n@@_NAME_, 4@@s@@new-01, 17@@p@@physical]
sentence=1	Our	our	Our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
2	concern	_	concern	NN	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	that	_	that	IN	O	_	-	_	0	IGNORE	true
5	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
8	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	trading	_	trading	NN	O	(d<root> / --LEX--)	trade-01	()	10	APP_o	true
10	related	_	related	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	11	MOD_s	true
11	defaults	_	default	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
12	to	_	to	TO	O	_	-	_	0	IGNORE	true
13	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	trigger	_	trigger	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
15	a	_	a	DT	O	_	thing	_	0	IGNORE	true
16	default	_	default	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_o	true
17	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	loan	_	loan	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_s	true
20	transaction	_	transaction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	transact-01	(s())	16	APP_s	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	20	MOD_s	true
23	a	_	a	DT	O	_	thing	_	0	IGNORE	true
24	swap	_	swap	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
26	a	_	a	DT	O	_	thing	_	0	IGNORE	true
27	component	_	component	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@d@@swap, 16@@s@@default, 9@@d@@trade-01, 11@@d@@default-01, 7@@s@@want-01, 8@@p@@any, 19@@d@@loan-01, 1@@d@@Our, 27@@p@@component, 2@@c@@concern-01, 22@@s@@have-03, 6@@explicitanon0@@-, 10@@s@@relate-01, 20@@s@@transact-01, 13@@n@@ever, 14@@s@@trigger-01]
sentence=1	I'm	i'm	i'm	PRP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	person	(o(s()))	2	MOD_s	true
2	planning	_	plan	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	on	_	on	IN	O	_	thing	_	0	IGNORE	true
4	dragging	_	drag	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
8	least	_	least	RBS	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :frequency-of (c<mod>))	at-$LEMMA$	(op1(), mod())	4	MOD_mod	true
9	one	_	one	CD	O	(d<root> / --LEX--)	1	()	8	APP_op1	true
10	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	9	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	U.T._games,	_name_	games,	NNP	O	_	_NAME_	_	0	IGNORE	true
13	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	1	APP_o	true
16	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
17	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	15	APP_o	true
18	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
19	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
20	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	go	_	go	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	21	APP_s	true
24	(as	_	(as	.	O	_	thing	_	0	IGNORE	true
25	well	_	well	UH	O	_	$LEMMA$	_	0	IGNORE	true
26	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
27	properly	_	properly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	proper	(mod())	28	MOD_mod	true
28	prepare	_	prepare	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	26	APP_o	true
29	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	Scott/Kelley/Parks/Wild	scott/kelley/parks/wild	Scott/Kelley/Parks/Wild	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	34	MOD_mod	true
33	Card	card	card	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	gang	_	gang	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op1	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_s	true
36	the	_	the	DT	O	_	day	_	0	IGNORE	true
37	full-day	_	full-day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	day	(mod())	38	MOD_mod	true
38	affair	_	affair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op2	true
39	that	_	that	WDT	O	_	name	_	0	IGNORE	true
40	is	_	be	VBZ	O	_	name	_	0	IGNORE	true
41	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
42	U.T.	_name_	U.T.	NNP	O	_	_NAME_	_	0	IGNORE	true
43	game)	_	game)	NNP	O	_	mean-01	_	0	IGNORE	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@p@@card, 28@@s@@prepare-01, 14@@p@@just, 38@@d@@affair, 21@@s@@want-01, 17@@s@@find-out-03, 34@@d@@gang, 37@@y@@day, 2@@c@@plan-01, 35@@a@@and, 10@@s@@include-91, 4@@s@@drag-01, 32@@p@@_NAME_, 23@@d@@go-02, 27@@t@@proper, 8@@s@@at-least, 9@@d@@1, 26@@s@@cause-01, 15@@o@@obligate-01, 1@@c@@person, 13@@d@@i, 37@@t@@temporal-quantity]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	and	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
6	stay	_	stay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	Korea	_name_	Korea	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
10	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$	(s())	13	APP_s	true
12	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op1	true
13	and	_	and	CC	O	(a2<root> / --LEX--  :op2 (p2<op2>)  :op1 (s2<op1>)  :time-of (a<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	6	MOD_mod	true
14	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_op2	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	base	_	base	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
19	(which	_	(which	''	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	will	_	will	MD	O	_	thing	_	0	IGNORE	true
21	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	13	MOD_s	true
22	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	minutes,	_	minutes,	NNS	O	_	cause-01	_	0	IGNORE	true
26	actually),	_	actually),	NNP	O	_	and	_	0	IGNORE	true
27	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	APP_o	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	considering	_	consider	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	APP_o	true
30	going	_	go	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	29	APP_s	true
31	to	_	to	IN	O	_	and	_	0	IGNORE	true
32	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	33	APP_op1	true
33	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	30	APP_s	true
34	somewhere	_	somewhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
35	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	part	_	part	NN	O	(t<root> / --LEX--  :part-of (y<poss>)  :time-of (n<mod>))	$LEMMA$	(mod(), poss())	30	MOD_mod	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	Thanksgiving	_name_	Thanksgiving	NNP	O	(f<root> / festival  :name (n / --LEX--))	_NAME_	()	36	APP_poss	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@p@@go-02, 32@@n@@_NAME_, 11@@h@@have-rel-role-91, 38@@f@@festival, 33@@a@@or, 16@@p@@whole, 8@@c@@country, 1@@d@@i, 34@@d@@somewhere, 32@@c@@country, 24@@explicitanon0@@few, 4@@d@@we, 8@@n@@_NAME_, 10@@d@@your, 29@@s@@consider-02, 2@@s@@think-01, 21@@s@@take-10, 13@@a2@@and, 12@@s@@come-01, 38@@n@@_NAME_, 27@@s@@contrast-01, 36@@t@@part, 6@@s@@stay-01, 18@@d@@thing, 11@@p@@person, 11@@s@@parent, 14@@s@@do-02, 17@@p@@base, 22@@p@@only, 19@@p@@(which]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	e-mail	_	e-mail	NN	O	(d<root> / --LEX--)	email	()	9	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
5	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
7	law	_	law	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	firm	_	firm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
10	contains	_	contain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op2	true
11	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	privileged	_	privileged	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
17	confidential	_	confidential	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	MOD_s	true
18	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@s@@possible-01, 15@@s@@privileged-01, 17@@s@@confidential, 9@@a@@and, 8@@d@@firm, 7@@p@@law, 11@@d@@information, 2@@d@@email, 4@@s@@send-01, 1@@p@@this, 10@@s@@contain-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	it's	_	it's	PRP	O	_	have-org-role-91	_	0	IGNORE	true
4	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
5	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	idea	_	idea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
8	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
9	provisional	_	provisional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	application	_	application	NN	O	(d<root> / --LEX--)	apply-01	()	17	APP_dom	true
11	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
13	file_-_Travis	_name_	Travis	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	the	_	the	DT	O	_	company	_	0	IGNORE	true
16	internal	_	internal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	17	MOD_s	true
17	lawyer	_	lawyer	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_s	true
18	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
20	taken	_	take	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
21	care	_	care	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	17	MOD_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
24	patent	_	patent	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
25	application	_	application	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	APP_o	true
26	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
27	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	will	_	will	MD	O	_	thing	_	0	IGNORE	true
29	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	26	APP_o	true
30	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	31	MOD_s	true
31	ideas	_	idea	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	APP_s	true
32	for	_	for	IN	O	_	thing	_	0	IGNORE	true
33	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
34	the	_	the	DT	O	_	thing	_	0	IGNORE	true
35	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
36	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	39	APP_op1	true
37	be	_	be	VB	O	_	thing	_	0	IGNORE	true
38	placed	_	place	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_s	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	31	APP_mod	true
40	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	42	MOD_s	true
41	look	_	look	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	42	APP_op1	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	39	APP_op2	true
43	feel	_	feel	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	42	APP_op2	true
44	(I	(i	(i	NN	O	(d<root> / --LEX--)	_NAME_	()	46	APP_s	true
45	would	_	would	MD	O	_	thing	_	0	IGNORE	true
46	guess	_	guess	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	APP_op3	true
47	near	_	near	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	46	MOD_s	true
48	the	_	the	DT	O	_	thing	_	0	IGNORE	true
49	copyright	_	copyright	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	50	MOD_mod	true
50	notice	_	notice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_op1	true
51	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	46	APP_o	true
52	roughly	_	roughly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	equivalent	_	equivalent	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	51	APP_op2	true
54	size)	_	size)	XX	O	_	and	_	0	IGNORE	true
55	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@s@@have-03, 1@@d@@i, 53@@d@@equivalent-01, 5@@s@@good-02, 2@@s@@think-01, 41@@d@@look-02, 43@@d@@feel-01, 31@@p@@idea, 13@@n@@_NAME_, 30@@m@@more, 17@@r@@lawyer, 49@@p@@copyright-01, 50@@d@@notice, 9@@p@@provisional, 30@@b@@good-02, 39@@a@@and, 52@@p@@roughly, 38@@s@@place-01, 25@@s@@application, 35@@d@@word, 46@@s@@guess-01, 6@@d@@idea, 40@@s@@appropriate-02, 47@@s@@near-02, 44@@d@@_NAME_, 36@@s@@recommend-01, 42@@a@@and, 24@@d@@patent-01, 26@@s@@cause-01, 7@@s@@cause-01, 16@@s@@internal, 10@@d@@apply-01, 21@@s@@care-03, 51@@a@@and]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	need	_	need	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	8	MOD_mod	true
4	more,	_	more,	NNS	O	_	_NAME_	_	0	IGNORE	true
5	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	proposal	_	proposal	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	propose-01	(s(), o())	0	ROOT	true
9	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	documentation	_	documentation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	committee	_	committee	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	for	_	for	IN	O	_	thing	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	alternative	_	alternative	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
17	for	_	for	IN	O	_	thing	_	0	IGNORE	true
18	calculating	_	calculate	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	true
19	termination	_	termination	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	amounts	_	amount	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	(we	_	(we	VBN	O	_	$LEMMA$	_	0	IGNORE	true
22	heard	_	hear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
23	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	Amsterdam)	_name_	Amsterdam)	NNP	O	_	and	_	0	IGNORE	true
27	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	29	APP_s	true
29	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	MOD_o	true
30	will	_	will	MD	O	_	thing	_	0	IGNORE	true
31	be	_	be	VB	O	_	person	_	0	IGNORE	true
32	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	33	MOD_mod	true
33	attractive	_	attractive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	attract-01	(s(), o())	16	MOD_s	true
34	to	_	to	IN	O	_	thing	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	energy	_	energy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	markets	_	market	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@p@@termination, 3@@m@@need-01, 32@@p@@particular, 36@@p@@energy, 28@@d@@i, 33@@s@@attract-01, 20@@d@@amount, 8@@s@@propose-01, 12@@d@@committee, 29@@s@@think-01, 37@@d@@market, 22@@s@@hear-01, 2@@d@@you, 15@@s@@new-01, 16@@d@@alternative, 11@@p@@documentation, 18@@r@@calculate-01]
sentence=1	Ineos	_name_	Ineos	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	name	_	0	IGNORE	true
3	an	_	an	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	name	(mod())	5	MOD_mod	true
4	English	_name_	english	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	company	_	company	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
8	a	_	a	DT	O	_	include-91	_	0	IGNORE	true
9	majority	_	majority	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
12	operations	_	operation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	in	_	in	IN	O	_	event	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	12	MOD_mod	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@p@@_NAME_, 1@@n@@_NAME_, 9@@p@@majority, 1@@c@@company, 15@@n@@_NAME_, 5@@r@@company, 3@@explicitanon0@@name, 7@@s@@have-03, 15@@c@@country, 12@@d@@operation]
sentence=1	Attached	attached	attach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	an	_	an	DT	O	_	thing	_	0	IGNORE	true
4	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
6	blacklined	_	blacklined	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	copy	_	copy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
10	form	_	form	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_s	true
11	of	_	of	IN	O	_	thing	_	0	IGNORE	true
12	guaranty,	_	guaranty,	NNP	O	_	_NAME_	_	0	IGNORE	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	reflect	_	reflect	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
15	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	comments	_	comment	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@s@@copy-01, 1@@s@@attach-01, 9@@d@@your, 16@@s@@comment-01, 10@@m@@form, 6@@s@@blacklined-01, 4@@p@@original, 14@@s@@reflect-01, 15@@d@@our]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	oppose-01	_	0	IGNORE	true
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
5	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
8	sign-flipping	_	sign-flipping	JJ	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
9	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
10	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
11	PUTS	puts	put	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	's	_	be	VBZ	O	_	thing	_	0	IGNORE	true
14	causing	_	cause	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	issue	_	issue	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_o	true
18	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@s@@cause-01, 8@@a@@sign-flipping-01, 15@@p@@this, 16@@p@@whole, 11@@a@@put, 9@@d@@problem, 17@@d@@issue-02, 5@@s@@possible-01, 2@@s@@believe-01, 1@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	oppose-01	_	0	IGNORE	true
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
5	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
8	sign-flipping	_	sign-flipping	JJ	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
9	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
10	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
11	PUTS	puts	put	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	's	_	be	VBZ	O	_	thing	_	0	IGNORE	true
14	causing	_	cause	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	issue	_	issue	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_o	true
18	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@d@@i, 9@@d@@problem, 14@@s@@cause-01, 11@@a@@put, 16@@p@@whole, 15@@p@@this, 17@@d@@issue-02, 5@@s@@possible-01, 8@@a@@sign-flipping-01, 2@@s@@believe-01]
sentence=1	Attached	attached	attached	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	revised	_	revised	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
5	draft	_	draft	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	paper	_	paper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	reflects	_	reflect	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	conference	_	conference	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	call	_	call	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	APP_o	true
12	with	_	with	IN	O	_	i	_	0	IGNORE	true
13	Bob_Fagan	_name_	Fagan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	earlier_this_week	_name_	week	NN	O	(n3<root> / --LEX--  :name-of (f / festival  :time-of (t<mod>)))	_NAME_	(mod())	11	MOD_mod	true
15	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[11@@s@@call-03, 13@@n@@_NAME_, 9@@d@@our, 1@@s@@attached, 14@@n3@@_NAME_, 6@@d@@paper, 4@@s@@revised-01, 13@@p@@person, 10@@p@@conference, 8@@s@@reflect-01, 5@@s@@draft-01, 14@@f@@festival]
sentence=1	Also,	_name_	Also,	NNP	O	_	say-01	_	0	IGNORE	true
2	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
3	those	_	those	DT	O	(d<root> / --LEX--)	that	()	9	APP_s	true
4	of	_	of	IN	O	(p<root> / person  :ARG1-of (p2 / --LEX--  :ARG2 (g<s>)))	include-91	(s())	3	MOD_s	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
6	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
7	have	_	have	VBP	O	_	person	_	0	IGNORE	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	responded	_	respond	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	to	_	to	IN	O	_	person	_	0	IGNORE	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	via	_	via	IN	O	_	i	_	0	IGNORE	true
13	email	_	email	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	confirming	_	confirm	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
16	acceptance	_	acceptance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	accept-01	(s())	14	APP_o	true
17	of	_	of	IN	O	_	i	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	terms	_	term	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	APP_s	true
20	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
23	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	24	MOD_mod	true
24	companies	_	company	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	26	APP_s	true
25	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	9	APP_o	true
26	agreed	_	agree	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	APP_mod	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	assume	_	assume	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_o	true
29	cost	_	cost	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_s	true
30	responsibility	_	responsibility	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	responsible-03	(s(), o())	28	APP_o	true
31	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
32	the	_	the	DT	O	_	thing	_	0	IGNORE	true
33	TCA	_name_	TCA	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	APP_o	true
35	on	_	on	IN	O	_	thing	_	0	IGNORE	true
36	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@d@@our, 19@@p@@term-01, 23@@explicitanon0@@4, 3@@d@@that, 34@@s@@work-01, 9@@s@@respond-01, 25@@s@@person, 4@@p2@@include-91, 33@@n@@_NAME_, 8@@explicitanon0@@-, 24@@m@@company, 13@@l@@email, 16@@s@@accept-01, 14@@s@@confirm-01, 30@@s@@responsible-03, 28@@s@@assume-01, 5@@d@@you, 36@@d@@this, 26@@c@@agree-01, 4@@p@@person, 33@@o2@@organization, 29@@d@@cost-01]
sentence=1	A	a	a	DT	O	_	person	_	0	IGNORE	true
2	formal	_	formal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	invitation	_	invitation	NN	O	(d<root> / --LEX--)	invite-01	()	5	APP_s	true
4	will	_	will	MD	O	_	person	_	0	IGNORE	true
5	follow	_	follow	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	person	_	0	IGNORE	true
7	those	_	those	DT	O	_	that	_	0	IGNORE	true
8	who	_	who	WP	O	(d<root> / --LEX--)	person	()	5	APP_o	true
9	respond	_	respond	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
10	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@s@@follow-01, 3@@d@@invite-01, 2@@p@@formal, 8@@d@@person, 9@@s@@respond-01]
sentence=1	All	all	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	outside	_	outside	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	participants	_	participant	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	participate-01	()	7	APP_s	true
5	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	prompted	_	prompt	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
8	to	_	to	TO	O	_	and	_	0	IGNORE	true
9	enter	_	enter	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	access	_	access	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
12	code,	_	code,	NN	O	_	and	_	0	IGNORE	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
15	600-480	_	600-480	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	11	MOD_mod	true
16	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[9@@s@@enter-01, 4@@p2@@person, 15@@explicitanon0@@_NUMBER_, 1@@p@@all, 7@@o@@prompt-01, 3@@p@@outside, 4@@e2@@participate-01, 11@@d@@access-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
3	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	be-located-at-91	_	0	IGNORE	true
5	thank	_	thank	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	parties	_	party	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
11	participated	_	participate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	settlement	_	settlement	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	process.	_	process.	JJ	O	_	_NAME_	_	0	IGNORE	true
16	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[11@@s@@participate-01, 16@@explicitanon0@@interrogative, 6@@p@@all, 9@@d@@party, 13@@p@@this, 1@@d@@i, 3@@c@@like-02, 14@@d@@settlement, 5@@s@@thank-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	have	_	have	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	settlement	_	settlement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	settle-02	(s())	3	APP_o	true
6	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	3	MOD_s	true
8	Commission	_name_	Commission	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
11	ratepayer	_	ratepayer	NN	O	(d<root> / --LEX--)	pay-01	()	34	APP_op2	true
12	advocates,	_	advocates,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_o	true
13	commercial	_	commercial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	commerce	(mod())	11	MOD_mod	true
14	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
15	industrial	_	industrial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	industry	(mod())	14	MOD_mod	true
16	customers,	_	customers,	NNS	O	_	and	_	0	IGNORE	true
17	electric	_	electric	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
18	generators,	_	generators,	NNS	O	_	and	_	0	IGNORE	true
19	marketers,	_	marketers,	NNP	O	_	and	_	0	IGNORE	true
20	shippers,	_	shippers,	JJ	O	_	and	_	0	IGNORE	true
21	independent	_	independent	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	depend-01	(s())	24	MOD_s	true
22	storage	_	storage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_o	true
23	providers,?	_	providers,?	NN	O	_	mean-01	_	0	IGNORE	true
24	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
25	suppliers,?	_	suppliers,?	NN	O	_	mean-01	_	0	IGNORE	true
26	producers,	_	producers,	NNP	O	_	mean-01	_	0	IGNORE	true
27	utilities,	_name_	utilities,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_s	true
28	aggregators,	_	aggregators,	NNS	O	_	mean-01	_	0	IGNORE	true
29	pipeline	_	pipeline	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op3	true
30	companies,	_name_	companies,	NNP	O	_	and	_	0	IGNORE	true
31	wholesale	_	wholesale	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
32	customers,	_	customers,	NNS	O	_	and	_	0	IGNORE	true
33	municipalities,	_	municipalities,	NNS	O	_	and	_	0	IGNORE	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	MOD_op1	true
35	retail	_	retail	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	36	MOD_mod	true
36	mass	_	mass	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
37	marketers,	_	marketers,	NNS	O	_	and	_	0	IGNORE	true
38	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
39	others.	_	others.	PRP	O	_	company	_	0	IGNORE	true
40	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[12@@s@@and, 7@@s@@person, 35@@p@@retail-01, 2@@n@@now, 13@@p@@commerce, 1@@d@@We, 11@@d@@pay-01, 29@@d@@pipeline, 5@@s@@settle-02, 34@@a@@and, 21@@s@@depend-01, 10@@s@@include-01, 8@@d@@Commission, 36@@p@@mass, 22@@s@@storage, 17@@p@@electric, 27@@s@@and, 31@@p@@wholesale, 24@@d@@gas, 40@@explicitanon0@@interrogative, 15@@p@@industry, 6@@n@@before, 14@@d@@and, 3@@b@@have-03]
sentence=1	Therefore,	therefore,	therefore,	CD	O	_	and	_	0	IGNORE	true
2	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	trade	_	trade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
4	mark	_	mark	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	registration	_	registration	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	register-02	(s())	23	APP_s	true
6	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
7	incorporates	_	incorporate	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	ONLINE	online	online	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	suffix	_	suffix	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	will	_	will	MD	O	_	person	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	enable	_	enable	VB	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
24	its	_	its	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
25	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	23	APP_o2	true
26	to	_	to	TO	O	_	person	_	0	IGNORE	true
27	prevent	_	prevent	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	23	APP_o	true
28	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
29	from	_	from	IN	O	_	-	_	0	IGNORE	true
30	using	_	use	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	27	APP_o2	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	word	_	word	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	ONLINE	online	online	RB	O	_	$LEMMA$	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@any, 10@@p@@online, 19@@s@@use-01, 23@@w@@enable-01, 13@@d@@suffix, 18@@d@@you, 25@@e2@@own-01, 3@@p@@trade-01, 4@@d@@mark, 28@@d@@other, 9@@d@@word, 7@@b@@incorporate-01, 27@@t@@prevent-01, 25@@p2@@person, 30@@s@@use-01, 22@@explicitanon0@@-, 5@@s@@register-02]
sentence=1	Given	given	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	thing	_	0	IGNORE	true
3	above,	_	above,	NNS	O	_	have-condition-91	_	0	IGNORE	true
4	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
6	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	1	MOD_mod	true
7	adequate	_	adequate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	protection	_	protection	NN	O	(l<root> / --LEX--  :ARG3 (b<s>))	protect-01	(s())	6	APP_o	true
9	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
12	ENRON	_name_	ENRON	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
13	(which	_	(which	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	covers	_	cover	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	services	_	service	NNS	O	(d<root> / --LEX--)	$LEMMA$-05	()	14	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	offer	_	offer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
20	on-line	_	on-line	RB	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	as	_	as	RB	O	_	and	_	0	IGNORE	true
22	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	as	_	as	IN	O	_	and	_	0	IGNORE	true
24	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
25	core	_	core	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	activities),	_	activities),	NNP	O	_	and	_	0	IGNORE	true
27	I'd	i'd	i'd	PRP	O	_	i	_	0	IGNORE	true
28	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
29	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	application	_	application	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	apply-01	(s())	39	APP_s	true
32	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
33	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
34	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	ENRON	enron	ENRON	NNP	O	_	thing	_	0	IGNORE	true
36	ONLINE	online	ONLINE	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
37	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
38	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	28	MOD_mod	true
39	unnecessary	_	unnecessary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	28	APP_o	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@n@@_NAME_, 6@@m@@have-03, 19@@s@@offer-01, 34@@d@@word, 1@@s@@give-01, 30@@p@@another, 36@@p@@ONLINE, 38@@p@@probable, 24@@d@@your, 8@@l@@protect-01, 11@@d@@word, 7@@p@@adequate, 16@@d@@service-05, 20@@d@@on-line, 25@@p@@core, 14@@s@@cover-01, 31@@s@@apply-01, 39@@s@@need-01, 28@@s@@say-01, 5@@d@@you]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	received	_	receive	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	amendment	_	amendment	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	amend-01	(s())	3	APP_o	true
6	to	_	to	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	BC	bc	BC	NNP	O	_	_NAME_	_	0	IGNORE	true
9	Gas	gas	Gas	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
10	ISDA	isda	ISDA	NNP	O	(c<root> / company  :name (n / --LEX--)  :mod-of (o<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	Master	master	Master	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
12	executed	_	execute	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
13	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	BC_Gas,	_name_	Gas,	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	adds	_	add	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
17	the_Canadian_Securities_Representation,	_name_	Representation,	NFP	O	_	-	_	0	IGNORE	true
18	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_s	true
19	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	18	APP_o	true
22	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
23	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	21	APP_s	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	rep	_	rep	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	into	_	into	IN	O	_	-	_	0	IGNORE	true
27	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	confirm	_	confirm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@cause-01, 3@@b@@receive-01, 21@@s@@obligate-01, 20@@explicitanon0@@-, 12@@s@@execute-01, 5@@s@@amend-01, 11@@d@@Master, 28@@d@@confirm, 10@@n@@_NAME_, 23@@s@@add-02, 9@@d@@Gas, 1@@d@@We, 10@@c@@company, 25@@d@@rep, 16@@s@@add-02, 14@@c@@company, 27@@p@@every, 14@@n@@_NAME_]
sentence=1	Despite	despite	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	have-concession-91	_	0	IGNORE	true
3	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	4	MOD_s	true
4	efforts	_	effort	NNS	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	$LEMMA$-01	(mod(), s(), o())	35	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	IT,	it,	it,	CD	O	_	thing	_	0	IGNORE	true
7	continuing	_	continue	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	the	_	the	DT	O	_	12	_	0	IGNORE	true
11	AS400	as400	as400	NN	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
12	application,	_	application,	CD	O	_	and	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	15	MOD_s	true
15	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	understand-01	(s())	23	APP_op1	true
16	of	_	of	IN	O	_	-	_	0	IGNORE	true
17	the	_	the	DT	O	_	-	_	0	IGNORE	true
18	inconsistency	_	inconsistency	NN	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	$LEMMA$	(s())	15	APP_s	true
19	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	stock	_	stock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	reconciliation	_	reconciliation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
22	reports,	_	reports,	NNS	O	_	and	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	35	APP_s	true
24	concerns	_	concern	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
25	over	_	over	IN	O	_	-	_	0	IGNORE	true
26	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
27	useability	_	useability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	afford-01	(s())	24	APP_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	outright	_	outright	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
31	stock	_	stock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
32	screen	_	screen	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_s	true
33	enquiry	_	enquiry	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	27	APP_s	true
34	are	_	be	VBP	O	_	person	_	0	IGNORE	true
35	such	_	such	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
36	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
37	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	41	APP_s	true
38	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
39	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	41	MOD_mod	true
40	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	41	MOD_mod	true
41	confident	_	confident	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	35	APP_o	true
42	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
43	delivering	_	deliver	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	41	APP_o	true
44	sufficient	_	sufficient	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	suffice-01	(s())	46	MOD_s	true
45	accurate	_	accurate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
47	to	_	to	IN	O	_	thing	_	0	IGNORE	true
48	AA	_name_	AA	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	43	APP_o	true
49	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
50	satisfy	_	satisfy	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	43	MOD_mod	true
51	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
52	audit	_	audit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	53	MOD_mod	true
53	requirements	_	requirement	NNS	O	(d<root> / --LEX--)	require-01	()	50	APP_s	true
54	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
55	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
56	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
57	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
58	macro	_	macro	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	59	MOD_mod	true
59	level	_	level	NN	O	(l<root> / --LEX--  :prep-at-of (f<mod>))	$LEMMA$	(mod())	64	MOD_mod	true
60	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
61	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
62	transparent	_	transparent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	64	MOD_mod	true
63	audit	_	audit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	64	MOD_mod	true
64	trail	_	trail	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
65	between	_	between	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	35	MOD_mod	true
66	stock	_	stock	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	69	MOD_mod	true
67	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
68	forward	_	forward	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	69	MOD_mod	true
69	positions	_	position	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	64	MOD_mod	true
70	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
71	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
72	accounting	_	accounting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
73	values	_	value	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	65	APP_op1	true
74	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[53@@d@@require-01, 35@@s@@cause-01, 62@@p@@transparent, 72@@p@@accounting, 18@@explicitanon0@@-, 30@@p@@outright, 64@@p@@trail, 48@@c@@company, 41@@s@@confident-01, 14@@b@@good-02, 44@@s@@suffice-01, 23@@a@@and, 32@@s@@screen-01, 40@@explicitanon0@@-, 45@@p@@accurate, 63@@p@@audit-01, 50@@i@@satisfy-01, 31@@d@@stock, 33@@s@@enquiry, 69@@p@@position-02, 46@@d@@information, 52@@p@@audit-01, 18@@p@@inconsistency, 11@@explicitanon2@@_NUMBER_, 43@@s@@deliver-01, 4@@c2@@effort-01, 7@@s@@continue-01, 65@@b@@between, 20@@d@@stock, 8@@d@@problem, 27@@s@@afford-01, 58@@p@@macro, 59@@l@@level, 73@@d@@value, 11@@d@@date-entity, 3@@b2@@good-02, 37@@d@@i, 15@@s@@understand-01, 66@@p@@stock, 24@@s@@concern-01, 3@@m@@most, 48@@n@@_NAME_, 68@@p@@forward, 14@@m@@more, 71@@p@@full, 21@@s@@reconciliation-01, 39@@n@@current]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	creation	_	creation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	create-01	(s())	0	ROOT	true
3	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	incentive	_	incentive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	incentivize-01	(mod())	6	MOD_mod	true
6	payment	_	payment	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	pay-01	(mod())	7	MOD_mod	true
7	pool	_	pool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
8	(	_	(	-LRB-	O	_	and	_	0	IGNORE	true
9	possibly	_	possibly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
10	via	_	via	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
12	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	13	MOD_s	true
13	awards	_	award	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
14	)	_	)	-RRB-	O	_	and	_	0	IGNORE	true
15	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
16	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
17	Metals	metals	Metals	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
18	staff	_	staff	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	28	MOD_s	true
19	who	_	who	WP	O	_	person	_	0	IGNORE	true
20	continue	_	continue	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_o	true
21	to	_	to	TO	O	_	person	_	0	IGNORE	true
22	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
23	exceptionally	_	exceptionally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	incredible	(mod())	24	MOD_mod	true
24	unsociable	_	unsociable	JJ	O	(p<root> / --LEX--  :ARG1 (g<s>)  :ARG1-of (p2 / possible-01))	tax-01	(s())	25	MOD_s	true
25	hours	_	hour	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
27	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	22	MOD_mod	true
28	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	2	MOD_mod	true
29	above	_	above	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	stated	_	state	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
31	objective	_	objective	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
32	s	_	s	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@s@@key-02, 5@@p@@incentivize-01, 9@@s@@possible-01, 22@@s@@work-01, 25@@d@@hour, 12@@b2@@good-02, 13@@s@@award-01, 31@@d@@objective, 24@@p@@tax-01, 23@@s@@incredible, 18@@h@@have-org-role-91, 18@@g@@staff, 7@@d@@pool, 29@@b@@above, 17@@d@@Metals, 6@@p@@pay-01, 12@@m@@most, 30@@s@@state-01, 28@@p@@person, 24@@p2@@possible-01, 11@@s@@personal-02, 27@@s@@meet-01, 2@@s@@create-01, 20@@s@@continue-01]
sentence=1	The	the	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	2	APP_s	true
2	signoff	_	signoff	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
3	for	_	for	IN	O	_	and	_	0	IGNORE	true
4	additional	_	additional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	add-02	(mod())	7	MOD_mod	true
5	permanent	_	permanent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	'Enron'	'enron'	'enron'	JJ	O	_	-	_	0	IGNORE	true
7	headcount	_	headcount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
8	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
9	will	_	will	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	2	MOD_s	true
10	'duplicate'	_	'duplicate'	XX	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
11	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
12	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
13	position	_	position	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
15	processes	_	process	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_o	true
16	ultimately	_	ultimately	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ultimate	(mod())	17	MOD_mod	true
17	replacing	_	replace	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
18	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	existing	_	exist	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
20	Traffic	traffic	traffic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
21	staf	_	staf	JJ	O	_	_NAME_	_	0	IGNORE	true
22	f	_	f	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@s@@process-02, 13@@d@@position, 1@@s@@person, 4@@p@@add-02, 14@@s@@control-01, 2@@s@@signoff, 16@@p@@ultimate, 7@@d@@headcount, 17@@s@@replace-01, 19@@s@@exist-01, 5@@p@@permanent, 11@@p@@certain, 10@@s@@cause-01, 20@@d@@traffic, 18@@p@@some, 12@@s@@key-02, 9@@s@@person]
sentence=1	Complexities	complexities	complexity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
2	surrounding	_	surround	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	operation	_	operation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	operate-01	(s())	2	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the_Off_Balance_Sheet_Facility	_name_	facility	NN	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
7	("OBSF")	("obsf")	("obsf")	NN	O	_	oppose-01	_	0	IGNORE	true
8	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	commenced	_	commence	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	two_weeks_before_the_year_end	_name_	end	NN	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	9	APP_o	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@c@@company, 10@@explicitanon0@@_NAME_, 2@@s@@surround-01, 10@@u@@url-entity, 1@@d@@complexity, 9@@s@@commence-01, 6@@n@@_NAME_, 4@@s@@operate-01]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	discovery	_	discovery	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	discover-01	(s())	0	ROOT	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	'bugs'	_	'bugs'	XX	O	_	include-91	_	0	IGNORE	true
8	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	AS400	as400	as400	NN	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	Merchanting	merchanting	Merchanting	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	20	MOD_mod	true
12	code,	_	code,	NNP	O	_	cause-01	_	0	IGNORE	true
13	arising	_	arise	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
14	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	release	_	release	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	OBSF	_name_	OBSF	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	designed	_	design	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
20	functionality,	_	functionality,	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
21	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
22	compounded	_	compound	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
23	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
24	operational	_	operational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	operation	(mod())	25	MOD_mod	true
25	burden	_	burden	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
26	of	_	of	IN	O	_	thing	_	0	IGNORE	true
27	supporting	_	support	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	OBSF	_name_	OBSF	NNP	O	_	i	_	0	IGNORE	true
30	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[24@@p@@operation, 25@@s@@burden-01, 18@@g@@government-organization, 16@@s@@release-01, 13@@s@@arise-01, 5@@explicitanon0@@number, 27@@d@@support-01, 2@@s@@discover-01, 11@@p@@Merchanting-01, 18@@n@@_NAME_, 10@@d@@date-entity, 20@@d@@functionality,, 22@@s@@compound-01, 10@@explicitanon2@@_NAME_, 19@@s@@design-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	internal	_	internal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
4	balance	_	balance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	sheet	_	sheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	review	_	review	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
7	will	_	will	MD	O	_	thing	_	0	IGNORE	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	completed	_	complete	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
10	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	12	_	0	IGNORE	true
12	Q1	q1	Q1	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
13	audit	_	audit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	14	MOD_mod	true
14	timetable	_	timetable	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
15	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
16	incorporate	_	incorporate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	s	_	s	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[14@@n@@timetable, 9@@s@@complete-01, 3@@s@@internal-02, 12@@p@@_NAME_, 2@@p@@full, 4@@p@@balance, 13@@p@@audit-01, 16@@s@@incorporate-01, 5@@d@@sheet, 6@@s@@review-01]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	send	_	send	VB	O	(g<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (b<o>)  :ARG2 (i<s>)  :ARG0 (y / you))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	excel	_	excel	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	spreadsheet	_	spreadsheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
8	depicts	_	depict	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	value	_	value	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
13	see	_	see	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	associated	_	associate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
15	with	_	with	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	heat	_	heat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	rate	_	rate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	spread	_	spread	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-02	(mod(), s())	20	MOD_mod	true
20	option	_	option	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@g@@send-01, 1@@explicitanon0@@+, 12@@d@@you, 6@@d@@spreadsheet, 2@@explicitanon0@@imperative, 2@@y@@you, 8@@s@@depict-01, 5@@n@@_NAME_, 19@@i@@spread-02, 10@@d@@value, 17@@p@@heat, 14@@s@@associate-01, 20@@d@@option, 13@@s@@see-01, 18@@d@@rate]
sentence=1	Article_6_of_the_Gallup_Compression_Services_Agreement	_name_	Agreement	NNP	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
2	(which	_	(which	.	O	_	$LEMMA$	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	am	_	be	VBP	O	_	person	_	0	IGNORE	true
5	sending	_	send	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	MOD_o	true
6	to	_	to	IN	O	_	and	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
8	separately)	_	separately)	VBP	O	_	and	_	0	IGNORE	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	ECS	_name_	ECS	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
11	obligates	_	obligate	VBZ	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
12	ECS	_name_	ECS	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	11	APP_o2	true
13	to	_	to	IN	O	_	company	_	0	IGNORE	true
14	"work	_	"work	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
15	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
16	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	faith	_	faith	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	CDEC"	_name_	CDEC"	NNP	O	_	_NAME_	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	establish	_	establish	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	14	MOD_mod	true
22	an	_	an	DT	O	_	1	_	0	IGNORE	true
23	automated	_	automate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	automate-01	(s())	24	MOD_s	true
24	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	would	_	would	MD	O	_	thing	_	0	IGNORE	true
27	automatically	_	automatically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	29	MOD_mod	true
28	have	_	have	VB	O	_	person	_	0	IGNORE	true
29	alerted	_	alert	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	24	MOD_s	true
30	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
31	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
32	peak	_	peak	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	loading	_	loading	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	34	MOD_mod	true
34	conditions	_	condition	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o2	true
35	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	CDEC's	cdec's	cdec's	JJ	O	_	_NAME_	_	0	IGNORE	true
37	system	_	system	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@b@@send-01, 12@@n@@_NAME_, 1@@l@@law, 10@@n@@_NAME_, 21@@i@@establish-01, 7@@d@@you, 16@@s@@good-02, 30@@d@@us, 14@@s@@"work-01, 34@@d@@condition, 32@@p@@peak, 27@@t@@automatic, 23@@s@@automate-01, 3@@d@@i, 24@@d@@system, 33@@p@@loading-01, 12@@c@@company, 1@@n@@_NAME_, 37@@b@@system, 11@@w@@obligate-01, 17@@t@@faith, 29@@b@@alert-01]
sentence=1	Do	do	Do	VBP	O	_	person	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	prove-01	_	0	IGNORE	true
7	watching	_	watch	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	out	_	out	RP	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
10	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
11	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[9@@b@@out, 11@@explicitanon0@@interrogative, 3@@s@@have-03, 2@@d@@we, 4@@d@@someone, 7@@s@@watch-01, 10@@d@@there, 8@@d@@this]
sentence=1	James	_name_	James	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	had	_	have	VBD	O	_	person	_	0	IGNORE	true
3	heard	_	hear	VBN	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
4	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	one	_	one	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	6	MOD_mod	true
6	hold	_	hold	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-03	(s())	3	MOD_s	true
7	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	and	_	0	IGNORE	true
10	absence	_	absence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	absent-01	(s())	3	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	a	_	a	DT	O	_	-	_	0	IGNORE	true
13	confidentiality	_	confidentiality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	agreement--I	agreement--i	agreement--I	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	guess	_	guess	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
16	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	ECS	_name_	ECS	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
19	Transwestern--that	transwestern--that	transwestern--that	WP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	_NAME_	(mod())	15	MOD_mod	true
20	would	_	would	MD	O	_	name	_	0	IGNORE	true
21	permit	_	permit	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	MOD_s	true
22	ECS	_name_	ECS	NNP	O	_	_NAME_	_	0	IGNORE	true
23	to	_	to	TO	O	_	name	_	0	IGNORE	true
24	communicate	_	communicate	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_o	true
25	to	_	to	IN	O	_	and	_	0	IGNORE	true
26	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o2	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	details	_	detail	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o	true
29	on	_	on	IN	O	_	thing	_	0	IGNORE	true
30	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
31	to	_	to	TO	O	_	thing	_	0	IGNORE	true
32	access	_	access	VB	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	28	MOD_mod	true
33	teh	_	teh	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	3	MOD_mod	true
34	key	_	key	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	32	MOD_s	true
35	info.	_	info.	RB	O	_	thing	_	0	IGNORE	true
36	from	_	from	IN	O	_	thing	_	0	IGNORE	true
37	CDEC	_name_	CDEC	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	32	APP_s	true
38	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[21@@c@@permit-01, 37@@o2@@organization, 24@@b@@communicate-01, 19@@explicitanon0@@_NAME_, 5@@explicitanon0@@1, 6@@s@@hold-up-03, 1@@n@@_NAME_, 3@@w@@hear-01, 26@@d@@us, 37@@n@@_NAME_, 34@@s@@key-02, 1@@p@@person, 13@@p@@confidentiality, 15@@s@@guess-01, 33@@p@@thing, 18@@d@@and, 10@@s@@absent-01, 32@@r@@access-01, 17@@n@@_NAME_, 14@@d@@agreement--I, 28@@d@@detail-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	received	_	receive	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	access	_	access	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
6	to	_	to	IN	O	_	-	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
11	resulted	_	result	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
13	far	_	far	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	so-$LEMMA$	(mod())	11	MOD_mod	true
14	in	_	in	IN	O	_	after	_	0	IGNORE	true
15	additional	_	additional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	electric	_	electric	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	cost	_	cost	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	$200,987.33	_	$200,987.33	NN	O	(d<root> / --LEX--)	_NUMBER_	()	17	APP_o	true
20	for	_	for	IN	O	_	date-interval	_	0	IGNORE	true
21	the	_	the	DT	O	_	date-interval	_	0	IGNORE	true
22	period	_	period	NN	O	_	date-interval	_	0	IGNORE	true
23	of	_	of	IN	O	_	date-interval	_	0	IGNORE	true
24	July	july	July	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	7	()	17	APP_s	true
25	through	_	through	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
26	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--))	9	()	25	APP_op1	true
27	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[5@@s@@access-01, 26@@explicitanon0@@9, 16@@p@@electric, 7@@p@@this, 19@@d@@_NUMBER_, 13@@n@@so-far, 11@@s@@result-01, 15@@p@@additional, 24@@d@@date-entity, 17@@s@@cost-01, 1@@d@@We, 8@@d@@information, 4@@c@@receive-01, 25@@w@@through, 24@@explicitanon0@@7, 3@@explicitanon0@@-, 26@@d@@date-entity]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
3	deemed	_	deem	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	APP_op1	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
7	notice	_	notice	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
8	that	_	that	IN	O	_	and	_	0	IGNORE	true
9	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	18	APP_s	true
11	alternate	_	alternate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	right-05	(s())	10	APP_s	true
14	(its	_	(its	XX	O	_	$LEMMA$	_	0	IGNORE	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	tariff)	_	tariff)	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
19	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
20	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	wanted	_	want	VBD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	36	MOD_mod	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	submit	_	submit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
24	a	_	a	DT	O	_	thing	_	0	IGNORE	true
25	bid	_	bid	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
26	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
27	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	25	MOD_s	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	30	MOD_s	true
30	rate	_	rate	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	27	APP_o	true
31	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
32	primaries	_	primary	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	30	APP_s	true
34	alternates,	_	alternates,	NNS	O	_	and	_	0	IGNORE	true
35	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	APP_op2	true
37	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
38	done	_	do	VBN	O	_	$LEMMA$-02	_	0	IGNORE	true
39	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@They, 13@@s@@right-05, 25@@d@@bid-01, 21@@o@@want-01, 7@@s@@notice-01, 12@@d@@point, 29@@s@@differ-02, 33@@a@@and, 27@@s@@have-03, 32@@d@@primary, 36@@s@@possible-01, 3@@s@@deem-01, 23@@s@@submit-01, 10@@s@@have-03, 30@@s@@rate, 11@@p@@alternate, 18@@a@@and]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	commission	_	commission	NN	O	(d<root> / --LEX--)	$FORM$	()	6	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	6	MOD_mod	true
5	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	responsive	_	responsive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
7	to	_	to	IN	O	_	instead-of-91	_	0	IGNORE	true
8	market	_	market	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	participants	_	participant	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	participate-01	(s())	6	APP_o	true
10	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
11	are	_	be	VBP	O	_	person	_	0	IGNORE	true
12	articulating	_	articulate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	issue,	_	issue,	NNP	O	_	and	_	0	IGNORE	true
15	providing	_	provide	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
16	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	examples	_	example	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
19	proposing	_	propose	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	solution	_	solution	NN	O	(d<root> / --LEX--)	solve-01	()	19	APP_s	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@p@@person, 17@@d@@example, 6@@s@@responsive-02, 2@@d@@commission, 5@@s@@more, 4@@p@@definite, 9@@w@@participate-01, 16@@s@@specific-02, 12@@s@@articulate-01, 8@@d@@market, 15@@s@@provide-01, 18@@a@@and, 19@@s@@propose-01, 21@@d@@solve-01]
sentence=1	Those	those	those	DT	O	_	that	_	0	IGNORE	true
2	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
3	show	_	show	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	12	MOD_s	true
4	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	complaints	_	complaint	NNS	O	(d<root> / --LEX--  :ARG0 (h<s>)  :manner-of (a<mod>))	complain-01	(mod(), s())	3	MOD_mod	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	14	MOD_s	true
8	cannot	_	cannot	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	APP_o	true
9	point	_	point	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
10	to	_	to	IN	O	_	person	_	0	IGNORE	true
11	specifics	_	specific	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	14	APP_s	true
13	virtually	_	virtually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	virtual	(mod())	14	MOD_mod	true
14	ignored	_	ignore	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
15	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[13@@p@@virtual, 14@@s@@ignore-01, 8@@s@@possible-01, 7@@s@@contrast-01, 11@@d@@specific, 6@@d@@complain-01, 9@@s@@point-01, 12@@d@@person, 3@@s@@show-up-02]
sentence=1	Those	those	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	25	MOD_mod	true
2	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
3	show	_	show	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	1	MOD_s	true
4	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
5	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
6	complain,	_	complain,	NNS	O	_	and	_	0	IGNORE	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	25	MOD_s	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	participating	_	participate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	APP_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	daily	_name_	daily	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	19	MOD_mod	true
18	Ercot	_name_	Ercot	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	phone	_	phone	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	APP_op2	true
20	calls,	_name_	calls,	NNP	O	_	and	_	0	IGNORE	true
21	board	_	board	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	meetings,	_	meetings,	NNP	O	_	and	_	0	IGNORE	true
23	etc.	_	etc.	FW	O	(d<root> / --LEX--)	et-cetera	()	15	APP_op3	true
24	are	_	be	VBP	O	_	person	_	0	IGNORE	true
25	ignored	_	ignore	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@d@@board, 17@@r@@rate-entity-91, 17@@d@@day, 10@@s@@participate-01, 13@@s@@work-01, 7@@s@@contrast-01, 1@@p@@that, 17@@t@@temporal-quantity, 14@@d@@group, 25@@s@@ignore-01, 5@@d@@and, 19@@s@@phone, 9@@explicitanon0@@-, 3@@s@@show-up-02, 15@@a@@and, 23@@d@@et-cetera, 18@@p@@_NAME_]
sentence=1	Can	can	Can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
4	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	works	_	work	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	5	MOD_s	true
8	for	_	for	IN	O	_	opine-01	_	0	IGNORE	true
9	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	to	_	to	TO	O	_	permit-01	_	0	IGNORE	true
11	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	5	MOD_s	true
12	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true

nodealignment=[1@@s@@possible-01, 2@@d@@we, 5@@d@@time, 7@@s@@work-09, 12@@explicitanon0@@interrogative, 11@@s@@meet-03, 3@@s@@find-01, 4@@p@@another]
sentence=1	Let's	let's	Let's	NNPS	O	(d<root> / --LEX--)	_NAME_	()	2	APP_s	true
2	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	0	ROOT	true
3	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	support	_	support	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	constructive	_	constructive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	solutions	_	solution	NNS	O	(d<root> / --LEX--)	solve-01	()	5	APP_o	true
8	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
9	will	_	will	MD	O	_	thing	_	0	IGNORE	true
10	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	a	_	a	DT	O	_	person	_	0	IGNORE	true
12	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	13	MOD_s	true
13	difference	_	difference	NN	O	(d<root> / --LEX--)	differ-02	()	10	APP_o	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@s@@support-01, 7@@d@@solve-01, 6@@s@@constructive-02, 10@@s@@make-01, 1@@d@@_NAME_, 12@@s@@real-04, 13@@d@@differ-02, 3@@d@@they, 2@@s@@get-04]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
3	outgrowth	_	outgrowth	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	19	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	3	APP_s	true
7	Leslie	_name_	Leslie	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_op2	true
10	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
11	with	_	with	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Scott	_name_	Scott	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (u<op1>)  :op2 (b2<op2>)  :accompanier-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
14	Hunter	_name_	Hunter	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op2	true
15	a_couple_of_weeks	_name_	week	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	ago,	_	ago,	DT	O	_	_NAME_	_	0	IGNORE	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	have	_	have	VBP	O	_	person	_	0	IGNORE	true
19	begun	_	begin	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
20	work	_	work	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	APP_o	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	develop	_	develop	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_o	true
23	an	_	an	DT	O	_	thing	_	0	IGNORE	true
24	electronic	_	electronic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
28	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
29	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	and	_	0	IGNORE	true
31	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_o	true
32	ongoing	_	ongoing	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	go-on-15	(s())	33	MOD_s	true
33	summaries	_	summary	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
34	of	_	of	IN	O	_	and	_	0	IGNORE	true
35	FERC	_name_	FERC	NNP	O	(o2<root> / organization  :name (n3 / --LEX--)  :mod-of (a<mod>))	_NAME_	(mod())	36	MOD_mod	true
36	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
37	activities,	_	activities,	NNS	O	_	and	_	0	IGNORE	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_s	true
39	possibly	_	possibly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	40	MOD_s	true
40	electric	_	electric	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op2	true
41	activities,	_	activities,	NNS	O	_	thing	_	0	IGNORE	true
42	in	_	in	IN	O	_	i	_	0	IGNORE	true
43	a	_	a	DT	O	_	1	_	0	IGNORE	true
44	format	_	format	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
45	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
46	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	48	MOD_s	true
47	be	_	be	VB	O	_	person	_	0	IGNORE	true
48	linked	_	link	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	44	MOD_s	true
49	to	_	to	IN	O	_	and	_	0	IGNORE	true
50	the	_	the	DT	O	_	person	_	0	IGNORE	true
51	Fundamentals	_name_	Fundamentals	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	53	MOD_mod	true
52	intranet	_	intranet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
54	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	53	MOD_o	true
55	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
56	the	_	the	DT	O	_	person	_	0	IGNORE	true
57	traders	_	trader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	trade-01	()	54	APP_s	true
58	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[54@@s@@use-01, 31@@s@@provide-01, 53@@d@@site, 17@@d@@we, 20@@c@@work-01, 39@@s@@possible-01, 24@@p@@electronic, 7@@n@@_NAME_, 57@@e2@@trade-01, 13@@a@@and, 25@@d@@tool, 35@@n3@@_NAME_, 14@@n@@_NAME_, 40@@d@@electric, 35@@o2@@organization, 22@@s@@develop-02, 8@@a@@and, 14@@p@@person, 57@@p2@@person, 3@@b@@outgrowth, 38@@a@@and, 7@@p@@person, 48@@s@@link-01, 12@@n@@_NAME_, 51@@p@@_NAME_, 6@@s@@meet-03, 36@@d@@gas, 28@@s@@allow-01, 32@@s@@go-on-15, 19@@c@@begin-01, 15@@p@@_NAME_, 9@@d@@i, 52@@p@@intranet, 12@@p@@person, 46@@s@@possible-01, 33@@s@@summary-01, 44@@t@@format]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	envision	_	envision	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	format	_	format	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	would	_	would	MD	O	_	thing	_	0	IGNORE	true
7	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	brief	_	brief	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	summary	_	summary	NN	O	(d<root> / --LEX--)	summarize-01	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
12	analysis	_	analysis	NN	O	(d<root> / --LEX--)	analyze-01	()	11	APP_op2	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	order,	_	order,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
16	filing,	_	filing,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_s	true
17	etc.	_	etc.	FW	O	(d<root> / --LEX--)	et-cetera	()	16	APP_o	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	link	_	link	NN	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
21	to	_	to	IN	O	_	and	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	source	_	source	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
26	well	_	well	RB	O	_	as-$LEMMA$	_	0	IGNORE	true
27	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
28	those	_	those	DT	O	_	that	_	0	IGNORE	true
29	who	_	who	WP	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	2	MOD_mod	true
30	would	_	would	MD	O	_	person	_	0	IGNORE	true
31	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_s	true
32	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	detailed	_	detailed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	detail-01	(s())	34	MOD_s	true
34	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
35	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[16@@s@@and, 24@@d@@document, 34@@d@@information, 12@@d@@analyze-01, 17@@d@@et-cetera, 32@@s@@more, 9@@p@@brief, 31@@s@@like-01, 33@@s@@detail-01, 7@@s@@provide-01, 23@@p@@source, 4@@d@@format, 1@@d@@We, 20@@b@@link-01, 29@@p@@amr-unknown, 11@@a@@and, 2@@s@@envision-01, 10@@d@@summarize-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	forwarding	_	forward	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	for	_	for	IN	O	_	thing	_	0	IGNORE	true
5	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	attend-02	(s())	3	APP_o2	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	resume	_	resume	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
9	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	Peter_Percell	_name_	Percell	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_poss	true
11	who	_	who	WP	O	_	name	_	0	IGNORE	true
12	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_s	true
13	an	_	an	DT	O	_	1	_	0	IGNORE	true
14	extensive	_	extensive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	15	MOD_s	true
15	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	modeling	_	model	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
18	physical	_	physical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	flows	_	flow	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	MOD_s	true
22	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	pipeline	_	pipeline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	systems	_	system	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@b@@forward-01, 21@@s@@natural-03, 6@@s@@attend-02, 8@@m@@resume, 1@@d@@i, 22@@d@@gas, 24@@p@@pipeline, 25@@b@@system, 19@@s@@flow-01, 17@@s@@model-01, 5@@d@@your, 18@@p@@physical, 14@@s@@extensive-03, 10@@p@@person, 15@@s@@experience-01, 10@@n@@_NAME_, 12@@s@@have-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	for	_	for	IN	O	_	say-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	position	_	position	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	3	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
9	utilize	_	utilize	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
11	software	_	software	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	development	_	development	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
14	mathematical	_	mathematical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$ematics	(mod())	15	MOD_mod	true
15	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@d@@software, 8@@s@@possible-01, 1@@d@@i, 15@@d@@skill, 13@@a@@and, 14@@p@@mathematicalematics, 3@@s@@look-01, 6@@d@@position-02, 9@@s@@utilize-01, 12@@s@@develop-02]
sentence=1	Also,	_name_	Also,	NNP	O	_	say-01	_	0	IGNORE	true
2	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	3	MOD_mod	true
3	let	_	let	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	know,	_	know,	NNP	O	_	and	_	0	IGNORE	true
6	by	_	by	IN	O	_	i	_	0	IGNORE	true
7	email,	_	email,	NNS	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	names	_	name	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_s	true
11	contact	_	contact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	12	MOD_mod	true
12	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
13	of	_	of	IN	O	_	person	_	0	IGNORE	true
14	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	managers	_	manager	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	manage-01	(s())	10	MOD_s	true
16	within	_	within	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	Enron	_name_	Enron	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
20	benefit	_	benefit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
21	from	_	from	IN	O	_	person	_	0	IGNORE	true
22	having	_	have	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	20	MOD_o	true
23	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
25	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
26	qualifications	_	qualification	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	23	MOD_s	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
29	group	_	group	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
30	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[11@@p@@contact-01, 17@@b@@_NAME_, 14@@p@@other, 10@@a@@and, 26@@s@@qualification, 9@@d@@name, 15@@s@@manage-01, 2@@explicitanon0@@+, 23@@d@@someone, 3@@y@@you, 12@@d@@information, 22@@s@@have-03, 3@@b@@let-01, 20@@s@@benefit-01, 3@@explicitanon0@@imperative, 29@@b@@group, 19@@s@@possible-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
2	have	_	have	VBP	O	(d<root> / --LEX--)	say-01	()	6	APP_o	true
3	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	6	MOD_mod	true
4	been	_	be	VBN	O	_	person	_	0	IGNORE	true
5	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	help	_	help	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	desk	_	desk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
11	analyst	_	analyst	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	analyze-01	(s(), o())	12	MOD_s	true
12	job#0000108806	_	job#0000108806	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
15	become	_	become	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	12	MOD_s	true
16	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	15	APP_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
19	department	_	department	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	16	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@w@@department, 6@@s@@realize-01, 18@@d@@your, 10@@d@@desk, 15@@o@@become-01, 3@@n@@recent, 9@@p@@help-01, 2@@d@@say-01, 11@@s@@analyze-01, 16@@s@@available-02, 5@@s@@make-02, 1@@d@@i, 12@@p@@_NUMBER_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
2	have	_	have	VBP	O	(d<root> / --LEX--)	say-01	()	6	APP_o	true
3	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	6	MOD_mod	true
4	been	_	be	VBN	O	_	person	_	0	IGNORE	true
5	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	help	_	help	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	desk	_	desk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
11	analyst	_	analyst	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	analyze-01	(s(), o())	12	MOD_s	true
12	job#0000108806	_	job#0000108806	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
15	become	_	become	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	12	MOD_s	true
16	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	15	APP_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
19	department	_	department	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	16	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@say-01, 16@@s@@available-02, 18@@d@@your, 10@@d@@desk, 9@@p@@help-01, 15@@o@@become-01, 3@@n@@recent, 11@@s@@analyze-01, 12@@p@@_NUMBER_, 19@@w@@department, 5@@s@@make-02, 6@@s@@realize-01, 1@@d@@i]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	price	_	price	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	4	APP_s	true
3	is	_	be	VBZ	O	_	1	_	0	IGNORE	true
4	quoted	_	quote	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	in	_	in	IN	O	_	after	_	0	IGNORE	true
6	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	Dollars	dollars	dollar	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	per	_	per	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	rate-entity-91	(s(), o())	4	APP_o	true
9	unit	_	unit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	volume,	_	volume,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	will	_	will	MD	O	_	i	_	0	IGNORE	true
14	be	_	be	VB	O	_	monetary-quantity	_	0	IGNORE	true
15	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
16	Contractual	contractual	Contractual	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	Currency	currency	Currency	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
18	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[2@@t@@thing, 9@@d@@unit, 8@@s@@rate-entity-91, 6@@c@@country, 6@@n@@_NAME_, 7@@d@@dollar, 16@@p@@Contractual, 2@@a@@price-01, 17@@p@@Currency, 4@@s@@quote-01]
sentence=1	GCP	_name_	GCP	NNP	O	(p<root> / publication  :name (n / --LEX--)  :mod-of (q<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	procedure	_	procedure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
4	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
5	create	_	create	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	Counterparty	counterparty	counterparty	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	names	_	name	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	reflect	_	reflect	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	the_Tradename_/_Division	_name_	Division	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
14	Parent_Name	_name_	Name	NNP	O	(d<root> / --LEX--)	name	()	13	APP_op2	true
15	--	_	--	:	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	-	(s(), o())	5	MOD_s	true
16	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
17	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	simultaneously	_	simultaneously	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	simultaneous	(mod())	9	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@name, 18@@t@@simultaneous, 17@@p@@both, 9@@s@@reflect-01, 1@@p@@publication, 11@@p@@_NAME_, 14@@d@@name, 15@@s@@-, 2@@d@@procedure, 16@@explicitanon0@@-, 13@@a@@or, 6@@p@@counterparty, 1@@n@@_NAME_, 5@@s@@create-01, 7@@d@@name]
sentence=1	The	the	the	DT	O	_	this	_	0	IGNORE	true
2	Leads	leads	lead	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_s	true
3	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	responsible	_	responsible	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	for	_	for	IN	O	_	i	_	0	IGNORE	true
7	Associates	_name_	Associates	NNPS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	5	APP_o	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	as	_	as	IN	O	_	event	_	0	IGNORE	true
10	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	0	ROOT	true
11	:	_	:	:	O	_	mean-01	_	0	IGNORE	true

nodealignment=[7@@e2@@Associates, 10@@s@@follow-04, 2@@d@@lead-01, 5@@s@@responsible-01, 7@@p2@@person]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	vacation	_	vacation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_s	true
4	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
5	the_22nd	_name_	22nd	NN	O	(d<root> / --LEX--)	5	()	4	APP_op1	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	Per	per	per	IN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	up	_	up	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	6	APP_o	true
10	to	_	to	TO	O	_	up-$LEMMA$	_	0	IGNORE	true
11	speed	_	speed	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
15	like	_	like	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	APP_op2	true
16	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
17	make	_	make	VB	O	_	have-org-role-91	_	0	IGNORE	true
18	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	en$LEMMA$-01	(s())	15	APP_s	true
19	that	_	that	IN	O	_	location	_	0	IGNORE	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-05	(s(), o())	18	APP_s	true
22	up	_	up	RP	O	_	thing	_	0	IGNORE	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	21	APP_o	true
26	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
27	HR	hr	HR	NNP	O	_	_NAME_	_	0	IGNORE	true
28	/	_	/	SYM	O	_	or	_	0	IGNORE	true
29	Legal	legal	legal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	MOD_s	true
30	activity	_	activity	NN	O	(d<root> / --LEX--)	$LEMMA$-06	()	25	APP_op2	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	33	MOD_s	true
33	occur	_	occur	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	event	(s())	6	MOD_s	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@speed-01, 25@@a@@and, 15@@s@@like-02, 5@@d@@5, 4@@w@@until, 7@@p@@person, 1@@d@@i, 7@@n@@_NAME_, 20@@d@@you, 12@@a@@and, 26@@p@@any, 30@@d@@activity-06, 9@@s@@up, 33@@s@@event, 29@@s@@legal-02, 6@@s@@contrast-01, 21@@s@@keep-up-05, 32@@s@@possible-01, 18@@s@@ensure-01, 3@@s@@vacation-01]
sentence=1	How	how	how	WRB	O	(d<root> / --LEX--)	amr-unknown	()	0	ROOT	true
2	about	_	about	IN	O	_	suggest-01	_	0	IGNORE	true
3	Friday,	_name_	friday,	CD	O	_	thing	_	0	IGNORE	true
4	Sept.	sept.	Sept.	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	12	(mod())	1	MOD_mod	true
5	17,	_	17,	NNP	O	_	thing	_	0	IGNORE	true
6	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	9	_	9	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	9	(mod())	12	MOD_mod	true
8	am	_	am	NN	O	_	$LEMMA$	_	0	IGNORE	true
9	(Houston	(houston	(Houston	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
10	time)	_	time)	NNP	O	_	and	_	0	IGNORE	true
11	which	_	which	WDT	O	_	year	_	0	IGNORE	true
12	is	_	be	VBZ	O	(p<root> / --LEX--  :mod-of (s<mod>))	mean-01	(mod())	1	MOD_mod	true
13	11_am	_name_	am	NN	O	_	date-entity	_	0	IGNORE	true
14	(Sao	(sao	(Sao	NNP	O	_	_NAME_	_	0	IGNORE	true
15	Paulo)	paulo)	Paulo)	NNP	O	_	and	_	0	IGNORE	true
16	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[7@@n@@9, 4@@explicitanon1@@12, 9@@p@@_NAME_, 1@@d@@amr-unknown, 12@@p@@mean-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	call	_	call	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
3	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	5	MOD_o	true
4	been	_	be	VBN	O	_	and	_	0	IGNORE	true
5	changed	_	change	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	3_pm	_name_	pm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	(Houston	(houston	(Houston	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	time)	_	time)	NNP	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	and	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
12	5_pm	_name_	pm	NN	O	_	have-quant-91	_	0	IGNORE	true
13	(Sao	(sao	(Sao	NNP	O	_	_NAME_	_	0	IGNORE	true
14	Paulo	paulo	Paulo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
15	time)	_	time)	NNP	O	_	mean-01	_	0	IGNORE	true
16	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@n@@_NAME_, 2@@d@@call-01, 7@@d@@pm, 1@@p@@this, 3@@s@@and, 5@@s@@change-01, 8@@p@@(Houston, 14@@p@@person]
sentence=1	Can	can	Can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	reschedule	_	reschedule	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
4	the	_	the	DT	O	_	interrogative	_	0	IGNORE	true
5	phone	_	phone	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	call	_	call	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	3	APP_o	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	9_am	_name_	am	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
9	(Houston)	(houston)	(Houston)	NFP	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
12	11_am	_name_	be	VBP	O	_	date-entity	_	0	IGNORE	true
13	(Sao	(sao	(Sao	NNP	O	_	_NAME_	_	0	IGNORE	true
14	Paulo)	paulo)	Paulo)	NNP	O	_	cause-01	_	0	IGNORE	true
15	on	_	on	IN	O	_	11:00	_	0	IGNORE	true
16	Friday,	_name_	friday,	CD	O	_	11	_	0	IGNORE	true
17	Sept._17	_name_	17	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	17	(mod())	3	MOD_mod	true
18	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true

nodealignment=[8@@n@@_NAME_, 1@@s@@possible-01, 6@@d@@call-02, 5@@p@@phone, 3@@s@@reschedule-01, 18@@explicitanon0@@interrogative, 17@@n@@17, 2@@d@@we]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	conference	_	conference	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	call	_	call	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	6	APP_s	true
4	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
5	been	_	be	VBN	O	_	rate-entity-91	_	0	IGNORE	true
6	rescheduled	_	reschedule	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	Friday,	friday,	friday,	CD	O	_	12	_	0	IGNORE	true
9	Sept._17	_name_	17	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	17	(mod())	6	MOD_mod	true
10	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	9_am	_name_	am	NN	O	_	date-entity	_	0	IGNORE	true
12	(Houston)	(houston)	(Houston)	NFP	O	_	and	_	0	IGNORE	true
13	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
15	11_am	_name_	am	NN	O	_	date-entity	_	0	IGNORE	true
16	(Sao	(sao	(Sao	NNP	O	_	_NAME_	_	0	IGNORE	true
17	Paulo)	paulo)	Paulo)	NNP	O	_	mean-01	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@conference, 6@@s@@reschedule-01, 9@@n@@17, 3@@d@@call-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	4	MOD_mod	true
4	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	guidelines	_	guideline	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	for	_	for	IN	O	_	thing	_	0	IGNORE	true
8	Argentina	_name_	Argentina	NNP	O	(c<root> / country  :name (n / --LEX--)  :topic-of (y<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	address	_	address	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
12	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	physical	_	physical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	financial	_	financial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	trading	_	trading	NN	O	(d<root> / --LEX--)	trade-01	()	11	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@address-02, 8@@c@@country, 13@@p@@physical, 3@@n@@current, 15@@p@@financial, 6@@d@@guideline, 16@@d@@trade-01, 4@@s@@work-01, 8@@n@@_NAME_, 1@@d@@i]
sentence=1	Obviously	obviously	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	5	MOD_s	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	foreign	_	foreign	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	offices	_	office	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	5	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	apply	_	apply	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
11	in	_	in	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	name	_	0	IGNORE	true
13	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	10	MOD_mod	true
14	(although	_	(although	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
15	LA.	la.	LA.	NNP	O	_	_NAME_	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	about	_	about	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
18	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	19	MOD_mod	true
19	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	5	MOD_s	true
20	as	_	as	IN	O	_	equal	_	0	IGNORE	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	can	_	can	MD	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	possible-01	(mod(), s())	19	MOD_mod	true
23	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	22	APP_s	true
24	to	_	to	IN	O	_	person	_	0	IGNORE	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	third	_name_	third	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	27	MOD_mod	true
27	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
28	country)	_	country)	NNS	O	_	mean-01	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@n@@_NAME_, 17@@s@@about, 18@@s@@equal, 19@@s@@close-06, 23@@s@@get-05, 26@@explicitanon0@@3, 27@@d@@world, 9@@explicitanon0@@-, 21@@d@@you, 3@@p@@foreign, 26@@o@@ordinal-entity, 8@@s@@possible-01, 4@@d@@office, 1@@s@@obvious-01, 6@@d@@issue-02, 14@@p@@_NAME_, 13@@c@@country, 10@@s@@apply-02, 22@@b@@possible-01, 5@@s@@have-03]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	show	_	show	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	2	MOD_s	true
6	up	_	up	RP	O	_	-	_	0	IGNORE	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	attachment	_	attachment	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
12	swap	_	swap	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
13	eligibility	_	eligibility	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	0	ROOT	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@d@@eligibility, 9@@b@@attachment, 1@@explicitanon0@@1, 2@@p@@thing, 12@@p@@swap-01, 14@@s@@issue-02, 5@@s@@show-up-02, 4@@explicitanon0@@-]
sentence=1	Parties,	parties,	parties,	CD	O	_	thing	_	0	IGNORE	true
2	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	promised	_	promised	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	ruling	_	ruling	NN	O	(d<root> / --LEX--)	rule-01	()	2	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	procedural	_	procedural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	guidance	_	guidance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	APP_o	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	hearings	_	hearing	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_s	true
14	on	_	on	IN	O	_	9	_	0	IGNORE	true
15	12/27	_	12/27	CD	O	(d<root> / --LEX--)	_DATE_	()	16	APP_op1	true
16	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
17	12/28	_	12/28	CD	O	(d<root> / --LEX--)	_DATE_	()	16	APP_op2	true
18	.	_	.	.	O	_	12	_	0	IGNORE	true

nodealignment=[6@@d@@rule-01, 16@@d@@and, 5@@s@@promised-01, 15@@d@@_DATE_, 8@@s@@provide-01, 10@@s@@guidance, 13@@d@@hearing-01, 2@@s@@attach-01, 17@@d@@_DATE_, 9@@p@@procedural]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	4	MOD_mod	true
4	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	bid	_	bid	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
8	(due	_	(due	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
9	1/31)	_	1/31)	NNP	O	_	cause-01	_	0	IGNORE	true
10	for	_	for	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Medusa	_name_	Medusa	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	project	_	project	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	involves	_	involve	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	Murphy	_name_	Murphy	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
17	(operator),	_	(operator),	NNP	O	_	have-org-role-91	_	0	IGNORE	true
18	Agip	_name_	Agip	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
20	Callon	_name_	Callon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_op2	true
21	in	_	in	IN	O	_	and	_	0	IGNORE	true
22	Mississippi	_name_	Mississippi	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	Canyon	canyon	Canyon	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	Blocks	blocks	Blocks	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
25	#538	_	#538	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	26	MOD_mod	true
26	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
27	#582	_	#582	NNP	O	(d<root> / --LEX--)	_NUMBER_	()	26	APP_op2	true
28	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[22@@c@@city, 26@@b@@and, 23@@b@@Canyon, 8@@p@@_NAME_, 19@@a@@and, 22@@n@@_NAME_, 20@@n@@_NAME_, 12@@n@@_NAME_, 13@@d@@project, 3@@n@@current, 20@@p@@person, 1@@d@@They, 18@@n@@_NAME_, 15@@s@@involve-01, 7@@s@@bid-01, 24@@d@@Blocks, 16@@n@@_NAME_, 27@@d@@_NUMBER_, 4@@s@@work-01, 25@@p@@_NUMBER_, 18@@p@@person]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	asked	_	ask	VBD	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
3	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
5	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
6	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_o	true
7	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	relatives	_	relative	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	6	APP_o	true
9	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
10	would	_	would	MD	O	_	thing	_	0	IGNORE	true
11	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	MOD_s	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	whereabouts	_	whereabout	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@p@@any, 13@@s@@know-01, 1@@d@@i, 16@@d@@whereabout, 8@@p@@person, 8@@f@@relative, 5@@d@@she, 6@@s@@have-03, 11@@c@@want-01, 8@@h@@have-rel-role-91, 2@@w@@ask-01]
sentence=1	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	bus	_	bus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	runs	_	run	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	MOD_s	true
5	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	UofH	uofh	UofH	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
7	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-on-20	(s())	8	APP_op2	true
12	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
14	her,	_	her,	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	have-polarity-91	(mod())	15	MOD_mod	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
16	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	couldn't	_	couldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	do	_	do	VBP	O	(d<root> / --LEX--)	$LEMMA$-02	()	15	APP_o	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[14@@t@@have-polarity-91, 15@@s@@contrast-01, 11@@s@@get-on-20, 7@@s@@arrive-01, 17@@explicitanon0@@-, 18@@d@@do-02, 6@@p@@person, 8@@a@@and, 4@@s@@run-02, 2@@d@@bus, 10@@p@@almost, 6@@n@@_NAME_, 13@@explicitanon0@@-, 9@@d@@i]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
3	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	EGM	egm	EGM	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	3	MOD_mod	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
9	participate	_	participate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
10	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	8	MOD_mod	true

nodealignment=[10@@explicitanon0@@interrogative, 8@@s@@possible-01, 4@@p@@else, 3@@d@@anyone, 9@@s@@participate-01, 6@@b@@_NAME_]
sentence=1	The	the	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
2	Analyst	analyst	Analyst	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	analyze-01	(s())	5	MOD_s	true
3	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	Associate	associate	Associate	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	Programs	programs	Programs	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	recognize	_	recognize	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_o	true
9	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	Analyst	analyst	Analyst	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	analyze-01	(s())	6	MOD_s	true
11	needs	_	need	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
12	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
13	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
14	to	_	to	TO	O	_	person	_	0	IGNORE	true
15	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	6	MOD_s	true
16	addressed	_	address	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
17	immediately	_	immediately	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	immediate	(mod())	16	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@explicitanon0@@many, 2@@s@@analyze-01, 10@@s@@analyze-01, 15@@s@@person, 4@@p@@Associate, 17@@n@@immediate, 13@@s@@need-01, 5@@d@@Programs, 8@@s@@have-03, 16@@s@@address-02, 7@@d@@we, 11@@d@@need-01, 3@@p@@and, 6@@s@@recognize-01]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	addition,	_	addition,	NNS	O	_	and	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	will	_	will	MD	O	_	-1	_	0	IGNORE	true
5	need	_	need	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
7	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
10	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	needs	_	need	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	commit	_	commit	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
14	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
15	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
16	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	or	_	or	CC	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
18	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	21	MOD_mod	true
21	Analysts	analysts	analyst	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	analyze-01	()	15	APP_o	true
22	should	_	should	MD	O	_	recommend-01	_	0	IGNORE	true
23	they	_	they	PRP	O	_	person	_	0	IGNORE	true
24	be	_	be	VB	O	_	person	_	0	IGNORE	true
25	extended	_	extend	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
26	an	_	an	DT	O	_	i	_	0	IGNORE	true
27	offer	_	offer	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
28	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[17@@b2@@or, 20@@p@@this, 25@@o@@extend-01, 10@@n@@current, 18@@d@@more, 15@@s@@take-01, 27@@d@@offer-01, 16@@d@@one, 21@@e2@@analyze-01, 5@@s@@need-01, 7@@d@@group, 3@@d@@we, 21@@p2@@person, 13@@o@@commit-01, 11@@s@@need-01]
sentence=1	11.	_	11.	LS	O	_	event	_	0	IGNORE	true
2	In	in	in	IN	O	_	elect-01	_	0	IGNORE	true
3	Events	events	event	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	Default,	default,	Default,	NNP	O	_	hyperlink-91	_	0	IGNORE	true
6	clause	_	clause	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	(a)	_	(a)	NNP	O	_	mean-01	_	0	IGNORE	true
8	refers	_	refer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	dispute	_	dispute	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	12	MOD_mod	true
12	section	_	section	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	which	_	which	WDT	O	_	contrast-01	_	0	IGNORE	true
14	I'm	i'm	I'm	VBZ	O	_	cause-01	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	sure	_	sure	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_o	true
17	exists	_	exist	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@section, 16@@s@@sure-02, 11@@p@@dispute-01, 6@@d@@clause, 17@@s@@exist-01, 3@@p@@event, 8@@s@@refer-01, 15@@explicitanon0@@-]
sentence=1	Our	our	Our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
2	letter	_	letter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	_	i	_	0	IGNORE	true
4	credit	_	credit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	person	_	person	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	APP_o	true
6	would	_	would	MD	O	_	i	_	0	IGNORE	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	comfortable	_	comfortable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
10	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	deleted	_	delete	VBD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	16	MOD_s	true
19	the	_	the	DT	O	_	original	_	0	IGNORE	true
20	LC	_name_	LC	NNP	O	(d<root> / --LEX--)	_NAME_	()	21	APP_s	true
21	transferable	_	transferable	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	APP_o	true
22	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@d@@Our, 8@@s@@more, 11@@d@@we, 21@@s@@possible-01, 13@@p@@all, 16@@d@@language, 2@@p@@letter, 12@@o@@delete-01, 5@@m@@person, 9@@s@@comfortable-02, 4@@p@@credit, 18@@s@@make-02, 20@@d@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	understand	_	understand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	reviewing	_	review	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	attachment	_	attachment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	lists	_	list	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	open	_	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	14	MOD_s	true
14	transactions	_	transaction	NNS	O	(d<root> / --LEX--)	transact-01	()	11	APP_o	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@list-01, 2@@s@@understand-01, 6@@p@@still, 14@@d@@transact-01, 9@@d@@attachment, 13@@s@@open-09, 7@@s@@review-01, 4@@d@@we, 1@@d@@i]
sentence=1	Here's	here's	here's	RB	O	_	$LEMMA$-01	_	0	IGNORE	true
2	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	flows	_	flow	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
5	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	5/1/01	_	5/1/01	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_o	true
7	forward	_	forward	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@s@@flow-01, 7@@p@@forward, 6@@d@@_NAME_, 2@@d@@everything]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	3	MOD_s	true
3	refers	_	refer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
6	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	ICC	_name_	ICC	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	publication	_	publication	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	publish-01	(s())	3	APP_o	true
9	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	transfer	_	transfer	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
12	process	_	process	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-02	(mod(), s())	8	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	governs	_	govern	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	letter	_	letter	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_o	true
17	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	credit	_	credit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	generally	_	generally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	general-02	(s())	14	MOD_s	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@s@@general-02, 14@@s@@govern-01, 11@@d@@transfer-01, 3@@s@@refer-01, 6@@s@@same-01, 16@@s@@letter, 2@@s@@simple-02, 7@@n@@_NAME_, 7@@o2@@organization, 1@@d@@It, 18@@d@@credit, 8@@s@@publish-01, 12@@r@@process-02]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	will	_	will	MD	O	_	person	_	0	IGNORE	true
3	notice	_	notice	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	Questar	_name_	Questar	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
7	requested	_	request	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
8	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	"Payment	"payment	"payment	CD	O	(d<root> / --LEX--)	overpay-01	()	7	APP_o	true
10	Plan"	plan"	Plan"	NNP	O	_	and	_	0	IGNORE	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	details	_	detail	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
13	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
14	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	will	_	will	MD	O	_	thing	_	0	IGNORE	true
16	pay	_	pay	VB	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	12	APP_o	true
17	Transwestern	_name_	Transwestern	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
18	for	_	for	IN	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	interconnect	_	interconnect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
21	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
22	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
23	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
24	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	Enron	_name_	Enron	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	26	MOD_mod	true
26	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@d@@overpay-01, 7@@s@@request-01, 5@@n@@_NAME_, 25@@p@@_NAME_, 17@@n@@_NAME_, 17@@c@@company, 1@@d@@You, 20@@d@@interconnect, 21@@s@@cause-01, 5@@c@@company, 24@@n@@recent, 26@@d@@event, 16@@g@@pay-01, 12@@s@@detail-01, 3@@s@@notice-01]
sentence=1	Also,	_name_	Also,	NNP	O	_	say-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
4	notice	_	notice	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	interconnect	_	interconnect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	APP_o	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
9	be	_	be	VB	O	_	person	_	0	IGNORE	true
10	subject	_	subject	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
11	to	_	to	IN	O	_	conclude-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	name	_	0	IGNORE	true
13	CIAC	_name_	CIAC	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
14	tax	_	tax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
15	gross	_	gross	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_o	true
16	up,	_	up,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
18	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
19	protect	_	protect	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
20	ourselves,	_	ourselves,	NNP	O	_	and	_	0	IGNORE	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	have	_	have	VBP	O	_	person	_	0	IGNORE	true
23	added	_	add	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_o	true
24	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	Para	_name_	Para	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
27	3.2	_	3.2	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	26	MOD_mod	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	protects	_	protect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
30	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	financially	_	financially	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	finance	(mod())	29	MOD_mod	true
32	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
33	the	_	the	DT	O	_	-	_	0	IGNORE	true
34	IRS	_name_	IRS	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	36	APP_s	true
35	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	comes	_	come	VBZ	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	29	MOD_mod	true
37	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
38	to	_	to	TO	O	_	thing	_	0	IGNORE	true
39	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	36	MOD_mod	true
40	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
42	interconnect	_	interconnect	NN	O	_	$LEMMA$	_	0	IGNORE	true
43	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
44	subject	_	subject	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	39	APP_o	true
45	to	_	to	IN	O	_	thing	_	0	IGNORE	true
46	the	_	the	DT	O	_	name	_	0	IGNORE	true
47	CIAC	_name_	CIAC	NNP	O	_	_NAME_	_	0	IGNORE	true
48	tax	_	tax	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
49	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@b@@Para, 8@@explicitanon0@@-, 14@@p@@tax-01, 2@@d@@you, 39@@s@@determine-01, 13@@o2@@organization, 35@@n@@ever, 5@@p@@this, 31@@t@@finance, 37@@a@@back, 44@@d@@subject-01, 10@@s@@subject-01, 23@@s@@add-02, 7@@s@@possible-01, 21@@d@@we, 4@@s@@notice-01, 15@@s@@gross-03, 17@@s@@contrast-01, 29@@s@@protect-01, 6@@d@@interconnect, 13@@n@@_NAME_, 34@@g@@government-organization, 24@@d@@language, 27@@p@@_NAME_, 34@@n@@_NAME_, 19@@i@@protect-01, 36@@h@@come-01]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	look	_	look	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
4	at	_	at	IN	O	_	manner	_	0	IGNORE	true
5	this,	_	this,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
8	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	reason	_	reason	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
11	cannot	_	cannot	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	possible-01	(mod(), s())	16	MOD_mod	true
12	obtain	_	obtain	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
13	ElPaso_ROW,	_name_	row,	RB	O	_	_NAME_	_	0	IGNORE	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
15	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
16	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	0	ROOT	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	look	_	look	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
19	at	_	at	IN	O	_	thing	_	0	IGNORE	true
20	Plan	plan	Plan	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
21	B	b	B	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	20	MOD_mod	true
22	which	_	which	WDT	O	_	i	_	0	IGNORE	true
23	would	_	would	MD	O	_	+	_	0	IGNORE	true
24	be	_	be	VB	O	_	mean-01	_	0	IGNORE	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	metering	_	metering	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	true
29	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
31	ROW	row	row	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
32	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[20@@d@@Plan-01, 14@@d@@we, 2@@d@@you, 31@@b@@row, 12@@d@@obtain-01, 18@@s@@look-01, 10@@d@@we, 21@@p@@B, 9@@p@@reason, 11@@o@@possible-01, 16@@s@@obligate-01, 26@@s@@put-01, 28@@d@@metering-01, 3@@t@@look-01, 8@@p@@some]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	will	_	will	MD	O	_	person	_	0	IGNORE	true
3	notice	_	notice	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	Questar	_name_	Questar	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
7	requested	_	request	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
8	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	"Payment	"payment	"payment	CD	O	(d<root> / --LEX--)	overpay-01	()	7	APP_o	true
10	Plan"	plan"	Plan"	NNP	O	_	and	_	0	IGNORE	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	details	_	detail	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
13	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
14	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	will	_	will	MD	O	_	thing	_	0	IGNORE	true
16	pay	_	pay	VB	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	12	APP_o	true
17	Transwestern	_name_	Transwestern	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
18	for	_	for	IN	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	interconnect	_	interconnect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
21	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
22	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
23	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
24	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	Enron	_name_	Enron	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	26	MOD_mod	true
26	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[26@@d@@event, 12@@s@@detail-01, 21@@s@@cause-01, 25@@p@@_NAME_, 3@@s@@notice-01, 20@@d@@interconnect, 1@@d@@You, 5@@c@@company, 9@@d@@overpay-01, 7@@s@@request-01, 17@@c@@company, 24@@n@@recent, 17@@n@@_NAME_, 5@@n@@_NAME_, 16@@g@@pay-01]
sentence=1	Also,	_name_	Also,	NNP	O	_	say-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	will	_	will	MD	O	_	thing	_	0	IGNORE	true
4	notice	_	notice	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	interconnect	_	interconnect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	APP_o	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
9	be	_	be	VB	O	_	person	_	0	IGNORE	true
10	subject	_	subject	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
11	to	_	to	IN	O	_	conclude-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	name	_	0	IGNORE	true
13	CIAC	_name_	CIAC	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
14	tax	_	tax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
15	gross	_	gross	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_o	true
16	up,	_	up,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
18	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
19	protect	_	protect	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
20	ourselves,	_	ourselves,	NNP	O	_	and	_	0	IGNORE	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	have	_	have	VBP	O	_	person	_	0	IGNORE	true
23	added	_	add	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_o	true
24	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	Para	_name_	Para	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
27	3.that	_	3.that	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	protects	_	protect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
29	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	financially	_	financially	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	finance	(mod())	28	MOD_mod	true
31	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	-	_	0	IGNORE	true
33	IRS	_name_	IRS	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	35	APP_s	true
34	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	comes	_	come	VBZ	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	28	MOD_mod	true
36	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
37	to	_	to	TO	O	_	thing	_	0	IGNORE	true
38	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	35	MOD_mod	true
39	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
40	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
41	interconnect	_	interconnect	NN	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
43	subject	_	subject	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_o	true
44	to	_	to	IN	O	_	thing	_	0	IGNORE	true
45	the	_	the	DT	O	_	name	_	0	IGNORE	true
46	CIAC	_name_	CIAC	NNP	O	_	_NAME_	_	0	IGNORE	true
47	tax	_	tax	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@o2@@organization, 17@@s@@contrast-01, 26@@b@@Para, 27@@explicitanon0@@_NAME_, 15@@s@@gross-03, 24@@d@@language, 43@@d@@subject-01, 23@@s@@add-02, 8@@explicitanon0@@-, 14@@p@@tax-01, 4@@s@@notice-01, 2@@d@@you, 38@@s@@determine-01, 30@@t@@finance, 28@@s@@protect-01, 5@@p@@this, 33@@n@@_NAME_, 21@@d@@we, 36@@a@@back, 13@@n@@_NAME_, 34@@n@@ever, 10@@s@@subject-01, 7@@s@@possible-01, 19@@i@@protect-01, 35@@h@@come-01, 6@@d@@interconnect, 33@@g@@government-organization]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	7	APP_op1	true
6	last_week	_name_	week	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	5	MOD_mod	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
8	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_op2	true
11	(I	(i	(I	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	don't	_	don't	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
14	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
16	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	MOD_op1	true
19	not)	_	not)	NN	O	_	and	_	0	IGNORE	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	I'm	i'm	I'm	NNPS	O	_	contrast-01	_	0	IGNORE	true
22	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
23	that	_	that	IN	O	_	and	_	0	IGNORE	true
24	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	APP_s	true
26	have	_	have	VB	O	_	person	_	0	IGNORE	true
27	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	proceeded	_	proceed	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
29	ahead	_	ahead	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
30	for	_	for	IN	O	_	thing	_	0	IGNORE	true
31	implementation	_	implementation	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	implement-01	(mod())	28	MOD_mod	true
32	which	_	which	WDT	O	_	i	_	0	IGNORE	true
33	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
34	great,	_	great,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	and	(s())	20	MOD_s	true
35	thanks	_	thank	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	thank-01	(s())	34	MOD_s	true
36	!	_	!	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@s@@thank-01, 12@@explicitanon0@@-, 29@@a@@ahead, 34@@s@@and, 20@@s@@contrast-01, 31@@o@@implement-01, 13@@s@@remember-01, 27@@n@@already, 6@@n@@_NAME_, 28@@d@@proceed-01, 11@@d@@(I, 17@@b@@there, 10@@s@@discuss-01, 5@@s@@meet-03, 18@@a@@or, 25@@s@@possible-01, 7@@a@@and, 1@@d@@i, 15@@d@@you, 22@@s@@think-01, 8@@d@@this]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	31	APP_snt1	true
3	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_s	true
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	Popup	_name_	Popup	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	notification	_	notification	NN	O	(d<root> / --LEX--)	warn-01	()	3	APP_o	true
7	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	with	_	with	IN	O	_	except-01	_	0	IGNORE	true
9	changing	_	change	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Web	web	web	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	page,	_	page,	NNP	O	(d<root> / --LEX--)	and	()	31	APP_snt2	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	15	MOD_s	true
18	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-10	(s(), o())	17	APP_o	true
20	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	Critical	critical	critical	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	which	_	which	WDT	O	_	i	_	0	IGNORE	true
25	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
26	send	_	send	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	23	MOD_s	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	Email	email	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o2	true
31	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true

nodealignment=[28@@d@@email, 30@@d@@customer, 15@@d@@and, 19@@s@@put-out-10, 26@@b@@send-01, 23@@d@@message, 5@@p@@Popup, 31@@m@@multi-sentence, 14@@b@@web, 1@@d@@We, 3@@s@@do-02, 17@@f@@possible-01, 6@@d@@warn-01, 2@@s@@possible-01, 11@@d@@number, 22@@s@@critical-02, 9@@r@@change-01, 18@@p@@also]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	TW_Hotline	_name_	Hotline	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_s	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	implemented	_	implement	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	Monday	_name_	Monday	NNP	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	5	MOD_mod	true
7	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
8	included	_	include	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
9	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	notification	_	notification	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	warn-01	(s(), o())	20	MOD_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	form	_	form	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	of	_	of	IN	O	_	and	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	Popup	_name_	popup	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	TMS	tms	TMS	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
21	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
22	Critical	critical	Critical	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	Notice	notice	Notice	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op2	true
24	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
25	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
26	an	_	an	DT	O	_	1	_	0	IGNORE	true
27	Email	_name_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[17@@d@@message, 8@@s@@include-01, 25@@s@@send-01, 23@@d@@Notice-01, 22@@s@@Critical-02, 3@@d@@_NAME_, 5@@s@@implement-01, 2@@s@@new-01, 16@@p@@popup, 10@@s@@warn-01, 20@@a@@and, 6@@t@@_name_, 27@@d@@email, 6@@d@@date-entity, 9@@d@@customer, 19@@p@@_NAME_, 13@@t@@form]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	7	APP_op1	true
6	last_week	_name_	week	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	5	MOD_mod	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
8	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_op2	true
11	(I	(i	(I	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	don't	_	don't	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
14	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
16	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	MOD_op1	true
19	not)	_	not)	NN	O	_	and	_	0	IGNORE	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	I'm	i'm	I'm	NNPS	O	_	contrast-01	_	0	IGNORE	true
22	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
23	that	_	that	IN	O	_	and	_	0	IGNORE	true
24	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	APP_s	true
26	have	_	have	VB	O	_	person	_	0	IGNORE	true
27	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	proceeded	_	proceed	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
29	ahead	_	ahead	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
30	for	_	for	IN	O	_	thing	_	0	IGNORE	true
31	implementation	_	implementation	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	implement-01	(mod())	28	MOD_mod	true
32	which	_	which	WDT	O	_	i	_	0	IGNORE	true
33	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
34	great,	_	great,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	and	(s())	20	MOD_s	true
35	thanks	_	thank	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	thank-01	(s())	34	MOD_s	true
36	!	_	!	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@d@@you, 8@@d@@this, 34@@s@@and, 31@@o@@implement-01, 6@@n@@_NAME_, 27@@n@@already, 11@@d@@(I, 25@@s@@possible-01, 18@@a@@or, 1@@d@@i, 7@@a@@and, 22@@s@@think-01, 35@@s@@thank-01, 28@@d@@proceed-01, 10@@s@@discuss-01, 17@@b@@there, 5@@s@@meet-03, 12@@explicitanon0@@-, 13@@s@@remember-01, 29@@a@@ahead, 20@@s@@contrast-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	31	APP_snt1	true
3	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_s	true
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	Popup	_name_	Popup	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	notification	_	notification	NN	O	(d<root> / --LEX--)	warn-01	()	3	APP_o	true
7	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	with	_	with	IN	O	_	except-01	_	0	IGNORE	true
9	changing	_	change	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Web	web	web	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	page,	_	page,	NNP	O	(d<root> / --LEX--)	and	()	31	APP_snt2	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	15	MOD_s	true
18	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-10	(s(), o())	17	APP_o	true
20	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	Critical	critical	critical	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	message	_	message	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	which	_	which	WDT	O	_	i	_	0	IGNORE	true
25	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
26	send	_	send	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	23	MOD_s	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	Email	email	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o2	true
31	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true

nodealignment=[9@@r@@change-01, 18@@p@@also, 2@@s@@possible-01, 28@@d@@email, 31@@m@@multi-sentence, 26@@b@@send-01, 11@@d@@number, 1@@d@@We, 23@@d@@message, 22@@s@@critical-02, 17@@f@@possible-01, 30@@d@@customer, 5@@p@@Popup, 19@@s@@put-out-10, 14@@b@@web, 3@@s@@do-02, 15@@d@@and, 6@@d@@warn-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	will	_	will	MD	O	_	thing	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	require	_	require	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	fairly	_	fairly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	fair-04	(mod())	9	MOD_mod	true
9	mature	_	mature	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	5	MOD_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
12	own	_	own	JJ	O	_	person	_	0	IGNORE	true
13	spiritual	_	spiritual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	journey	_	journey	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
15	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@s@@require-01, 1@@d@@It, 8@@s@@fair-04, 14@@d@@journey, 3@@p@@also, 5@@d@@someone, 9@@s@@mature-02, 13@@p@@spiritual]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
3	know	_	know	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
4	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	who	_	who	WP	O	_	i	_	0	IGNORE	true
6	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
7	fit	_	fit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	4	MOD_s	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	bill	_	bill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	ask	_	ask	VB	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
11	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	to	_	to	TO	O	_	i	_	0	IGNORE	true
13	contact	_	contact	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
14	me	_	I	PRP	O	_	i	_	0	IGNORE	true
15	and/or	_	and/or	CC	O	(d<root> / --LEX--)	and-or	()	16	APP_s	true
16	send	_	send	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o2	true
17	me	_	I	PRP	O	_	i	_	0	IGNORE	true
18	their	_	they	PRP$	O	_	i	_	0	IGNORE	true
19	resume	_	resume	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[4@@d@@someone, 10@@w@@ask-01, 19@@d@@resume, 16@@s@@send-01, 2@@d@@you, 6@@s@@possible-01, 9@@d@@bill, 15@@d@@and-or, 7@@s@@fit-06, 13@@s@@contact-01, 3@@m@@know-01]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	look	_	look	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
4	at	_	at	IN	O	_	manner	_	0	IGNORE	true
5	this,	_	this,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
8	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	reason	_	reason	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
11	cannot	_	cannot	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	possible-01	(mod(), s())	16	MOD_mod	true
12	obtain	_	obtain	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
13	ElPaso_ROW,	_name_	row,	RB	O	_	_NAME_	_	0	IGNORE	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
15	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
16	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	0	ROOT	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	look	_	look	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
19	at	_	at	IN	O	_	thing	_	0	IGNORE	true
20	Plan	plan	Plan	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
21	B	b	B	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	20	MOD_mod	true
22	which	_	which	WDT	O	_	i	_	0	IGNORE	true
23	would	_	would	MD	O	_	+	_	0	IGNORE	true
24	be	_	be	VB	O	_	mean-01	_	0	IGNORE	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	metering	_	metering	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	true
29	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
31	ROW	row	row	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
32	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@p@@B, 9@@p@@reason, 11@@o@@possible-01, 16@@s@@obligate-01, 20@@d@@Plan-01, 14@@d@@we, 31@@b@@row, 8@@p@@some, 2@@d@@you, 12@@d@@obtain-01, 18@@s@@look-01, 26@@s@@put-01, 28@@d@@metering-01, 3@@t@@look-01, 10@@d@@we]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	concern	_	concern	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	between	_	between	IN	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
6	now	_	now	RB	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	then	_	then	RB	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
9	Dunn,	dunn,	Dunn,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	AG	_name_	AG	NNP	O	(d<root> / --LEX--)	_NAME_	()	12	APP_s	true
12	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_s	true
13	the	_	the	DT	O	_	-	_	0	IGNORE	true
14	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
16	resources	_	resource	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
18	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	heckuvalot	_	heckuvalot	NN	O	(d<root> / --LEX--)	lot	()	18	APP_o	true
21	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
22	mischief,	_	mischief,	NNP	O	_	original	_	0	IGNORE	true
23	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
24	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	MOD_s	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	detrimental	_	detrimental	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	20	MOD_s	true
27	to	_	to	IN	O	_	-	_	0	IGNORE	true
28	generators/marketers'	_	generators/marketers'	NN	O	_	_NAME_	_	0	IGNORE	true
29	claims	_	claim	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@d@@now, 14@@d@@time, 24@@s@@possible-01, 16@@d@@resource, 29@@d@@claim-01, 5@@b@@between, 18@@s@@make-01, 15@@a@@and, 26@@s@@detrimental, 20@@d@@lot, 8@@d@@then, 12@@s@@have-03, 11@@d@@_NAME_, 2@@s@@concern-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	state	_	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Senate	_name_	Senate	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	4	APP_poss	true
4	committee	_	committee	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	6	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	set	_	set	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
7	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	to	_	to	TO	O	_	and	_	0	IGNORE	true
9	start	_	start	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	APP_o	true
10	serving	_	serve	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
11	16	_	16	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
12	subpoenas	_	subpoena	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	APP_o	true
13	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	electricity	_	electricity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	producers	_	producer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	produce-01	(s())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
17	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	16	APP_op2	true
18	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	manage	_	manage	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
20	California's	_name_	california's	NN	O	_	_NAME_	_	0	IGNORE	true
21	energy	_	energy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	grid	_	grid	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	to	_	to	TO	O	_	person	_	0	IGNORE	true
24	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
25	whether	_	whether	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	6	MOD_mod	true
26	they	_	they	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	6	MOD_mod	true
27	acted	_	act	VBD	O	(d<root> / --LEX--)	$LEMMA$-02	()	24	APP_o	true
28	in	_	in	IN	O	_	thing	_	0	IGNORE	true
29	concert	_	concert	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	manipulate	_	manipulate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	27	MOD_mod	true
32	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
33	prices	_	price	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	31	APP_s	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@_NUMBER_, 16@@a@@and, 9@@c@@start-01, 22@@d@@grid, 32@@d@@energy, 15@@s@@produce-01, 2@@p@@state, 6@@o@@set-02, 21@@p@@energy, 12@@s@@subpoena, 19@@s@@manage-01, 29@@t@@concert, 10@@s@@serve-01, 27@@d@@act-02, 7@@n@@today, 17@@p@@person, 26@@p@@person, 3@@n@@_NAME_, 25@@explicitanon0@@interrogative, 17@@h@@have-org-role-91, 24@@s@@determine-01, 33@@t@@thing, 17@@e@@official, 14@@d@@electricity, 33@@c@@price-01, 31@@i@@manipulate-01, 4@@h@@committee, 3@@g@@government-organization]
sentence=1	Lawmakers	lawmakers	lawmaker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	legislate-01	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
3	consumer	_	consumer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	consume-01	(s())	4	MOD_s	true
4	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
5	allege	_	allege	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	that	_	that	IN	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
9	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
10	directed	_	direct	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	heads	_	head	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	state's	_	state's	NN	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	19	MOD_mod	true
18	energy	_	energy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	grid	_	grid	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
21	fueled	_	fuel	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_s	true
22	the	_	the	DT	O	_	name	_	0	IGNORE	true
23	California	_name_	California	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	crisis,	_	crisis,	NNS	O	_	and	_	0	IGNORE	true
26	pushed	_	push	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-02	(s(), o())	33	APP_op1	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	state	_	state	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	into	_	into	IN	O	_	-	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	power-buying	_	power-buying	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	destroy-01	(s())	32	MOD_s	true
32	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
34	helped	_	help	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_op2	true
35	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	34	APP_o	true
36	billions	_	billion	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1000000000	(mod())	38	MOD_mod	true
37	of	_	of	IN	O	_	100000000	_	0	IGNORE	true
38	dollars	_	dollar	NNS	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	35	APP_s	true
39	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
40	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
41	producers	_	producer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	produce-01	(s())	35	APP_o	true
42	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@d@@group, 18@@p@@energy, 17@@n@@_NAME_, 1@@e2@@legislate-01, 38@@d2@@dollar, 23@@n2@@_NAME_, 1@@p2@@person, 3@@s@@consume-01, 36@@explicitanon0@@1000000000, 38@@m2@@monetary-quantity, 24@@d@@energy, 17@@c@@country, 33@@a@@and, 13@@d@@man, 34@@s@@help-01, 31@@s@@destroy-01, 32@@d@@business, 19@@d@@grid, 10@@s@@direct-01, 2@@a@@and, 23@@s@@state, 21@@s@@fuel-01, 41@@s@@produce-01, 15@@s@@head-01, 40@@d@@power, 8@@d@@event, 5@@s@@allege-01, 35@@s@@make-05, 26@@t@@push-02]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
4	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	aim	_	aim	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	subpoenas	_	subpoena	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	will	_	will	MD	O	_	i	_	0	IGNORE	true
10	be	_	be	VB	O	_	person	_	0	IGNORE	true
11	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
12	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
13	whether	_	whether	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	2	MOD_mod	true
14	collusion	_	collusion	NN	O	(d<root> / --LEX--)	collude-01	()	12	APP_s	true
15	occurred	_	occur	VBD	O	_	thing	_	0	IGNORE	true
16	to	_	to	IN	O	_	thing	_	0	IGNORE	true
17	"fix"	_	"fix"	``	O	_	-	_	0	IGNORE	true
18	prices,	_	prices,	NNP	O	_	thing	_	0	IGNORE	true
19	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
20	would	_	would	MD	O	_	thing	_	0	IGNORE	true
21	violate	_	violate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
22	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	trade	_	trade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
24	laws	_	law	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@d@@law, 21@@s@@violate-01, 12@@s@@determine-01, 8@@d@@subpoena, 2@@s@@say-01, 1@@d@@He, 14@@d@@collude-01, 13@@explicitanon0@@interrogative, 4@@p@@main, 22@@p@@federal, 23@@p@@trade-01, 5@@s@@aim-01]
sentence=1	Winter,	_name_	Winter,	NFP	O	_	have-org-role-91	_	0	IGNORE	true
2	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
3	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
5	position	_	position	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	president	_	president	NN	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	8	MOD_s	true
8	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
9	chief	_	chief	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	operating	_	operating	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	operate-01	(s())	11	MOD_s	true
11	officer	_	officer	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	13	MOD_s	true
12	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	the	_	the	DT	O	(d<root> / --LEX--)	person	()	15	APP_s	true
14	ISO,	iso,	iso,	NN	O	_	_NAME_	_	0	IGNORE	true
15	submitted	_	submit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	5	(mod())	15	MOD_mod	true
17	50-page	_	50-page	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	page	(mod())	18	MOD_mod	true
18	emergency	_	emergency	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	request,	_	request,	NNP	O	_	and	_	0	IGNORE	true
20	asking	_	ask	VBG	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o(s_UNIFY_o2()))	18	MOD_s	true
21	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	officials	_	official	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o2	true
23	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
24	abolish	_	abolish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	$250	_	$250	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	28	MOD_mod	true
27	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_s	true
28	cap	_	cap	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@h@@have-org-role-91, 21@@p@@federal, 24@@s@@abolish-01, 27@@d@@price-01, 26@@explicitanon0@@_NUMBER_, 28@@s@@cap-01, 22@@d@@official, 9@@p@@chief, 10@@s@@operate-01, 18@@p@@emergency, 7@@m@@president, 7@@h2@@have-org-role-91, 13@@d@@person, 8@@d@@and, 11@@p2@@officer, 15@@s@@submit-01, 16@@explicitanon0@@5, 20@@w@@ask-02, 17@@p@@page]
sentence=1	Neither	neither	neither	CC	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	ISO	_name_	iso	NN	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	11	APP_op1	true
4	board,	_	board,	NNS	O	_	-	_	0	IGNORE	true
5	which	_	which	WDT	O	_	-	_	0	IGNORE	true
6	had	_	have	VBD	O	_	person	_	0	IGNORE	true
7	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
10	cap,	_	cap,	NN	O	_	and	_	0	IGNORE	true
11	nor	_	nor	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
12	the	_	the	DT	O	_	-	_	0	IGNORE	true
13	governor	_	governor	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	11	APP_op2	true
14	learned	_	learn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
15	of	_	of	IN	O	_	person	_	0	IGNORE	true
16	Winter's	_name_	Winter's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
17	actions	_	action	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	act-02	(s())	14	APP_o	true
18	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	cap	_	cap	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	had	_	have	VBD	O	_	person	_	0	IGNORE	true
22	been	_	be	VBN	O	_	person	_	0	IGNORE	true
23	removed	_	remove	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
24	.	_	.	.	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[17@@s@@act-02, 13@@e@@governor, 9@@d@@price-01, 3@@n@@_NAME_, 3@@o2@@organization, 18@@w@@until, 11@@a@@nor, 14@@s@@learn-01, 16@@p@@person, 16@@n@@_NAME_, 7@@s@@establish-01, 13@@h@@have-org-role-91, 23@@d@@remove-01, 13@@p@@person]
sentence=1	In	in	in	IN	O	_	elect-01	_	0	IGNORE	true
2	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	attorney	_	attorney	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	helped	_	help	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	MOD_s	true
7	draft	_	draft	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	emergency	_	emergency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	request,	_	request,	NNP	O	_	mean-01	_	0	IGNORE	true
11	Charles_Robinson,	_name_	robinson,	NN	O	_	_NAME_	_	0	IGNORE	true
12	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	15	MOD_o	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	meet-03	(s(), o())	0	ROOT	true
16	with	_	with	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	representatives	_	representative	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	represent-01	()	15	APP_o	true
18	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	15	MOD_o	true
19	the	_	the	DT	O	(d<root> / --LEX--)	have-org-role-91	()	15	APP_s	true
20	governor	_	governor	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	19	MOD_s	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	MOD_op1	true
22	ISO	_name_	iso	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
23	board	_	board	NN	O	(d<root> / --LEX--)	$FORM$	()	24	APP_s	true
24	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	21	APP_op2	true
25	just_hours	_name_	hour	NNS	O	(d<root> / --LEX--)	_NAME_	()	26	APP_op1	true
26	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	filing	_	filing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_s	true
29	was	_	be	VBD	O	_	person	_	0	IGNORE	true
30	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[12@@s@@be-located-at-91, 7@@s@@draft-01, 24@@p@@person, 18@@s@@include-91, 24@@h@@have-org-role-91, 28@@d@@filing-01, 24@@o@@member, 25@@d@@_NAME_, 20@@p2@@governor, 21@@a@@and, 9@@d@@emergency, 23@@d@@board, 17@@p2@@person, 17@@e2@@represent-01, 26@@w@@before, 20@@h@@have-org-role-91, 22@@n@@_NAME_, 19@@d@@have-org-role-91, 4@@d@@attorney, 6@@c@@help-01, 15@@s@@meet-03]
sentence=1	"The	"the	"The	``	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	ISO	iso	iso	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	staff	_	staff	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	8	MOD_s	true
4	sat	_	sit	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	33	MOD_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	a	_	a	DT	O	_	person	_	0	IGNORE	true
7	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	4	APP_o	true
8	with	_	with	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-03	(s(), o())	33	MOD_s	true
9	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	33	MOD_mod	true
10	governor's	_	governor'	NNS	O	_	_NAME_	_	0	IGNORE	true
11	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
12	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	advisers	_	adviser	NNS	O	(p2<root> / person  :ARG0-of (l2 / --LEX--  :ARG2 (w2<s>)))	advise-01	(s())	7	APP_s	true
14	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
15	poker	_	poker	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
16	faces,	_	faces,	NNS	O	_	cause-01	_	0	IGNORE	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	saying	_	say	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_o	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	something	_	something	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	was	_	be	VBD	O	_	person	_	0	IGNORE	true
25	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-15	(s())	22	MOD_s	true
26	on	_	on	RP	O	_	thing	_	0	IGNORE	true
27	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
31	moment,''	_	moment,''	.	O	_	$LEMMA$	_	0	IGNORE	true
32	Maviglio	_name_	Maviglio	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
33	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@s@@say-01, 1@@n@@_NAME_, 15@@p@@poker, 9@@p@@person, 7@@s@@meet-03, 32@@p@@person, 3@@o@@staff, 2@@n@@_NAME_, 3@@p@@person, 25@@s@@go-on-15, 8@@s@@have-03, 32@@n@@_NAME_, 3@@h@@have-org-role-91, 13@@l2@@advise-01, 18@@s@@say-01, 11@@s@@key-02, 12@@d@@energy, 4@@s@@sit-01, 20@@d@@word, 13@@p2@@person, 17@@explicitanon0@@-, 29@@p@@exact, 22@@a@@something, 30@@s@@same-01]
sentence=1	Jan_Smutney-Jones,	_name_	Smutney-Jones,	NNP	O	_	_NAME_	_	0	IGNORE	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
5	ISO	_name_	ISO	NNP	O	(o2<root> / organization  :name (n3 / --LEX--)  :mod-of (a<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	board	_	board	NN	O	(d<root> / --LEX--)	$FORM$	()	7	APP_o	true
7	chairman	_	chairman	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	22	MOD_s	true
8	at	_	at	IN	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	executive	_	executive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	director	_	director	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	22	MOD_s	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	a	_	a	DT	O	_	person	_	0	IGNORE	true
16	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	represents	_	represent	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	generators,	_	generators,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
21	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
22	Winter	_name_	Winter	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
23	did	_	do	VBD	O	_	person	_	0	IGNORE	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
25	consult	_	consult	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
26	him	_	he	PRP	O	_	and	_	0	IGNORE	true
27	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	eliminating	_	eliminate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_o	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_s	true
31	cap	_	cap	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@o2@@organization, 24@@explicitanon0@@-, 31@@s@@cap-01, 13@@h@@have-org-role-91, 7@@h@@have-org-role-91, 6@@d@@board, 7@@g@@chairman, 18@@s@@represent-01, 5@@n3@@_NAME_, 21@@s@@say-01, 30@@d@@price-01, 10@@d@@time, 28@@s@@eliminate-01, 25@@s@@consult-01, 19@@d@@power, 22@@p@@person, 12@@p@@executive, 22@@n@@_NAME_, 16@@d@@group, 13@@g@@director]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	wrong	_	wrong	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	9	APP_s	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	REAL	real	REAL	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	8	MOD_s	true
8	negotiation,	_	negotiation,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	shit	(s())	9	MOD_s	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	12	MOD_mod	true
12	helpful	_	helpful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-04	(s())	9	APP_o	true
13	about	_	about	IN	O	_	thing	_	0	IGNORE	true
14	generating	_	generate	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
15	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	s	_	s	VBZ	O	_	thing	_	0	IGNORE	true
18	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	show	_	show	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@p@@particular, 3@@d@@nothing, 14@@r@@generate-01, 4@@s@@wrong-02, 7@@s@@REAL-04, 9@@s@@contrast-01, 8@@s@@shit, 20@@s@@show-01, 12@@s@@helpful-04, 10@@d@@nothing, 18@@p@@just]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
3	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
4	told	_	tell	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
5	RNR,	rnr,	RNR,	NNP	O	_	_NAME_	_	0	IGNORE	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	7	APP_o	true
10	advise	_	advise	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	APP_s	true
11	Duke	_name_	Duke	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_o2	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	writing	_	write	VBG	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
14	that	_	that	IN	O	_	and	_	0	IGNORE	true
15	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
16	IP	ip	IP	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
17	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
19	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	conformity	_	conformity	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	29	APP_op2	true
21	with	_	with	IN	O	_	-	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	contract,	_	contract,	NNS	O	_	_NAME_	_	0	IGNORE	true
24	sinceit	_	sinceit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	7	MOD_s	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
28	alternative,	_	alternative,	NNS	O	_	and	_	0	IGNORE	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	10	APP_o	true
30	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	IP	ip	ip	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
34	hence	_	hence	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	25	MOD_s	true
35	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
36	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
37	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
38	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
39	will	_	will	MD	O	_	thing	_	0	IGNORE	true
40	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	7	MOD_s	true
41	before	_	before	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	40	APP_o	true
42	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
43	arbitrators	_	arbitrator	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_op1	true
44	(since	_	(since	.	O	_	-	_	0	IGNORE	true
45	Duke	_name_	Duke	NNP	O	_	_NAME_	_	0	IGNORE	true
46	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	48	MOD_s	true
47	cannot	_	cannot	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	51	MOD_s	true
48	change	_	change	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_o	true
49	it's	_	it's	PRP$	O	_	-	_	0	IGNORE	true
50	ineffective	_	ineffective	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	effective-04	(s())	48	MOD_s	true
51	IP	ip	ip	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	7	MOD_s	true
52	at	_	at	IN	O	_	thing	_	0	IGNORE	true
53	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
54	stage,	_	stage,	NNS	O	_	cause-01	_	0	IGNORE	true
55	having	_	have	VBG	O	_	cause-01	_	0	IGNORE	true
56	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	57	MOD_mod	true
57	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	48	MOD_mod	true
58	ours)	_	ours)	NNP	O	_	and	_	0	IGNORE	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@s@@cause-01, 40@@s@@be-located-at-91, 9@@s@@recommend-01, 25@@s@@be-located-at-91, 8@@d@@we, 48@@s@@change-01, 2@@d@@i, 43@@d@@arbitrator, 16@@d@@IP, 36@@p@@only, 20@@s@@conformity, 51@@s@@ip, 4@@t@@tell-01, 13@@l@@write-01, 11@@n@@_NAME_, 41@@o@@before, 10@@b@@advise-01, 11@@c@@company, 24@@d@@sinceit, 47@@f@@possible-01, 50@@p@@effective-04, 46@@s@@clear-06, 18@@explicitanon0@@-, 29@@a@@and, 50@@explicitanon0@@-, 7@@s@@think-01, 57@@s@@see-01, 56@@n@@already, 53@@p@@this]
sentence=1	In	in	in	IN	O	_	and	_	0	IGNORE	true
2	addition,	_	addition,	NNS	O	_	and	_	0	IGNORE	true
3	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	look	_	look	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
9	below	_	below	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	to	_	to	TO	O	_	and	_	0	IGNORE	true
11	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
12	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
13	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
14	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	additional	_	additional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	add-02	(mod())	17	MOD_mod	true
17	employees	_	employee	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	employ-01	()	11	APP_o	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	group	_	group	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	that	_	that	WDT	O	_	slash	_	0	IGNORE	true
22	spent	_	spend	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
23	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
24	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	ECP,	ecp,	ECP,	NNP	O	_	_NAME_	_	0	IGNORE	true
26	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_s	true
27	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
28	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	APP_o	true
29	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_s	true
30	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	bill	_	bill	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	29	APP_o	true
32	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	our	_	our	PRP$	O	_	thing	_	0	IGNORE	true
35	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	MOD_s	true
36	resources	_	resource	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
37	to	_	to	IN	O	_	thing	_	0	IGNORE	true
38	ECP	_name_	ECP	NNP	O	_	i	_	0	IGNORE	true
39	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[32@@p@@all, 15@@p@@any, 5@@s@@look-01, 16@@p@@add-02, 35@@s@@use-01, 9@@b@@below, 36@@d@@resource, 11@@s@@see-01, 17@@p@@person, 22@@s@@spend-01, 28@@s@@possible-01, 23@@d@@time, 26@@s@@cause-01, 20@@b@@group, 4@@d@@you, 8@@d@@list-01, 31@@s@@bill-01, 17@@l@@employ-01, 29@@s@@ensure-01, 3@@s@@possible-01, 27@@d@@we]
sentence=1	Justin,	_name_	Justin,	NNP	O	_	say-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	MOD_s	true
4	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	knowledge	_	knowledge	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	know-01	(s(), o())	15	APP_s	true
6	of	_	of	IN	O	_	-	_	0	IGNORE	true
7	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	9	MOD_s	true
9	faith	_	faith	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	actins	_	actin	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	5	APP_o	true
11	Enron	_name_	Enron	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
12	has	_	have	VBZ	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
13	pending	_	pende	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
14	inTexas	intexas	inTexas	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	will	_	will	MD	O	_	person	_	0	IGNORE	true
18	call	_	call	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_o	true
19	Richard_Sanders	_name_	Sanders	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	manages	_	manage	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	domestic	_	domestic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	litgation	_	litgation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@b@@here, 13@@s@@pende-01, 14@@c@@company, 10@@s@@actin, 23@@d@@litgation, 11@@c@@company, 19@@n@@_NAME_, 3@@s@@have-03, 14@@n@@_NAME_, 21@@s@@manage-01, 9@@p@@faith, 15@@s@@contrast-01, 4@@explicitanon0@@-, 7@@p@@any, 11@@n@@_NAME_, 19@@p@@person, 5@@s@@know-01, 22@@p@@domestic, 2@@d@@i, 18@@s@@call-02, 8@@s@@bad-07]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	member	_	member	NN	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	design	_	design	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
8	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	developing	_	develop	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	American_Arbitration_Association's	_name_	Association's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
15	dispute	_	dispute	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
16	management	_	management	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	manage-01	(mod(), s())	17	MOD_mod	true
17	systems	_	system	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
19	services	_	service	NNS	O	(d<root> / --LEX--)	serve-01	()	18	APP_op2	true
20	for	_	for	IN	O	_	thing	_	0	IGNORE	true
21	eCommerce	ecommerce	eCommerce	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
22	B2B	b2b	B2B	NNP	O	_	_NAME_	_	0	IGNORE	true
23	transactions.	_	transactions.	NN	O	_	request-confirmation-91	_	0	IGNORE	true
24	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[21@@p@@eCommerce, 16@@i@@manage-01, 4@@j@@member, 14@@n@@_NAME_, 7@@p@@design-01, 18@@a@@and, 17@@d@@system, 24@@explicitanon0@@interrogative, 19@@d@@serve-01, 8@@d@@group, 1@@d@@i, 4@@h@@have-org-role-91, 12@@s@@develop-02, 15@@d@@dispute-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
2	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
3	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	concerned	_	concerned	JJ	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	concern-01	(s(s_UNIFY_o()))	0	ROOT	true
5	with	_	with	IN	O	_	thing	_	0	IGNORE	true
6	providing	_	provide	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
7	services	_	service	NNS	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-05	()	6	APP_o	true
8	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	relevant	_	relevant	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@p@@that, 7@@a@@service-05, 7@@t@@thing, 13@@d@@environment, 6@@s@@provide-01, 3@@s@@very, 10@@s@@relevant-01, 4@@c@@concern-01, 1@@d@@We]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	team	_	team	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
3	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	San_Diego's	_name_	Diego's	NNP	O	_	_NAME_	_	0	IGNORE	true
5	best	_	best	RB	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	10	MOD_s	true
6	anti-trust	_	anti-trust	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
8	class	_	class	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	action	_	action	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	attorneys	_	attorney	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	been	_	be	VBN	O	_	person	_	0	IGNORE	true
13	assembled	_	assemble	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
14	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
15	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-on-09	(mod(), s(), o())	13	MOD_mod	true
16	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	electric	_	electric	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	generators	_	generator	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
21	marketers	_	marketer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lend-01	()	20	APP_op2	true
22	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	California	_name_	California	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	25	MOD_mod	true
24	state	_	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	court	_	court	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
26	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	effort	_	effort	NN	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	15	MOD_mod	true
29	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
30	return	_	return	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	28	APP_o	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	electricity	_	electricity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
33	overcharges	_	overcharge	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_o	true
34	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
35	have	_	have	VBP	O	_	person	_	0	IGNORE	true
36	battered	_	batter	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	MOD_s	true
37	San_Diego	_name_	Diego	NNP	O	(d<root> / --LEX--)	_NAME_	()	38	APP_op1	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_o	true
39	the	_	the	DT	O	_	person	_	0	IGNORE	true
40	rest	_	rest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op2	true
41	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
42	California	_name_	California	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
43	this_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	36	MOD_mod	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@a@@and, 25@@b@@court, 2@@d@@team, 6@@p@@anti-trust, 18@@p@@electric, 15@@s@@take-on-09, 8@@p@@class, 23@@s@@state, 19@@d@@generator, 37@@d@@_NAME_, 9@@p@@action, 36@@s@@batter-01, 7@@p@@and, 13@@s@@assemble-01, 23@@n2@@_NAME_, 40@@d@@rest, 28@@d2@@effort-01, 30@@s@@return-02, 5@@b2@@good-02, 42@@n@@_NAME_, 32@@d@@electricity, 43@@n@@_NAME_, 24@@p@@state, 21@@p2@@person, 10@@p@@attorney, 33@@s@@overcharge-01, 5@@m@@most, 21@@e2@@lend-01, 38@@a@@and]
sentence=1	Look	look	look	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	4	APP_op1	true
2	around	_	around	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	1	APP_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
5	notice	_	notice	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op2	true
6	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
9	numbing	_	numb	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
10	trailor	_	trailor	NN	O	(d<root> / --LEX--)	and-or	()	4	APP_s	true
11	trash	_	trash	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	cretins	_	cretin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
13	out	_	out	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
14	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
15	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
16	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	12	MOD_s	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	procreating,	_	procreating,	NNP	O	_	and	_	0	IGNORE	true
20	yet	_	yet	RB	O	_	$LEMMA$	_	0	IGNORE	true
21	they	_	they	PRP	O	_	person	_	0	IGNORE	true
22	do	_	do	VBP	O	_	$LEMMA$-02	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@h@@look-01, 3@@d@@you, 2@@o@@around, 12@@d@@cretin, 6@@p@@all, 16@@s@@recommend-01, 14@@d@@there, 17@@explicitanon0@@-, 8@@d@@mind, 13@@b@@out, 11@@p@@trash, 10@@d@@and-or, 1@@explicitanon0@@imperative, 5@@s@@notice-01, 4@@a@@and, 9@@s@@numb-01]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	4	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	0	ROOT	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	keep	_	keep	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	4	MOD_s	true
7	Jerry_springer	_name_	springer	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
11	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@d@@this, 7@@n@@_NAME_, 7@@p@@person, 10@@d@@air, 4@@r@@person, 6@@b@@keep-02]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	4	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
4	kids	_	kid	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	will	_	will	MD	O	_	person	_	0	IGNORE	true
7	destroy	_	destroy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	society,	_	society,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
9	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
10	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	crapfest	_	crapfest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	the	_	the	DT	O	_	name	_	0	IGNORE	true
14	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
17	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
18	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	post	_	post	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
21	hippie	_	hippie	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
22	culture,	_	culture,	NNP	O	_	and	_	0	IGNORE	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
25	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@hear-01, 17@@s@@become-01, 14@@c@@country, 12@@d@@crapfest, 1@@d@@this, 23@@d@@you, 14@@n@@_NAME_, 20@@n@@post, 25@@p@@again, 15@@d@@family, 9@@s@@cause-01, 21@@p@@hippie, 4@@r@@kid, 7@@s@@destroy-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
3	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	1	APP_op2	true
4	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
5	direct	_	direct	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	result	_	result	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
7	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	Politically	_name_	Politically	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	10	MOD_mod	true
10	correct,	_	correct,	NNPS	O	(d<root> / --LEX--)	-	()	1	APP_op1	true
11	permissive,	_	permissive,	NNS	O	_	race	_	0	IGNORE	true
12	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
13	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	granting	_	grant	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	bullshit	_	bullshit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
16	liberal	_	liberal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
20	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@d@@this, 1@@a@@and, 17@@d@@culture, 9@@p@@politics, 16@@s@@liberal-02, 20@@s@@cause-01, 5@@s@@direct-02, 15@@s@@bullshit-01, 6@@s@@result-01, 12@@n@@time, 2@@d@@this, 14@@s@@grant-01, 10@@d@@-, 3@@s@@person]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	blame	_	blame	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	14	APP_op1	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	society,	_	society,	NNS	O	_	_NAME_	_	0	IGNORE	true
8	there's	_	there'	VBZ	O	_	mean-01	_	0	IGNORE	true
9	noone	_	noone	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
10	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	take	_	take	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
13	responsibility	_	responsibility	NN	O	(d<root> / --LEX--)	responsible-03	()	3	APP_o2	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
15	all	_	all	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
17	a	_	a	RB	O	_	person	_	0	IGNORE	true
18	sudden	_	sudden	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	14	APP_op2	true
21	generation	_	generation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
22	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
23	fucked	_	fuck	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	25	MOD_s	true
24	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
25	kids	_	kid	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
26	who	_	who	WP	O	_	and	_	0	IGNORE	true
27	are	_	be	VBP	O	_	person	_	0	IGNORE	true
28	likley	_	likley	JJ	O	_	$LEMMA$	_	0	IGNORE	true
29	smoking,	_	smoking,	NNP	O	_	and	_	0	IGNORE	true
30	drinking,	_	drinking,	NNS	O	_	and	_	0	IGNORE	true
31	doing	_	do	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
32	drugs,	_	drugs,	NNP	O	_	and	_	0	IGNORE	true
33	fucking	_	fuck	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	neighbor	_	neighbor	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	36	APP_op1	true
36	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_o	true
37	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
38	internet	_	internet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	perv	_	perv	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
40	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	20	MOD_o	true
42	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
43	are	_	be	VBP	O	_	person	_	0	IGNORE	true
44	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	lazy	_	lazy	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	41	APP_s	true
46	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
47	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_dom	true
48	waht	_	waht	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	47	MOD_mod	true
49	they're	_	they're	NNP	O	_	thing	_	0	IGNORE	true
50	doing	_	do	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	47	APP_s	true
51	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@b@@blame-01, 21@@d@@generation, 47@@s@@see-01, 20@@s@@have-03, 36@@a@@or, 48@@explicitanon0@@-, 14@@a@@and, 23@@s@@fuck-up-02, 13@@d@@responsible-03, 35@@p@@person, 41@@s@@cause-01, 18@@t@@sudden, 40@@p@@just, 38@@p@@internet, 45@@r@@lazy, 4@@d@@it, 50@@d@@do-02, 5@@p@@all, 44@@s@@too, 9@@n@@noone, 37@@p@@some, 2@@d@@you, 25@@g@@kid, 35@@h@@have-rel-role-91, 33@@s@@fuck-01, 39@@d@@perv, 35@@f@@neighbor]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
3	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
4	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	ready	_	ready	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	2	APP_s	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	sour	_	sour	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	APP_o	true
9	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
11	it's	_	it's	PRP$	O	_	_NAME_	_	0	IGNORE	true
12	devastating	_	devastating	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	devastate-01	(s())	13	MOD_s	true
13	loss	_	loss	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	lose-02	(s())	10	APP_op1	true
14	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	Columbia	_name_	Columbia	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	accident	_	accident	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
18	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
19	occurred	_	occur	VBD	O	_	event	_	0	IGNORE	true
20	nearly_two_years_ago	_name_	ago	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	10	(mod())	17	MOD_mod	true
21	.	_	.	.	O	_	before	_	0	IGNORE	true

nodealignment=[9@@p@@again, 4@@g@@government-organization, 20@@n@@10, 13@@s@@lose-02, 10@@w@@after, 8@@s@@sour-02, 17@@d@@accident, 16@@n@@_NAME_, 2@@s@@look-02, 4@@n@@_NAME_, 12@@s@@devastate-01, 6@@o@@ready-02]
sentence=1	The	the	the	DT	O	_	include-91	_	0	IGNORE	true
2	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	question	_	question	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_s	true
5	isn't	_	isn't	NN	O	_	-	_	0	IGNORE	true
6	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
7	Discovery	_name_	Discovery	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
8	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
9	technically	_	technically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	technical	(mod())	10	MOD_mod	true
10	ready	_	ready	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	4	APP_s	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	fly	_	fly	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
15	safety	_	safety	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	safe-01	(mod())	16	MOD_mod	true
16	features	_	feature	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
18	emergency	_	emergency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	procedures,	_	procedures,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	35	MOD_s	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	agency	_	agency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
24	itself	_	itself	PRP	O	_	thing	_	0	IGNORE	true
25	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
26	learned	_	learn	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
27	from	_	from	IN	O	_	thing	_	0	IGNORE	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	crucial	_	crucial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	errors	_	error	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
31	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
33	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
34	Challenger	_name_	Challenger	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	35	APP_op1	true
35	and	_	and	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	32	MOD_mod	true
36	Columbia,	_name_	Columbia,	NNP	O	_	-	_	0	IGNORE	true
37	errors	_	error	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op2	true
38	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
39	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	37	MOD_s	true
40	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
42	a	_	a	DT	O	_	thing	_	0	IGNORE	true
43	management	_	management	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	manage-01	(mod())	44	MOD_mod	true
44	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_o	true
45	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
46	discouraged	_	discourage	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	44	MOD_s	true
47	criticism	_	criticism	NN	O	(d<root> / --LEX--)	criticize-01	()	46	APP_o	true
48	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
49	sacrificed	_	sacrifice	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	44	MOD_s	true
50	safety	_	safety	NN	O	(d<root> / --LEX--)	safe-01	()	49	APP_o	true
51	for	_	for	IN	O	_	social-03	_	0	IGNORE	true
52	image-puffing	_	image-puffing	NN	O	(d<root> / --LEX--)	law	()	53	APP_op1	true
53	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_o2	true
54	budget-cutting	_	budget-cutting	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	53	APP_op2	true
55	.	_	.	.	O	_	money	_	0	IGNORE	true

nodealignment=[9@@t@@technical, 16@@d@@feature, 17@@a@@and, 26@@s@@learn-01, 34@@p@@person, 46@@s@@discourage-01, 34@@n@@_NAME_, 39@@s@@grow-02, 35@@o@@and, 20@@s@@contrast-01, 29@@p@@crucial, 44@@d@@culture, 3@@p@@important, 53@@a@@and, 49@@b@@sacrifice-01, 7@@c@@company, 30@@d@@error, 52@@d@@law, 4@@s@@question-01, 43@@p@@manage-01, 54@@d@@budget-cutting-01, 7@@n@@_NAME_, 23@@d@@agency, 10@@o@@ready-02, 19@@s@@and, 12@@s@@fly-01, 31@@s@@most, 37@@d@@error, 15@@p@@safe-01, 50@@d@@safe-01, 14@@s@@new-01, 32@@p@@common, 2@@s@@most, 47@@d@@criticize-01, 18@@d@@emergency]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	incident	_	incident	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
7	exploring	_	explore	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_dom	true
8	the	_	the	DT	O	_	multi-sentence	_	0	IGNORE	true
9	cosmos	_	cosmos	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
11	something	_	something	NN	O	(s<root> / --LEX--  :domain (i2<dom>)  :condition-of (d<mod>))	$LEMMA$	(dom(), mod())	3	MOD_mod	true
12	that	_	that	WDT	O	_	i	_	0	IGNORE	true
13	keeps	_	keep	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	6	APP_s	true
14	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	imagination	_	imagination	NN	O	(d<root> / --LEX--)	imagine-01	()	16	APP_s	true
16	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
19	species	_	species	NN	O	(u<root> / --LEX--  :prep-as-of (f<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@something, 16@@s@@go-01, 5@@d@@incident, 4@@p@@another, 1@@d@@We, 9@@d@@cosmos, 6@@s@@cause-01, 15@@d@@imagine-01, 2@@explicitanon0@@-, 3@@s@@need-01, 19@@u@@species, 13@@s@@keep-04, 7@@s@@explore-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	do	_	do	VBP	O	_	$LEMMA$	_	0	IGNORE	true
3	have	_	have	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
5	give	_	give	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	credit	_	credit	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
14	eliminated	_	eliminate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_s	true
15	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	"fear	_	"fear	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
17	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
18	reporting	_	reporting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	20	MOD_mod	true
19	failure"	_	failure"	NN	O	_	and	_	0	IGNORE	true
20	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	23	MOD_mod	true
23	led	_	lead	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	20	MOD_s	true
24	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	thing	_	0	IGNORE	true
26	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
27	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
28	reporting	_	report	VBG	O	(d<root> / --LEX--)	report-01	()	29	APP_s	true
29	defects	_	defect	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	26	APP_s	true
30	on	_	on	IN	O	_	-	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	Columbia	_name_	Columbia	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	33	MOD_mod	true
33	shuttle	_	shuttle	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@s@@lack-01, 6@@n@@_NAME_, 9@@explicitanon0@@some, 3@@o@@obligate-01, 18@@p@@reporting-01, 16@@p@@"fear, 22@@p@@probable, 7@@s@@credit-01, 10@@d@@thing, 6@@g@@government-organization, 5@@s@@give-01, 20@@d@@culture, 33@@b@@shuttle, 23@@t@@lead-03, 28@@d@@report-01, 14@@s@@eliminate-01, 1@@d@@You, 11@@s@@cause-01, 32@@n@@_NAME_, 29@@s@@defect]
sentence=1	When	when	when	WRB	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	28	MOD_mod	true
2	those	_	those	DT	O	_	that	_	0	IGNORE	true
3	lucky	_	lucky	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
4	enough	_	enough	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_s	true
8	Herpes	herpes	Herpes	NNP	O	(d2<root> / disease  :name (n2 / --LEX--))	_NAME_	()	7	APP_o	true
9	create	_	create	VB	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	28	MOD_mod	true
10	a	_	a	DT	O	_	-	_	0	IGNORE	true
11	climate	_	climate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	of	_	of	IN	O	_	and	_	0	IGNORE	true
13	shame	_	shame	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
15	indignity	_	indignity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
17	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	28	MOD_mod	true
18	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	17	MOD_s	true
19	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
20	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
21	do,	_	do,	VBZ	O	_	-	_	0	IGNORE	true
22	not	_	not	RB	O	_	-	_	0	IGNORE	true
23	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
24	are	_	be	VBP	O	_	person	_	0	IGNORE	true
25	they	_	they	PRP	O	(d<root> / --LEX--)	person	()	28	APP_s	true
26	hurting	_	hurt	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
27	us,	_	us,	JJ	O	_	and	_	0	IGNORE	true
28	but	_	but	CC	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	contrast-01	(o(s()))	0	ROOT	true
29	they	_	they	PRP	O	_	person	_	0	IGNORE	true
30	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	28	MOD_s	true
31	hurting	_	hurt	VBG	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-01	(s())	28	APP_o	true
32	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@d@@person, 11@@d@@climate, 8@@n2@@_NAME_, 4@@p@@enough, 8@@d2@@disease, 7@@s@@have-03, 28@@o@@contrast-01, 9@@t@@create-01, 15@@d@@indignity, 5@@explicitanon0@@-, 18@@s@@include-91, 14@@a@@and, 17@@p@@that, 3@@p@@lucky, 1@@p@@amr-unknown, 26@@s@@hurt-01, 31@@r@@hurt-01, 30@@s@@person, 13@@d@@shame-01, 19@@d@@us]
sentence=1	Whether	whether	whether	IN	O	_	interrogative	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
4	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op1	true
5	for	_	for	IN	O	_	or	_	0	IGNORE	true
6	a	_	a	DT	O	_	work-01	_	0	IGNORE	true
7	part-time	_	part-time	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	long-03	(mod())	8	MOD_mod	true
8	income	_	income	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	help	_	help	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
11	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-off-02	(s())	10	APP_s	true
12	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	debts	_	debt	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	35	MOD_mod	true
16	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
18	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
19	for	_	for	IN	O	_	and	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	freedom	_	freedom	NN	O	(d<root> / --LEX--)	free-04	()	18	APP_s	true
22	offered	_	offer	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
23	by	_	by	IN	O	_	-	_	0	IGNORE	true
24	working	_	work	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_s	true
25	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	home	_	home	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
27	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	time	_	time	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
31	basis,	_	basis,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
32	Agel	_name_	Agel	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	35	APP_dom	true
33	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
34	the	_	the	DT	O	_	thing	_	0	IGNORE	true
35	vehicle	_	vehicle	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
36	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
37	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	38	MOD_s	true
38	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	35	MOD_s	true
39	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
40	happen	_	happen	VB	O	_	person	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@s@@possible-01, 32@@c@@company, 14@@d@@debt, 18@@s@@look-01, 38@@s@@make-02, 24@@d@@work-01, 35@@r@@vehicle, 8@@d@@income, 26@@s@@home, 22@@s@@offer-01, 15@@a@@or, 11@@s@@pay-off-02, 21@@d@@free-04, 2@@d@@you, 10@@i@@help-01, 29@@p@@full, 32@@n@@_NAME_, 7@@p@@long-03, 30@@p@@time, 4@@s@@look-01]
sentence=1	Agel	_name_	Agel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
3	created	_	create	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
6	compensation	_	compensation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	compensate-01	(s())	7	MOD_s	true
7	structure	_	structure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
10	truly	_	truly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	true-01	(mod())	11	MOD_mod	true
11	revolutionary	_	revolutionary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@p@@person, 3@@s@@create-01, 6@@s@@compensate-01, 1@@n@@_NAME_, 5@@s@@new-01, 7@@d@@structure, 11@@s@@revolutionary-02, 10@@s@@true-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Agel	_name_	Agel	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
3	compensation	_	compensation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	compensate-01	(mod())	4	MOD_mod	true
4	plan	_	plan	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
5	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	principles	_	principle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	ensure	_	ensure	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	promise	_	promise	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	APP_o	true
13	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	5	MOD_s	true
14	fulfilled	_	fulfil	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	those	_	those	DT	O	_	that	_	0	IGNORE	true
17	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
18	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	13	MOD_s	true
19	at	_	at	IN	O	_	person	_	0	IGNORE	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[14@@s@@fulfil-01, 13@@s@@person, 7@@d@@principle, 3@@p@@compensate-01, 11@@d@@promise-01, 18@@s@@work-01, 9@@s@@ensure-01, 12@@s@@possible-01, 5@@s@@include-01, 4@@s@@plan-01, 2@@d@@_NAME_]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	present	_	present	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	name	_	0	IGNORE	true
5	kaoshikii	_	kaoshikii	JJ	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	true
6	dance,	_	dance,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
7	which	_	which	WDT	O	_	name	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
9	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
10	before	_	before	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	11	APP_op1	true
11	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
12	after	_	after	IN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
13	yoga	_	yoga	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	postures	_	posture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
15	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@d@@_NAME_, 14@@d@@posture, 13@@p@@yoga, 11@@b@@and, 9@@s@@excellent-02, 3@@s@@present-01, 1@@d@@We, 2@@n@@now, 10@@o@@before, 12@@d@@after]
sentence=1	Bending	bending	bend	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
2	backward	_	backward	JJ	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	represents:	_	represents:	NN	O	_	and	_	0	IGNORE	true
4	"I	"i	"I	''	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	am	_	be	VBP	O	_	i	_	0	IGNORE	true
6	ready	_	ready	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	he	_	0	IGNORE	true
8	face	_	face	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	obstacles	_	obstacle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
13	come.	_	come.	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
14	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[9@@p@@all, 6@@o@@ready-02, 8@@s@@face-01, 1@@o@@bend-01, 10@@d@@obstacle, 2@@a@@backward, 12@@s@@possible-01, 4@@d@@"i]
sentence=1	Dr.	dr.	Dr.	NNP	O	_	_NAME_	_	0	IGNORE	true
2	Fortier	_name_	Fortier	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	threw	_	throw	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	rock	_	rock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	bear,	_	bear,	NNS	O	_	and	_	0	IGNORE	true
10	distracting	_	distract	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op1	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
13	allowing	_	allow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
14	Parenteau	_name_	Parenteau	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
15	to	_	to	TO	O	_	and	_	0	IGNORE	true
16	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	13	APP_s	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	turned	_	turn	VBD	O	(d<root> / --LEX--)	$LEMMA$-02	()	17	APP_o	true
21	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
22	25-year-old	_	25-year-old	CD	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	20	MOD_mod	true
23	Patricia_Doyon,	_name_	doyon,	NN	O	_	_NAME_	_	0	IGNORE	true
24	who	_	who	WP	O	_	name	_	0	IGNORE	true
25	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
29	tent	_	tent	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@y@@year, 16@@s@@escape-01, 17@@s@@contrast-01, 29@@b@@tent, 22@@t@@temporal-quantity, 14@@n@@_NAME_, 3@@s@@throw-01, 2@@p@@person, 13@@s@@allow-01, 12@@s@@and, 20@@d@@turn-02, 6@@d@@rock, 19@@n@@then, 2@@n@@_NAME_, 5@@p@@large, 10@@d@@distract-01, 28@@s@@same-01, 14@@p@@person]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	bronze	_	bronze	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	MOD_s	true
3	medal	_	medal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	and	_	0	IGNORE	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	5	APP_o	true
8	who	_	who	WP	O	_	capable-01	_	0	IGNORE	true
9	"risk	_	"risk	XX	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-00	(o(poss_UNIFY_s()))	7	MOD_s	true
10	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	lives	_	life	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	APP_o	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	extraordinary	_	extraordinary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
15	degree	_	degree	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
16	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
17	saving	_	save	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (m<op1>)  :topic-of (p<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	9	MOD_mod	true
19	attempting	_	attempt	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	save	_	save	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_s	true
22	the	_	the	DT	O	_	and	_	0	IGNORE	true
23	lives	_	life	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	of	_	of	IN	O	_	person	_	0	IGNORE	true
25	others.	_	others.	NN	O	_	_NAME_	_	0	IGNORE	true
26	"	_	"	''	O	_	and	_	0	IGNORE	true

nodealignment=[7@@d@@person, 9@@l@@"risk-00, 11@@m@@life, 18@@a@@or, 2@@s@@bronze, 23@@d@@life, 3@@d@@medal, 15@@s@@degree, 5@@s@@give-01, 14@@p@@extraordinary, 21@@s@@save-02, 17@@s@@save-02, 19@@s@@attempt-01]
sentence=1	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
2	industrialist	_	industrialist	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$FORM$	(s(), o())	3	MOD_s	true
3	Andrew_Carnegie	_name_	Carnegie	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	started	_	start	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	hero	_	hero	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	fund	_	fund	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
8	in	_	in	IN	O	_	and	_	0	IGNORE	true
9	1904	_name_	1904	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	4	MOD_mod	true
10	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
11	being	_	be	VBG	O	_	cause-01	_	0	IGNORE	true
12	inspired	_	inspire	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_op1	true
13	by	_	by	IN	O	_	thing	_	0	IGNORE	true
14	rescue	_	rescue	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
15	stories	_	story	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	from	_	from	IN	O	_	and	_	0	IGNORE	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	mine	_	mine	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	disaster	_	disaster	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
21	killed	_	kill	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	181	_	181	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	23	MOD_mod	true
23	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	21	APP_o	true
24	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[23@@d@@person, 9@@explicitanon0@@_NUMBER_, 18@@p@@mine, 12@@s@@inspire-01, 15@@d@@story, 14@@p@@rescue-01, 4@@s@@start-01, 10@@w@@after, 9@@d@@date-entity, 1@@n@@_NAME_, 19@@s@@disaster, 21@@s@@kill-01, 3@@n@@_NAME_, 6@@p@@hero, 2@@s@@industrialist, 1@@c@@country, 22@@explicitanon0@@_NUMBER_, 7@@d@@fund-01, 3@@p@@person]
sentence=1	Coined	coined	coin	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
3	Bill_Gates	_name_	Gates	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	1	APP_s	true
4	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
5	represent	_	represent	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	name	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	devoted	_	devoted	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	to	_	to	IN	O	_	name	_	0	IGNORE	true
12	MICROcomputer_SOFTware	_name_	SOFTware	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[10@@s@@devoted-01, 12@@n@@_NAME_, 3@@p@@person, 1@@s@@coin-01, 12@@c@@company, 7@@d@@company, 5@@s@@represent-01, 3@@n@@_NAME_]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	represents	_	represent	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	repulsive	_	repulsive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	MOD_s	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	appearance	_	appearance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	7	MOD_mod	true
11	action	_	action	NN	O	(d<root> / --LEX--)	act-02	()	10	APP_op2	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	barely	_	barely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	bare	(mod())	15	MOD_mod	true
15	human	_	human	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	4	MOD_s	true
16	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[10@@b@@and, 14@@s@@bare, 11@@d@@act-02, 15@@s@@human, 2@@s@@represent-01, 1@@d@@It, 9@@d@@appearance, 7@@s@@repulsive, 4@@d@@person]
sentence=1	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
2	far	_	far	RB	O	_	as-$LEMMA$-as	_	0	IGNORE	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	pre	_	pre	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	order	_	order	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
6	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	true
7	to	_	to	IN	O	_	thing	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	APP_op2	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
15	retailers	_	retailer	NNS	O	(d<root> / --LEX--)	vend-01	()	12	APP_s	true
16	that	_	that	WDT	O	_	and	_	0	IGNORE	true
17	carry	_	carry	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
20	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
21	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	websites	_	website	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op3	true
25	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
27	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	MOD_s	true
28	order	_	order	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	off	_	off	RB	O	_	$LEMMA$	_	0	IGNORE	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@order-01, 12@@s@@list-01, 6@@s@@go-01, 28@@s@@order-01, 26@@d@@you, 14@@s@@major-02, 15@@d@@vend-01, 17@@s@@carry-01, 23@@explicitanon0@@few, 4@@p@@pre, 8@@a@@and, 10@@s@@have-03, 24@@d@@website, 9@@d@@they, 21@@p@@also, 27@@s@@possible-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	formed	_	form	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
6	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	8	MOD_s	true
8	guilds	_	guild	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
9	who	_	who	WP	O	_	name	_	0	IGNORE	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	strictly	_	strictly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	strict	(mod())	13	MOD_mod	true
13	honorable	_	honorable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	come	_	come	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
16	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
21	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op2	true
22	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	21	APP_o	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	game	_	game	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	21	MOD_mod	true
27	with	_	with	IN	O	_	-	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@d@@family, 20@@a@@and, 24@@d@@person, 23@@explicitanon0@@many, 5@@s@@allow-01, 21@@s@@allow-01, 11@@p@@all, 12@@p@@strict, 13@@s@@honorable, 6@@explicitanon0@@many, 15@@s@@come-01, 16@@p@@together, 1@@d@@It, 7@@s@@differ-02, 26@@o@@game-01, 3@@s@@form-01, 8@@d@@guild]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	group	_	group	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	who	_	who	WP	O	_	name	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	for	_	for	IN	O	_	at-least	_	0	IGNORE	true
10	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	8	APP_o	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	own	_	own	JJ	O	_	person	_	0	IGNORE	true
14	select	_	select	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	guild	_	guild	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
16	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
17	ULGG_of_GW...which	_name_	GW...which	NNP	O	_	_NAME_	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	part	_	part	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	5	MOD_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	alliance	_	alliance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	ally-01	(s())	20	APP_s	true
24	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
27	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
28	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@p@@also, 5@@r@@group, 14@@s@@select-01, 10@@p@@person, 8@@s@@look-01, 1@@d@@We, 23@@s@@ally-01, 10@@h@@have-org-role-91, 20@@s@@part, 10@@o@@member, 26@@s@@same-01, 27@@d@@name-01, 15@@d@@guild]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	who	_	who	WP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	amr-unknown	(mod())	3	MOD_mod	true
3	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
5	tough	_	tough	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	talk	_	talk	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	of	_	of	IN	O	_	slash	_	0	IGNORE	true
8	Tough_on_Crime	_name_	crime	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
9	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[8@@p@@person, 5@@s@@tough-02, 9@@explicitanon0@@interrogative, 8@@n@@_NAME_, 3@@s@@like-01, 2@@explicitanon0@@amr-unknown, 6@@s@@talk-01, 1@@d@@You]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
3	watch	_	watch	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	budgets	_	budget	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
7	cut	_	cut	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	3	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
11	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	care	_	care	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_op2	true
13	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	militarize	_	militarize	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
16	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
17	police	_	police	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	force	_	force	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[11@@d@@health, 17@@p@@police, 10@@a@@and, 19@@explicitanon0@@interrogative, 12@@s@@care-03, 3@@s@@watch-01, 1@@d@@You, 5@@d@@budget, 7@@s@@cut-02, 18@@d@@force, 15@@t@@militarize-01, 9@@d@@educate-01]
sentence=1	More	more	more	RBR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	cohesive	_	cohesive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
7	a	_	a	DT	O	_	concern-02	_	0	IGNORE	true
8	shared	_	shared	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	share-01	(s())	9	MOD_s	true
9	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
11	purpose,	_	purpose,	NNS	O	_	multi-sentence	_	0	IGNORE	true
12	who	_	who	WP	O	(d<root> / --LEX--)	amr-unknown	()	14	APP_s	true
13	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_s	true
14	identify	_	identify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
15	Us	us	Us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	14	APP_o	true
17	Them	them	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	2	MOD_s	true
18	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[15@@d@@Us, 12@@d@@amr-unknown, 13@@s@@possible-01, 9@@s@@sense-01, 4@@p@@cohesive, 5@@d@@society, 16@@a@@and, 14@@s@@identify-01, 17@@s@@they, 8@@s@@share-01, 1@@p@@more, 2@@s@@resemble-01]
sentence=1	Please	please	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	2	MOD_mod	true
2	know	_	know	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	say-01	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
5	have	_	have	VBP	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-11	(o2(s()), o())	2	MOD_s	true
6	yet	_	yet	RB	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	to	_	to	TO	O	_	person	_	0	IGNORE	true
8	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	APP_o2	true
9	a	_	a	DT	O	_	-	_	0	IGNORE	true
10	convict	_	convict	NN	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$-01	()	8	APP_o	true
11	who	_	who	WP	O	_	person	_	0	IGNORE	true
12	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
14	child	_	child	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	25	APP_op2	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	a	_	a	DT	O	_	person	_	0	IGNORE	true
18	thief,	_	thief,	NN	O	_	and	_	0	IGNORE	true
19	an	_	an	DT	O	_	person	_	0	IGNORE	true
20	addict,	_	addict,	NNS	O	_	and	_	0	IGNORE	true
21	a	_	a	DT	O	_	person	_	0	IGNORE	true
22	dealer,	_	dealer,	NNS	O	_	mean-01	_	0	IGNORE	true
23	a	_	a	DT	O	_	person	_	0	IGNORE	true
24	prostitute,	_	prostitute,	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	12	MOD_op1	true
26	a	_	a	DT	O	_	-	_	0	IGNORE	true
27	violent	_	violent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	individual	_	individual	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op3	true
29	.	_	.	.	O	_	instead-of-91	_	0	IGNORE	true

nodealignment=[28@@d@@individual, 14@@f@@child, 4@@d@@i, 2@@h@@know-01, 6@@d@@yet, 27@@p@@violent, 2@@explicitanon0@@imperative, 8@@s@@meet-02, 1@@explicitanon0@@+, 14@@h@@have-rel-role-91, 25@@a@@or, 10@@p@@person, 5@@i@@have-11, 10@@l@@convict-01, 12@@s@@want-01, 14@@p@@person]
sentence=1	Subject:	_name_	subject:	JJ	O	_	and	_	0	IGNORE	true
2	Where	where	where	WRB	O	(d<root> / --LEX--)	amr-unknown	()	5	APP_o2	true
3	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	get	_	get	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_s	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	necessary	_	necessary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	8	MOD_s	true
8	software	_	software	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	get	_	get	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
11	a	_	a	DT	O	_	person	_	0	IGNORE	true
12	"smart"	_name_	"smart"	NNP	O	_	and	_	0	IGNORE	true
13	mail	_	mail	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	running	_	run	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
16	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	my	_	my	PRP$	O	_	and	_	0	IGNORE	true
18	machine	_	machine	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	will	_	will	MD	O	_	thing	_	0	IGNORE	true
21	take	_	take	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	14	MOD_s	true
22	advantage	_	advantage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	postings	_	posting	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o2	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	comp.mail.maps?	_	comp.mail.maps?	CD	O	_	_NAME_	_	0	IGNORE	true
28	(E.g.,	(e.g.,	(E.g.,	NNP	O	_	and	_	0	IGNORE	true
29	pathalias,	_	pathalias,	NNP	O	_	and	_	0	IGNORE	true
30	smail,	_	smail,	NNP	O	_	and	_	0	IGNORE	true
31	etc.	_	etc.	FW	O	(p<root> / --LEX--  :mod-of (s<mod>))	et-cetera	(mod())	3	MOD_mod	true
32	)	_	)	-RRB-	O	_	and	_	0	IGNORE	true

nodealignment=[7@@s@@need-01, 22@@d@@advantage, 25@@d@@posting, 21@@b@@take-01, 13@@p@@mail, 8@@d@@software, 15@@s@@run-01, 10@@i@@get-01, 14@@d@@system, 2@@d@@amr-unknown, 5@@b@@get-01, 18@@b@@machine, 4@@d@@i, 31@@p@@et-cetera, 3@@s@@possible-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	came	_	come	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	and	_	0	IGNORE	true
4	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	of	_	of	IN	O	_	thing	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	search	_	search	NN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
10	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
11	a	_	a	DT	O	_	person	_	0	IGNORE	true
12	reliable	_	reliable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	MOD_s	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	reputable	_	reputable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	repute-01	(s())	15	MOD_s	true
15	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	confidential	_	confidential	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
22	transaction,	_	transaction,	NNS	O	_	and	_	0	IGNORE	true
23	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
24	involves	_	involve	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
25	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
26	transfer	_	transfer	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	a	_	a	DT	O	_	thing	_	0	IGNORE	true
29	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	sum	_	sum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	money	_	money	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
33	to	_	to	IN	O	_	thing	_	0	IGNORE	true
34	an	_	an	DT	O	_	thing	_	0	IGNORE	true
35	account	_	account	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
36	requiring	_	require	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	MOD_s	true
37	maximum	_	maximum	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	confidence	_	confidence	NN	O	(d<root> / --LEX--)	confident-01	()	36	APP_o	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@i, 24@@s@@involve-01, 20@@p@@confidential, 26@@s@@transfer-01, 29@@p@@huge, 9@@t@@search-01, 17@@s@@handle-01, 6@@d@@you, 2@@c@@come-01, 30@@d@@sum, 35@@d@@account, 21@@d@@business, 19@@s@@very, 38@@d@@confident-01, 4@@s@@know-01, 36@@s@@require-01, 15@@d@@person, 12@@s@@reliable, 14@@s@@repute-01, 37@@p@@maximum, 32@@p@@money]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	unsuccessful	_	unsuccessful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	3	MOD_s	true
3	venture	_	venture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	followed	_	follow	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	by	_	by	IN	O	_	name	_	0	IGNORE	true
8	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
9	falling-out	_	falling-out	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	Iraqi	_name_	Iraqi	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	partner,	_	partner,	NNP	O	(d<root> / --LEX--)	_NAME_	()	6	APP_o2	true
14	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
15	sought	_	seek	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	MOD_s	true
16	to	_	to	TO	O	_	person	_	0	IGNORE	true
17	acquire	_	acquire	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	additional	_	additional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	revenue	_	revenue	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	sources	_	source	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
22	in	_	in	IN	O	_	person	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	neighboring	_	neighboring	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
25	emirate	_	emirate	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	Kuwait,	_name_	kuwait,	CD	O	_	_NAME_	_	0	IGNORE	true
28	a	_	a	DT	O	_	own-01	_	0	IGNORE	true
29	wholly-owned	_	wholly-owned	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	U.S.-British	u.s.-british	u.s.-british	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	31	MOD_mod	true
31	subsidiary	_	subsidiary	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
32	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[17@@s@@acquire-01, 15@@c@@seek-01, 21@@d@@source, 24@@s@@neighboring-01, 31@@p@@subsidiary, 5@@n@@soon, 9@@d@@falling-out, 2@@s@@succeed-01, 13@@d@@_NAME_, 3@@d@@venture, 12@@n@@_NAME_, 30@@n@@_NAME_, 18@@p@@additional, 20@@p@@revenue, 19@@p@@oil, 29@@p@@wholly-owned, 25@@b@@emirate, 1@@p@@this, 12@@c@@country, 6@@b@@follow-01]
sentence=1	Unfortunately,	unfortunately,	Unfortunately,	NFP	O	_	and	_	0	IGNORE	true
2	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	partners	_	partner	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$-01	(s())	8	APP_s	true
4	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	1991	_name_	1991	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	3	MOD_mod	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	0	ROOT	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	shoulder	_	shoulder	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	burden	_	burden	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	venture,	_	venture,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
17	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	upcoming	_	upcoming	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
21	phase	_	phase	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	23	MOD_s	true
23	cost	_	cost	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
24	the	_	the	DT	O	_	and	_	0	IGNORE	true
25	sum	_	sum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	100	_	100	CD	O	(m<root> / --LEX--  :unit-of (a<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
28	billion	_	billion	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	300000000000	(mod())	8	MOD_mod	true
29	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	200	_	200	CD	O	_	_NUMBER_	_	0	IGNORE	true
31	billion	_	billion	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	300000000000	(mod())	32	MOD_mod	true
32	dollars	_	dollar	NNS	O	(m<root> / monetary-quantity  :unit (c / --LEX--)  :mod-of (r<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
33	($100,000,000,000	_	($100,000,000,000	NNS	O	_	_NUMBER_	_	0	IGNORE	true
34	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
35	$200,000,000,000),	_	$200,000,000,000),	NNP	O	_	and	_	0	IGNORE	true
36	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
37	in	_	in	IN	O	_	after	_	0	IGNORE	true
38	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
39	initial	_	initial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	acquisition	_	acquisition	NN	O	(d<root> / --LEX--)	acquire-01	()	41	APP_op1	true
41	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	23	MOD_mod	true
42	in	_	in	IN	O	_	after	_	0	IGNORE	true
43	long-term	_	long-term	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	long-03	(s())	44	MOD_s	true
44	management	_	management	NN	O	(d<root> / --LEX--)	manage-01	()	41	APP_op2	true
45	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@this, 32@@c@@dollar, 39@@p@@initial, 27@@m@@_NUMBER_, 40@@d@@acquire-01, 28@@explicitanon0@@300000000000, 20@@s@@upcoming-01, 16@@p@@venture,, 43@@s@@long-03, 44@@d@@manage-01, 5@@d@@date-entity, 12@@d@@burden-01, 7@@explicitanon0@@-, 25@@d@@sum, 3@@p@@person, 3@@s@@partner-01, 23@@s@@cost-01, 8@@c@@will-02, 2@@d@@our, 3@@h@@have-rel-role-91, 21@@n@@phase, 31@@explicitanon0@@300000000000, 10@@s@@shoulder-01, 5@@explicitanon0@@_NUMBER_, 41@@b@@and, 22@@s@@possible-01, 15@@s@@new-01, 32@@m@@monetary-quantity]
sentence=1	Our	our	Our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	distinguished	_	distinguished	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	distinguish-01	(s())	3	MOD_s	true
3	colleagues	_	colleague	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	8	APP_o	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	transaction	_	transaction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	transact-01	(s())	3	APP_o	true
8	include	_	include	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
10	sitting	_	sit	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	vice-president	_	vice-president	NN	O	(o3<root> / organization  :name (n4 / --LEX--)  :part-of (p<poss>))	president	(poss())	33	APP_op1	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_poss	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	America,_Richard_Cheney,	_name_	cheney,	CD	O	_	_NAME_	_	0	IGNORE	true
16	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	an	_	an	DT	O	_	have-org-role-91	_	0	IGNORE	true
19	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	partner	_	partner	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	venture	_	venture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
26	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	head	_	head	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_op2	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	Halliburton	_name_	Halliburton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	31	MOD_mod	true
31	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
32	company,	_name_	company,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	8	APP_s	true
34	Condoleeza_Rice,	_name_	Rice,	NNP	O	_	_NAME_	_	0	IGNORE	true
35	whose	_	whose	WP$	O	_	thing	_	0	IGNORE	true
36	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	dedication	_	dedication	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	devote-01	(s())	42	APP_o	true
38	to	_	to	IN	O	_	thing	_	0	IGNORE	true
39	the	_	the	DT	O	_	person	_	0	IGNORE	true
40	venture	_	venture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
41	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
42	demonstrated	_	demonstrate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	APP_op3	true
43	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
44	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
45	naming	_	naming	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	42	APP_s	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	a	_	a	DT	O	_	thing	_	0	IGNORE	true
48	Chevron	_name_	Chevron	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	50	MOD_mod	true
49	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	tanker	_	tanker	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
51	after	_	after	IN	O	_	$LEMMA$	_	0	IGNORE	true
52	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
53	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@s@@head-01, 8@@s@@include-01, 33@@a@@and, 6@@d@@business, 2@@s@@distinguish-01, 3@@s@@colleague, 30@@n@@_NAME_, 37@@s@@devote-01, 23@@c@@country, 40@@d@@venture, 7@@s@@transact-01, 26@@n@@former, 5@@p@@this, 36@@p@@professional, 42@@s@@demonstrate-01, 23@@n@@_NAME_, 10@@s@@sit-01, 1@@d@@Our, 31@@d@@oil, 19@@p@@original, 20@@s@@partner-01, 49@@p@@oil, 45@@s@@naming-01, 24@@d@@venture, 11@@n4@@president, 13@@n@@_NAME_, 13@@c@@country, 50@@d@@tanker, 11@@o3@@organization, 48@@n@@_NAME_]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
4	hack	_	hack	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	2	APP_o	true
5	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	way	_	way	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
7	through	_	through	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	ceiling	_	ceiling	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	4	MOD_mod	true
10	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	beauty	_	beauty	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	shop	_	shop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	flood	_	flood	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
16	waters	_	water	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	rose	_	rise	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
20	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	half	_	half	PDT	O	_	i	_	0	IGNORE	true
23	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
24	million	_	million	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1000000	(mod())	25	MOD_mod	true
25	people	_	people	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	person	(mod())	20	MOD_mod	true
26	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
27	much	_	much	JJ	O	_	$LEMMA$	_	0	IGNORE	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	which	_	which	WDT	O	_	i	_	0	IGNORE	true
30	lies	_	lie	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
31	below	_	below	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	30	APP_o	true
32	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	level	_	level	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op1	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@l@@hack-01, 32@@p@@sea, 6@@m@@way, 15@@p@@flood-01, 31@@o@@below, 2@@o@@obligate-01, 24@@explicitanon0@@1000000, 13@@d@@shop, 1@@d@@She, 9@@w@@ceiling, 25@@g@@person, 33@@d@@level, 12@@p@@beauty, 30@@s@@lie-01, 17@@s@@rise-01, 16@@d@@water, 7@@p@@through, 20@@b@@city]
sentence=1	"Some	"some	"Some	''	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	sections	_	section	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	11	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
5	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
6	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	dry	_	dry	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
9	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	APP_o	true
11	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
12	nine	_	nine	CD	O	(d<root> / --LEX--)	9	()	13	APP_op1	true
13	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	15	APP_op1	true
14	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
15	feet	_	foot	NNS	O	(d2<root> / distance-quantity  :unit (m2 / --LEX--)  :quant-of (r / relative-position  :op1 (c2<op1>)  :location-of (w<mod>)))	$LEMMA$	(op1(), mod())	17	MOD_mod	true
16	(some	_	(some	.	O	_	$LEMMA$	_	0	IGNORE	true
17	3m)	_	3m)	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
18	of	_	of	IN	O	_	between	_	0	IGNORE	true
19	water,"	_	water,"	ADD	O	_	$LEMMA$	_	0	IGNORE	true
20	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
22	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[20@@d@@he, 12@@d@@9, 5@@d@@city, 15@@r@@relative-position, 17@@explicitanon0@@-, 8@@s@@dry-02, 9@@n@@now, 21@@s@@say-01, 15@@d2@@distance-quantity, 13@@o@@or, 1@@p@@"Some, 11@@s@@see-01, 15@@m2@@foot, 10@@s@@possible-01, 2@@h@@section, 14@@explicitanon0@@_NUMBER_]
sentence=1	Survivors	survivors	survivor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	survive-01	()	4	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	being	_	be	VBG	O	_	person	_	0	IGNORE	true
4	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	time,	_	time,	NNS	O	_	and	_	0	IGNORE	true
8	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-91	(s(), o())	4	MOD_o	true
9	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	10	MOD_mod	true
10	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
11	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
12	lost	_	lose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
13	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
14	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	12	APP_o	true
15	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[14@@h@@have-rel-role-91, 1@@e2@@survive-01, 12@@s@@lose-02, 8@@s@@include-91, 5@@p@@all, 14@@f@@parent, 14@@p@@person, 9@@explicitanon0@@2, 1@@p2@@person, 4@@s@@find-01, 10@@d@@child]
sentence=1	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	11	APP_s	true
2	George_W_Bush,	_name_	Bush,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	has	_	have	VBZ	O	(d<root> / --LEX--)	person	()	11	APP_o2	true
5	cut	_	cut	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
6	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
7	holiday	_	holiday	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	two_days	_name_	day	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	short,	_	short,	NNP	O	_	and	_	0	IGNORE	true
10	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
11	called	_	call	VBN	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-03	(s(), o(s_UNIFY_o2()))	0	ROOT	true
12	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
14	to	_	to	TO	O	_	person	_	0	IGNORE	true
15	donate	_	donate	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
16	to	_	to	IN	O	_	person	_	0	IGNORE	true
17	the_Red_Cross	_name_	Cross	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
19	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	organisations	_	organisation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[1@@e@@president, 18@@a@@or, 7@@d@@holiday, 13@@c@@country, 20@@d@@organisation, 17@@o2@@organization, 17@@n@@_NAME_, 4@@d@@person, 8@@p@@day, 19@@p@@other, 5@@s@@cut-02, 15@@t@@donate-01, 11@@w@@call-03, 1@@p@@person, 1@@h@@have-org-role-91, 13@@n@@_NAME_]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	involved	_	involve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	competition	_	competition	NN	O	(d<root> / --LEX--)	compete-02	()	4	APP_o	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	promises	_	promise	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	$5000	_	$5000	NNP	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	10	APP_o	true
13	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	10	MOD_mod	true
14	prize,	_	prize,	NNS	O	_	include-91	_	0	IGNORE	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
18	like	_	like	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
19	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
20	win	_	win	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
21	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
22	order	_	order	NN	O	_	cause-01	_	0	IGNORE	true
23	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
24	donate	_	donate	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	to	_	to	IN	O	_	monetary-quantity	_	0	IGNORE	true
27	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
28	benefit	_	benefit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	29	MOD_mod	true
29	fund	_	fund	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o	true
30	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	have	_	have	VBP	O	_	person	_	0	IGNORE	true
33	started	_	start	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@p@@benefit-01, 20@@s@@win-01, 29@@d@@fund-01, 13@@explicitanon0@@1, 18@@s@@like-02, 7@@s@@local-02, 4@@s@@involve-01, 33@@s@@start-01, 10@@s@@promise-01, 8@@d@@compete-02, 12@@m2@@monetary-quantity, 13@@o@@ordinal-entity, 1@@p@@that, 24@@r2@@donate-01, 12@@explicitanon0@@_NUMBER_, 2@@d@@band]
sentence=1	Abby_Freeman	_name_	Freeman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_op1	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
4	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	friend	_	friend	NN	O	(h<root> / have-rel-role-91  :ARG2 (b / --LEX--)  :ARG1 (i<o>)  :ARG0 (h2<s>))	$LEMMA$	(s(), o())	1	MOD_s	true
6	who	_	who	WP	O	_	i	_	0	IGNORE	true
7	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
8	non-Hodgkin	non-hodgkin	non-hodgkin	JJ	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
9	lymphoma,	_	lymphoma,	NNS	O	_	and	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
13	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	help	_	help	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	APP_s	true
15	!	_	!	.	O	_	and	_	0	IGNORE	true

nodealignment=[4@@s@@good-02, 3@@d@@our, 5@@h@@have-rel-role-91, 10@@a@@and, 5@@b@@friend, 14@@s@@help-01, 13@@d@@your, 7@@s@@have-03, 8@@d@@_NAME_, 12@@s@@need-01, 1@@p@@person, 1@@n@@_NAME_]
sentence=1	Abby	_name_	Abby	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	APP_op1	true
3	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	7	MOD_mod	true
4	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	true
5	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	children,	_	children,	NNS	O	_	and	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	7	APP_op2	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	love	_	love	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
14	her	_	she	PRP	O	_	person	_	0	IGNORE	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[8@@h@@have-rel-role-91, 8@@p@@person, 10@@s@@love-01, 2@@s@@have-03, 8@@f@@friend, 13@@s@@need-01, 7@@a@@and, 3@@explicitanon0@@3, 4@@s@@wonderful-03, 1@@p@@person, 1@@n@@_NAME_, 5@@p@@young]
sentence=1	Bands,	bands,	bands,	CD	O	_	$LEMMA$	_	0	IGNORE	true
2	food,	_	food,	NNS	O	(d<root> / --LEX--)	product	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
4	prizes	_	prize	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_op2	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	sponsored	_	sponsor	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	by	_	by	IN	O	_	and	_	0	IGNORE	true
8	Beyond_Control,	_name_	control,	CD	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	will	_	will	MD	O	_	person	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	competing	_	compete	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
13	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the_Band_of_the_Year_Contest	_name_	Contest	NNP	O	(g<root> / game  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
15	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the_River_Front_Festival	_name_	Festival	NNP	O	(h3<root> / hospital  :name (n5 / --LEX--)  :location-of (r<mod>))	_NAME_	(mod())	12	MOD_mod	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	Cuyahoga_Falls	_name_	Falls	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	on	_	on	IN	O	_	10	_	0	IGNORE	true
20	July_1	_name_	1	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	12	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@n@@_NAME_, 3@@a@@and, 6@@s@@sponsor-01, 8@@c@@company, 2@@d@@product, 4@@d@@prize-01, 8@@n@@_NAME_, 12@@s@@compete-01, 18@@n@@_NAME_, 18@@c@@city, 20@@n@@_DATE_, 14@@g@@game, 16@@n5@@_NAME_, 16@@h3@@hospital]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	submarine	_	submarine	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	incident	_	incident	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
4	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
5	put	_	put	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	0	ROOT	true
6	down	_	down	RP	O	_	cause-01	_	0	IGNORE	true
7	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	"technical	_	"technical	XX	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
10	error"	_	error"	.	O	_	oppose-01	_	0	IGNORE	true
11	by	_	by	IN	O	_	war-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	name	_	0	IGNORE	true
13	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	government,	_	government,	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_s	true
15	which	_	which	WDT	O	_	name	_	0	IGNORE	true
16	apologised	_	apologise	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	to	_	to	IN	O	_	and	_	0	IGNORE	true
18	Japan	_name_	Japan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@apologise-01, 14@@d@@_NAME_, 2@@p@@submarine, 5@@b@@put-03, 13@@c@@country, 18@@n@@_NAME_, 3@@d@@incident, 9@@d@@"technical, 13@@n@@_NAME_, 18@@c@@country]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Brazil	_name_	Brazil	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
3	trade	_	trade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
4	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	5	APP_o	true
5	included	_	include	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	funding	_	funding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	fund-01	(s())	5	APP_s	true
7	for	_	for	IN	O	_	thing	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	joint	_	joint	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
10	oil-drilling	_	oil-drilling	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	bomb-01	(s())	11	MOD_s	true
11	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	pipeline	_	pipeline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	programme	_	programme	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
14	at	_	at	IN	O	_	monetary-quantity	_	0	IGNORE	true
15	a	_	a	DT	O	_	monetary-quantity	_	0	IGNORE	true
16	cost	_	cost	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
17	that	_	that	WDT	O	_	and	_	0	IGNORE	true
18	experts	_	expert	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$-01	()	19	APP_s	true
19	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
20	would	_	would	MD	O	_	thing	_	0	IGNORE	true
21	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	16	MOD_s	true
22	up	_	up	IN	O	_	monetary-quantity	_	0	IGNORE	true
23	to	_	to	TO	O	_	up-$LEMMA$	_	0	IGNORE	true
24	three	_	three	CD	O	(d<root> / --LEX--)	3	()	27	APP_o	true
25	times	_	time	NNS	O	_	product-of	_	0	IGNORE	true
26	the	_	the	DT	O	_	product-of	_	0	IGNORE	true
27	cost	_	cost	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	30	MOD_s	true
30	buying	_	buy	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_s	true
31	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
32	on	_	on	IN	O	_	thing	_	0	IGNORE	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	market	_	market	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
35	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[24@@d@@3, 30@@s@@buy-01, 16@@s@@cost-01, 10@@s@@bomb-01, 31@@d@@oil, 29@@s@@simple-02, 4@@s@@deal-01, 27@@s@@cost-01, 18@@p@@person, 11@@p@@and, 5@@s@@include-01, 12@@p@@pipeline, 19@@s@@say-01, 3@@p@@trade-01, 21@@s@@add-02, 18@@l@@expert-01, 2@@n@@_NAME_, 9@@p@@joint, 6@@s@@fund-01, 34@@b@@market, 2@@c@@country, 13@@d@@programme]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
3	invested	_	invest	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	$3	_	$3	NNP	O	_	_NUMBER_	_	0	IGNORE	true
5	billion	_	billion	CD	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	1	()	3	APP_o	true
6	in	_	in	IN	O	_	monetary-quantity	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	African	_name_	african	JJ	O	(n<root> / --LEX--  :name-of (c2 / continent  :location-of (c<mod>)))	_NAME_	(mod())	10	MOD_mod	true
9	country's	_	country'	NNS	O	_	_NAME_	_	0	IGNORE	true
10	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
11	industry,	_	industry,	NNS	O	_	and	_	0	IGNORE	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	supplies	_	supply	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
16	seven	_	seven	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	7	()	19	APP_o2	true
17	per	_	per	IN	O	_	between	_	0	IGNORE	true
18	cent	_	cent	NN	O	_	opium	_	0	IGNORE	true
19	of	_	of	IN	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	include-91	(o2(), s(), o())	3	MOD_o	true
20	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
21	needs	_	need	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_o	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@d@@It, 5@@explicitanon0@@1, 3@@b@@invest-01, 13@@s@@supply-01, 21@@d@@need-01, 8@@n@@_NAME_, 16@@p@@percentage-entity, 8@@c2@@continent, 16@@explicitanon1@@7, 19@@c@@include-91, 10@@d@@oil, 5@@m2@@monetary-quantity]
sentence=1	A	a	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	week	_name_	week	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
3	before,	_	before,	NNP	O	_	and	_	0	IGNORE	true
4	China's	_name_	China's	NNP	O	_	_NAME_	_	0	IGNORE	true
5	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	6	MOD_mod	true
6	biggest	_	big	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	9	MOD_mod	true
7	state	_	state	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	firm	_	firm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	had	_	have	VBD	O	_	person	_	0	IGNORE	true
11	signed	_	sign	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	$70	_	$70	NN	O	_	dollar	_	0	IGNORE	true
14	billion	_	billion	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	15	MOD_mod	true
15	deal	_	deal	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
16	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
17	oilfield	_	oilfield	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
19	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	20	MOD_s	true
20	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	development	_	development	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	15	APP_o	true
22	with	_	with	IN	O	_	-	_	0	IGNORE	true
23	Iran,	_name_	Iran,	NNP	O	_	_NAME_	_	0	IGNORE	true
24	which	_	which	WDT	O	_	name	_	0	IGNORE	true
25	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	supplies	_	supply	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
27	13	_	13	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	28	MOD_mod	true
28	per	_	per	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	rate-entity-91	(s(), o())	11	MOD_o	true
29	cent	_	cent	NN	O	_	percentage-entity	_	0	IGNORE	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	China's	_name_	China's	NNP	O	_	_NAME_	_	0	IGNORE	true
32	needs	_	need	VBZ	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	26	APP_o	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@s@@natural-03, 17@@d@@oilfield, 6@@t@@large, 15@@s@@deal-01, 2@@t@@temporal-quantity, 8@@p@@oil, 14@@explicitanon0@@1, 20@@d@@gas, 7@@p@@state, 28@@s@@rate-entity-91, 5@@o@@ordinal-entity, 32@@t@@thing, 6@@m@@most, 26@@s@@supply-01, 25@@n@@already, 18@@a@@and, 32@@d@@need-01, 11@@c@@sign-02, 9@@d@@firm, 21@@s@@develop-02, 2@@y@@week, 27@@explicitanon0@@_NUMBER_, 5@@explicitanon0@@2, 1@@explicitanon0@@1]
sentence=1	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	an	_	an	DT	O	_	thing	_	0	IGNORE	true
4	overland	_	overland	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	route	_	route	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
8	own	_	own	JJ	O	_	$LEMMA$-01	_	0	IGNORE	true
9	territory,	_	territory,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	would	_	would	MD	O	_	thing	_	0	IGNORE	true
12	give	_	give	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	ultimate	_	ultimate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	control	_	control	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
16	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
17	hostilities	_	hostility	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	broke	_	break	VBD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-13	(mod(), s())	12	MOD_mod	true
19	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@p@@overland, 12@@s@@give-01, 15@@d@@control-01, 2@@s@@want-01, 1@@n@@_NAME_, 18@@o@@break-13, 1@@c@@country, 5@@d@@route, 17@@d@@hostility, 14@@p@@ultimate]
sentence=1	"If	"if	"If	``	O	_	_NAME_	_	0	IGNORE	true
2	China's	_name_	china'	VBN	O	_	_NAME_	_	0	IGNORE	true
3	economy	_	economy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
4	falters,	_	falters,	VBZ	O	_	and	_	0	IGNORE	true
5	which,	_	which,	NNS	O	_	cause-01	_	0	IGNORE	true
6	in	_	in	IN	O	(d<root> / --LEX--)	i	()	32	APP_s	true
7	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
8	view,	_	view,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	32	MOD_o	true
9	appears	_	appear	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
10	increasingly	_	increasingly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	increase-01	(s())	9	MOD_s	true
11	likely,	_	likely,	NNS	O	_	and	_	0	IGNORE	true
12	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
13	commodity	_	commodity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	prices	_	price	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
15	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
16	plummet,	_	plummet,	NNP	O	_	shit	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	32	APP_o	true
18	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	them,	_	them,	NNS	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	value	_	value	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	32	MOD_mod	true
24	assets	_	asset	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	produce	_	produce	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
27	them,"	_	them,"	NN	O	_	$LEMMA$	_	0	IGNORE	true
28	Jason_Kindopp,_Eurasia's	_name_	Eurasia's	NNP	O	_	_NAME_	_	0	IGNORE	true
29	lead	_	lead	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	23	MOD_s	true
30	China	_name_	China	NNP	O	_	_NAME_	_	0	IGNORE	true
31	analyst,	_	analyst,	NNP	O	_	person	_	0	IGNORE	true
32	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@d@@asset, 10@@s@@increase-01, 21@@s@@value-01, 14@@s@@price-01, 13@@d@@commodity, 8@@s@@thing, 17@@a@@and, 29@@s@@lead-02, 3@@d@@economy, 23@@p@@person, 26@@s@@produce-01, 32@@s@@say-01, 6@@d@@i, 12@@n@@then, 9@@s@@appear-02]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	stick	_	stick	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	4	APP_s	true
7	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	formal	_	formal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	intense	_	intense	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
11	meditation	_	meditation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	practice	_	practice	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
13	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	4	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	one	_	one	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	4	MOD_o	true
16	for	_	for	IN	O	_	resemble-01	_	0	IGNORE	true
17	beginners	_	beginner	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	described	_	describe	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	MP3	mp3	mp3	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	file	_	file	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
25	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	24	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	visualisations	_	visualisation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@d@@visualisation, 3@@n@@always, 15@@s@@one, 18@@s@@describe-01, 22@@l@@file, 25@@w@@after, 6@@s@@stick-01, 13@@s@@resemble-01, 11@@d@@meditation, 9@@p@@formal, 17@@i@@beginner, 4@@s@@good-02, 21@@p@@_NAME_, 24@@s@@follow-01, 10@@s@@intense-02, 12@@s@@practice-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	merge	_	merge	VB	O	(m<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (f<o>)  :ARG2 (t<o2>))	$LEMMA$-01	(o2(), o(poss_UNIFY_s()))	2	APP_o	true
5	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	mind	_	mind	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	11	MOD_mod	true
10	universal	_	universal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	Mind	mind	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	surrounds	_	surround	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@m@@more, 11@@d@@mind, 9@@f2@@great, 1@@d@@You, 6@@h@@mind, 13@@s@@surround-01, 2@@c@@want-01, 10@@p@@universal, 4@@m@@merge-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	presents	_	present	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	2	APP_o	true
5	for	_	for	IN	O	_	and	_	0	IGNORE	true
6	marriage	_	marriage	NN	O	(d<root> / --LEX--)	marry-01	()	7	APP_s	true
7	equality	_	equality	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	4	APP_s	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	states,	_	states,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
10	“We	“we	“We	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
11	are	_	be	VBP	O	_	person	_	0	IGNORE	true
12	resolved	_	resolve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op2	true
13	that	_	that	IN	O	_	and	_	0	IGNORE	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	State	_name_	state	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	12	APP_o	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	interfere	_	interfere	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	same-gender	_	same-gender	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	cross-02	(s())	21	MOD_s	true
21	couples	_	couple	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
23	choose	_	choose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_o	true
24	to	_	to	TO	O	_	person	_	0	IGNORE	true
25	marry	_	marry	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
26	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
27	share	_	share	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
28	fully	_	fully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	full	(s())	27	MOD_s	true
29	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	equally	_	equally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal	(s())	27	MOD_s	true
31	in	_	in	IN	O	_	thing	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	rights,	_	rights,	NNP	O	_	mean-01	_	0	IGNORE	true
34	responsibilities,	_	responsibilities,	NNP	O	_	mean-01	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_o	true
36	commitments	_	commitment	NNS	O	(d<root> / --LEX--)	commit-01	()	35	APP_op2	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	civil	_	civil	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op1	true
39	marriage.	_	marriage.	NN	O	_	$LEMMA$	_	0	IGNORE	true
40	”	_	"	''	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@g@@government-organization, 17@@explicitanon0@@-, 7@@s@@equal-01, 21@@d@@couple, 36@@d@@commit-01, 30@@s@@equal, 4@@s@@case-03, 35@@a@@and, 23@@s@@choose-01, 27@@s@@share-01, 18@@s@@interfere-01, 28@@s@@full, 16@@s@@recommend-01, 20@@s@@cross-02, 8@@a@@and, 25@@s@@marry-01, 1@@d@@It, 10@@n@@_NAME_, 12@@s@@resolve-01, 38@@d@@civil, 2@@s@@present-01, 6@@d@@marry-01]
sentence=1	(Since	(since	(since	XX	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	Declaration	_name_	Declaration	NNP	O	(d<root> / --LEX--)	state-01	()	5	APP_s	true
4	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
5	written	_	write	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
8	from	_	from	IN	O	_	and	_	0	IGNORE	true
9	“religious	_	“religious	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
10	leaders,”	_	leaders,”	JJ	O	_	mean-01	_	0	IGNORE	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_o	true
12	who	_	who	WP	O	_	person	_	0	IGNORE	true
13	don’t	_	don’t	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	consider	_	consider	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
16	“religious	_	“religious	UH	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	leaders”	_	leaders”	FW	O	_	have-org-role-91	_	0	IGNORE	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
19	sign	_	sign	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	“Supporters	“supporters	“supporter	NNS	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (p<s>)))	_NAME_	(s())	19	MOD_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the_North_Carolina_Religious_Coalition_for_Marriage_Equality.”	_name_	Equality.”	NNP	O	_	_NAME_	_	0	IGNORE	true
24	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@s@@possible-01, 5@@s@@write-01, 3@@d@@state-01, 19@@s@@sign-01, 21@@p2@@_NAME_, 7@@s@@come-03, 13@@explicitanon0@@-, 9@@p@@_NAME_, 14@@s@@consider-01, 11@@d@@person, 16@@d@@“religious, 21@@h@@have-org-role-91]
sentence=1	Denial	denial	denial	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	deny-01	(s())	15	APP_s	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	status	_	status	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	of	_	of	IN	O	_	person	_	0	IGNORE	true
6	marriage	_	marriage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	marry-01	(mod())	4	MOD_mod	true
7	to	_	to	IN	O	_	person	_	0	IGNORE	true
8	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	15	MOD_mod	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	would	_	would	MD	O	_	person	_	0	IGNORE	true
11	freely	_	freely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	free-04	(s())	12	MOD_s	true
12	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
13	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
14	responsibilities	_	responsibility	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	responsible-03	()	12	APP_o	true
15	creates	_	create	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	legal	_	legal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	19	MOD_mod	true
19	inequities	_	inequity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
21	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	society	(mod())	22	MOD_mod	true
22	injustice	_	injustice	NN	O	(d<root> / --LEX--)	just-02	()	20	APP_op2	true
23	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[21@@p@@society, 20@@a@@and, 8@@p@@that, 22@@d@@just-02, 12@@s@@accept-01, 14@@d@@responsible-03, 19@@d@@inequity, 15@@s@@create-01, 14@@t@@thing, 16@@s@@legal-02, 1@@s@@deny-01, 4@@d@@status, 11@@s@@free-04, 6@@p@@marry-01, 18@@p@@economy]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	insist	_	insist	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	and	_	0	IGNORE	true
4	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
5	one,	_	one,	NN	O	_	and	_	0	IGNORE	true
6	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	state,	_	state,	NNP	O	_	and	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	allowed	_	allow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	coerce	_	coerce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_op1	true
13	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_s	true
14	into	_	into	IN	O	_	-	_	0	IGNORE	true
15	marriage	_	marriage	NN	O	(d<root> / --LEX--)	marry-01	()	12	APP_o	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
17	bar	_	bar	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	16	APP_op2	true
18	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	19	MOD_mod	true
19	consenting	_	consent	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
20	adults,	_	adults,	NNS	O	_	and	_	0	IGNORE	true
21	whether	_	whether	IN	O	_	cause-01	_	0	IGNORE	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	same	_	same	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op1	true
25	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	2	MOD_mod	true
26	differing	_	differing	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op2	true
27	genders,	_	genders,	NNS	O	_	and	_	0	IGNORE	true
28	from	_	from	IN	O	_	-	_	0	IGNORE	true
29	forming	_	form	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
30	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
31	family	_	family	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	unit	_	unit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
33	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
34	lets	_	let	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	MOD_s	true
35	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	be	_	be	VB	O	_	person	_	0	IGNORE	true
37	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	43	MOD_mod	true
39	loving,	_	loving,	NNPS	O	_	thing	_	0	IGNORE	true
40	thus	_	thus	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	34	MOD_s	true
41	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
42	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	43	MOD_mod	true
43	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@d@@marry-01, 4@@explicitanon0@@-, 12@@s@@coerce-01, 24@@d@@same-01, 6@@p@@especially, 26@@d@@differing-01, 1@@d@@We, 10@@s@@allow-01, 2@@s@@insist-01, 13@@d@@person, 25@@a@@or, 37@@s@@more, 41@@s@@more, 42@@s@@full, 34@@s@@let-01, 40@@s@@cause-01, 38@@s@@full, 43@@d@@human, 29@@s@@form-01, 17@@o@@bar-01, 31@@p@@family, 16@@a@@or, 19@@d@@consent-01, 32@@d@@unit, 18@@explicitanon0@@2]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	resolved	_	resolve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	State	_name_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	3	APP_o	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	interfere	_	interfere	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	same-gender	_	same-gender	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	cross-02	(s())	12	MOD_s	true
12	couples	_	couple	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
14	choose	_	choose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	marry	_	marry	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	share	_	share	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
19	fully	_	fully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	full	(s())	18	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	equally	_	equally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	18	MOD_s	true
22	in	_	in	IN	O	_	thing	_	0	IGNORE	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	rights,	_	rights,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
25	responsibilities,	_	responsibilities,	NNP	O	_	mean-01	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
27	commitments	_	commitment	NNS	O	(d<root> / --LEX--)	commit-01	()	26	APP_op2	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	civil	_	civil	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	marriage	_	marriage	NN	O	(d<root> / --LEX--)	marry-01	()	26	APP_op1	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@a@@and, 3@@s@@resolve-01, 8@@explicitanon0@@-, 27@@d@@commit-01, 7@@s@@recommend-01, 14@@s@@choose-01, 1@@d@@We, 19@@s@@full, 16@@s@@marry-01, 21@@s@@equal-01, 29@@p@@civil, 18@@s@@share-01, 11@@s@@cross-02, 30@@d@@marry-01, 9@@s@@interfere-01, 12@@d@@couple, 6@@d@@state]
sentence=1	Likewise,	likewise,	likewise,	XX	O	_	and	_	0	IGNORE	true
2	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
3	denial	_	denial	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	deny-01	(s())	8	APP_s	true
4	of	_	of	IN	O	_	person	_	0	IGNORE	true
5	state	_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	civil	_	civil	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	recognition	_	recognition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	recognize-01	(s())	3	APP_s	true
8	dishonors	_	dishonor	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	religion	(mod())	11	MOD_mod	true
11	convictions	_	conviction	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	those	_	those	DT	O	_	that	_	0	IGNORE	true
14	communities	_	community	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_poss	true
16	clergy	_	clergy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	who	_	who	WP	O	_	person	_	0	IGNORE	true
18	officiate	_	officiate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
19	at,	_	at,	NNP	O	_	person	_	0	IGNORE	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	bless,	_	bless,	NNS	O	_	mean-01	_	0	IGNORE	true
22	same-gender	_	same-gender	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	cross-02	(s())	23	MOD_s	true
23	marriages	_	marriage	NNS	O	(d<root> / --LEX--)	marry-01	()	18	APP_o	true
24	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[7@@s@@recognize-01, 5@@d@@state, 10@@p@@religion, 22@@s@@cross-02, 16@@d@@clergy, 18@@s@@officiate-01, 11@@m@@conviction, 14@@d@@community, 15@@a@@and, 3@@s@@deny-01, 6@@p@@civil, 23@@d@@marry-01, 8@@s@@dishonor-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	5	APP_o	true
4	do	_	do	VBP	O	_	person	_	0	IGNORE	true
5	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	1	APP_o	true
8	they	_	they	PRP	O	_	person	_	0	IGNORE	true
9	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_mod	true
10	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	will	_	will	MD	O	_	thing	_	0	IGNORE	true
12	vote,	_	vote,	NNP	O	_	thing	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_s	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	who	_	who	WP	O	_	person	_	0	IGNORE	true
17	favor	_	favor	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_o	true
18	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
20	to	_	to	TO	O	_	person	_	0	IGNORE	true
21	outnumber	_	outnumber	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_s	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	who	_	who	WP	O	_	person	_	0	IGNORE	true
25	oppose	_	oppose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
26	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[21@@d@@outnumber-01, 7@@t@@way, 13@@a@@and, 25@@s@@oppose-01, 2@@p@@other, 19@@s@@seem-01, 5@@s@@like-01, 17@@s@@favor-01, 3@@d@@person, 10@@d@@he, 1@@s@@contrast-01, 9@@s@@think-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	an	_	an	DT	O	_	1	_	0	IGNORE	true
4	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	saying	_	saying	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	applies	_	apply	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_s	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	situation:	_name_	situation:	NNS	O	_	this	_	0	IGNORE	true
11	"Act	"act	"act	XX	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	haste,	_	haste,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	repent	_	repent	NN	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$-01	(mod())	11	MOD_mod	true
15	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
16	leisure.	_	leisure.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
17	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@p@@old, 16@@p@@leisure., 11@@d@@"act-01, 5@@d@@saying-01, 14@@r@@repent-01, 7@@s@@apply-02, 9@@p@@this]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	what	_	what	WP	O	_	thing	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
5	about	_	about	JJ	O	_	$LEMMA$-to	_	0	IGNORE	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	happen	_	happen	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	event	(s(), o())	10	MOD_s	true
8	with	_	with	IN	O	_	have-rel-role-91	_	0	IGNORE	true
9	Judge	judge	Judge	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	Samuel_Alito,	_name_	alito,	CD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	0	ROOT	true
11	in	_	in	IN	O	(d<root> / --LEX--)	i	()	10	APP_o	true
12	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
13	opinion,	_	opinion,	NNS	O	_	cause-01	_	0	IGNORE	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	APP_s	true
15	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	14	APP_s	true
17	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	19	MOD_mod	true
18	tragic	_	tragic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	tragedy	(mod())	19	MOD_mod	true
19	flaw	_	flaw	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
20	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	serious	_	serious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
24	blind	_	blind	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
25	spot	_	spot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
26	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
27	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
28	thinking	_	thinking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	think-01	(mod())	25	MOD_mod	true
29	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
30	which	_	which	WDT	O	_	i	_	0	IGNORE	true
31	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	19	MOD_s	true
32	him	_	he	PRP	O	_	mean-01	_	0	IGNORE	true
33	completely	_	completely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	complete-02	(s())	34	MOD_s	true
34	unacceptable	_	unacceptable	JJ	O	(p<root> / possible-01  :ARG1 (j / --LEX--  :ARG1 (t<s>))  :polarity (explicitanon0 / -))	accept-01	(s())	31	APP_o	true
35	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	position	_	position	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_s	true
38	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
39	Supreme_Court	_name_	Court	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	37	APP_s	true
40	Justice:	_name_	justice:	RB	O	_	and	_	0	IGNORE	true
41	He	he	He	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
43	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	45	MOD_mod	true
44	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	45	MOD_s	true
45	agree	_	agree	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	57	APP_op1	true
46	with	_	with	IN	O	_	-	_	0	IGNORE	true
47	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
48	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
49	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
50	"Checks	"checks	"checks	ADD	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_op2	true
51	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	48	MOD_op1	true
52	Balances"	_name_	Balances"	NNP	O	_	cause-01	_	0	IGNORE	true
53	built	_	build	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	true
54	into	_	into	IN	O	_	-	_	0	IGNORE	true
55	the	_	the	DT	O	_	person	_	0	IGNORE	true
56	Constitution,	_name_	constitution,	CD	O	_	and	_	0	IGNORE	true
57	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
58	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
59	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
60	ready	_	ready	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	57	APP_op2	true
61	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
62	start	_	start	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	60	APP_s	true
63	tearing	_	tear	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	62	APP_s	true
64	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
65	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
66	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
67	order	_	order	NN	O	_	cause-01	_	0	IGNORE	true
68	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
69	follow	_	follow	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	63	MOD_mod	true
70	the	_	the	DT	O	_	person	_	0	IGNORE	true
71	"Unitary	"unitary	"unitary	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	72	MOD_mod	true
72	Executive	executive	executive	NN	O	(d<root> / --LEX--)	$LEMMA$	()	69	APP_s	true
73	Theory,"	theory,"	Theory,"	NNP	O	_	and	_	0	IGNORE	true
74	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
75	calls	_	call	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	72	MOD_s	true
76	for	_	for	IN	O	_	so	_	0	IGNORE	true
77	vastly-increased	_	vastly-increased	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	78	MOD_s	true
78	Presidential_Power	_name_	Power	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	75	APP_o	true
79	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
80	the	_	the	DT	O	_	person	_	0	IGNORE	true
81	expense	_	expense	NN	O	_	expend-01	_	0	IGNORE	true
82	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
83	Congress	_name_	Congress	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	84	APP_op1	true
84	and	_	and	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	75	MOD_mod	true
85	the_Supreme_Court	_name_	Court	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	84	APP_op2	true
86	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[71@@p@@"unitary, 85@@n@@_NAME_, 84@@o@@and, 69@@i@@follow-02, 34@@j@@accept-01, 63@@d@@tear-01, 11@@d@@i, 85@@g@@government-organization, 51@@a@@and, 78@@d@@Power, 43@@explicitanon0@@-, 75@@s@@call-03, 7@@s@@event, 72@@d@@executive, 50@@d@@"checks, 25@@d@@spot, 62@@s@@start-01, 10@@s@@_NAME_, 16@@s@@have-03, 57@@a@@and, 1@@p@@that, 45@@s@@agree-01, 83@@n@@_NAME_, 44@@s@@real-04, 83@@g@@government-organization, 24@@s@@blind-02, 60@@s@@ready-02, 22@@s@@very, 48@@d@@system, 31@@s@@make-02, 53@@s@@build-01, 14@@s@@cause-01, 77@@s@@vastly-increased-01, 17@@explicitanon0@@1, 18@@p@@tragedy, 33@@s@@complete-02, 39@@n@@_NAME_, 34@@explicitanon0@@-, 39@@g@@government-organization, 34@@p@@possible-01, 23@@s@@serious-02, 19@@s@@flaw-01, 28@@p@@think-01, 37@@s@@position-01, 9@@s@@Judge-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	Samuel_Alito	_name_	Alito	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	believes	_	believe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
4	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	little-known	_	little-known	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	know-02	(s())	8	MOD_s	true
7	Constitutional	constitutional	constitutional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	constitution	(mod())	8	MOD_mod	true
8	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	-	_	-	HYPH	O	_	name	_	0	IGNORE	true
10	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	"Unitary	"unitary	"unitary	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	Executive	executive	Executive	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	Theory"	theory"	Theory"	NNP	O	_	and	_	0	IGNORE	true
15	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
16	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	24	APP_s	true
21	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	27	APP_op1	true
22	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
23	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
25	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the_Executive_Branch,	_name_	branch,	NN	O	_	mean-01	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
28	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the_Executive_Branch	_name_	Branch	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	33	MOD_s	true
30	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	27	APP_op2	true
31	be	_	be	VB	O	_	person	_	0	IGNORE	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	30	APP_s	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
37	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	Government	_name_	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	33	APP_s	true
40	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	36	MOD_s	true
41	does,	_name_	does,	VBD	O	_	mean-01	_	0	IGNORE	true
42	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	36	MOD_o	true
43	the	_	the	DT	O	_	and	_	0	IGNORE	true
44	functions	_	function	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	56	APP_op1	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	the_Independent_Agencies	_name_	Agencies	NNPS	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	44	APP_s	true
47	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
48	were	_	be	VBD	O	_	person	_	0	IGNORE	true
49	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	44	MOD_s	true
50	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
51	be	_	be	VB	O	_	person	_	0	IGNORE	true
52	free	_	free	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-04	(s())	49	APP_o	true
53	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
54	Presidential	presidential	Presidential	NNP	O	_	$LEMMA$	_	0	IGNORE	true
55	control,	_	control,	NNPS	O	_	and	_	0	IGNORE	true
56	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	42	APP_s	true
57	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
58	Military,	_name_	Military,	NNS	O	(d<root> / --LEX--)	have-03	()	1	APP_s	true
59	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
60	exists,	_	exists,	NNP	O	_	oppose-01	_	0	IGNORE	true
61	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
62	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
63	regulated,	_	regulated,	NNP	O	_	mean-01	_	0	IGNORE	true
64	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
65	which	_	which	WDT	O	_	i	_	0	IGNORE	true
66	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
67	funded	_	fund	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	58	MOD_o	true
68	by	_	by	IN	O	_	and	_	0	IGNORE	true
69	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	70	MOD_s	true
70	authority	_	authority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	67	APP_s	true
71	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	70	MOD_o	true
72	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
73	the	_	the	DT	O	_	person	_	0	IGNORE	true
74	Constitution	_name_	Constitution	NNP	O	(d<root> / --LEX--)	$REPL$	()	71	APP_s	true
75	to	_	to	IN	O	_	government-organization	_	0	IGNORE	true
76	Congress,	congress,	congress,	CD	O	_	mean-01	_	0	IGNORE	true
77	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	71	MOD_mod	true
78	to	_	to	IN	O	_	contrast-01	_	0	IGNORE	true
79	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
80	President	president	President	NNP	O	_	$LEMMA$	_	0	IGNORE	true
81	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[67@@s@@fund-01, 44@@s@@function-01, 2@@p@@person, 1@@s@@contrast-01, 6@@s@@know-02, 2@@n@@_NAME_, 70@@d@@authority, 69@@s@@specific-02, 8@@d@@theory, 74@@d@@_name_, 33@@s@@charge-05, 21@@s@@recommend-01, 30@@s@@recommend-01, 7@@p@@constitution, 29@@s@@_NAME_, 23@@s@@complete-02, 42@@s@@include-01, 46@@g@@government-organization, 71@@s@@give-01, 56@@o@@and, 20@@p@@person, 24@@s@@control-01, 17@@s@@say-01, 46@@n@@_NAME_, 12@@p@@"unitary, 52@@s@@free-04, 20@@h@@have-org-role-91, 10@@s@@call-01, 39@@g2@@govern-01, 49@@f@@design-01, 39@@g@@government-organization, 58@@d@@have-03, 36@@d@@everything, 20@@e@@President, 77@@explicitanon0@@-, 40@@s@@actual-02, 27@@a@@and, 13@@d@@Executive, 3@@s@@believe-01, 35@@p@@almost]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	4	APP_s	true
4	becomes	_	become	VBZ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	1	APP_op2	true
5	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	Dictator,	dictator,	dictator,	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	unrestrained	_	unrestrained	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	by	_	by	IN	O	_	-	_	0	IGNORE	true
9	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	Constitution,	_name_	constitution,	CD	O	_	$LEMMA$	_	0	IGNORE	true
13	backed	_	back	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-04	(s(), o())	9	MOD_o	true
14	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
15	by	_	by	IN	O	_	-	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	Armed	_name_	Armed	NNP	O	(d<root> / --LEX--)	arm-01	()	13	APP_s	true
18	Forces,	_name_	forces,	CD	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
20	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
21	be	_	be	VB	O	_	person	_	0	IGNORE	true
22	entirely	_	entirely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	entire	(mod())	26	MOD_mod	true
23	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@back-up-04, 17@@d@@arm-01, 3@@e@@President, 26@@s@@control-01, 9@@d@@anything, 7@@s@@unrestrained-01, 1@@a@@and, 4@@s@@become-01, 22@@s@@entire, 3@@p@@person, 25@@s@@personal-02, 3@@h@@have-org-role-91]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	want	_	want	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
4	to	_	to	TO	O	_	event	_	0	IGNORE	true
5	help,	_	help,	NNS	O	_	and	_	0	IGNORE	true
6	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	7	MOD_mod	true
7	send	_	send	VB	O	(t<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG2 (i2<o2>)  :ARG1 (i<o>)  :ARG0 (d<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	who	_	who	WP	O	_	i	_	0	IGNORE	true
14	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	read	_	read	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
17	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@t@@send-01, 2@@d@@you, 14@@s@@need-01, 10@@d@@everyone, 6@@explicitanon0@@+, 12@@s@@know-01, 7@@explicitanon0@@imperative, 16@@s@@read-01, 8@@d@@they, 3@@o@@want-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	pair	_	pair	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	6	APP_s	true
4	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	pilots	_	pilot	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	3	APP_s	true
6	embarked	_	embark	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	China's	_name_	China's	NNP	O	_	_NAME_	_	0	IGNORE	true
9	second	_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	12	MOD_mod	true
10	manned	_	manned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	man-01	(s())	12	MOD_s	true
11	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	flight	_	flight	NN	O	(d<root> / --LEX--)	fly-01	()	6	APP_o	true
13	early	_	early	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
14	today,	_	today,	NNS	O	_	and	_	0	IGNORE	true
15	hurtling	_	hurtle	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_s	true
16	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	orbit	_	orbit	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_o	true
18	on	_	on	IN	O	_	-	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	test	_	test	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	21	MOD_mod	true
21	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_mod	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	24	MOD_s	true
24	span	_	span	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
25	five_days	_name_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	.	_	.	.	O	_	blood	_	0	IGNORE	true

nodealignment=[9@@explicitanon0@@2, 23@@s@@possible-01, 11@@p@@space, 13@@n@@early, 17@@d@@orbit-01, 9@@o@@ordinal-entity, 5@@e2@@pilot-01, 20@@p@@test-01, 3@@s@@include-91, 24@@s@@span-01, 25@@d@@day, 10@@s@@man-01, 15@@l@@hurtle-01, 6@@s@@embark-01, 5@@p2@@person, 2@@explicitanon0@@2, 12@@d@@fly-01, 21@@d@@mission, 4@@p@@military]
sentence=1	His	his	he	PRP$	O	_	year	_	0	IGNORE	true
2	one-day	_	one-day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	2	(mod())	3	MOD_mod	true
3	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	vaulted	_	vault	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	communist	_	communist	JJ	O	(p2<root> / political-movement  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	homeland	_	homeland	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	elite	_	elite	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	circle	_	circle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	spacefaring	_	spacefare	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	14	MOD_s	true
14	nations	_	nation	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
16	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
18	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
19	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	MOD_s	true
22	launch	_	launch	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
23	and	_	and	CC	O	_	$LEMMA$	_	4	IGNORE	true
24	sustain	_	sustain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
25	humans	_	human	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	space	_	space	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[17@@a@@and, 13@@s@@spacefare, 27@@b@@space, 16@@n@@_NAME_, 21@@s@@possible-01, 6@@n@@_NAME_, 10@@p@@elite, 25@@d@@human, 16@@c@@country, 2@@y@@2, 14@@g@@nation, 3@@d@@mission, 18@@n@@_NAME_, 22@@s@@launch-01, 18@@c@@country, 7@@d@@homeland, 11@@d@@circle, 24@@s@@sustain-01, 4@@b@@vault-01, 6@@p2@@political-movement, 2@@t@@temporal-quantity]
sentence=1	China's	_name_	China's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
2	"is	_	"is	NNP	O	(d<root> / --LEX--)	i	()	7	APP_o	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	a	_	a	DT	O	_	2	_	0	IGNORE	true
5	fly-by-night	_	fly-by-night	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	program,"	_	program,"	NN	O	_	you	_	0	IGNORE	true
7	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	Joan_Johnson-Freese,	_name_	Johnson-Freese,	NNP	O	_	_NAME_	_	0	IGNORE	true
9	an	_	an	DT	O	_	1	_	0	IGNORE	true
10	expert	_	expert	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	13	MOD_mod	true
13	security	_	security	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
16	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	developments	_	development	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-01	(s())	15	APP_o	true
18	in	_	in	IN	O	_	person	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Asian	_name_	asian	JJ	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	nation	_	nation	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	the_Naval_War_College	_name_	College	NNP	O	(f<root> / facility  :name (n / --LEX--)  :location-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	Newport,_R.I	_name_	r.i	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@p@@_NAME_, 25@@n@@_NAME_, 7@@s@@say-01, 1@@p@@person, 17@@s@@develop-01, 20@@c3@@continent, 23@@f@@facility, 12@@p@@nation, 1@@n@@_NAME_, 15@@s@@follow-02, 2@@d@@i, 23@@n@@_NAME_, 20@@n2@@_NAME_, 16@@d@@space, 21@@b@@nation, 13@@d@@security, 25@@c@@city, 10@@s@@expert-01, 3@@explicitanon0@@-]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	program	_	program	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	will	_	will	MD	O	_	thing	_	0	IGNORE	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	person	_	0	IGNORE	true
9	success,"	_	success,"	NFP	O	_	publication-91	_	0	IGNORE	true
10	Johnson-Freese	johnson-freese	Johnson-Freese	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
11	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@say-01, 10@@n@@_NAME_, 4@@d@@program, 1@@d@@They, 2@@s@@want-01, 10@@p@@person]
sentence=1	China's	_name_	china'	VBN	O	_	possible-01	_	0	IGNORE	true
2	overtures	_	overture	NNS	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	17	APP_o	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	join	_	join	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	2	APP_o	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	U.S.-led	_name_	u.s.-led	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	7	MOD_s	true
7	effort	_	effort	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	develop	_	develop	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	APP_s	true
10	the	_	the	DT	O	_	3	_	0	IGNORE	true
11	16-nation	_	16-nation	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	14	MOD_mod	true
12	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	station	_	station	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
15	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
16	been	_	be	VBN	O	_	campaign-01	_	0	IGNORE	true
17	thwarted	_	thwart	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
18	for	_	for	IN	O	_	name	_	0	IGNORE	true
19	more_than_a_decade	_name_	decade	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
20	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
22	range	_	range	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	issues,	_	issues,	NNP	O	_	and	_	0	IGNORE	true
25	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_o	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Asian	_name_	asian	JJ	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	31	APP_s	true
28	country's	_	country's	JJ	O	_	-	_	0	IGNORE	true
29	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	right-05	(s())	31	APP_o	true
31	policies	_	policy	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
33	worries	_	worry	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_op2	true
34	it	_	it	PRP	O	_	cause-01	_	0	IGNORE	true
35	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	33	APP_s	true
36	acquire	_	acquire	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_s	true
37	technologies	_	technology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
38	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
39	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	40	MOD_s	true
40	pose	_	pose	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	37	MOD_s	true
41	a	_	a	DT	O	_	1	_	0	IGNORE	true
42	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	threat	_	threat	NN	O	(d<root> / --LEX--)	$LEMMA$en-01	()	40	APP_o	true
44	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[30@@s@@right-05, 25@@s@@include-01, 9@@s@@develop-02, 33@@s@@worry-01, 27@@n@@_NAME_, 29@@d@@human, 11@@p@@nation, 19@@p@@person, 12@@p@@international, 6@@s@@_NAME_, 2@@o@@overture-01, 19@@n@@_NAME_, 13@@p@@space, 4@@s@@join-up-02, 14@@d@@station, 7@@s@@effort-01, 32@@a@@and, 27@@o2@@organization, 31@@s@@policy-01, 22@@explicitanon0@@range, 39@@s@@possible-01, 43@@d@@threaten-01, 36@@s@@acquire-01, 40@@s@@pose-02, 35@@s@@possible-01, 37@@d@@technology, 17@@o@@thwart-01, 42@@p@@security]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	7	MOD_mod	true
3	phase,	_	phase,	NNP	O	_	include-91	_	0	IGNORE	true
4	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	said,	_	said,	NNP	O	_	and	_	0	IGNORE	true
6	will	_	will	MD	O	_	thing	_	0	IGNORE	true
7	demonstrate	_	demonstrate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	capability	_	capability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	capable-01	(s())	7	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	a	_	a	DT	O	_	3	_	0	IGNORE	true
12	multi-compartment	_	multi-compartment	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	spacecraft	_	spacecraft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	will	_	will	MD	O	_	thing	_	0	IGNORE	true
16	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-11	(s(), o())	13	MOD_s	true
17	a	_	a	DT	O	_	loc$LEMMA$tion	_	0	IGNORE	true
18	test	_	test	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	module	_	module	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	orbit	_	orbit	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
22	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	25	MOD_mod	true
25	fliers	_	flier	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	26	APP_s	true
26	return	_	return	VBP	O	(g<root> / --LEX--  :ARG4 (s<o>)  :ARG1 (y<s>)  :time-of (p2<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
27	to	_	to	IN	O	_	person	_	0	IGNORE	true
28	Earth	_name_	Earth	NNP	O	(p<root> / planet  :name (n / --LEX--))	_NAME_	()	26	APP_o	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@o@@ordinal-entity, 25@@e2@@flier, 4@@d@@she, 28@@n@@_NAME_, 13@@d@@spacecraft, 28@@p@@planet, 26@@g@@return-01, 7@@s@@demonstrate-01, 21@@b@@orbit-01, 9@@s@@capable-01, 25@@p2@@person, 16@@s@@leave-11, 19@@d@@module, 24@@explicitanon0@@2, 18@@s@@test-01, 12@@p@@_NAME_, 2@@explicitanon0@@1]
sentence=1	Recently,	recently,	Recently,	NFP	O	_	and	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	horrific	_	horrific	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	nightmare	_	nightmare	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
11	Civet_Cats	_name_	Cats	NNPS	O	(d<root> / --LEX--)	_NAME_	()	12	APP_s	true
12	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-12	(s(), o())	16	MOD_o	true
13	through	_	through	RP	O	_	name	_	0	IGNORE	true
14	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
15	sick	_	sick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	16	MOD_s	true
16	losers	_	loser	NNS	O	(d<root> / --LEX--)	lose-03	()	10	APP_poss	true
17	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
18	put	_	put	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	sheds	_	shed	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	heat	_	heat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	inside	_	inside	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	sheds	_	shed	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
31	110	_	110	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	32	MOD_mod	true
32	degrees	_	degree	NNS	O	(r<root> / --LEX--  :scale-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	fires,	_	fires,	NNP	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	23	MOD_mod	true
35	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
36	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
37	they	_	they	PRP	O	_	person	_	0	IGNORE	true
38	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	23	MOD_mod	true
39	periodically	_	periodically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	repeat-01	(mod())	40	MOD_mod	true
40	scrape	_	scrape	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op1	true
41	the	_	the	DT	O	_	and	_	0	IGNORE	true
42	sweat	_	sweat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
43	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
45	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
46	genitals	_	genital	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	38	APP_s	true
48	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op2	true
49	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
50	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
51	corrupt	_	corrupt	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	MOD_s	true
52	corporations	_	corporation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
53	who	_	who	WP	O	_	person	_	0	IGNORE	true
54	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	52	MOD_s	true
55	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
56	to	_	to	TO	O	_	thing	_	0	IGNORE	true
57	prolong	_	prolong	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	54	APP_o	true
58	the	_	the	DT	O	_	person	_	0	IGNORE	true
59	scent	_	scent	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	57	APP_s	true
60	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
61	perfumes	_	perfume	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	59	APP_s	true
62	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@_NAME_, 15@@s@@sick-05, 21@@d@@shed, 12@@s@@go-12, 25@@d@@inside, 57@@s@@prolong-01, 23@@s@@heat-01, 32@@r@@degree, 34@@t@@thing, 2@@d@@i, 7@@s@@report-01, 9@@p@@horrific, 16@@d@@lose-03, 59@@s@@scent-01, 48@@s@@sell-01, 54@@s@@use-01, 10@@m@@nightmare, 61@@d@@perfume, 42@@d@@sweat, 47@@a@@and, 40@@s@@scrape-01, 51@@s@@corrupt-01, 38@@i@@possible-01, 31@@explicitanon0@@_NUMBER_, 5@@d@@email, 39@@t@@repeat-01, 52@@d@@corporation, 3@@s@@read-01, 46@@s@@genital, 18@@t@@put-01]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	animals	_	animal	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
3	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	4	MOD_mod	true
4	die,	_	die,	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	and	(mod())	24	MOD_mod	true
5	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
8	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	9	MOD_mod	true
9	demons	_	demon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
10	are	_	be	VBP	O	_	person	_	0	IGNORE	true
11	so	_	so	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
12	GREEDY,	greedy,	greedy,	JJ	O	_	cause-01	_	0	IGNORE	true
13	they	_	they	PRP	O	_	cause-01	_	0	IGNORE	true
14	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
15	as	_	as	RB	O	_	equal	_	0	IGNORE	true
16	much	_	much	JJ	O	_	$LEMMA$	_	0	IGNORE	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	"product"	_	"product"	NNP	O	_	cause-01	_	0	IGNORE	true
20	as	_	as	IN	O	_	equal	_	0	IGNORE	true
21	they	_	they	PRP	O	_	person	_	0	IGNORE	true
22	can	_	can	MD	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	possible-01	(mod(), s())	14	MOD_mod	true
23	get,	_	get,	VB	O	_	and	_	0	IGNORE	true
24	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	0	ROOT	true
25	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
26	letting	_	let	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	26	APP_s	true
30	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
31	a	_	a	DT	O	_	1	_	0	IGNORE	true
32	point,	_	point,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
33	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
34	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
35	act	_	act	NN	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-02	(mod(), s())	24	MOD_mod	true
36	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
37	humanity,	_	humanity,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
38	mercy,	_	mercy,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
39	love	_	love	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_s	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@animal, 39@@d@@love-01, 30@@n@@after, 3@@n@@eventual, 8@@p@@this, 14@@s@@want-01, 22@@b@@possible-01, 7@@s@@cause-01, 28@@d@@cat, 9@@d@@demon, 35@@s@@act-02, 4@@explicitanon0@@and, 26@@s@@let-01, 11@@d@@so, 29@@s@@go-03, 24@@s@@instead-of-91]
sentence=1	Below	below	below	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	pasted	_	paste	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
6	text,	_	text,	CD	O	_	$LEMMA$	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	APP_op2	true
10	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
11	link	_	link	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	to	_	to	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	automatically	_	automatically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	17	MOD_mod	true
17	plays	_	play	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
18	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	song	_	song	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	author	_	author	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	$LEMMA$-01	(s())	25	APP_s	true
22	of	_	of	IN	O	_	person	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	created	_	create	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@play-01, 21@@p@@person, 11@@s@@link-01, 24@@d@@email, 19@@d@@song, 7@@a@@and, 21@@w@@author-01, 9@@s@@have-03, 1@@b@@below, 5@@d@@email-01, 16@@t@@automatic, 3@@s@@paste-01, 25@@s@@create-01, 18@@p@@this, 2@@d@@i, 14@@d@@website]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
4	starters,	_	starters,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
5	myself	_	myself	PRP	O	_	i	_	0	IGNORE	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	15	APP_s	true
7	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	2	MOD_mod	true
8	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	7	MOD_s	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
11	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_op2	true
12	in	_	in	IN	O	_	person	_	0	IGNORE	true
13	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
14	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
15	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
16	a	_	a	DT	O	_	thing	_	0	IGNORE	true
17	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	prayer	_	prayer	NN	O	(d<root> / --LEX--)	pray-01	()	15	APP_o	true
19	for	_	for	IN	O	_	i	_	0	IGNORE	true
20	them	_	they	PRP	O	_	person	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@say-01, 8@@s@@include-91, 11@@s@@believe-01, 14@@s@@possible-01, 6@@a@@and, 17@@s@@special-02, 18@@d@@pray-01, 9@@d@@you, 7@@p@@that, 2@@s@@think-01, 1@@d@@i, 13@@p@@person, 13@@n@@_NAME_]
sentence=1	I've	i've	I've	NNP	O	(d<root> / --LEX--)	person	()	2	APP_o	true
2	pasted	_	paste	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	post-01	_	0	IGNORE	true
4	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_s	true
5	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	those	_	those	DT	O	_	that	_	0	IGNORE	true
7	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
8	haven't	_	haven't	CC	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
10	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	would	_	would	MD	O	_	person	_	0	IGNORE	true
12	like	_	like	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_o	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	re-read	_	re-read	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	MOD_s	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@s@@re-read-01, 4@@d@@email-01, 8@@explicitanon0@@-, 2@@s@@paste-01, 9@@s@@see-01, 1@@d@@person, 12@@s@@like-02]
sentence=1	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
2	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	MOD_s	true
4	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	13	MOD_s	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
9	much	_	much	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	about	_	about	IN	O	_	name	_	0	IGNORE	true
11	civet	_	civet	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	cats,	_	cats,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	13	MOD_mod	true
13	but	_	but	CC	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	contrast-01	(o(s()))	0	ROOT	true
14	to	_	to	TO	O	_	person	_	0	IGNORE	true
15	brief	_	brief	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
16	those	_	those	DT	O	_	that	_	0	IGNORE	true
17	who	_	who	WP	O	_	person	_	0	IGNORE	true
18	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
19	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
20	know,	_	know,	.	O	_	-	_	0	IGNORE	true
21	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
22	will	_	will	MD	O	_	person	_	0	IGNORE	true
23	quote	_	quote	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
24	James_Rachels,	_name_	rachels,	CD	O	_	_NAME_	_	0	IGNORE	true
25	author	_	author	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	World_Hunger_and_Moral_Obligation	_name_	Obligation	NNP	O	(b<root> / book  :name (n / --LEX--))	_NAME_	()	25	APP_o	true
28	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
30	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
31	animal	_	animal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	rights-related	_	rights-related	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	relate-01	(s())	34	MOD_s	true
33	books	_	book	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op1	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
35	articles	_	article	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op2	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@include-91, 8@@s@@know-01, 13@@o@@contrast-01, 19@@explicitanon0@@-, 27@@n@@_NAME_, 21@@d@@i, 12@@p@@and, 29@@explicitanon0@@many, 27@@b@@book, 34@@a@@and, 5@@p@@any, 2@@explicitanon0@@-, 35@@d@@article, 18@@s@@possible-01, 9@@d@@much, 7@@d@@you, 23@@t@@quote-01, 11@@p@@civet, 3@@s@@sure-02, 32@@s@@relate-01, 33@@d@@book, 15@@i@@brief-01, 30@@p@@other, 31@@p@@animal, 25@@s@@author-01]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-03	(o(s()))	0	ROOT	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	misfortune	_	misfortune	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$	(o(s()))	3	APP_o	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	substance	_	substance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	useful	_	useful	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	9	MOD_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	manufacture	_	manufacture	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
16	of	_	of	IN	O	_	thing	_	0	IGNORE	true
17	perfume	_	perfume	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[9@@d@@substance, 17@@d@@perfume, 3@@c@@have-03, 2@@d@@animal, 1@@p@@this, 15@@s@@manufacture-01, 12@@s@@useful-05, 5@@o@@misfortune, 7@@s@@produce-01]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
2	compelling	_	compelling	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	argument	_	argument	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	argue-01	(s(), o())	0	ROOT	true
4	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
5	reintroduction	_	reintroduction	NN	O	(d<root> / --LEX--)	nominate-01	()	3	APP_o	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
8	wolf	_	wolf	NN	O	(d<root> / --LEX--)	_NAME_	()	9	APP_s	true
9	acts	_	act	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
10	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	keystone	_	keystone	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	predator,	_	predator,	NNP	O	_	and	_	0	IGNORE	true
14	an	_	an	DT	O	_	thing	_	0	IGNORE	true
15	animal	_	animal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	affects	_	affect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	populations,	_	populations,	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	behavior	_	behavior	NN	O	(m<root> / --LEX--  :poss (i<poss>))	behave-01	(poss())	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op1 (b<op1>))	$LEMMA$	(op2(poss()), op1(poss()))	17	APP_o	true
22	ecology	_	ecology	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	21	APP_op2	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	wide	_	wide	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	variety	_	variety	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_poss	true
29	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
31	range	_	range	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@p@@variety, 1@@explicitanon0@@1, 22@@m@@ecology, 28@@d@@specie, 5@@d@@nominate-01, 25@@s@@wide-02, 31@@b@@range, 9@@s@@act-01, 15@@d@@animal, 20@@m@@behave-01, 21@@a@@and, 2@@s@@compelling-02, 19@@explicitanon0@@populations,, 12@@p@@keystone, 8@@d@@_NAME_, 17@@s@@affect-01, 3@@s@@argue-01]
sentence=1	OSU	_name_	OSU	NNP	O	(u<root> / university  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
2	forestry	_	forestry	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	professors	_	professor	NNS	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	4	MOD_s	true
4	William_Ripple	_name_	Ripple	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
6	Robert_Beschta	_name_	Beschta	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op2	true
7	have	_	have	VBP	O	_	person	_	0	IGNORE	true
8	found	_	find	VBN	O	(c4<root> / --LEX--  :ARG1 (c2<o>)  :ARG0 (c<s>)  :subevent-of (t<mod>))	$LEMMA$-01	(mod(), s(), o())	0	ROOT	true
9	that	_	that	IN	O	_	and	_	0	IGNORE	true
10	wolves	_	wolf	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	12	MOD_s	true
12	promote	_	promote	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
13	stream-bank	_	stream-bank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	stabilization,	_	stabilization,	NNS	O	_	and	_	0	IGNORE	true
15	although	_	although	IN	O	_	have-concession-91	_	0	IGNORE	true
16	they	_	they	PRP	O	_	person	_	0	IGNORE	true
17	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
18	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	APP_mod	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	phenomenon	_	phenomenon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
22	unfortunate	_	unfortunate	JJ	O	(explicitanon0<root> / -  :polarity-of (f / --LEX--  :ARG2 (r<s>)))	fortunate-01	(s())	23	MOD_s	true
23	name	_	name	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	"the	_	"the	NNP	O	_	person	_	0	IGNORE	true
26	ecology	_	ecology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	fear"	_	fear"	CD	O	_	mean-01	_	0	IGNORE	true
29	--	_	--	:	O	_	mean-01	_	0	IGNORE	true
30	something	_	something	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	smacks	_	smack	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
35	horrible	_	horrible	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	PR	pr	pr	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
37	resulting	_	result	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	32	MOD_o	true
38	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
39	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
40	wolf's	_	wolf's	NN	O	_	_NAME_	_	0	IGNORE	true
41	relationships	_	relationship	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	relation-03	(s())	37	APP_s	true
42	with	_	with	IN	O	_	-	_	0	IGNORE	true
43	Riding_Hood	_name_	Hood	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	44	APP_op1	true
44	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	41	APP_s	true
45	the_Three_Pigs	_name_	Pigs	NNPS	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	44	APP_op2	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[45@@p@@political-party, 22@@explicitanon0@@-, 32@@s@@smack-01, 23@@s@@name-01, 41@@s@@relation-03, 1@@n@@_NAME_, 30@@p@@something, 4@@n@@_NAME_, 35@@p@@horrible, 8@@c4@@find-01, 13@@d@@stream-bank, 6@@p@@person, 45@@n@@_NAME_, 4@@p@@person, 12@@s@@promote-01, 6@@n@@_NAME_, 36@@d@@pr, 10@@d@@wolf, 20@@d@@phenomenon, 11@@s@@actual-02, 2@@p@@forestry, 18@@s@@give-01, 43@@n@@_NAME_, 37@@s@@result-01, 44@@a@@and, 3@@j@@professor, 22@@f@@fortunate-01, 3@@h@@have-org-role-91, 43@@o2@@organization, 26@@d@@ecology, 5@@a@@and, 1@@u@@university]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	explained	_	explain	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
4	elk	_	elk	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	Yellowstone	_name_	Yellowstone	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	used	_	use	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	browse	_	browse	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	unmolested	_	unmolested	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	$LEMMA$-00	(s())	9	MOD_s	true
11	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	aspen	_	aspen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
15	willow	_	willow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	growing	_	grow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	14	MOD_s	true
17	near	_	near	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	16	MOD_s	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	banks	_	bank	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	of	_	of	IN	O	_	-	_	0	IGNORE	true
21	streams,	_	streams,	NNS	O	_	-	_	0	IGNORE	true
22	a	_	a	DT	O	_	-	_	0	IGNORE	true
23	behavior	_	behavior	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	behave-01	(mod())	7	MOD_mod	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	prevented	_	prevent	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	23	MOD_s	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	saplings	_	sapling	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	from	_	from	IN	O	_	-	_	0	IGNORE	true
29	reaching	_	reach	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_o2	true
30	mature	_	mature	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	stages	_	stage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
32	and	_	and	CC	O	_	$LEMMA$	_	2	IGNORE	true
33	increased	_	increase	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
34	the	_	the	DT	O	_	-	_	0	IGNORE	true
35	possibility	_	possibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	33	APP_o	true
36	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
37	soil	_	soil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
38	erosion	_	erosion	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	erode-01	(s())	35	APP_s	true
39	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[30@@p@@mature, 15@@d@@willow, 16@@s@@grow-03, 1@@d@@They, 7@@c@@use-01, 12@@p@@young, 2@@s@@explain-01, 4@@d@@elk, 6@@n@@_NAME_, 33@@s@@increase-01, 6@@c@@city, 38@@s@@erode-01, 37@@d@@soil, 27@@d@@sapling, 10@@explicitanon0@@-, 23@@t@@behave-01, 29@@s@@reach-01, 17@@s@@near-02, 14@@a@@and, 19@@d@@bank, 13@@d@@aspen, 10@@p@@unmolested-00, 9@@s@@browse-01, 31@@d@@stage, 35@@s@@possible-01, 25@@t@@prevent-01]
sentence=1	An	an	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_dom	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	used	_	use	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
5	to	_	to	TO	O	_	-	_	0	IGNORE	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	bald	_	bald	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	2	MOD_s	true
8	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	billiard	_	billiard	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	ball	_	ball	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	sea	_	sea	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	willow.	_	willow.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@d@@area, 15@@r@@sea, 7@@s@@bald, 10@@p@@billiard, 13@@n@@now, 11@@d@@ball, 17@@p@@willow.]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
4	10_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	of	_	of	IN	O	_	date-interval	_	0	IGNORE	true
6	DNA	dna	dna	NN	O	(n2<root> / nucleic-acid  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	testing	_	testing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	test-01	(s())	3	APP_op1	true
8	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
9	northern	_	northern	JJ	O	(b<root> / --LEX--  :location-of (h<mod>))	north	(mod())	10	MOD_mod	true
10	Rockies	rockies	Rockies	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	wolves,	_	wolves,	NNP	O	_	and	_	0	IGNORE	true
12	scientists	_	scientist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	strain	_	strain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	did	_	do	VBD	O	_	person	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	belong	_	belong	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	MOD_s	true
23	to	_	to	IN	O	_	person	_	0	IGNORE	true
24	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	22	MOD_mod	true
25	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	24	MOD_s	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	wolves	_	wolf	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o2	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	agency	_	agency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	released	_	release	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_o	true
31	--	_	--	:	O	_	person	_	0	IGNORE	true
32	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	22	APP_o	true
33	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
34	descendants	_	descendant	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	descend-01	()	32	APP_op2	true
35	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[7@@s@@test-01, 4@@explicitanon0@@year, 27@@d@@wolf, 15@@s@@find-01, 14@@explicitanon0@@-, 2@@s@@say-01, 4@@t2@@temporal-quantity, 10@@b@@_NAME_, 1@@d@@He, 17@@s@@single-02, 12@@d@@scientist, 3@@w@@after, 6@@n@@_NAME_, 6@@n2@@nucleic-acid, 34@@p@@person, 9@@b@@north, 29@@d@@agency, 24@@explicitanon0@@1, 34@@h@@have-rel-role-91, 25@@s@@include-91, 18@@d@@strain, 34@@f@@descend-01, 21@@explicitanon0@@-, 22@@b@@belong-01, 30@@s@@release-01, 32@@a@@or]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	turns	_	turn	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-11	(s())	24	MOD_s	true
3	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
4	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
5	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	30	MOD_s	true
6	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
7	surest	_	sure	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	weird	(mod())	8	MOD_mod	true
8	barometers	_	barometer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	5	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	warming	_	warming	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
12	climate	_	climate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	response	_	response	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	respond-01	(o(s()))	8	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	non-human	_	non-human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	20	MOD_s	true
20	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
21	to	_	to	IN	O	_	thing	_	0	IGNORE	true
22	changing	_	change	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
23	conditions,	_	conditions,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
25	biologists	_	biologist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
26	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
27	study	_	study	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	responses	_	response	NNS	O	(d<root> / --LEX--)	respond-01	()	27	APP_o	true
30	have	_	have	VBP	O	(d<root> / --LEX--)	person	()	24	APP_op1	true
31	been	_	be	VBN	O	_	person	_	0	IGNORE	true
32	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	24	APP_op2	true
33	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	some_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
35	the	_	the	DT	O	_	-	_	0	IGNORE	true
36	biosphere	_	biosphere	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
37	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
38	acknowledging	_	acknowledge	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_o	true
39	global	_	global	JJ	O	(d<root> / --LEX--)	globe	()	40	APP_s	true
40	warming	_	warming	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	warm-01	(s())	38	APP_o	true
41	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[22@@s@@change-01, 7@@m@@most, 36@@d@@biosphere, 25@@d@@biologist, 20@@d@@world, 11@@s@@warming-01, 38@@s@@acknowledge-01, 12@@d@@climate, 40@@s@@warm-01, 39@@d@@globe, 18@@p@@non-human, 30@@d@@person, 27@@s@@study-01, 24@@a@@and, 2@@s@@turn-out-11, 5@@s@@include-91, 34@@b@@year, 32@@s@@realize-01, 15@@o@@respond-01, 29@@d@@respond-01, 8@@s@@barometer, 19@@s@@natural-03, 7@@t@@weird]
sentence=1	Pew	pew	pew	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	researchers	_	researcher	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	research-01	(s())	3	APP_s	true
3	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
5	about	_	about	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
6	40	_	40	CD	O	(d<root> / --LEX--)	_NUMBER_	()	5	APP_op1	true
7	studies	_	study	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	an	_	an	DT	O	_	1	_	0	IGNORE	true
12	assessment	_	assessment	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	assess-01	(s())	10	APP_o	true
13	of	_	of	IN	O	_	thing	_	0	IGNORE	true
14	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
15	climate	_	climate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	affecting	_	affect	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
18	biology	_	biology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@s@@possible-01, 5@@s@@about, 1@@p@@person, 17@@s@@affect-01, 1@@n@@_NAME_, 18@@d@@biology, 6@@d@@_NUMBER_, 3@@s@@look-01, 7@@d@@study, 2@@s@@research-01, 15@@d@@climate, 12@@s@@assess-01, 10@@s@@provide-01]
sentence=1	Parmesan	_name_	Parmesan	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
3	spent	_	spend	VBN	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o2(s()), o())	0	ROOT	true
4	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
7	career	_	career	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	studying	_	study	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o2	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	checkerspot	_	checkerspot	NN	O	(d<root> / --LEX--)	_NAME_	()	8	APP_o	true
11	butterfly,	_	butterfly,	CD	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
13	migrates	_	migrate	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
14	between	_	between	IN	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
15	Mexico	_name_	Mexico	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_op1	true
16	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
17	southern	_	southern	JJ	O	(d<root> / --LEX--)	south	()	13	APP_o	true
18	California	_name_	California	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	14	APP_op2	true
19	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@p@@person, 15@@n@@_NAME_, 3@@i@@spend-02, 1@@n@@_NAME_, 15@@c@@country, 10@@d@@_NAME_, 4@@explicitanon0@@much, 8@@s@@study-01, 7@@b@@career, 18@@n@@_NAME_, 13@@s@@migrate-01, 14@@a@@between, 17@@d@@south, 18@@s@@state]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	commercial	_	commercial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	commerce	(mod())	4	MOD_mod	true
4	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	8	MOD_mod	true
7	would	_	would	MD	O	_	possible-01	_	0	IGNORE	true
8	benefit	_	benefit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
9	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
10	warming	_	warming	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
11	include	_	include	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	cod,	_	cod,	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	haddock,	_	haddock,	.	O	_	and	_	0	IGNORE	true
14	saithe,	_	saithe,	NNS	O	_	_NAME_	_	0	IGNORE	true
15	herring,	_	herring,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
16	blue	_	blue	JJ	O	_	$LEMMA$	_	17	IGNORE	true
17	whiting	_	whiting	NN	O	_	$LEMMA$	_	18	IGNORE	true
18	and	_	and	CC	O	_	$LEMMA$	_	11	IGNORE	true
19	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	types	_	type	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	flatfish	_	flatfish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
24	crustaceans	_	crustacean	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
25	--	_	--	:	O	_	$LEMMA$	_	0	IGNORE	true
26	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
27	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	11	MOD_o	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Norway	_name_	Norway	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	lobster	_	lobster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	.	_	.	.	O	_	include-91	_	0	IGNORE	true

nodealignment=[29@@n@@_NAME_, 30@@d@@lobster, 20@@p@@type, 29@@c@@country, 11@@s@@include-01, 24@@d@@crustacean, 2@@p@@important, 23@@a@@and, 3@@p@@commerce, 19@@explicitanon0@@several, 4@@d@@specie, 6@@p@@probable, 10@@d@@warming-01, 22@@d@@flatfish, 27@@s@@exemplify-01, 8@@s@@benefit-01]
sentence=1	Important	important	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	6	MOD_mod	true
5	would	_	would	MD	O	_	and	_	0	IGNORE	true
6	decline	_	decline	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
7	include	_	include	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	shrimp,	_	shrimp,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	capelin,	_	capelin,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
10	Greenland	_name_	Greenland	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	halibut	_	halibut	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
13	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	varieties	_	variety	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	flatfish	_	flatfish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[6@@s@@decline-01, 4@@p@@probable, 10@@c@@country, 13@@explicitanon0@@some, 12@@a@@and, 10@@n@@_NAME_, 14@@p@@variety, 7@@s@@include-01, 2@@d@@specie, 11@@d@@halibut, 16@@d@@flatfish, 1@@p@@important]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	tug-of-war	_	tug-of-war	NN	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	over	_	over	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	19	APP_o	true
4	calculating	_	calculate	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
5	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	6	MOD_mod	true
6	values	_	value	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	ultimately	_	ultimately	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ultimate	(mod())	13	MOD_mod	true
12	will	_	will	MD	O	_	obligate-01	_	0	IGNORE	true
13	have	_	have	VB	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	19	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	decided	_	decide	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	13	APP_o	true
17	by	_	by	IN	O	_	and	_	0	IGNORE	true
18	humans,	_	humans,	NNP	O	_	-	_	0	IGNORE	true
19	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
20	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_s	true
22	plants	_	plant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	APP_s	true
24	adjust	_	adjust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_s	true
25	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@w@@war, 20@@d@@animal, 4@@r@@calculate-01, 24@@s@@adjust-01, 2@@n@@_NAME_, 11@@p@@ultimate, 27@@p@@much, 19@@s@@cause-01, 22@@d@@plant, 1@@p@@this, 13@@h@@obligate-01, 3@@s@@-, 16@@s@@decide-01, 6@@d@@value-01, 26@@s@@so, 5@@p@@economy, 23@@s@@possible-01, 21@@a@@and, 25@@p@@only]
sentence=1	"As	"as	"as	XX	O	_	cause-01	_	0	IGNORE	true
2	an	_	an	DT	O	_	opine-01	_	0	IGNORE	true
3	American,	american,	american,	NN	O	_	-	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
6	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	person	_	0	IGNORE	true
8	take	_	take	VB	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	6	APP_o	true
9	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
12	tell	_	tell	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	APP_o2	true
13	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	'USA	'usa	'USA	NNS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o2	true
17	Bush_Bashers'	_name_	bashers'	NN	O	(d<root> / --LEX--)	_NAME_	()	16	APP_op2	true
18	that	_	that	IN	O	_	and	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	am	_	be	VBP	O	_	person	_	0	IGNORE	true
21	appalled	_	appal	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
22	at	_	at	IN	O	_	thing	_	0	IGNORE	true
23	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
24	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	'allies'	_	'allies'	PRP	O	_	thing	_	0	IGNORE	true
27	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	using	_	use	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	24	MOD_s	true
30	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
32	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
33	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
34	podium	_	podium	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o2	true
35	to	_	to	TO	O	_	thing	_	0	IGNORE	true
36	spread	_	spread	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-03	(mod(), s())	29	MOD_mod	true
37	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
38	useless	_	useless	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	use-01	(s())	39	MOD_s	true
39	opinions	_	opinion	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	opine-01	()	36	APP_s	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[36@@i@@spread-03, 24@@d@@number, 34@@d@@podium, 30@@p@@this, 21@@s@@appal-01, 8@@i@@take-01, 17@@d@@_NAME_, 15@@n@@_NAME_, 13@@p@@all, 6@@c@@like-02, 39@@t@@thing, 4@@d@@i, 12@@b@@tell-01, 29@@b@@use-01, 38@@s@@use-01, 15@@o2@@organization, 10@@d@@opportunity, 39@@d@@opine-01, 16@@a@@and, 9@@p@@this, 31@@d@@disaster]
sentence=1	What	what	what	WP	O	_	amr-unknown	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_s	true
4	in	_	in	IN	O	_	thing	_	0	IGNORE	true
5	New_Orleans	_name_	Orleans	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	0	ROOT	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	downfalls	_	downfall	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	welfare	_	welfare	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	system,	_	system,	NNP	O	_	mean-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	socialism	_	socialism	NN	O	(p2<root> / political-movement  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	country	_	country	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
27	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@s@@exemplify-01, 3@@s@@see-01, 20@@n@@_NAME_, 25@@b@@country, 12@@s@@downfall-01, 2@@d@@you, 5@@c@@city, 24@@p@@this, 15@@d@@welfare, 5@@n@@_NAME_, 22@@explicitanon0@@many, 18@@p@@form, 20@@p2@@political-movement, 26@@s@@know-01, 8@@s@@perfect-02, 29@@s@@true-01, 30@@d@@problem]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
4	welfare	_	welfare	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
8	New	new	New	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	5	MOD_mod	true
9	Orleans.	orleans.	Orleans.	NNS	O	_	_NAME_	_	0	IGNORE	true
10	"	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[4@@p@@welfare, 8@@n@@_NAME_, 8@@c@@city, 5@@d@@society]
sentence=1	"I	"i	"I	``	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	do	_	do	VBP	O	_	person	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	feel	_	feel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	APP_op1	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
7	changed	_	change	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
8	the	_	the	DT	O	_	and	_	0	IGNORE	true
9	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	citizens	_	citizen	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	what	_	what	WP	O	_	thing	_	0	IGNORE	true
14	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
15	needed,	_	needed,	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	multi-sentence	(op2(), op1())	0	ROOT	true
16	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	majority	_	majority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	MOD_o	true
21	"Gas"	"gas"	"Gas"	''	O	_	contrast-01	_	0	IGNORE	true
22	despite	_	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
24	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	15	APP_op2	true
27	polluting	_	pollute	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	38	APP_op1	true
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
29	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
30	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	than	_	than	IN	O	_	cause-01	_	0	IGNORE	true
32	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	country	_	country	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
35	in	_	in	IN	O	_	i	_	0	IGNORE	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	world	_	world	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	61	MOD_mod	true
39	refuse	_	refuse	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	38	APP_op2	true
40	to	_	to	IN	O	_	-	_	0	IGNORE	true
41	stop,	_	stop,	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
42	perhaps	_	perhaps	RB	O	_	possible-01	_	0	IGNORE	true
43	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	natural	_	natural	JJ	O	(d<root> / --LEX--)	$LEMMA$-03	()	58	APP_s	true
45	disaster,	_name_	disaster,	NNS	O	_	and	_	0	IGNORE	true
46	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
47	let's	_	let's	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	multi-sentence	(mod())	34	MOD_mod	true
48	face	_	face	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	44	MOD_s	true
49	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
50	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	39	APP_o	true
51	like	_	like	IN	O	_	cause-01	_	0	IGNORE	true
52	a	_	a	DT	O	_	thing	_	0	IGNORE	true
53	product	_	product	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	50	APP_o	true
54	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
55	Global	_name_	Global	NNP	O	(d<root> / --LEX--)	globe	()	53	APP_s	true
56	Warming,	warming,	Warming,	NNP	O	_	and	_	0	IGNORE	true
57	will	_	will	MD	O	_	thing	_	0	IGNORE	true
58	change	_	change	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
59	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
60	views,	_name_	views,	NNS	O	_	and	_	0	IGNORE	true
61	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	amr-unknown	(s(), o())	26	MOD_o	true
62	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	69	MOD_mod	true
63	pick	_	pick	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	69	APP_op1	true
64	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_s	true
65	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
66	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
67	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
68	hands	_	hand	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	63	MOD_mod	true
69	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	61	APP_s	true
70	walk	_	walk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	69	APP_op2	true
71	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
72	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
73	legs,	_	legs,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	cause-01	(mod())	75	MOD_mod	true
74	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	75	MOD_mod	true
75	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	87	APP_op3	true
76	in	_	in	IN	O	_	i	_	0	IGNORE	true
77	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
78	world	_	world	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	75	MOD_mod	true
79	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	69	MOD_s	true
80	it,	_	it,	XX	O	_	$LEMMA$	_	0	IGNORE	true
81	"Gas"	"gas"	"Gas"	''	O	_	$LEMMA$	_	0	IGNORE	true
82	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
83	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	86	MOD_mod	true
84	the	_	the	DT	O	_	thing	_	0	IGNORE	true
85	be	_	be	VB	O	_	person	_	0	IGNORE	true
86	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	87	APP_op1	true
87	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	79	APP_o	true
88	end	_	end	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	87	APP_op2	true
89	all!	_	all!	RB	O	_	you	_	0	IGNORE	true
90	"	_	"	''	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@p@@any, 9@@n@@_NAME_, 74@@p@@other, 63@@s@@pick-up-02, 10@@d@@citizen, 70@@d@@walk-01, 47@@p@@multi-sentence, 61@@s@@amr-unknown, 27@@s@@pollute-01, 3@@explicitanon0@@-, 86@@d@@all, 37@@p@@world, 75@@d@@person, 73@@p@@cause-01, 87@@a@@and, 15@@a@@multi-sentence, 83@@explicitanon0@@-, 17@@n@@now, 68@@m@@hand, 26@@d@@person, 58@@s@@change-01, 88@@d@@end-01, 78@@b@@world, 64@@d@@thing, 39@@c@@refuse-01, 79@@s@@do-02, 62@@explicitanon0@@-, 34@@p@@country, 69@@a@@and, 50@@s@@look-02, 30@@s@@more, 4@@s@@feel-02, 55@@d@@globe, 5@@d@@it, 53@@s@@product-01, 16@@p@@even, 20@@s@@want-01, 1@@d@@"i, 19@@d@@majority, 7@@s@@change-01, 29@@d@@world, 33@@p@@other, 38@@a@@and, 9@@c@@country, 48@@s@@face-01, 43@@p@@this, 44@@d@@natural-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	folks	_	folk	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_dom	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	land	_	land	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	opportunity	_	opportunity	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	will	_	will	MD	O	_	thing	_	0	IGNORE	true
16	change	_	change	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_o	true
17	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
18	views	_	view	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	16	APP_o	true
19	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	news	_	news	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@c@@country, 2@@explicitanon0@@-, 18@@s@@view-02, 16@@c@@change-01, 21@@n@@recent, 3@@s@@believe-01, 1@@d@@i, 7@@s@@believe-01, 12@@r@@land, 14@@p@@opportunity, 9@@n@@_NAME_, 5@@d@@folk, 22@@s@@news, 20@@p@@this]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	2	APP_o	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	came	_	come	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	Bulgaria	_name_	Bulgaria	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
10	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
11	winning	_	win	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op1	true
12	a	_	a	DT	O	_	person	_	0	IGNORE	true
13	green	_	green	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	14	MOD_s	true
14	card	_	card	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	a	_	a	DT	O	_	person	_	0	IGNORE	true
17	lottery	_	lottery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
18	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[17@@p@@lottery, 11@@s@@win-01, 2@@s@@have-03, 1@@d@@i, 10@@w@@after, 13@@s@@green-03, 4@@p@@person, 9@@n@@_NAME_, 4@@h@@have-rel-role-91, 6@@g@@come-01, 4@@f@@friend, 14@@d@@card, 9@@c@@country, 7@@b@@here]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
3	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
5	giving	_	give	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	to	_	to	IN	O	_	and	_	0	IGNORE	true
7	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
8	to	_	to	TO	O	_	and	_	0	IGNORE	true
9	aid	_	aid	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
10	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	0	ROOT	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	seed	_	seed	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	America	_name_	America	NNP	O	_	_NAME_	_	0	IGNORE	true
19	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
20	sown	_	sow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
21	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	nations	_	nation	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[2@@d@@country, 16@@d@@seed, 7@@c@@country, 20@@s@@sow-01, 22@@b@@year, 12@@p@@great, 7@@n@@_NAME_, 25@@y@@nation, 9@@i@@aid-01, 24@@p@@other, 13@@s@@exemplify-01, 5@@t@@give-01]
sentence=1	So,	so,	So,	NNS	O	_	expressive	_	0	IGNORE	true
2	yes,	_	yes,	NN	O	_	and	_	0	IGNORE	true
3	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	pockets	_	pocket	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	that	_	that	WDT	O	_	multiple	_	0	IGNORE	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	diverse	_	diverse	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	than	_	than	IN	O	_	thing	_	0	IGNORE	true
11	others	_	other	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@n@@_NAME_, 5@@d@@pocket, 4@@s@@have-03, 3@@c@@country, 8@@s@@more, 11@@p@@other, 9@@p@@diverse]
sentence=1	However,_New_Orleans	_name_	Orleans	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	affluent	_	affluent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	people,	_	people,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_o	true
8	who	_	who	WP	O	_	name	_	0	IGNORE	true
9	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-11	(s(), o())	7	MOD_s	true
10	town	_	town	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	early	_	early	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	they	_	they	PRP	O	_	person	_	0	IGNORE	true
14	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-03	(mod(), s())	3	MOD_mod	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	means	_	mean	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@d@@person, 14@@s@@have-03, 1@@c@@company, 9@@s@@leave-11, 2@@p@@also, 3@@s@@have-03, 4@@explicitanon0@@many, 16@@d@@mean, 5@@p@@affluent, 11@@n@@early, 1@@n@@_NAME_, 10@@d@@town]
sentence=1	Or	or	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	will	_	will	MD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	expressive	_	0	IGNORE	true
4	nearly	_	nearly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	year-round	_	year-round	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	snow	_	snow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
7	be	_	be	VBP	O	_	temporal-quantity	_	0	IGNORE	true
8	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	much	_	much	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_op2	true
10	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
11	those	_	those	DT	O	_	that	_	0	IGNORE	true
12	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
13	have	_	have	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	person	(mod())	1	MOD_mod	true
14	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	15	MOD_mod	true
15	experienced	_	experience	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	snow	_	snow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
19	lives	_	life	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$	(mod(), s())	15	MOD_mod	true
20	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true

nodealignment=[13@@explicitanon0@@person, 1@@a@@or, 5@@p@@year-round, 14@@n@@ever, 4@@p@@nearly, 20@@explicitanon0@@interrogative, 19@@v@@life, 15@@s@@experience-01, 16@@d@@snow, 6@@d@@snow, 8@@s@@too, 9@@r@@much]
sentence=1	Will	will	Will	MD	O	_	$LEMMA$	_	0	IGNORE	true
2	businesses	_	business	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	were	_	be	VBD	O	_	person	_	0	IGNORE	true
5	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	2005	_name_	2005	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	5	MOD_mod	true
8	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
9	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	household	_	household	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	9	MOD_o	true
14	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
15	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
16	efforts	_	effort	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
17	in	_	in	IN	O	_	thing	_	0	IGNORE	true
18	rebuilding	_	rebuild	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	gulf	_	gulf	NN	O	(w<root> / world-region  :name (n / --LEX--)  :location-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	coast	_	coast	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	9	MOD_mod	true

nodealignment=[7@@explicitanon0@@_NUMBER_, 21@@d@@coast, 20@@w@@world-region, 22@@explicitanon0@@interrogative, 9@@s@@become-01, 2@@d@@business, 7@@d@@date-entity, 5@@s@@new-01, 11@@p@@household, 20@@n@@_NAME_, 16@@s@@effort-01, 12@@d@@name, 13@@s@@cause-01, 18@@s@@rebuild-01]
sentence=1	What	what	what	WP	O	_	amr-unknown	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	dozens	_	dozen	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	12	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
7	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	buses	_	bus	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	submerged	_	submerge	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	true
12	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	evacuate	_	evacuate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_s	true
18	who	_	who	WP	O	_	person	_	0	IGNORE	true
19	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	MOD_s	true
20	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	transportation	_	transportation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	transport-01	(s())	17	MOD_s	true
22	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@s@@submerge-01, 3@@s@@see-01, 2@@d@@i, 19@@s@@have-03, 7@@p@@school, 5@@m@@multiple, 21@@s@@transport-01, 8@@d@@bus, 16@@s@@evacuate-01, 5@@explicitanon0@@12, 11@@s@@possible-01, 14@@s@@use-01, 20@@explicitanon0@@-, 17@@d@@person]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	guess	_	guess	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
5	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	16	MOD_mod	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	schtick	_	schtick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	resounding	_	resounding	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	12	MOD_s	true
12	success	_	success	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	7	MOD_s	true
13	once,	_	once,	.	O	_	and	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	help	_	help	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	17	APP_o	true
17	but	_	but	CC	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	contrast-01	(o(s()))	2	MOD_s	true
18	trot	_	trot	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
21	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	18	MOD_mod	true
22	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
23	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	act	_	act	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_s	true
25	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
26	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-08	(s(), o())	2	APP_o	true
27	sour	_	sour	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@d@@sour, 16@@c@@help-02, 7@@d@@schtick, 2@@b@@guess-01, 1@@d@@i, 15@@explicitanon0@@-, 4@@d@@you, 26@@s@@go-08, 18@@s@@trot-01, 21@@r@@rate-entity-91, 11@@s@@resounding, 5@@m@@have-03, 12@@s@@succeed-01, 17@@c@@contrast-01, 24@@d@@act-01]
sentence=1	Free	free	free	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-04	(s())	8	APP_op1	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	polution,	_	polution,	NNS	O	(d<root> / --LEX--)	and	()	8	APP_op2	true
4	free	_	free	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-04	(s())	1	APP_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	dependency,	_	dependency,	NNS	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
9	free	_	free	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-04	(s())	8	APP_op3	true
10	of	_	of	IN	O	_	-	_	0	IGNORE	true
11	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	bleeding	_	bleed	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	dry	_	dry	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	15	MOD_s	true
18	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	short	_	short	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	22	MOD_s	true
21	term	_	term	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	good	_	good	JJ	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-02	(mod())	15	MOD_mod	true
23	(theirs)	_	(theirs)	NN	O	_	mean-01	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@us, 9@@s@@free-04, 15@@s@@bleed-01, 6@@d@@oil, 4@@s@@free-04, 3@@d@@and, 11@@p@@big, 22@@o@@good-02, 12@@d@@business, 1@@s@@free-04, 8@@a@@and, 17@@s@@dry-03, 20@@s@@short-07]
sentence=1	In	in	in	IN	O	_	contrast-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	meanwhile	_	meanwhile	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
5	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	broken	_	break	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	break-01	(s())	8	MOD_s	true
8	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
9	that	_	that	WDT	O	_	have-concession-91	_	0	IGNORE	true
10	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	13	MOD_s	true
11	have	_	have	VB	O	_	person	_	0	IGNORE	true
12	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	safe	_	safe	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
14	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	home	_	home	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	13	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
19	brave	_	brave	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_poss	true
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[19@@d@@brave-02, 8@@d@@family, 7@@s@@break-01, 6@@p@@still, 3@@n@@meanwhile, 10@@s@@recommend-01, 16@@w@@home, 13@@s@@safe-01]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	those	_	those	DT	O	(d<root> / --LEX--)	that	()	0	ROOT	true
3	who	_	who	WP	O	_	person	_	0	IGNORE	true
4	believe...................	_	believe...................	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	MOD_s	true
5	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[2@@d@@that, 4@@s@@believe...................]
sentence=1	With	with	with	IN	O	_	have-03	_	0	IGNORE	true
2	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_op2	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
5	focus,	_	focus,	NNS	O	_	and	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	will	_	will	MD	O	_	thing	_	0	IGNORE	true
8	attain	_	attain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
10	least	_	least	RBS	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	at-$LEMMA$	(op1(), mod())	13	MOD_mod	true
11	one	_	one	CD	O	(d<root> / --LEX--)	1	()	10	APP_op1	true
12	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	aspiration	_	aspiration	NN	O	(d<root> / --LEX--)	aspire-01	()	8	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
16	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	on	_	on	IN	O	_	thing	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
19	agenda	_	agenda	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
20	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
23	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@s@@long-03, 4@@a@@and, 13@@d@@aspire-01, 2@@s@@hard-02, 10@@s@@at-least, 19@@b@@agenda, 12@@p@@important, 3@@d@@work-01, 8@@s@@attain-01, 6@@d@@you, 11@@d@@1]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	3	MOD_mod	true
3	department	_	department	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	12	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
9	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	be	_	be	VB	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
11	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	12	MOD_mod	true
12	hopeful	_	hopeful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_mod	true
13	as	_	as	IN	O	_	equal	_	0	IGNORE	true
14	you'd	_	you'd	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	like	_	like	UH	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	resemble-01	(mod(), s())	12	MOD_mod	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	career,	_	career,	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	and	(mod())	16	APP_s	true
20	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
21	advancement	_	advancement	NN	O	(d<root> / --LEX--)	develop-02	()	24	APP_s	true
22	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	23	APP_o	true
23	be	_	be	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	16	MOD_s	true
24	slow	_	slow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_s	true
26	satisfaction	_	satisfaction	NN	O	(d<root> / --LEX--)	satisfy-01	()	27	APP_s	true
27	rare	_	rare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	APP_op2	true
28	.	_	.	.	O	_	affect-01	_	0	IGNORE	true

nodealignment=[5@@d@@life, 15@@b@@resemble-01, 24@@s@@slow-05, 25@@a@@and, 21@@d@@develop-02, 8@@explicitanon0@@-, 22@@s@@possible-01, 12@@s@@hopeful-02, 23@@s@@person, 27@@s@@rare-02, 16@@s@@possible-01, 7@@s@@possible-01, 2@@p@@1, 9@@s@@quite, 26@@d@@satisfy-01, 11@@s@@equal, 3@@h@@department, 14@@p@@you'd, 19@@b@@and]
sentence=1	You'll	you'll	you'll	PRP	O	_	i	_	0	IGNORE	true
2	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	practical	_	practical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	APP_s	true
5	of	_	of	IN	O	_	thing	_	0	IGNORE	true
6	increasing	_	increase	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_mod	true
7	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
8	effectiveness	_	effectiveness	NN	O	(d<root> / --LEX--)	effective-04	()	6	APP_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	world	_	world	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
13	gaining	_	gain	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-02	(mod(), s())	6	MOD_mod	true
14	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	allow	_	allow	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	live	_	live	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
21	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	abundantly	_	abundantly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	wise	(mod())	20	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@p@@practical, 21@@s@@more, 20@@d@@live-01, 14@@s@@new-01, 8@@d@@effective-04, 13@@b@@gain-02, 11@@b@@world, 15@@d@@skill, 4@@t@@way, 2@@s@@find-01, 22@@t@@wise, 6@@s@@increase-01, 17@@s@@allow-01]
sentence=1	By	by	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
2	the_second_half	_name_	half	NN	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	1	APP_op1	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	year,	_	year,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	will	_	will	MD	O	_	name	_	0	IGNORE	true
8	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	9	MOD_mod	true
9	feel	_	feel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	welcome	_	welcome	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	relief	_	relief	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	relieve-01	(s())	9	APP_o	true
12	from	_	from	IN	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	tight	_	tight	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
15	financial	_	financial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	finance	(mod())	16	MOD_mod	true
16	binds	_	bind	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	have	_	have	VBP	O	_	person	_	0	IGNORE	true
19	hindered	_	hinder	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the_past_two_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	_NAME_	(mod())	19	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@p@@finance, 10@@s@@welcome-01, 2@@n4@@_NAME_, 16@@d@@bind, 22@@t2@@temporal-quantity, 2@@b@@broadcast-program, 11@@s@@relieve-01, 22@@explicitanon0@@_NAME_, 8@@p@@final, 1@@w@@by, 9@@s@@feel-01, 6@@d@@you, 14@@s@@tight-02, 19@@s@@hinder-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	mysterious	_	mysterious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	RAPHAEL_Holinshed	_name_	Holinshed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	named	_	name	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	mysterious	_	mysterious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	Neoplatonic	_name_	neoplatonic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	Italian	_name_	italian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	painter	_	painter	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	paint-02	(s())	12	MOD_s	true
12	RAPHAEL_Sanzio	_name_	Sanzio	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
13	who	_	who	WP	O	_	name	_	0	IGNORE	true
14	painted	_	paint	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	_St.George	_st.george	_St.George	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_o	true
16	Fighting	fighting	Fighting	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	Dragon_	dragon_	dragon_	XX	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
19	(1504-06	_	(1504-06	ADD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
20	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@n@@_NAME_, 3@@p@@person, 11@@s@@paint-02, 5@@s@@name-02, 3@@n@@_NAME_, 2@@p@@mysterious, 16@@s@@Fighting-01, 9@@p@@neoplatonic, 18@@n@@_NAME_, 12@@p@@person, 19@@n@@_NAME_, 12@@n@@_NAME_, 8@@p@@mysterious, 10@@c@@country, 10@@n@@_NAME_, 15@@p@@person, 14@@s@@paint-01]
sentence=1	A	a	a	DT	O	_	name	_	0	IGNORE	true
2	Spanish	_name_	spanish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	country	(mod())	4	MOD_mod	true
3	refugee,	_	refugee,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
4	ANTONIO	antonio	ANTONIO	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
5	PEREZ,	perez,	PEREZ,	NNS	O	_	name	_	0	IGNORE	true
6	visited	_	visit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
7	England	_name_	England	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
8	in	_	in	IN	O	_	person	_	0	IGNORE	true
9	1593	_name_	1593	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	became	_	become	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	10	APP_op2	true
12	acquainted	_	acquainted	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
13	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	Francis_&	_name_	&	CC	O	(d<root> / --LEX--)	_NAME_	()	12	APP_o	true
15	ANTHONY_Bacon,	_name_	bacon,	CD	O	_	_NAME_	_	0	IGNORE	true
16	with	_	with	IN	O	_	person	_	0	IGNORE	true
17	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
18	for	_	for	IN	O	_	or	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	seems	_	seem	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	true
23	to	_	to	TO	O	_	and	_	0	IGNORE	true
24	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	10	MOD_o	true
25	been	_	be	VBN	O	_	person	_	0	IGNORE	true
26	on	_	on	IN	O	_	and	_	0	IGNORE	true
27	terms	_	term	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
28	of	_	of	IN	O	_	and	_	0	IGNORE	true
29	intimacy,	_	intimacy,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	which	_	which	WDT	O	_	i	_	0	IGNORE	true
31	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	10	MOD_s	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	true
33	last	_	last	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
34	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
35	long,	_	long,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
36	for	_	for	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
37	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
38	Spaniard	_name_	Spaniard	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
39	developed	_	develop	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	47	APP_o	true
40	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	affectation	_	affectation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op1	true
43	&	_	&	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	or	(op2(), op1())	10	APP_s	true
44	bombast	_	bombast	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op2	true
45	that	_	that	IN	O	_	name	_	0	IGNORE	true
46	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
47	became	_	become	VBD	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-01	(o(s()))	36	APP_s	true
48	unpopular	_	unpopular	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_s	true
49	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
50	Court	_name_	Court	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
51	circles	_	circle	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
52	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[39@@s@@develop-02, 48@@d@@unpopular, 27@@d@@term, 4@@p@@ANTONIO, 32@@explicitanon0@@-, 11@@o@@become-01, 14@@d@@_NAME_, 12@@s@@acquainted-01, 7@@n@@_NAME_, 47@@h@@become-01, 44@@d@@bombast, 9@@explicitanon2@@_NUMBER_, 7@@c@@country, 51@@b@@circle, 43@@a@@or, 41@@explicitanon0@@much, 31@@s@@person, 50@@p@@Court, 36@@s@@cause-01, 2@@p@@country, 40@@s@@so, 22@@s@@seem-01, 42@@d@@affectation, 24@@s@@person, 38@@p@@_NAME_, 9@@d@@date-entity, 33@@s@@last-01, 34@@s@@very, 6@@s@@visit-01, 10@@a@@and]
sentence=1	True,	_name_	True,	NNP	O	_	include-91	_	0	IGNORE	true
2	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
3	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	8	APP_o	true
4	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
5	England	_name_	England	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	that	_	that	WDT	O	_	name	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	part	_	part	NN	O	(d<root> / --LEX--)	have-$LEMMA$-91	()	2	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the_Essex_entourage:_Dr.	_name_	Dr.	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
15	Lopez,	_name_	Lopez,	NNP	O	_	_NAME_	_	0	IGNORE	true
16	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
17	had	_	have	VBD	O	_	person	_	0	IGNORE	true
18	been	_	be	VBN	O	_	person	_	0	IGNORE	true
19	physician	_	physician	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
20	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	Essex'	essex'	essex'	NN	O	_	_NAME_	_	0	IGNORE	true
22	step-father,	_name_	step-father,	NNP	O	_	mean-01	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Earl	earl	Earl	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	Leicester,	leicester,	leicester,	CD	O	_	_NAME_	_	0	IGNORE	true
27	had	_	have	VBD	O	_	person	_	0	IGNORE	true
28	apparently	_	apparently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	apparent	(s())	29	MOD_s	true
29	treated	_	treat	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	Essex	_name_	Essex	NNP	O	(o<root> / --LEX--  :frequency-of (m<mod>))	i	(mod())	2	MOD_mod	true
33	for	_	for	IN	O	_	and	_	0	IGNORE	true
34	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	socially	_	socially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	social	(mod())	36	MOD_mod	true
36	unacceptable	_	unacceptable	JJ	O	(p<root> / --LEX--  :polarity (explicitanon0 / -))	appropriate-02	()	29	APP_o	true
37	ailment,	_	ailment,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_o	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	APP_s	true
39	Antonio_Perez,	_name_	perez,	NN	O	_	_NAME_	_	0	IGNORE	true
40	who	_	who	WP	O	_	name	_	0	IGNORE	true
41	was	_	be	VBD	O	_	person	_	0	IGNORE	true
42	a	_	a	DT	O	_	1	_	0	IGNORE	true
43	guest	_	guest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op2	true
44	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
45	Essex_House	_name_	House	NNP	O	(n3<root> / --LEX--  :name-of (f2 / facility  :location-of (w<mod>)))	_NAME_	(mod())	43	MOD_mod	true
46	in	_	in	IN	O	_	and	_	0	IGNORE	true
47	the_early_1590's	_name_	1590'	NNS	O	(n<root> / --LEX--  :name-of (c2 / city  :location-of (l<mod>)))	_NAME_	(mod())	29	MOD_mod	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@o@@i, 47@@c2@@city, 14@@c@@country, 5@@n@@_NAME_, 12@@d@@have-part-91, 5@@c@@country, 38@@a@@and, 3@@explicitanon0@@2, 14@@n@@_NAME_, 2@@s@@contrast-01, 36@@p@@appropriate-02, 7@@d@@we, 34@@p@@some, 35@@p@@social, 47@@n@@_NAME_, 28@@s@@apparent, 19@@d@@physician, 45@@f2@@facility, 29@@s@@treat-01, 45@@n3@@_NAME_, 3@@t@@thing, 24@@p@@Earl, 8@@s@@know-01, 37@@s@@and, 43@@d@@guest, 31@@p@@young, 36@@explicitanon0@@-]
sentence=1	Lopez's	_name_	Lopez's	NNP	O	_	_NAME_	_	0	IGNORE	true
2	1561	_	1561	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
3	book	_	book	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
4	"Libro	"libro	"libro	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
5	de	_	de	FW	O	_	_NAME_	_	0	IGNORE	true
6	la	_	la	FW	O	_	have-org-role-91	_	0	IGNORE	true
7	invencion	_	invencion	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$FORM$	(mod())	3	MOD_mod	true
8	liberal	_	liberal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
9	y	_	y	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	arte	_	arte	FW	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	del	_	del	FW	O	_	$LEMMA$	_	0	IGNORE	true
12	Juego	juego	Juego	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
13	del	_	del	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	Acedraz"	acedraz"	Acedraz"	NNP	O	_	_NAME_	_	0	IGNORE	true
15	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	THE	the	the	DT	O	_	he	_	0	IGNORE	true
17	classic	_	classic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	on	_	on	IN	O	_	thing	_	0	IGNORE	true
19	Chess	chess	Chess	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	openings,	_	openings,	NNP	O	_	and	_	0	IGNORE	true
21	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
24	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
25	bears	_	bear	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
26	his	_	he	PRP$	O	_	person	_	0	IGNORE	true
27	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[15@@s@@become-01, 8@@s@@liberal-02, 3@@d@@book, 12@@p@@Juego, 19@@p@@Chess, 4@@n@@_NAME_, 10@@p@@arte, 17@@d@@classic, 2@@d@@date-entity, 2@@explicitanon2@@_NUMBER_, 21@@s@@include-01, 7@@a@@invencion, 25@@s@@bear-01, 27@@d@@name, 23@@p@@one]
sentence=1	<<"I	<<"i	<<"i	ADD	O	(d<root> / --LEX--)	_NAME_	()	3	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	6	MOD_s	true
3	told	_	tell	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	APP_o	true
4	you,	_	you,	NN	O	_	say-01	_	0	IGNORE	true
5	friend,"	_name_	friend,"	ADD	O	_	old	_	0	IGNORE	true
6	said	_	say	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	curate,	_	curate,	NNP	O	_	thing	_	0	IGNORE	true
9	"that	_	"that	ADD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
10	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	6	APP_o2	true
12	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_o	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	divert	_	divert	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
15	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
16	idle	_	idle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	thoughts;	_name_	thoughts;	NNP	O	_	and	_	0	IGNORE	true
18	and	_	and	CC	O	_	$LEMMA$	_	6	IGNORE	true
19	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
20	in	_	in	IN	O	_	after	_	0	IGNORE	true
21	well-ordered	_	well-ordered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	call-01	(s())	22	MOD_s	true
22	states	_	state	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
23	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
24	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	CHESS,	chess,	CHESS,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
26	fives,	_	fives,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	MOD_op1	true
28	billiards	_	billiard	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
29	are	_	be	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	6	MOD_mod	true
30	allowed	_	allow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_s	true
31	for	_	for	IN	O	_	and	_	0	IGNORE	true
32	the	_	the	DT	O	_	and	_	0	IGNORE	true
33	diversion	_	diversion	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	divert-01	(mod())	30	MOD_mod	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	those	_	those	DT	O	_	that	_	0	IGNORE	true
36	who	_	who	WP	O	_	person	_	0	IGNORE	true
37	do	_	do	VBP	O	_	person	_	0	IGNORE	true
38	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	39	MOD_mod	true
39	care,	_	care,	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
40	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
41	are	_	be	VBP	O	_	person	_	0	IGNORE	true
42	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	46	MOD_mod	true
43	obliged,	_	obliged,	JJ	O	_	and	_	0	IGNORE	true
44	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
45	are	_	be	VBP	O	_	person	_	0	IGNORE	true
46	unable	_	unable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	MOD_s	true
47	to	_	to	IN	O	_	-	_	0	IGNORE	true
48	work,	_	work,	CD	O	_	$LEMMA$	_	0	IGNORE	true
49	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	APP_o2	true
50	books	_	book	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
51	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
52	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
54	are	_	be	VBP	O	_	person	_	0	IGNORE	true
55	allowed	_	allow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_o	true
56	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
57	be	_	be	VB	O	_	person	_	0	IGNORE	true
58	printed,	_	printed,	NNS	O	_	and	_	0	IGNORE	true
59	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
60	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
61	supposition	_	supposition	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$	(mod(), s())	55	MOD_mod	true
62	that,	_	that,	NNP	O	_	thing	_	0	IGNORE	true
63	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
64	indeed	_	indeed	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
65	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
66	the	_	the	DT	O	_	thing	_	0	IGNORE	true
67	truth,	_	truth,	CD	O	_	thing	_	0	IGNORE	true
68	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
69	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	61	APP_s	true
70	be	_	be	VB	O	_	person	_	0	IGNORE	true
71	nobody	_	nobody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	69	APP_s	true
72	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
73	ignorant	_	ignorant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	71	MOD_s	true
74	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
75	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
76	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	71	MOD_s	true
77	any	_	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	76	APP_o	true
78	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
79	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
80	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
81	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	76	MOD_s	true
82	stories;>	_	stories;>	CD	O	_	thing	_	0	IGNORE	true
83	>	_	>	XX	O	_	thing	_	0	IGNORE	true

nodealignment=[64@@p@@indeed, 6@@b@@say-01, 72@@s@@so, 53@@p@@kind, 2@@s@@say-01, 1@@d@@_NAME_, 81@@s@@true-01, 33@@o@@divert-01, 50@@d@@book, 3@@b@@tell-01, 76@@s@@take-01, 46@@s@@possible-01, 11@@d@@person, 12@@s@@do-02, 77@@d@@any, 14@@s@@divert-01, 69@@s@@possible-01, 10@@d@@this, 16@@d@@idle, 28@@d@@billiard, 73@@s@@ignorant-02, 15@@d@@our, 61@@b@@supposition, 9@@explicitanon0@@-, 27@@a@@and, 38@@explicitanon0@@-, 39@@explicitanon0@@-, 29@@p@@person, 71@@d@@nobody, 21@@s@@call-01, 49@@s@@cause-01, 52@@p@@this, 55@@s@@allow-01, 42@@explicitanon0@@-, 22@@b@@state, 30@@s@@allow-01, 23@@d@@game]
sentence=1	<<"Well	<<"well	<<"Well	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	then,"	_	then,"	NNP	O	_	and	_	0	IGNORE	true
3	said	_	say	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	Don_Quixote,	_name_	Quixote,	NNP	O	_	thing	_	0	IGNORE	true
5	"the	_	"the	DT	O	_	_NAME_	_	0	IGNORE	true
6	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	happens	_	happen	VBZ	O	_	event	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	comedy	_	comedy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_o	true
13	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	world,	_	world,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	where	_	where	WRB	O	_	contrast-01	_	0	IGNORE	true
18	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	play	_	play	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
20	emperors,	_	emperors,	VBZ	O	_	mean-01	_	0	IGNORE	true
21	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	popes,	_	popes,	FW	O	_	mean-01	_	0	IGNORE	true
23	and,	_	and,	NNS	O	_	include-91	_	0	IGNORE	true
24	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
25	short,	_	short,	NNP	O	_	mean-01	_	0	IGNORE	true
26	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
28	characters	_	character	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
29	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
30	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	32	MOD_s	true
31	be	_	be	VB	O	_	person	_	0	IGNORE	true
32	brought	_	bring	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
33	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	play;	_	play;	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	3	MOD_s	true
37	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
38	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
40	over,	_	over,	NNS	O	_	-	_	0	IGNORE	true
41	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
43	to	_	to	TO	O	_	mean-01	_	0	IGNORE	true
44	say	_	say	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
45	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
46	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
47	ends,	_	ends,	NNP	O	_	and	_	0	IGNORE	true
48	death	_	death	NN	O	(d<root> / --LEX--)	die-01	()	49	APP_o	true
49	strips	_	strip	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	61	APP_op1	true
50	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
51	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
52	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
53	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
54	garments	_	garment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_o2	true
55	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
56	distinguish	_	distinguish	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	54	MOD_s	true
57	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
58	from	_	from	IN	O	_	person	_	0	IGNORE	true
59	the	_	the	DT	O	_	person	_	0	IGNORE	true
60	other,	_	other,	NNS	O	_	and	_	0	IGNORE	true
61	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o2	true
62	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_s	true
63	are	_	be	VBP	O	_	person	_	0	IGNORE	true
64	equal	_	equal	JJ	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	61	APP_op2	true
65	in	_	in	IN	O	_	i	_	0	IGNORE	true
66	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
67	grave.	_	grave.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_o	true
68	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[49@@b@@strip-01, 61@@a@@and, 30@@s@@possible-01, 35@@d@@play;, 21@@p@@other, 18@@d@@some, 15@@p@@this, 13@@d@@life, 26@@p@@all, 32@@s@@bring-01, 28@@d@@character, 3@@b@@say-01, 11@@d@@comedy, 36@@s@@contrast-01, 46@@d@@life, 7@@d@@thing, 1@@p@@person, 6@@s@@same-01, 48@@d@@die-01, 62@@d@@all, 19@@t@@play-01, 56@@s@@distinguish-01, 54@@d@@garment, 64@@s@@equal-01, 12@@a@@and, 51@@p@@all, 1@@n@@_NAME_, 67@@d@@grave.]
sentence=1	"A	"a	"a	FW	O	_	$LEMMA$	_	0	IGNORE	true
2	fine	_	fine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
3	comparison!"	_	comparison!"	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	4	MOD_s	true
4	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Sancho;	sancho;	Sancho;	NFP	O	_	_NAME_	_	0	IGNORE	true
6	"though	_	"though	''	O	(s<root> / --LEX--  :degree-of (t<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
8	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
11	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	heard	_	hear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
15	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
16	many	_	many	JJ	O	_	$LEMMA$	_	17	IGNORE	true
17	and	_	and	CC	O	_	$LEMMA$	_	4	IGNORE	true
18	many	_	many	JJ	O	_	$LEMMA$	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	time,	_	time,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
21	as	_	as	RB	O	_	equal	_	0	IGNORE	true
22	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	as	_	as	IN	O	_	and	_	0	IGNORE	true
24	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
25	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
29	game	_	game	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	CHESS;	_name_	CHESS;	NNP	O	_	_NAME_	_	0	IGNORE	true
32	how,	_	how,	NN	O	_	so	_	0	IGNORE	true
33	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
34	long	_	long	RB	O	(a<root> / --LEX--  :op1 (p2<op1>)  :condition-of (d<mod>))	as-$LEMMA$-as	(op1(), mod())	41	MOD_mod	true
35	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
36	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
37	game	_	game	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op1	true
38	lasts,	_	lasts,	NNP	O	_	and	_	0	IGNORE	true
39	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
41	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	46	APP_op1	true
42	its	_	its	PRP$	O	_	mean-01	_	0	IGNORE	true
43	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
44	particular	_	particular	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_o	true
45	office,	_	office,	NNP	O	_	and	_	0	IGNORE	true
46	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
47	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
48	the	_	the	DT	O	_	thing	_	0	IGNORE	true
49	game	_	game	NN	O	_	$LEMMA$	_	0	IGNORE	true
50	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
51	finished	_	finish	VBN	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$-01	(mod())	58	MOD_mod	true
52	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
53	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
54	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	58	MOD_mod	true
55	mixed,	_	mixed,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
56	jumbled	_	jumble	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	58	APP_op1	true
57	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
58	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	61	APP_op1	true
59	shaken	_	shake	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	58	APP_op2	true
60	together,	_	together,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
61	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	46	APP_op2	true
62	stowed	_	stow	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	61	APP_op2	true
63	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
64	in	_	in	IN	O	_	i	_	0	IGNORE	true
65	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
66	bag,	_	bag,	NN	O	_	$LEMMA$	_	0	IGNORE	true
67	which	_	which	WDT	O	_	i	_	0	IGNORE	true
68	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
69	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	70	MOD_mod	true
70	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	62	MOD_s	true
71	ending	_	end	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	70	APP_o	true
72	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	71	APP_s	true
73	in	_	in	IN	O	_	i	_	0	IGNORE	true
74	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
75	grave.	_	grave.	NN	O	_	$LEMMA$	_	0	IGNORE	true
76	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[34@@a@@as-long-as, 62@@d@@stow-01, 7@@explicitanon0@@-, 58@@a@@and, 15@@d@@it, 24@@p@@that, 4@@s@@say-01, 41@@s@@have-03, 37@@d@@game, 44@@d@@particular, 40@@d@@piece, 3@@s@@say-01, 56@@d@@jumble-01, 6@@s@@_NAME_, 71@@s@@end-01, 9@@s@@new-01, 69@@s@@much, 70@@s@@resemble-01, 72@@d@@life, 51@@r@@finish-01, 61@@a@@and, 14@@s@@hear-01, 59@@d@@shake-01, 25@@p@@other, 39@@p@@each, 54@@p@@all, 46@@a@@and, 26@@explicitanon0@@one, 2@@s@@fine-03, 29@@a@@game, 8@@s@@so, 10@@s@@contrast-01, 12@@d@@i]
sentence=1	"Ay,"	_name_	"ay,"	CD	O	_	and	_	0	IGNORE	true
2	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	Sancho;	sancho;	sancho;	CD	O	_	and	_	0	IGNORE	true
4	"it	_	"it	XX	O	_	$LEMMA$	_	0	IGNORE	true
5	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	2	APP_o	true
6	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	2	MOD_s	true
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
9	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_s	true
10	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
11	worship's	_	worship's	CD	O	_	_NAME_	_	0	IGNORE	true
12	shrewdness	_	shrewdness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	sticks	_	stick	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	me;	_	me;	NN	O	_	mean-01	_	0	IGNORE	true
16	land	_	land	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	that,	_	that,	NNS	O	_	cause-01	_	0	IGNORE	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	itself,	_	itself,	NNP	O	_	cause-01	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	barren	_	barren	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
22	and	_	and	CC	O	_	$LEMMA$	_	25	IGNORE	true
23	dry,	_	dry,	NNS	O	_	and	_	0	IGNORE	true
24	will	_	will	MD	O	_	thing	_	0	IGNORE	true
25	come	_	come	VB	O	(g<root> / --LEX--  :ARG1 (t<s>)  :ARG4 (d<o>))	$LEMMA$-04	(o(s()))	6	MOD_s	true
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
27	yield	_	yield	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_o	true
28	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	29	MOD_s	true
29	fruit	_	fruit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
31	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
32	dung	_	dung	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_op1	true
33	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	27	MOD_mod	true
35	till	_	till	IN	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_op2	true
36	it>	_	it>	NNS	O	_	$LEMMA$	_	0	IGNORE	true
37	>	_	>	XX	O	_	interrogative	_	0	IGNORE	true

nodealignment=[27@@s@@yield-01, 35@@d@@till-01, 21@@p@@barren, 28@@s@@good-02, 13@@s@@stick-01, 6@@s@@person, 16@@p@@land, 9@@s@@include-91, 29@@d@@fruit, 25@@g@@come-04, 12@@d@@shrewdness, 2@@s@@say-01, 5@@s@@infer-01, 10@@d@@your, 8@@p@@some, 31@@d@@you, 32@@d@@dung-01, 34@@a@@and]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
3	bear	_	bear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
4	no	_	no	RB	O	_	-	_	0	IGNORE	true
5	longer	_	longer	RBR	O	(n<root> / --LEX--  :time-of (p<mod>))	no-$LEMMA$	(mod())	3	MOD_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	expressionless	_	expressionless	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
9	motionless	_	motionless	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
10	stare,	_	stare,	NNP	O	_	and	_	0	IGNORE	true
11	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
12	seemed	_	seem	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
13	to	_	to	TO	O	_	mean-01	_	0	IGNORE	true
14	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_s	true
15	a	_	a	DT	O	_	thing	_	0	IGNORE	true
16	sort	_	sort	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	impenetrable	_	impenetrable	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	inhabit-01	(s())	19	MOD_s	true
19	emptiness	_	emptiness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
20	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	19	MOD_s	true
21	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
22	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	23	MOD_s	true
23	depth	_	depth	NN	O	(m<root> / --LEX--  :poss (i<poss>))	deep-03	(poss())	20	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	an	_	an	DT	O	_	mean-01	_	0	IGNORE	true
26	abyss	_	abyss	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_poss	true
27	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@n@@no-longer, 23@@m@@deep-03, 14@@s@@have-03, 19@@d@@emptiness, 18@@n@@inhabit-01, 3@@s@@bear-01, 1@@d@@He, 7@@d@@expressionless, 2@@f@@possible-01, 20@@s@@resemble-01, 9@@d@@motionless, 26@@d@@abyss, 18@@explicitanon0@@-, 12@@s@@seem-01, 8@@a@@and, 22@@s@@black-04, 16@@p@@sort]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
4	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
5	that	_	that	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	doors	_	door	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	open	_	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	signal	_	signal	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op3	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	green	_	green	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_op1	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	18	MOD_mod	true
17	white	_	white	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_op2	true
18	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	window	_	window	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	faced	_	face	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
24	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
25	drive	_	drive	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
27	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
28	give	_	give	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
29	notice	_	notice	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
30	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
31	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
32	was	_	be	VBD	O	_	possible-01	_	0	IGNORE	true
33	safe	_	safe	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op1	true
34	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	29	APP_s	true
35	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
36	the	_	the	DT	O	_	-	_	0	IGNORE	true
37	attempt	_	attempt	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	41	APP_s	true
38	had	_	have	VBD	O	_	obligate-01	_	0	IGNORE	true
39	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	41	MOD_s	true
40	be	_	be	VB	O	_	thing	_	0	IGNORE	true
41	postponed	_	postpone	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op2	true
42	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[31@@d@@all, 39@@m@@more, 7@@d@@door, 15@@d@@green-02, 12@@s@@signal-01, 37@@d@@attempt-01, 34@@a@@or, 39@@b@@good-02, 41@@s@@postpone-01, 16@@a@@or, 23@@s@@face-01, 18@@d@@light, 21@@b@@window, 29@@s@@notice-01, 4@@s@@see-01, 10@@a@@and, 33@@s@@safe-01, 17@@d@@white-02, 1@@d@@i, 9@@s@@open-01, 25@@d@@drive]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	Rock	rock	Rock	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	revolution	_	revolution	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	4	APP_s	true
4	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	nation	_	nation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	allows	_	allow	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	church	_	church	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	to	_	to	TO	O	_	and	_	0	IGNORE	true
13	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	4	MOD_s	true
14	changed	_	change	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	a	_	a	DT	O	_	thing	_	0	IGNORE	true
17	pub	_	pub	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
19	to	_	to	IN	O	_	thing	_	0	IGNORE	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	dance	_	dance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
23	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	MOD_op1	true
24	to	_	to	IN	O	_	person	_	0	IGNORE	true
25	a	_	a	DT	O	_	person	_	0	IGNORE	true
26	recording	_	record	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	27	MOD_mod	true
27	studio	_	studio	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
28	full	_	full	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	27	MOD_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	drug	_	drug	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op1	true
31	addicts,	_	addicts,	NNS	O	_	and	_	0	IGNORE	true
32	homosexuals	_	homosexual	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	28	APP_o	true
34	lunatics	_	lunatic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op3	true
35	(as	_	(as	-LRB-	O	_	person	_	0	IGNORE	true
36	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	George_Martin,	_name_	martin,	CD	O	_	name	_	0	IGNORE	true
39	ally	_	ally	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	Beatles)	_name_	Beatles)	NNP	O	_	name	_	0	IGNORE	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@person, 34@@d@@lunatic, 26@@p@@record-01, 23@@a@@or, 33@@a@@and, 21@@p@@dance, 11@@d@@church, 7@@d@@nation, 9@@s@@allow-01, 18@@a@@or, 17@@d@@pub, 30@@d@@drug, 14@@s@@change-01, 2@@p@@Rock, 22@@d@@room, 28@@s@@full-09, 39@@s@@ally-01, 4@@s@@come-03, 32@@d@@homosexual, 27@@d@@studio, 3@@d@@revolution-03]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	epithet	_	epithet	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	20	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	3	APP_s	true
7	of	_	of	IN	O	_	person	_	0	IGNORE	true
8	Satan	_name_	Satan	NNP	O	(d<root> / --LEX--)	_NAME_	()	6	APP_s	true
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	nation,	_	nation,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	mean-01	(mod())	20	MOD_mod	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	center	_	center	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	London,	_name_	London,	NNS	O	_	_NAME_	_	0	IGNORE	true
16	the	_	the	DT	O	_	name	_	0	IGNORE	true
17	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	well-known	_	well-known	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	27	MOD_s	true
19	Piccadilly_Circus,	_name_	Circus,	NNP	O	_	_NAME_	_	0	IGNORE	true
20	takes	_	take	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
21	it's	_	it's	PRP$	O	_	person	_	0	IGNORE	true
22	name	_	name	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	20	APP_o	true
23	from	_	from	IN	O	_	name	_	0	IGNORE	true
24	an	_	an	DT	O	_	1	_	0	IGNORE	true
25	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	brothel	_	brothel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o2	true
27	(the	_	(the	ADD	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_poss	true
28	"Piccadilla	"piccadilla	"piccadilla	XX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
29	House"	house"	House"	NNS	O	_	and	_	0	IGNORE	true
30	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
31	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
32	"The	"the	"The	NNP	O	_	mean-01	_	0	IGNORE	true
33	House	house	House	NNP	O	(d<root> / --LEX--)	$REPL$	()	31	APP_o	true
34	of	_	of	IN	O	_	-	_	0	IGNORE	true
35	Sin"),	sin"),	Sin"),	NNP	O	_	-	_	0	IGNORE	true
36	disappeared	_	disappear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
37	nowadays	_	nowadays	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@g2@@govern-01, 6@@g@@government-organization, 18@@s@@well-known, 26@@d@@brothel, 10@@p@@that, 28@@b@@"piccadilla, 17@@s@@so, 36@@s@@disappear-01, 33@@d@@house, 20@@b@@take-01, 31@@s@@mean-01, 3@@s@@epithet, 25@@p@@old, 8@@d@@_NAME_, 37@@n@@nowadays, 13@@b@@center, 22@@m@@name-01, 27@@d@@(the, 11@@p@@mean-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	demons	_	demon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
6	captain	_	captain	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$FORM$	(s())	7	MOD_s	true
7	Smith	_name_	Smith	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
9	"Not	"not	"not	UH	O	_	person	_	0	IGNORE	true
10	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_o	true
13	sink	_	sink	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	APP_s	true
14	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
15	ship"	_	ship"	NN	O	_	and	_	0	IGNORE	true
16	spoke	_	speak	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
17	from	_	from	IN	O	_	name	_	0	IGNORE	true
18	antichrist	_	antichrist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	John_Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
20	(from	_	(from	NFP	O	_	$LEMMA$	_	0	IGNORE	true
21	Liverpool,	_name_	liverpool,	CD	O	_	and	_	0	IGNORE	true
22	base	_	base	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	port	_	port	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
24	to	_	to	IN	O	_	and	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	Titanic)	titanic)	Titanic)	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	saying:	_	saying:	NNP	O	_	and	_	0	IGNORE	true
28	"Christianity	"christianity	"christianity	ADD	O	(d<root> / --LEX--)	_NAME_	()	32	APP_s	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	thing	_	0	IGNORE	true
32	go	_	go	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o2	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@make-02, 3@@d@@demon, 13@@s@@sink-01, 8@@s@@say-01, 2@@s@@same-01, 7@@n@@_NAME_, 22@@p@@base, 32@@s@@go-01, 18@@p@@_NAME_, 19@@p@@person, 16@@b@@speak-01, 19@@n@@_NAME_, 10@@p@@even, 6@@h@@have-org-role-91, 11@@n@@_NAME_, 28@@d@@_NAME_, 12@@s@@possible-01, 6@@p2@@captain, 11@@p@@person, 23@@b@@port, 7@@p@@person]
sentence=1	Came	came	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
2	the	_	the	DT	O	_	and	_	0	IGNORE	true
3	disintegration	_	disintegration	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	disintegrate-01	(s())	1	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	Beatles'	_name_	beatles'	NN	O	(d<root> / --LEX--)	_NAME_	()	7	APP_poss	true
7	minds	_	mind	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	LSD	_name_	LSD	NNP	O	(m<root> / --LEX--  :instrument-of (f<mod>))	_NAME_	(mod())	3	MOD_mod	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
12	caused,	_	caused,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	1	MOD_o	true
13	among	_	among	IN	O	_	include-91	_	0	IGNORE	true
14	others,	_	others,	JJ	O	_	-	_	0	IGNORE	true
15	schizophrenic	_	schizophrenic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	lyrics	_	lyric	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
17	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	"I	"i	"i	CD	O	_	$REPL$	_	0	IGNORE	true
20	am	_	be	VBP	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
22	Walrus"	walrus"	Walrus"	NNPS	O	_	and	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
24	incoherent	_	incoherent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
25	schizophrenic	_	schizophrenic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	musical	_	musical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	music	(mod())	27	MOD_mod	true
27	expositions	_	exposition	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
28	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
29	"Revolution	"revolution	"revolution	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	number	_	number	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	9"	_	9"	CD	O	_	and	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@lyric, 3@@s@@disintegrate-01, 24@@p@@incoherent, 12@@s@@and, 9@@m@@_NAME_, 1@@s@@come-03, 7@@h@@mind, 27@@d@@exposition, 6@@d@@_NAME_, 29@@p@@_NAME_, 23@@a@@and, 25@@p@@schizophrenic, 26@@p@@music, 30@@p@@number, 15@@p@@schizophrenic]
sentence=1	At	at	at	IN	O	_	thing	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
4	time,	_	time,	NNS	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	devil	_	devil	NN	O	(d<root> / --LEX--)	_NAME_	()	7	APP_s	true
7	acted	_	act	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
8	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	puppets	_	puppet	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	"Sympathy	"sympathy	"sympathy	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
15	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	devil"	_	devil"	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
20	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	pact	_	pact	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	27	APP_s	true
23	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
24	the_Rolling_Stones	_name_	Stones	NNPS	O	(d<root> / --LEX--)	_NAME_	()	22	APP_s	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	Satan	_name_	Satan	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	APP_o	true
27	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	founder	_	founder	NN	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	found-01	(s())	38	MOD_s	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	group,	_	group,	NNP	O	_	mean-01	_	0	IGNORE	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	guitarist	_	guitarist	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	38	MOD_s	true
38	Brian_Jones	_name_	Jones	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	40	APP_s	true
39	(who	_	(who	NNP	O	_	cause-01	_	0	IGNORE	true
40	refused	_	refuse	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_mod	true
41	to	_	to	TO	O	_	name	_	0	IGNORE	true
42	be	_	be	VB	O	_	person	_	0	IGNORE	true
43	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
44	puppet	_	puppet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
45	of	_	of	IN	O	_	person	_	0	IGNORE	true
46	the	_	the	DT	O	_	person	_	0	IGNORE	true
47	devil),	_name_	devil),	NNP	O	_	person	_	0	IGNORE	true
48	murdered	_	murder	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_o	true
49	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
50	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	48	APP_s	true
51	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	50	MOD_o	true
52	by	_	by	IN	O	_	thing	_	0	IGNORE	true
53	Mick_Jagger,	_name_	Jagger,	NNP	O	_	_NAME_	_	0	IGNORE	true
54	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
55	assassin	_	assassin	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	51	APP_s	true
56	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[55@@p2@@person, 27@@s@@take-01, 50@@d@@person, 14@@p@@"sympathy, 44@@d@@puppet, 12@@p@@puppet, 37@@p2@@guitarist, 7@@s@@act-02, 6@@d@@_NAME_, 32@@w@@found-01, 10@@p@@other, 11@@p@@main, 40@@s@@refuse-01, 32@@p@@person, 38@@p@@person, 38@@n@@_NAME_, 55@@e2@@assassin, 37@@h@@have-org-role-91, 29@@d@@life, 26@@n@@_NAME_, 22@@s@@pact, 24@@d@@_NAME_, 48@@s@@murder-01, 51@@s@@send-01, 54@@p@@another, 3@@s@@same-01]
sentence=1	Antichrist_John_Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_s	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	compete	_	compete	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
6	Jesus_Christ,	_name_	Christ,	NNP	O	_	_NAME_	_	0	IGNORE	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	APP_op1	true
11	a	_	a	DT	O	_	person	_	0	IGNORE	true
12	beard	_	beard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
14	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
18	bogus	_	bogus	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	of	_	of	IN	O	_	person	_	0	IGNORE	true
21	Christ	_name_	Christ	NNP	O	(p<root> / person  :name (n / --LEX--)  :source-of (t<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	together	_	together	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	Yoko_Ono	_name_	Ono	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
25	at	_	at	IN	O	_	person	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Amsterdam_Hilton	_name_	Hilton	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	hotel	_	hotel	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
29	proclaiming	_	proclaim	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
30	"Peace",	"peace",	"Peace",	NNP	O	_	thing	_	0	IGNORE	true
31	being	_	be	VBG	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
32	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
33	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
34	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	was	_	be	VBD	O	_	person	_	0	IGNORE	true
36	visited	_	visit	VBN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
37	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	Canadian	_name_	canadian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	40	MOD_mod	true
40	journalist	_	journalist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
41	who	_	who	WP	O	_	person	_	0	IGNORE	true
42	ridiculized	_	ridiculize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	true
43	and	_	and	CC	O	_	$LEMMA$	_	8	IGNORE	true
44	admonished	_	admonish	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	MOD_s	true
45	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
46	wanting	_	want	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	MOD_s	true
47	to	_	to	TO	O	_	thing	_	0	IGNORE	true
48	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	46	APP_o	true
49	about	_	about	IN	O	_	thing	_	0	IGNORE	true
50	what	_	what	WP	O	_	cause-01	_	0	IGNORE	true
51	Lennon	_name_	Lennon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	74	APP_s	true
52	meant	_	mean	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
53	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
54	he	_	he	PRP	O	_	thing	_	0	IGNORE	true
55	wrote	_	write	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	46	MOD_mod	true
56	in	_	in	IN	O	_	i	_	0	IGNORE	true
57	the	_	the	DT	O	_	person	_	0	IGNORE	true
58	lyrics	_	lyric	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	55	MOD_mod	true
59	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
60	"The	"the	"The	``	O	_	_NAME_	_	0	IGNORE	true
61	ballad	_	ballad	NN	O	(d<root> / --LEX--)	$LEMMA$	()	58	APP_poss	true
62	of	_	of	IN	O	_	person	_	0	IGNORE	true
63	John	_name_	John	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	61	MOD_mod	true
64	and	_	and	CC	O	_	$LEMMA$	_	61	IGNORE	true
65	Yoko":	_name_	yoko":	CD	O	_	$LEMMA$	_	0	IGNORE	true
66	"the	_	"the	DT	O	_	i	_	0	IGNORE	true
67	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
68	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	74	APP_o	true
69	are	_	be	VBP	O	_	person	_	0	IGNORE	true
70	going,	_	going,	NNP	O	_	and	_	0	IGNORE	true
71	they're	_	they're	NNP	O	_	person	_	0	IGNORE	true
72	going	_	go	VBG	O	_	accompany-01	_	0	IGNORE	true
73	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
74	crucify	_	crucify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	48	APP_o	true
75	me...",	_	me...",	.	O	_	slash	_	0	IGNORE	true
76	The_CURSE_OF_GOD_upon_John_Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	74	MOD_mod	true
77	carried	_	carry	VBD	O	(d<root> / --LEX--)	$LEMMA$-on-02	()	55	APP_o	true
78	on	_	on	RP	O	_	cause-01	_	0	IGNORE	true
79	with	_	with	IN	O	_	-	_	0	IGNORE	true
80	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	81	MOD_mod	true
81	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	84	MOD_mod	true
82	of	_	of	IN	O	_	person	_	0	IGNORE	true
83	miseries	_	misery	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op1	true
84	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	74	MOD_mod	true
85	distresses	_	distress	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	84	APP_op2	true
86	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
87	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	MOD_s	true
88	Lennon	_name_	Lennon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
89	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
90	the	_	the	DT	O	_	person	_	0	IGNORE	true
91	interview	_	interview	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	89	APP_o	true
92	to	_	to	IN	O	_	and	_	0	IGNORE	true
93	the	_	the	DT	O	_	person	_	0	IGNORE	true
94	"Rolling	"rolling	"rolling	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	96	MOD_mod	true
95	Stone"	_name_	Stone"	NNP	O	_	and	_	0	IGNORE	true
96	magazine	_	magazine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	91	APP_s	true
97	(today	_	(today	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	true
98	condensed	_	condense	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	96	MOD_s	true
99	in	_	in	IN	O	_	i	_	0	IGNORE	true
100	the	_	the	DT	O	_	person	_	0	IGNORE	true
101	"Lennon	"lennon	"lennon	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	98	MOD_mod	true
102	remembers"	_	remembers"	NFP	O	_	mean-01	_	0	IGNORE	true
103	book)	_	book)	XX	O	_	and	_	0	IGNORE	true
104	where	_	where	WRB	O	_	and	_	0	IGNORE	true
105	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
106	speaks	_	speak	VBZ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	96	MOD_mod	true
107	about	_	about	IN	O	_	thing	_	0	IGNORE	true
108	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
109	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	112	MOD_s	true
110	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_s	true
111	were	_	be	VBD	O	_	person	_	0	IGNORE	true
112	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	115	MOD_s	true
113	for	_	for	IN	O	_	and	_	0	IGNORE	true
114	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
115	blaming	_	blame	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	106	APP_s	true
116	"whatever	_	"whatever	''	O	(d<root> / --LEX--)	$LEMMA$	()	115	APP_o	true
117	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
118	up	_	up	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	115	MOD_mod	true
119	there"	_	there"	CD	O	_	thing	_	0	IGNORE	true
120	for	_	for	IN	O	_	thing	_	0	IGNORE	true
121	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
122	(referring	_	(referring	ADD	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	115	MOD_mod	true
123	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
124	God)	_name_	God)	NNS	O	_	mean-01	_	0	IGNORE	true
125	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[97@@n@@_NAME_, 115@@s@@blame-01, 87@@s@@make-02, 27@@n@@_NAME_, 28@@b@@hotel, 18@@p@@bogus, 40@@d@@journalist, 122@@o@@(referring-01, 42@@s@@ridiculize-01, 21@@n@@_NAME_, 12@@d@@beard, 58@@h@@lyric, 19@@d@@role, 39@@c@@country, 118@@b@@up, 68@@d@@thing, 51@@n@@_NAME_, 13@@a@@and, 85@@d@@distress, 48@@s@@know-01, 39@@n@@_NAME_, 51@@p@@person, 10@@s@@grow-03, 67@@d@@way, 101@@n@@_NAME_, 46@@s@@want-01, 109@@s@@bad-07, 1@@p@@person, 112@@s@@go-09, 77@@d@@carry-on-02, 110@@d@@thing, 4@@s@@compete-01, 106@@s@@speak-01, 63@@n@@_NAME_, 44@@s@@admonish-01, 36@@v@@visit-01, 55@@t@@write-01, 16@@s@@make-01, 81@@p@@type, 89@@s@@give-01, 76@@n@@_NAME_, 94@@n@@_NAME_, 98@@s@@condense-01, 88@@n@@_NAME_, 8@@s@@cause-01, 2@@c@@want-01, 96@@d@@magazine, 1@@n@@_NAME_, 52@@d@@mean-01, 61@@d@@ballad, 74@@s@@crucify-01, 29@@s@@proclaim-01, 21@@p@@person, 24@@n@@_NAME_, 14@@s@@start-01, 80@@p@@all, 83@@d@@misery, 116@@d@@"whatever, 84@@a@@and, 91@@s@@interview-01]
sentence=1	After	after	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	George_Harrison,	_name_	harrison,	CD	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	arrogantly	_	arrogantly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	right-06	(mod())	3	MOD_mod	true
5	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	video	_	video	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	filmed	_	film	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	studio	_	studio	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	at	_	at	IN	O	_	name	_	0	IGNORE	true
13	Henley	_name_	Henley	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	11	MOD_mod	true
14	on	_	on	IN	O	_	and	_	0	IGNORE	true
15	Thames:	_name_	thames:	ADD	O	_	and	_	0	IGNORE	true
16	"I	"i	"I	``	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	want	_	want	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	3	APP_o	true
18	to	_	to	TO	O	_	person	_	0	IGNORE	true
19	talk	_	talk	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	divinity	_	divinity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	man",	_	man",	.	O	_	cause-01	_	0	IGNORE	true
25	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	was	_	be	VBD	O	_	person	_	0	IGNORE	true
27	given	_	give	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_mod	true
28	throat	_	throat	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	cancer	_	cancer	NN	O	(d2<root> / disease  :name (n2 / --LEX--))	$LEMMA$	()	27	APP_o	true
30	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
31	GOD	god	GOD	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	27	APP_s	true
32	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	27	MOD_o	true
33	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	cause-01	(s(), o())	3	MOD_o	true
34	those	_	those	DT	O	_	that	_	0	IGNORE	true
35	words,	_	words,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	3	MOD_s	true
36	which	_	which	WDT	O	_	i	_	0	IGNORE	true
37	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	35	MOD_s	true
38	metastasis	_	metastasis	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
39	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
40	carried	_	carry	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-02	(s())	33	MOD_s	true
41	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
42	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
43	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
44	death.	_	death.	NN	O	_	cause-01	_	0	IGNORE	true
45	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@film-01, 13@@n@@_NAME_, 33@@s@@cause-01, 35@@s@@cause-01, 1@@n@@after, 38@@d@@metastasis, 2@@n@@_NAME_, 32@@s@@cause-01, 2@@p@@person, 28@@p@@throat, 3@@s@@say-01, 17@@d@@want-01, 29@@d2@@disease, 19@@s@@talk-01, 22@@d@@divinity, 43@@p@@final, 40@@s@@carry-on-02, 37@@s@@cause-01, 4@@t@@right-06, 27@@s@@give-01, 31@@p@@person, 31@@n@@_NAME_, 7@@l@@video, 16@@d@@"I, 13@@c@@city, 29@@n2@@cancer, 11@@b@@studio]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Jewish	_name_	jewish	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	marriage	_	marriage	NN	O	(d<root> / --LEX--)	marry-01	()	11	APP_s	true
4	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
5	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	right	_	right	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-04	(s(), o())	4	MOD_s	true
8	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	George's	george's	George's	NNP	O	_	_NAME_	_	0	IGNORE	true
10	house	_	house	NN	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
11	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	that	_	that	IN	O	_	thing	_	0	IGNORE	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	an	_	an	DT	O	_	-	_	0	IGNORE	true
16	arrogant	_	arrogant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
18	who	_	who	WP	O	_	-	_	0	IGNORE	true
19	does	_	do	VBZ	O	_	-	_	0	IGNORE	true
20	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	21	MOD_mod	true
21	return	_	return	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_s	true
22	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
23	greeting	_	greeting	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_o	true
24	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[2@@r@@religious-group, 23@@d@@greeting-01, 11@@s@@say-01, 16@@p@@arrogant, 20@@n@@ever, 17@@d@@person, 4@@s@@live-01, 22@@explicitanon0@@-, 3@@d@@marry-01, 2@@n@@_NAME_, 7@@s@@right-04, 21@@s@@return-02, 10@@d@@_NAME_]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	interesting	_	interesting	JJ	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	note	_	note	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
6	that	_	that	IN	O	_	and	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_o	true
11	bankrupt	_	bankrupt	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
12	by	_	by	IN	O	_	Britain	_	0	IGNORE	true
13	the	_	the	DT	O	_	name	_	0	IGNORE	true
14	British	_name_	british	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
15	cinema	_	cinema	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	industry	_	industry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
17	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
18	to	_	to	IN	O	_	name	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	despotism	_	despotism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
22	pedantry	_	pedantry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	George_Harrison,	_name_	Harrison,	NNP	O	_	_NAME_	_	0	IGNORE	true
25	who	_	who	WP	O	_	name	_	0	IGNORE	true
26	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
27	that	_	that	IN	O	_	name	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	cinema	_	cinema	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
30	industry	_	industry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
31	would	_	would	MD	O	_	thing	_	0	IGNORE	true
32	have	_	have	VB	O	_	person	_	0	IGNORE	true
33	worshiped	_	worship	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	APP_o	true
34	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@a@@and, 10@@s@@make-02, 15@@p@@cinema, 22@@d@@pedantry, 7@@p@@this, 8@@d@@company, 11@@s@@bankrupt-01, 26@@s@@believe-01, 5@@s@@note-01, 30@@d@@industry, 14@@p@@_NAME_, 20@@d@@despotism, 3@@h@@interesting, 17@@s@@cause-01, 16@@d@@industry, 33@@s@@worship-01, 29@@p@@cinema]
sentence=1	George_Harrison	_name_	Harrison	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	in	_	in	IN	O	_	after	_	0	IGNORE	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	video	_	video	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	"Oasis	"oasis	"Oasis	NFP	O	(d<root> / --LEX--)	_NAME_	()	12	APP_dom	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	untalented	_	untalented	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	MOD_s	true
12	band	_	band	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
14	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	shouldn't	_	shouldn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	playing	_	play	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op2	true
18	at	_	at	IN	O	_	and	_	0	IGNORE	true
19	all",	_	all",	.	O	_	mean-01	_	0	IGNORE	true
20	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	being	_	be	VBG	O	_	person	_	0	IGNORE	true
24	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
25	truth,	_	truth,	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	2	MOD_s	true
26	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
27	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
28	Beatles	_name_	Beatles	NNPS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	32	APP_dom	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
32	band	_	band	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	26	APP_o	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
36	musicians,	_	musicians,	NNS	O	_	thing	_	0	IGNORE	true
37	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
38	musicians	_	musician	NNS	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
39	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
40	all,	_	all,	RB	O	_	mean-01	_	0	IGNORE	true
41	who	_	who	WP	O	_	person	_	0	IGNORE	true
42	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	44	MOD_s	true
43	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	play	_	play	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
45	a	_	a	DT	O	_	1	_	0	IGNORE	true
46	couple	_	couple	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
47	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
48	elementary	_	elementary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
49	guitar	_	guitar	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	chords	_	chord	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_o	true
51	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
52	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
53	are	_	be	VBP	O	_	person	_	0	IGNORE	true
54	as	_	as	RB	O	_	equal	_	0	IGNORE	true
55	untalented	_	untalented	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	32	MOD_s	true
56	as	_	as	IN	O	_	equal	_	0	IGNORE	true
57	Oasis	_name_	Oasis	NNP	O	(n2<root> / --LEX--  :name-of (n / natural-disaster  :compared-to-of (b2<mod>)))	_NAME_	(mod())	55	MOD_mod	true
58	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@p@@person, 55@@s@@untalented, 28@@n@@_NAME_, 20@@p@@all, 42@@s@@possible-01, 46@@explicitanon0@@couple, 43@@p@@only, 32@@r@@band, 44@@s@@play-01, 2@@s@@say-01, 50@@d@@chord, 10@@s@@very, 34@@s@@very, 7@@d@@_NAME_, 35@@p@@poor, 48@@p@@elementary, 38@@r@@musician, 30@@p@@also, 57@@n@@natural-disaster, 26@@s@@contrast-01, 11@@s@@untalented, 12@@r@@band, 1@@p@@person, 1@@n@@_NAME_, 5@@l@@video, 17@@d@@play-01, 13@@a@@and, 15@@explicitanon0@@-, 49@@p@@guitar, 25@@s@@thing, 57@@n2@@_NAME_]
sentence=1	Paul_McCartney	_name_	McCartney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	2	MOD_mod	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	believes	_	believe	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_op1	true
7	in	_	in	IN	O	_	-	_	0	IGNORE	true
8	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
9	magic,	_	magic,	NNP	O	_	and	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	does	_	do	VBZ	O	_	$LEMMA$-02	_	0	IGNORE	true
13	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	charity,	_name_	charity,	NNP	O	_	and	_	0	IGNORE	true
16	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
17	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
21	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	will	_	will	MD	O	_	thing	_	0	IGNORE	true
23	compensate	_	compensate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
24	for	_	for	IN	O	_	thing	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	CURSE	curse	curse	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_s	true
27	OF	of	of	IN	O	_	include-91	_	0	IGNORE	true
28	GOD	god	GOD	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
31	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
34	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
36	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
37	wife's	_	wife's	CD	O	_	and	_	0	IGNORE	true
38	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o	true
39	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	35	MOD_o	true
40	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
41	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
42	Satanism	_name_	Satanism	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op1	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	39	APP_s	true
44	involvement	_	involvement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	involve-01	(s())	43	APP_op2	true
45	in	_	in	IN	O	_	i	_	0	IGNORE	true
46	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	47	MOD_s	true
47	magic	_	magic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
48	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 38@@d@@life, 46@@s@@black-04, 6@@c@@believe-01, 20@@t@@way, 10@@a@@and, 47@@d@@magic, 13@@explicitanon0@@lot, 26@@s@@curse-01, 19@@p@@this, 35@@s@@take-01, 2@@c@@say-01, 23@@s@@compensate-01, 42@@d@@Satanism, 16@@s@@think-01, 3@@n@@recent, 8@@s@@use-01, 39@@s@@cause-01, 1@@p@@person, 28@@n@@_NAME_, 44@@s@@involve-01, 43@@a@@and, 28@@p@@person]
sentence=1	"The	"the	"The	``	O	_	_NAME_	_	0	IGNORE	true
2	Berlin	_name_	Berlin	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	daily	_name_	daily	NN	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	1	(mod())	9	MOD_mod	true
4	Der	der	Der	NNP	O	_	_NAME_	_	0	IGNORE	true
5	Tagesspiegel	tagesspiegel	Tagesspiegel	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	week,"	_	week,"	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	continued	_	continue	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
9	UPI,	upi,	upi,	JJ	O	(d<root> / --LEX--)	_NAME_	()	10	APP_s	true
10	"quoted	_	"quoted	``	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	'NATO	'nato	'nato	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	intelligence	_	intelligence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	sources'	_	sources'	NN	O	_	oppose-01	_	0	IGNORE	true
14	who	_	who	WP	O	_	name	_	0	IGNORE	true
15	claimed	_	claim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
17	the	_	the	DT	O	_	name	_	0	IGNORE	true
18	NATO	_name_	NATO	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	allies	_	ally	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
20	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
21	been	_	be	VBN	O	_	person	_	0	IGNORE	true
22	informed	_	inform	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
23	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	27	APP_s	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	27	MOD_mod	true
27	investigating	_	investigate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_o	true
28	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	possibilities	_	possibility	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	APP_o	true
30	of	_	of	IN	O	_	thing	_	0	IGNORE	true
31	bringing	_	bring	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_s	true
32	the	_	the	DT	O	_	lead-02	_	0	IGNORE	true
33	mullah-led	_	mullah-led	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	34	MOD_mod	true
34	regime	_	regime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	line,	_	line,	NNP	O	_	and	_	0	IGNORE	true
37	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	31	MOD_o	true
38	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	options	_	option	NNS	O	(d<root> / --LEX--)	opt-01	()	37	APP_s	true
40	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[3@@t@@temporal-quantity, 5@@n@@_NAME_, 31@@s@@bring-01, 3@@r@@rate-entity-91, 7@@p@@week,", 11@@n@@_NAME_, 18@@m@@military, 12@@d@@intelligence, 24@@c@@country, 2@@n@@_NAME_, 22@@s@@inform-01, 19@@s@@ally-01, 18@@n@@_NAME_, 15@@s@@claim-01, 34@@d@@regime, 33@@n@@_NAME_, 8@@s@@continue-01, 2@@c@@city, 10@@s@@"quoted-01, 9@@d@@_NAME_, 3@@d@@1, 6@@p@@this, 38@@p@@military, 37@@s@@include-01, 39@@d@@opt-01, 28@@p@@all, 29@@s@@possible-01, 26@@n@@current, 27@@s@@investigate-01, 24@@n@@_NAME_]
sentence=1	Both	both	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	Dawa	_name_	Dawa	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
4	SCIRI	_name_	SCIRI	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	3	APP_op2	true
5	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
6	umbilical	_	umbilical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	connections	_	connection	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	connect-01	(s(), o())	0	ROOT	true
8	to	_	to	IN	O	_	name	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	fundamentalist	_	fundamentalist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	Shi'ite	_name_	shi'ite	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
12	leadership	_	leadership	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	lead-02	(s())	7	APP_o	true
13	in	_	in	IN	O	_	after	_	0	IGNORE	true
14	Iran	_name_	Iran	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	that	_	that	WDT	O	_	1	_	0	IGNORE	true
16	go	_	go	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-back-19	(s(), o())	7	MOD_s	true
17	back	_	back	RB	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	before	(mod())	16	MOD_mod	true
18	decades	_name_	decade	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	16	MOD_mod	true
19	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[1@@p@@both, 7@@s@@connect-01, 18@@t2@@temporal-quantity, 11@@n@@_NAME_, 2@@o2@@organization, 18@@m@@decade, 2@@n@@_NAME_, 18@@m2@@multiple, 14@@n@@_NAME_, 11@@e@@ethnic-group, 6@@p@@umbilical, 4@@o2@@organization, 12@@s@@lead-02, 14@@c@@country, 16@@s@@go-back-19, 17@@b@@before, 17@@n@@now, 3@@a@@and, 4@@n@@_NAME_, 10@@p@@fundamentalist]
sentence=1	Much	much	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	attack-01	_	0	IGNORE	true
4	violence	_	violence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
5	aimed	_	aim	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
6	at	_	at	IN	O	_	and	_	0	IGNORE	true
7	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	8	MOD_mod	true
8	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
11	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
12	disgruntled	_	disgruntled	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	disgruntle-01	(s())	14	MOD_s	true
13	Sunni	_name_	sunni	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	factions	_	faction	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	14	MOD_s	true
17	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
18	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
19	militias,	_	militias,	NNS	O	_	member	_	0	IGNORE	true
20	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	elections	_	election	NNS	O	(d<root> / --LEX--)	elect-01	()	27	APP_op1	true
24	were	_	be	VBD	O	_	person	_	0	IGNORE	true
25	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
26	sham,	_	sham,	NNP	O	_	-	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
28	hold	_	hold	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op2	true
29	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	31	MOD_mod	true
31	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	government	_	government	NN	O	(g<root> / government-organization  :mod-of (p<mod>)  :ARG0-of (g2 / --LEX--))	govern-01	(mod())	31	MOD_mod	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@n@@_NAME_, 34@@g2@@govern-01, 22@@p@@last, 34@@g@@government-organization, 23@@d@@elect-01, 14@@d@@faction, 20@@s@@believe-01, 7@@c@@country, 16@@s@@have-03, 1@@explicitanon0@@much, 29@@s@@little, 27@@a@@and, 31@@d@@power, 12@@s@@disgruntle-01, 5@@s@@aim-02, 10@@s@@come-03, 8@@d@@force, 13@@r@@religious-group, 4@@d@@violence, 30@@p@@politics, 7@@n@@_NAME_, 28@@s@@hold-01]
sentence=1	"Iran	"iran	"iran	XX	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
5	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	8	MOD_mod	true
7	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	power	_	power	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	19	APP_o	true
9	that	_	that	WDT	O	_	name	_	0	IGNORE	true
10	poses	_	pose	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	MOD_s	true
11	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
12	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
13	conventional	_	conventional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	threat	_	threat	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$en-01	(s(), o())	10	APP_o	true
16	to	_	to	IN	O	_	name	_	0	IGNORE	true
17	Gulf	_name_	Gulf	NNP	O	(w<root> / world-region  :name (n2 / --LEX--))	_NAME_	()	15	APP_o	true
18	stability,"	_	stability,"	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	continued	_	continue	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	CSIS	_name_	CSIS	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
22	report	_	report	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	APP_s	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 19@@s@@continue-01, 6@@p@@region, 17@@w@@world-region, 7@@p@@military, 5@@p@@only, 3@@n@@now, 14@@p@@military, 15@@t@@threaten-01, 22@@s@@report-01, 12@@s@@significant-02, 8@@r@@power, 13@@p@@conventional, 1@@p@@person, 21@@n@@_NAME_, 17@@n2@@_NAME_, 10@@c@@pose-01, 21@@o2@@organization]
sentence=1	Iran's	iran's	Iran's	NNP	O	_	_NAME_	_	0	IGNORE	true
2	coast	_	coast	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
3	facing	_	face	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
4	the_Persian_Gulf	_name_	Gulf	NNP	O	(i<root> / island  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
5	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
6	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	looming	_	loom	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	wall	_	wall	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	mountains	_	mountain	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
13	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	upon	_	upon	IN	O	_	name	_	0	IGNORE	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	naval	_	naval	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	navy	(mod())	17	MOD_mod	true
17	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
18	arrayed	_	array	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	21	MOD_mod	true
21	waters	_	water	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@coast, 21@@b@@water, 16@@p@@navy, 8@@r@@wall, 12@@s@@look-01, 18@@s@@array-01, 15@@p@@any, 7@@s@@loom-01, 17@@d@@force, 4@@n@@_NAME_, 4@@i@@island, 10@@g@@mountain, 20@@p@@that, 3@@s@@face-01]
sentence=1	Sailing	sailing	sail	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	Roosevelt	_name_	Roosevelt	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	1	MOD_mod	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	the_Tarawa_Expeditionary_Strike	_name_	Strike	NNP	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	true
7	Force,	force,	Force,	NNP	O	_	_NAME_	_	0	IGNORE	true
8	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
9	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	the_USS_Tarawa,_the_USS_Austin,	_name_	austin,	CD	O	_	_NAME_	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	MOD_op1	true
12	the_USS_Pearl_Harbor	_name_	Harbor	NNP	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	11	APP_op2	true
13	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[6@@d@@_NAME_, 9@@s@@include-01, 11@@a@@and, 12@@n@@_NAME_, 1@@s@@sail-01, 12@@e@@event, 4@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	occupation	_	occupation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	occupy-01	(s())	6	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
5	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
6	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	guerrilla	_	guerrilla	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	war,	_	war,	NN	O	_	and	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	siege	_	siege	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
14	lasted	_	last	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	more_than_a_thousand_days	_name_	day	NNS	O	(d<root> / --LEX--)	_NAME_	()	14	APP_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@siege-01, 4@@c@@country, 14@@s@@last-01, 8@@p@@guerrilla, 4@@n@@_NAME_, 15@@d@@_NAME_, 6@@s@@become-01, 2@@s@@occupy-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	imagine	_	imagine	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_dom	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	justification	_	justification	NN	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	justify-01	(s())	5	APP_s	true
8	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
9	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	action	_	action	NN	O	(d<root> / --LEX--)	act-02	()	7	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
13	envelop	_	envelop	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	MOD_s	true
14	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
15	in	_	in	IN	O	_	after	_	0	IGNORE	true
16	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
18	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
19	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	20	MOD_mod	true
20	conflict	_	conflict	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o2	true
21	with	_	with	IN	O	_	-	_	0	IGNORE	true
22	Iraq,_Iran,	_name_	Iran,	NNP	O	_	_NAME_	_	0	IGNORE	true
23	Syria	_name_	Syria	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
25	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	24	APP_op2	true
26	simultaneously	_	simultaneously	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	simultaneous	(mod())	13	MOD_mod	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[12@@s@@possible-01, 14@@n@@_NAME_, 7@@t@@justify-01, 9@@p@@any, 5@@s@@imagine-01, 25@@n@@_NAME_, 23@@c@@country, 10@@d@@act-02, 23@@n@@_NAME_, 25@@c@@country, 17@@p@@military, 13@@b@@envelop-01, 26@@t@@simultaneous, 24@@a@@and, 19@@p@@economy, 20@@s@@conflict-01, 3@@r@@difficult, 14@@c@@country, 7@@t3@@thing]
sentence=1	408	_	408	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	extinct	_	extinct	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	true
10	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
11	2050	_name_	2050	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	10	APP_op1	true
12	if	_	if	IN	O	_	i	_	0	IGNORE	true
13	the	_	the	DT	O	_	lead-02	_	0	IGNORE	true
14	global-warming	_	global-warming	JJ	O	(d<root> / --LEX--)	burn-01	()	15	APP_s	true
15	trend	_	trend	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_s	true
16	continues	_	continue	VBZ	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@explicitanon2@@_NUMBER_, 9@@s@@extinct, 11@@explicitanon0@@_NUMBER_, 16@@o@@continue-01, 7@@s@@possible-01, 15@@s@@trend, 14@@d@@burn-01, 11@@d@@date-entity, 3@@explicitanon0@@number, 10@@w@@by, 1@@d@@date-entity, 5@@d@@specie]
sentence=1	31	_	31	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	12	MOD_mod	true
6	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	7	MOD_s	true
7	appointees	_	appointee	NNS	O	(d<root> / --LEX--)	appoint-01	()	3	APP_mod	true
8	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	alumni	_	alumnus	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	7	MOD_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	15	MOD_s	true
13	energy	_	energy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	industry	_	industry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	(includes	_	(includes	-LRB-	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	17	MOD_mod	true
17	cabinet	_	cabinet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
18	secretaries,	_	secretaries,	NNS	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	six	_	six	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	6	(mod())	23	MOD_mod	true
21	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	powerful	_	powerful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	White_House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	25	APP_op2	true
24	officials,	_	officials,	NNP	O	_	include-91	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
26	more	_	more	JJR	O	_	cause-01	_	0	IGNORE	true
27	than	_	than	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	more-$LEMMA$	(op1(), mod())	30	MOD_mod	true
28	20	_	20	CD	O	(d<root> / --LEX--)	_NUMBER_	()	27	APP_op1	true
29	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	high-level	_	high-level	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
31	appointees)	_	appointees)	NNS	O	_	year	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@(includes-01, 23@@g@@government-organization, 5@@n@@_NAME_, 17@@d@@cabinet, 6@@s@@administrate-01, 25@@a@@and, 30@@p@@high-level, 20@@explicitanon0@@6, 13@@p@@energy, 28@@d@@_NUMBER_, 21@@s@@most, 10@@s@@alumnus, 16@@explicitanon0@@3, 14@@d@@industry, 23@@n@@_NAME_, 3@@explicitanon0@@Number, 12@@s@@person, 22@@s@@powerful-02, 5@@p@@person, 27@@s@@more-than, 1@@explicitanon0@@_NUMBER_, 7@@d@@appoint-01, 29@@p@@other]
sentence=1	50=	_	50=	NNP	O	_	b	_	0	IGNORE	true
2	Approximate	approximate	approximate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	3	MOD_mod	true
3	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	include-91	(mod())	3	MOD_mod	true
5	policy	_	policy	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
6	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_mod	true
8	regulation	_	regulation	NN	O	(d<root> / --LEX--)	regulate-01	()	9	APP_s	true
9	rollbacks	_	rollback	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_op2	true
10	injurious	_	injurious	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	7	MOD_s	true
11	to	_	to	IN	O	_	-	_	0	IGNORE	true
12	the	_	the	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	person	(mod())	3	MOD_mod	true
13	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	have	_	have	VBP	O	_	person	_	0	IGNORE	true
16	been	_	be	VBN	O	_	person	_	0	IGNORE	true
17	announced	_	announce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
18	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	4	MOD_mod	true
21	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	12	MOD_s	true
22	on	_	on	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	government-organization	(mod())	3	MOD_mod	true
23	Fridays	_name_	friday	NNS	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	17	MOD_mod	true
24	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
25	5pm,	_name_	5pm,	CD	O	_	$LEMMA$	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
30	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
32	but	_	but	CC	O	(s<root> / --LEX--  :degree-of (t<mod>))	all-$LEMMA$	(mod())	33	MOD_mod	true
33	impossible	_	impossible	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	possible-01	(s())	29	APP_o	true
34	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
35	news	_	news	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	organisations	_	organisation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
37	to	_	to	TO	O	_	-	_	0	IGNORE	true
38	relay	_	relay	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	33	APP_s	true
39	the	_	the	DT	O	_	person	_	0	IGNORE	true
40	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
41	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
42	the	_	the	DT	O	_	person	_	0	IGNORE	true
43	widest	_	wide	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	cheap-02	(s())	45	MOD_s	true
44	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	MOD_s	true
45	audience	_	audience	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o2	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[38@@b@@relay-01, 35@@p@@news, 44@@s@@possible-01, 13@@d@@environment, 31@@p@@all, 23@@t@@_name_, 43@@b2@@cheap-02, 6@@s@@change-01, 45@@d@@audience, 5@@d@@policy-01, 20@@n@@_NAME_, 9@@s@@rollback, 20@@p@@person, 36@@d@@organisation, 17@@s@@announce-01, 40@@d@@information, 33@@p@@possible-01, 2@@p@@approximate-01, 32@@s@@all-but, 29@@s@@make-02, 24@@n@@after, 43@@m@@most, 8@@d@@regulate-01, 3@@explicitanon0@@number, 7@@a@@and, 4@@p@@include-91, 12@@explicitanon0@@person, 22@@n@@government-organization, 33@@explicitanon0@@-, 21@@s@@administrate-01, 23@@d@@date-entity, 10@@s@@injurious]
sentence=1	2	_	2	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	include-91	(s())	3	MOD_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	world's	_	world's	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	population	_	population	NN	O	(d<root> / --LEX--)	populate-01	()	3	APP_mod	true
8	that	_	that	WDT	O	_	country	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	British	_name_	british	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[10@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 7@@d@@populate-01, 4@@s@@include-91, 6@@c@@country, 3@@explicitanon0@@percentage, 6@@n@@_NAME_, 10@@c@@country]
sentence=1	5	_	5	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	include-91	(s())	3	MOD_s	true
5	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>))	person	(s())	3	MOD_s	true
6	world's	_	world's	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	population	_	population	NN	O	(d<root> / --LEX--)	populate-01	()	3	APP_mod	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[5@@s@@person, 7@@d@@populate-01, 4@@s@@include-91, 6@@c@@country, 3@@explicitanon0@@percentage, 10@@c@@country, 6@@n@@_NAME_, 10@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_]
sentence=1	24,000	_	24,000	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Estimated	estimated	estimate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
4	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
5	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
6	premature	_	premature	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	deaths	_	death	NNS	O	(d<root> / --LEX--)	die-01	()	4	APP_mod	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	will	_	will	MD	O	_	thing	_	0	IGNORE	true
10	occur	_	occur	VB	O	_	event	_	0	IGNORE	true
11	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	Bush's	bush's	Bush's	NNP	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	15	APP_poss	true
13	Clear	clear	Clear	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	14	MOD_s	true
14	Skies	skies	Skies	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	initiative	_	initiative	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
16	.	_	.	.	O	_	say-01	_	0	IGNORE	true

nodealignment=[3@@s@@estimate-01, 1@@explicitanon2@@_NUMBER_, 4@@explicitanon0@@number, 6@@p@@premature, 12@@n@@_NAME_, 15@@m@@initiative, 13@@s@@Clear-04, 12@@l@@law, 14@@p@@Skies, 1@@d@@date-entity, 7@@d@@die-01]
sentence=1	270	_	270	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Estimated	estimated	estimate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
4	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	court	_	court	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	decisions	_	decision	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	decide-01	(s())	0	ROOT	true
8	citing	_	cite	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
9	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	Negligence	negligence	Negligence	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	neglect-01	(s())	8	APP_o	true
11	in	_	in	IN	O	_	government-organization	_	0	IGNORE	true
12	endangered-species	_	endangered-species	JJ	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
13	protection	_	protection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	protect-01	(s())	10	APP_s	true
14	that	_	that	WDT	O	_	1	_	0	IGNORE	true
15	remained	_	remain	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
16	unheeded	_	unheeded	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	answer-01	(s())	10	MOD_s	true
17	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the_first_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	of	_	of	IN	O	_	name	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	18	MOD_mod	true
22	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	7	MOD_s	true
23	.	_	.	.	O	(d<root> / --LEX--)	government-organization	()	7	APP_s	true

nodealignment=[18@@n@@_NAME_, 3@@s@@estimate-01, 21@@p@@person, 16@@explicitanon0@@-, 21@@n@@_NAME_, 23@@d@@government-organization, 7@@s@@decide-01, 1@@explicitanon2@@_NUMBER_, 1@@d@@date-entity, 4@@explicitanon0@@number, 9@@p@@federal, 16@@p@@answer-01, 15@@s@@remain-01, 6@@p@@court, 10@@s@@neglect-01, 13@@s@@protect-01, 8@@s@@cite-01, 12@@d@@_NAME_, 22@@s@@administrate-01]
sentence=1	50-	_	50-	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
2	Percentage	percentage	percentage	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	0	ROOT	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	include-91	(s())	2	MOD_s	true
4	screened	_	screened	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	2	APP_poss	true
6	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	Ground_Zero	_name_	Zero	NNP	O	(o2<root> / organization  :name (n / --LEX--)  :location-of (h<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
9	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	suffer	_	suffer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
11	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
12	long-term	_	long-term	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	long-03	(s())	13	MOD_s	true
13	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	problems,	_	problems,	NNS	O	_	and	_	0	IGNORE	true
15	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	half	_	half	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	13	MOD_s	true
18	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
21	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	insurance	_	insurance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	insure-02	(s())	20	APP_o	true
23	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 2@@m@@percentage, 3@@s@@include-91, 5@@e2@@work-01, 17@@s@@include-91, 13@@d@@health, 10@@s@@suffer-01, 7@@o2@@organization, 20@@s@@have-03, 5@@p2@@person, 4@@s@@screened-01, 1@@explicitanon0@@_NUMBER_, 12@@s@@long-03, 9@@n@@now, 16@@p@@half, 19@@explicitanon0@@-, 22@@s@@insure-02, 21@@d@@health, 15@@p@@almost]
sentence=1	78	_	78	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	3	APP_mod	true
6	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	Ground_Zero	_name_	Zero	NNP	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
9	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	suffer	_	suffer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
11	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
12	lung	_	lung	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	ailments	_	ailment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 3@@explicitanon0@@percentage, 13@@d@@ailment, 10@@s@@suffer-01, 5@@p2@@person, 7@@explicitanon0@@_NAME_, 12@@p@@lung, 9@@n@@now, 5@@e2@@work-01]
sentence=1	88	_	88	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	workers	_	worker	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	work-01	(s())	3	APP_mod	true
6	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	Ground_Zero	_name_	Zero	NNP	O	(u<root> / university  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
8	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
9	Now	now	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	suffer	_	suffer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
11	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
12	ear,	_	ear,	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	nose,	_	nose,	NNS	O	_	and	_	0	IGNORE	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	MOD_op1	true
15	throat	_	throat	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
17	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@u@@university, 16@@d@@problem, 5@@s@@work-01, 3@@explicitanon0@@percentage, 14@@a@@or, 15@@d@@throat, 7@@n@@_NAME_, 10@@s@@suffer-01, 9@@n@@now, 1@@explicitanon0@@_NUMBER_]
sentence=1	1	_	1	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	3	MOD_s	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
6	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	3	MOD_s	true
7	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	statements	_	statement	NNS	O	(d<root> / --LEX--)	state-01	()	3	APP_mod	true
9	on	_	on	IN	O	_	government-organization	_	0	IGNORE	true
10	National	national	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	11	MOD_mod	true
11	security	_	security	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	issued	_	issue	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
13	between_20_January_2001	_name_	2001	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_DATE_	()	14	APP_op1	true
14	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
15	10_September_2001	_name_	2001	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	14	APP_op2	true
16	that	_	that	WDT	O	_	name	_	0	IGNORE	true
17	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	al-Qa'ida	al-qa'ida	al-Qa'ida	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	17	APP_o	true
19	.	_	.	.	O	_	versus	_	0	IGNORE	true

nodealignment=[11@@a@@security, 5@@p@@person, 18@@n@@_NAME_, 4@@s@@include-91, 15@@d@@date-entity, 13@@explicitanon0@@_DATE_, 5@@n@@_NAME_, 7@@s@@public-02, 12@@s@@issue-01, 13@@d@@date-entity, 17@@s@@mention-01, 1@@explicitanon0@@_NUMBER_, 14@@d@@and, 6@@s@@administrate-01, 8@@d@@state-01, 10@@p@@nation, 3@@explicitanon0@@Number, 15@@explicitanon0@@_NUMBER_, 18@@c2@@criminal-organization]
sentence=1	104	_	104	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	8	MOD_o	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	administration	_	administration	NN	O	(d<root> / --LEX--)	administrate-01	()	8	APP_s	true
7	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	statements	_	statement	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	state-01	(s(), o())	0	ROOT	true
9	on	_	on	IN	O	_	government-organization	_	0	IGNORE	true
10	National	national	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	11	MOD_mod	true
11	security	_	security	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
13	defense	_	defense	NN	O	(d<root> / --LEX--)	defend-01	()	12	APP_op2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
20	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
21	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
22	Saddam_Hussein	_name_	Hussein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_op2	true
23	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[22@@n@@_NAME_, 5@@n@@_NAME_, 20@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 2@@s@@-, 6@@d@@administrate-01, 7@@s@@public-02, 11@@d@@security, 16@@s@@same-01, 13@@d@@defend-01, 8@@s@@state-01, 20@@c@@country, 17@@n@@period, 3@@explicitanon0@@Number, 22@@p@@person, 12@@a@@and, 21@@a@@or, 10@@p@@nation, 19@@s@@mention-01, 5@@p@@person]
sentence=1	101	_	101	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	3	MOD_s	true
7	public	_	public	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	8	APP_s	true
8	statements	_	statement	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	state-01	(s(), o())	3	APP_mod	true
9	on	_	on	IN	O	_	government-organization	_	0	IGNORE	true
10	National	national	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	11	MOD_mod	true
11	security	_	security	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
13	defense	_	defense	NN	O	(d<root> / --LEX--)	defend-01	()	12	APP_op2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
20	missile	_	missile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	defence	_	defence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	defend-01	(s())	19	APP_o	true
22	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 2@@explicitanon0@@-, 5@@p@@person, 6@@s@@administrate-01, 10@@p@@nation, 5@@n@@_NAME_, 17@@n@@period, 11@@d@@security, 13@@d@@defend-01, 19@@s@@mention-01, 3@@explicitanon0@@Number, 16@@s@@same-01, 12@@a@@and, 21@@s@@defend-01, 20@@d@@missile, 7@@d@@public-02, 8@@s@@state-01]
sentence=1	65	_	65	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
2	-	_	-	HYPH	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	administration	_	administration	NN	O	(d<root> / --LEX--)	administrate-01	()	8	APP_s	true
7	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	statements	_	statement	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	state-01	(s(), o())	0	ROOT	true
9	on	_	on	IN	O	_	government-organization	_	0	IGNORE	true
10	National	national	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	11	MOD_mod	true
11	security	_	security	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
13	defense	_	defense	NN	O	(d<root> / --LEX--)	defend-01	()	12	APP_op2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
20	weapons	_	weapon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	mass	_	mass	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	destruction	_	destruction	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	destroy-01	(s())	20	MOD_s	true
24	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[20@@d@@weapon, 8@@s@@state-01, 6@@d@@administrate-01, 5@@p@@person, 11@@d@@security, 22@@s@@mass, 10@@p@@nation, 19@@s@@mention-01, 5@@n@@_NAME_, 2@@explicitanon0@@-, 13@@d@@defend-01, 3@@explicitanon0@@Number, 1@@explicitanon0@@_NUMBER_, 7@@s@@public-02, 12@@a@@and, 16@@s@@same-01, 17@@n@@period, 23@@s@@destroy-01]
sentence=1	79	_	79	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	_NUMBER_	()	4	APP_o2	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	of	_	of	IN	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	include-91	(o2(), s(), o())	3	MOD_s	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	11	_	11	CD	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
7	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	9	(mod())	8	MOD_mod	true
8	hijackers	_	hijacker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	hijack-01	()	4	APP_o	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Saudi_Arabia	_name_	Arabia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[4@@c@@include-91, 6@@explicitanon4@@_NUMBER_, 3@@d@@percentage, 10@@s@@come-01, 12@@c@@country, 8@@p2@@person, 7@@explicitanon0@@9, 1@@explicitanon1@@_NUMBER_, 1@@p@@percentage-entity, 7@@d@@date-entity, 12@@n@@_NAME_, 8@@e2@@hijack-01]
sentence=1	$50m	_	$50m	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	granted	_	grant	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	to	_	to	IN	O	_	monetary-quantity	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	commission	_	commission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	into	_	into	IN	O	_	interrogative	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Columbia	_name_	Columbia	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
13	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	shuttle	_	shuttle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	crash	_	crash	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@amount, 15@@s@@crash-01, 1@@explicitanon0@@_NAME_, 13@@p@@space, 12@@n@@_NAME_, 9@@s@@look-01, 14@@d@@shuttle, 4@@s@@grant-01, 7@@d@@commission]
sentence=1	$3,500	_	$3,500	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Reward	reward	reward	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	group	_	group	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	APP_s	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	veterans	_	veteran	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	offered	_	offer	VBN	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
9	in	_	in	IN	O	_	person	_	0	IGNORE	true
10	2000	_name_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	8	MOD_mod	true
11	for	_	for	IN	O	_	person	_	0	IGNORE	true
12	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
13	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
14	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	confirm	_	confirm	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	Bush's_Alabama	_name_	Alabama	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
17	guard	_	guard	NN	O	(d<root> / --LEX--)	_NAME_	()	18	APP_s	true
18	service	_	service	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	serve-01	(s(), o())	15	APP_o	true
19	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[5@@s@@group, 16@@n@@_NAME_, 16@@g@@government-organization, 7@@d@@veteran, 1@@explicitanon2@@_NUMBER_, 18@@s@@serve-01, 3@@s@@reward-01, 12@@d@@anyone, 14@@s@@possible-01, 10@@explicitanon0@@_NUMBER_, 15@@s@@confirm-01, 1@@d@@date-entity, 17@@d@@_NAME_, 10@@d@@date-entity, 8@@t@@offer-01]
sentence=1	600-700	_	600-700	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	guardsmen	_	guardsman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	in	_	in	IN	O	_	person	_	0	IGNORE	true
9	Bush's	_name_	Bush's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	unit	_	unit	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	during	_	during	IN	O	_	date-interval	_	0	IGNORE	true
12	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@b@@unit, 3@@explicitanon0@@number, 9@@n@@_NAME_, 12@@p@@that, 13@@n@@period, 5@@d@@guardsman, 1@@d@@date-entity, 1@@explicitanon2@@_NUMBER_]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	guardsmen	_	guardsman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	period	_	period	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	came	_	come	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
11	forward	_	forward	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	about	_	about	IN	O	_	name	_	0	IGNORE	true
15	Bush's	_name_	Bush's	NNP	O	(n2<root> / --LEX--  :name-of (c2 / country  :mod-of (i<mod>)))	_NAME_	(mod())	17	MOD_mod	true
16	guard	_	guard	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
17	service	_	service	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	serve-01	(mod())	13	MOD_mod	true
18	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@d@@guardsman, 8@@s@@period, 3@@explicitanon0@@number, 17@@a@@serve-01, 7@@p@@that, 15@@c2@@country, 11@@a@@forward, 16@@p@@guard-01, 10@@s@@come-01, 13@@d@@information, 1@@explicitanon0@@_NUMBER_, 15@@n2@@_NAME_]
sentence=1	0	_	0	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
2	-	_	-	:	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	principal	_	principal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
6	civilian	_	civilian	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
7	or	_	or	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	Pentagon	_name_	Pentagon	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
9	staff	_	staff	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	10	MOD_s	true
10	members	_	member	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
11	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
12	planned	_	plan	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
15	who	_	who	WP	O	_	person	_	0	IGNORE	true
16	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_s	true
17	immediate	_	immediate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	16	APP_o	true
20	serving	_	serve	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	MOD_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	uniform	_	uniform	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	20	MOD_mod	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[9@@s@@staff, 14@@d@@war-01, 24@@n@@_NAME_, 5@@p@@principal, 16@@s@@have-03, 19@@o@@member, 1@@explicitanon0@@_NUMBER_, 8@@n@@_NAME_, 7@@p@@or, 19@@h@@have-org-role-91, 19@@p@@person, 8@@g@@government-organization, 18@@d@@family, 10@@d@@member, 2@@p@@-, 24@@c@@country, 6@@p@@civilian, 3@@explicitanon0@@number, 20@@s@@serve-01, 12@@s@@plan-01, 17@@p@@immediate, 22@@p@@uniform]
sentence=1	8	_	8	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	8	APP_op1	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the_US_Senate	_name_	Senate	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_mod	true
9	House_of_Representatives	_name_	Representatives	NNPS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	8	APP_op2	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_s	true
12	a	_	a	DT	O	_	person	_	0	IGNORE	true
13	child	_	child	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	serving	_	serve	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
17	military	_	military	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@o2@@organization, 9@@o2@@organization, 1@@explicitanon0@@_NUMBER_, 7@@n@@_NAME_, 8@@a@@and, 17@@d@@military, 11@@s@@have-03, 3@@explicitanon0@@number, 14@@s@@serve-01, 5@@p@@person, 5@@o@@member, 9@@n@@_NAME_, 5@@h@@have-org-role-91, 13@@d@@child]
sentence=1	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	days	_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	that	_	that	WDT	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Pentagon	_name_	Pentagon	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	spent	_	spend	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-02	(o2(s()), o())	5	MOD_o	true
10	investigating	_	investigate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o2	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	soldier	_	soldier	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	who	_	who	WP	O	_	person	_	0	IGNORE	true
14	had	_	have	VBD	O	_	person	_	0	IGNORE	true
15	called	_	call	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	15	APP_o	true
18	"a	_	"a	NNP	O	_	person	_	0	IGNORE	true
19	joke"	_	joke"	NFP	O	_	person	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	letter	_	letter	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	APP_o2	true
23	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	editor	_	editor	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	22	APP_s	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	a	_	a	DT	O	_	person	_	0	IGNORE	true
28	Newspaper	newspaper	newspaper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@e@@president, 28@@d@@newspaper, 5@@d@@day, 10@@s@@investigate-01, 3@@explicitanon0@@number, 15@@b@@call-01, 1@@explicitanon0@@_NUMBER_, 12@@d@@soldier, 22@@s@@letter, 25@@p@@person, 25@@o@@editor, 8@@n@@_NAME_, 9@@i@@spend-02, 25@@h@@have-org-role-91, 17@@p@@person, 8@@g@@government-organization, 17@@h@@have-org-role-91]
sentence=1	10m	_	10m	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	4	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Estimated	estimated	estimate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_mod	true
7	worldwide	_	worldwide	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
9	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	to	_	to	IN	O	_	name	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	streets	_	street	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	on	_	on	IN	O	_	and	_	0	IGNORE	true
14	21_February_2003,	_name_	2003,	CD	O	_	cause-01	_	0	IGNORE	true
15	in	_	in	IN	O	_	after	_	0	IGNORE	true
16	opposition	_	opposition	NN	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	oppose-01	(mod(), s(), o())	9	MOD_mod	true
17	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	invasion	_	invasion	NN	O	(d<root> / --LEX--)	invade-01	()	16	APP_s	true
20	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
21	Iraq,	iraq,	Iraq,	NNP	O	_	_NAME_	_	0	IGNORE	true
22	the	_	the	DT	O	_	most	_	0	IGNORE	true
23	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	25	MOD_mod	true
24	simultaneous	_	simultaneous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	protest	_	protest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
26	in	_	in	IN	O	_	after	_	0	IGNORE	true
27	world	_	world	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	history	_	history	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@t@@large, 9@@s@@take-01, 24@@p@@simultaneous, 28@@n@@history, 23@@m@@most, 27@@p@@world, 6@@d@@person, 19@@d@@invade-01, 7@@b@@worldwide, 16@@s@@oppose-01, 4@@explicitanon0@@number, 25@@d@@protest-01, 12@@d@@street, 1@@explicitanon0@@_NAME_, 3@@s@@estimate-01]
sentence=1	55	_	55	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	include-91	(s())	3	MOD_s	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	workforce	_	workforce	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	unemployed	_	unemployed	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	employ-01	(s())	7	MOD_s	true
11	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@n@@_NAME_, 11@@w@@before, 7@@d@@workforce, 4@@s@@include-91, 13@@d@@war, 6@@c@@country, 1@@explicitanon0@@_NUMBER_, 3@@explicitanon0@@percentage, 10@@explicitanon0@@-, 10@@p@@employ-01]
sentence=1	80	_	80	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	SYM	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	Iraqi	_name_	iraqi	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	workforce	_	workforce	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	who	_	who	WP	O	_	1	_	0	IGNORE	true
9	are	_	be	VBP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
10	unemployed	_	unemployed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	employ-01	(s())	7	MOD_s	true
11	a_Year	_name_	year	NN	O	(m<root> / --LEX--  :unit-of (a<mod>))	year	(mod())	12	MOD_mod	true
12	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 9@@explicitanon0@@1, 12@@w@@after, 7@@d@@workforce, 10@@s@@employ-01, 6@@c@@country, 3@@explicitanon0@@percentage, 6@@n@@_NAME_, 11@@m@@year, 14@@d@@war]
sentence=1	62	_	62	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	gas	_	gas	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	masks	_	mask	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
7	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
8	army	_	army	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	investigators	_	investigator	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	investigate-01	(s())	10	APP_s	true
10	discovered	_	discover	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
11	did	_	do	VBD	O	_	person	_	0	IGNORE	true
12	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	0	ROOT	true
14	properly	_	properly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	proper	(mod())	13	MOD_mod	true
15	in	_	in	IN	O	_	12	_	0	IGNORE	true
16	autumn_2002	_name_	2002	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
17	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[5@@p@@gas, 1@@explicitanon0@@_NUMBER_, 10@@s@@discover-01, 9@@s@@investigate-01, 16@@explicitanon0@@_NUMBER_, 12@@explicitanon0@@-, 8@@d@@army, 14@@t@@proper, 6@@d@@mask, 13@@s@@work-09, 3@@explicitanon0@@percentage]
sentence=1	90	_	90	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	detectors	_	detector	NNS	O	(d<root> / --LEX--)	detect-01	()	3	APP_mod	true
6	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
7	give	_	give	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	MOD_s	true
8	early	_	early	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	warning	_	warning	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	warn-01	(s(), o())	7	APP_o	true
10	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
11	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
12	biological	_	biological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	biology	(mod())	13	MOD_mod	true
13	weapons	_	weapon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	attack	_	attack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
15	found	_	find	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	MOD_s	true
16	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	defective	_	defective	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	APP_o	true
19	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[15@@c@@find-01, 14@@s@@attack-01, 3@@explicitanon0@@percentage, 12@@p@@biology, 18@@s@@defective, 8@@p@@early, 9@@s@@warn-01, 7@@c@@give-01, 1@@explicitanon0@@_NUMBER_, 13@@d@@weapon, 5@@d@@detect-01]
sentence=1	76	_	76	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	0	ROOT	true
4	of	_	of	IN	O	(p<root> / person  :ARG1-of (p2 / --LEX--  :ARG2 (g<s>)))	include-91	(s())	3	MOD_s	true
5	215	_	215	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
6	cities	_	city	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
7	surveyed	_	survey	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
8	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	the_US_Conference_of_Mayors	_name_	Mayors	NNPS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	early_2004	_name_	2004	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	2008	(mod())	7	MOD_mod	true
12	that	_	that	WDT	O	_	name	_	0	IGNORE	true
13	had	_	have	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-11	(s())	6	MOD_s	true
14	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	to	_	to	TO	O	_	-	_	0	IGNORE	true
16	receive	_	receive	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	6	MOD_s	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	dime	_	dime	NN	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	16	APP_o	true
19	in	_	in	IN	O	_	after	_	0	IGNORE	true
20	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	homeland	_	homeland	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	security	_	security	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	assistance	_	assistance	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	assist-01	(s(), o())	18	MOD_o	true
24	for	_	for	IN	O	_	person	_	0	IGNORE	true
25	their	_	they	PRP$	O	_	military	_	0	IGNORE	true
26	first-response	_	first-response	JJ	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	defend-01	(mod())	27	MOD_mod	true
27	units	_	unit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o2	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@explicitanon2@@2008, 4@@p2@@include-91, 21@@p@@homeland, 27@@d@@unit, 14@@n@@yet, 4@@p@@person, 1@@explicitanon0@@_NUMBER_, 20@@p@@federal, 16@@t@@receive-01, 22@@d@@security, 11@@d@@date-entity, 23@@t@@assist-01, 5@@explicitanon0@@_NUMBER_, 7@@s@@survey-01, 13@@s@@have-11, 9@@p@@person, 26@@o@@defend-01, 18@@d2@@dime, 9@@n@@_NAME_, 3@@m@@percentage, 18@@m2@@monetary-quantity, 6@@d@@city]
sentence=1	5	_	5	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
6	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	airports	_	airport	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	at	_	at	IN	O	_	1	_	0	IGNORE	true
9	the_beginning_of_2004	_name_	2004	CD	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	that	_	that	IN	O	_	_NAME_	_	0	IGNORE	true
11	the_Transportation_Security_Administration	_name_	Administration	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
12	admitted	_	admit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
15	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	16	MOD_mod	true
16	screening	_	screen	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
17	baggage	_	baggage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
18	electronically	_	electronically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	electronic	(mod())	16	MOD_mod	true
19	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[6@@c@@country, 3@@explicitanon0@@number, 14@@explicitanon0@@-, 18@@t@@electronic, 16@@s@@screen-01, 11@@n@@_NAME_, 5@@s@@major-02, 7@@d@@airport, 9@@c@@city, 6@@n@@_NAME_, 9@@n@@_NAME_, 11@@g@@government-organization, 1@@explicitanon0@@_NUMBER_, 17@@d@@baggage, 12@@s@@admit-01, 15@@s@@full]
sentence=1	22,600	_	22,600	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	say-01	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	planes	_	plane	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	carrying	_	carry	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
7	unscreened	_	unscreened	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	cargo	_	cargo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	that	_	that	WDT	O	_	1	_	0	IGNORE	true
10	fly	_	fly	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	New_York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	each_month	_name_	month	NN	O	(a<root> / --LEX--  :direction-of (r<mod>))	_NAME_	(mod())	10	MOD_mod	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@unscreened-01, 3@@explicitanon0@@number, 13@@a@@_NAME_, 12@@n@@_NAME_, 6@@s@@carry-01, 10@@g@@fly-01, 8@@d@@cargo, 1@@d@@date-entity, 5@@d@@plane, 1@@explicitanon2@@_NUMBER_, 12@@c@@city]
sentence=1	95	_	95	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	foreign	_	foreign	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	goods	_	good	NNS	O	(d<root> / --LEX--)	good	()	3	APP_mod	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	arrive	_	arrive	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	sea	_	sea	NN	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@p@@foreign, 10@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 12@@t@@sea, 6@@d@@good, 10@@c@@country, 8@@s@@arrive-01, 3@@explicitanon0@@percentage]
sentence=1	79	_	79	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	8	MOD_o	true
5	Bush's	_name_	Bush's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
6	initial	_	initial	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	189	_	189	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
8	appointees	_	appointee	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	appoint-01	(s())	0	ROOT	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	served	_	serve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	in	_	in	IN	O	_	person	_	0	IGNORE	true
13	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
14	father's	_	father'	NNS	O	_	have-org-role-91	_	0	IGNORE	true
15	administration	_	administration	NN	O	(d<root> / --LEX--)	administrate-01	()	11	APP_o	true
16	.	_	.	.	O	(d<root> / --LEX--)	government-organization	()	8	APP_s	true

nodealignment=[8@@s@@appoint-01, 5@@p@@person, 5@@n@@_NAME_, 16@@d@@government-organization, 1@@explicitanon2@@_NUMBER_, 7@@explicitanon0@@_NUMBER_, 3@@explicitanon0@@number, 10@@p@@also, 11@@s@@serve-01, 15@@d@@administrate-01, 1@@d@@date-entity, 4@@s@@include-91, 6@@n@@initial]
sentence=1	87	_	87	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	SYM	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
7	in	_	in	IN	O	_	10	_	0	IGNORE	true
8	April_2004	_name_	2004	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	2008	(mod())	10	MOD_mod	true
9	who	_	who	WP	O	_	9	_	0	IGNORE	true
10	say	_	say	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	MOD_s	true
11	they	_	they	PRP	O	_	person	_	0	IGNORE	true
12	have	_	have	VBP	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
13	felt	_	feel	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
14	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	benefit	_	benefit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
16	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
17	Bush's	bush's	Bush's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
18	tax	_	tax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_o	true
19	cuts	_	cut	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	APP_s	true
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[5@@n@@_NAME_, 3@@m@@percentage, 6@@d@@family, 8@@explicitanon2@@2008, 18@@d@@tax-01, 5@@c@@country, 17@@n@@_NAME_, 14@@explicitanon0@@-, 1@@explicitanon0@@_NUMBER_, 10@@c@@say-01, 15@@s@@benefit-01, 13@@s@@feel-01, 8@@d@@date-entity, 19@@s@@cut-02, 17@@p@@person]
sentence=1	39	_	39	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	SYM	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	percentage-entity	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	tax	_	tax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
6	cuts	_	cut	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_mod	true
7	that	_	that	WDT	O	_	monetary-quantity	_	0	IGNORE	true
8	will	_	will	MD	O	_	monetary-quantity	_	0	IGNORE	true
9	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	top	_	top	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	1	_	1	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
14	per	_	per	IN	O	_	rate-entity-91	_	0	IGNORE	true
15	cent	_	cent	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	include-91	(s())	3	MOD_s	true
17	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
19	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
20	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	21	MOD_mod	true
21	phased	_	phase	VBD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
22	in	_	in	RP	O	_	i	_	0	IGNORE	true
23	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[5@@d@@tax-01, 17@@c@@country, 12@@p@@top, 13@@explicitanon0@@_NUMBER_, 9@@s@@go-01, 18@@d@@family, 1@@explicitanon0@@_NUMBER_, 15@@explicitanon0@@cent, 6@@s@@cut-02, 3@@explicitanon0@@percentage-entity, 16@@s@@include-91, 21@@o@@phase-01, 17@@n@@_NAME_, 20@@s@@full]
sentence=1	49	_	49	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	9	MOD_s	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
6	in	_	in	IN	O	_	10	_	0	IGNORE	true
7	April_2004	_name_	2004	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	2008	(mod())	4	MOD_mod	true
8	who	_	who	WP	O	_	9	_	0	IGNORE	true
9	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	that	_	that	IN	O	_	name	_	0	IGNORE	true
11	their	_	they	PRP$	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	9	MOD_mod	true
12	taxes	_	taxis	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
13	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	9	MOD_o	true
14	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	15	MOD_s	true
15	gone	_	go	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
16	up	_	up	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
17	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
18	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
20	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
21	.	_	.	.	O	_	be-temporally-at-91	_	0	IGNORE	true

nodealignment=[16@@a@@up, 9@@s@@find-01, 5@@n@@_NAME_, 11@@p@@person, 7@@d@@date-entity, 18@@n@@_NAME_, 17@@w@@since, 12@@d@@taxis-01, 14@@s@@actual-02, 5@@c@@country, 18@@p@@person, 7@@explicitanon2@@2008, 19@@s@@take-01, 1@@explicitanon0@@_NUMBER_, 20@@d@@office, 4@@s@@include-91, 15@@s@@go-01, 13@@s@@person, 3@@d@@percentage]
sentence=1	88	_	88	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	_NUMBER_	()	4	APP_o2	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_s	true
4	of	_	of	IN	O	(i<root> / --LEX--  :ARG3 (a<o2>)  :ARG2 (p2<s>  :ARG1-of i))	include-91	(o2(), s())	0	ROOT	true
5	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
7	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
8	will	_	will	MD	O	_	multiple	_	0	IGNORE	true
9	save	_	save	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	MOD_s	true
10	less	_	less	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$-than	(mod())	9	MOD_mod	true
11	than	_	than	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	less-$LEMMA$	(op1())	9	APP_o	true
12	$100	_	$100	CD	O	(d<root> / --LEX--)	_NUMBER_	()	11	APP_op1	true
13	on	_	on	IN	O	_	monetary-quantity	_	0	IGNORE	true
14	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	2006	_name_	2006	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	17	MOD_mod	true
16	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	taxes	_	taxis	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o2	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	result	_	result	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
21	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
22	2003	_name_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	23	MOD_mod	true
23	cut	_	cut	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_s	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	capital	_	capital	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	gains	_	gain	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_s	true
28	dividends	_	dividend	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
29	taxes	_	taxis	NNS	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-01	(s())	23	APP_s	true
30	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[27@@a@@and, 22@@explicitanon0@@_NUMBER_, 28@@d@@dividend, 23@@s@@cut-02, 12@@d@@_NUMBER_, 16@@p@@federal, 11@@o@@less-than, 5@@n@@_NAME_, 3@@m@@percentage, 29@@l@@taxis-01, 4@@i@@include-91, 6@@d@@family, 15@@explicitanon2@@_NUMBER_, 5@@c@@country, 9@@b@@save-01, 10@@explicitanon0@@less-than, 25@@p@@capital, 1@@explicitanon1@@_NUMBER_, 17@@d@@taxis-01, 1@@p@@percentage-entity, 15@@d@@date-entity, 26@@d@@gain-01, 22@@d@@date-entity, 20@@s@@result-01]
sentence=1	2.3m	_	2.3m	LS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	lost	_	lose	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-02	(o(poss_UNIFY_s()))	0	ROOT	true
8	their	_	they	PRP$	O	(d<root> / --LEX--)	person	()	7	APP_s	true
9	jobs	_	job	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
10	during	_	during	IN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	person	(mod())	7	MOD_mod	true
11	first	_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	13	MOD_mod	true
12	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	13	MOD_mod	true
13	Years	years	year	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	7	MOD_o	true
16	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	15	MOD_mod	true
17	administration	_	administration	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	administrate-01	(s())	18	MOD_s	true
18	.	_	.	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	government-organization	(mod())	7	MOD_mod	true

nodealignment=[13@@t@@temporal-quantity, 13@@y@@year, 1@@explicitanon0@@_NAME_, 12@@explicitanon0@@3, 17@@s@@administrate-01, 15@@s@@person, 16@@p@@person, 11@@o@@ordinal-entity, 5@@n@@_NAME_, 16@@n@@_NAME_, 9@@m@@job, 18@@p@@government-organization, 7@@l@@lose-02, 11@@explicitanon0@@1, 8@@d@@person, 5@@c@@country, 3@@explicitanon0@@Number, 10@@explicitanon0@@person]
sentence=1	$300m	_	$300m	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	4	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Amount	amount	amount	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	cut	_	cut	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	from	_	from	IN	O	_	monetary-quantity	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	federal	_	federal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	programme	_	programme	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	that	_	that	WDT	O	_	government-organization	_	0	IGNORE	true
10	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	subsidies	_	subsidy	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	subsidize-01	(s())	10	APP_o	true
12	to	_	to	IN	O	_	monetary-quantity	_	0	IGNORE	true
13	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
16	they	_	they	PRP	O	_	person	_	0	IGNORE	true
17	can	_	can	MD	O	(g<root> / --LEX--  :ARG1 (a<o>)  :purpose-of (f<mod>))	possible-01	(mod(), o(s()))	10	MOD_mod	true
18	heat	_	heat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
19	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
20	homes	_	home	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@heat-01, 8@@d@@programme, 10@@s@@provide-01, 11@@s@@subsidize-01, 20@@d@@home, 1@@explicitanon0@@_NAME_, 13@@p@@poor, 14@@d@@family, 7@@p@@federal, 4@@s@@cut-02, 3@@d@@amount, 17@@g@@possible-01]
sentence=1	33	_	33	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
6	$15bn	_	$15bn	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	true
7	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	pledged	_	pledge	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	0	ROOT	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o2	true
11	Aids	aids	Aids	NNP	O	(d2<root> / disease  :name (n2 / --LEX--))	_NAME_	()	10	APP_o	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	Africa	_name_	Africa	NNP	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	10	MOD_mod	true
14	that	_	that	WDT	O	_	name	_	0	IGNORE	true
15	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	16	MOD_s	true
16	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-10	(s(), o())	11	MOD_s	true
17	to	_	to	IN	O	_	name	_	0	IGNORE	true
18	abstinence-only	_	abstinence-only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	programmes	_	programme	NNS	O	(d<root> / --LEX--)	program	()	16	APP_o	true
20	.	_	.	.	O	_	exchange-01	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 16@@s@@go-10, 3@@d@@percentage, 18@@p@@_NAME_, 13@@c3@@continent, 7@@p@@person, 11@@d2@@disease, 7@@n@@_NAME_, 8@@i@@pledge-01, 15@@s@@obligate-01, 19@@d@@program, 10@@s@@fight-01, 11@@n2@@_NAME_, 13@@n2@@_NAME_, 6@@explicitanon0@@1]
sentence=1	2.4m	_	2.4m	NNP	O	(d<root> / --LEX--)	pay-01	()	2	APP_s	true
2	-	_	-	HYPH	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	7	MOD_o	true
3	Number	number	Number	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
6	who	_	who	WP	O	_	multiple	_	0	IGNORE	true
7	lost	_	lose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
8	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
9	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	insurance	_	insurance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	insure-02	(s())	7	APP_o	true
11	during	_	during	IN	O	_	i	_	0	IGNORE	true
12	Bush's	bush's	Bush's	NNP	O	_	_NAME_	_	0	IGNORE	true
13	first_year	_name_	year	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	7	MOD_mod	true
14	in	_	in	IN	O	_	after	_	0	IGNORE	true
15	office	_	office	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[13@@b@@_NAME_, 5@@n@@_NAME_, 2@@s@@-, 1@@d@@pay-01, 7@@s@@lose-02, 3@@d@@Number, 9@@d@@health, 15@@n@@office, 10@@s@@insure-02, 5@@c@@country]
sentence=1	85-	_	85-	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
2	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	of	_	of	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	include-91	(mod())	2	MOD_mod	true
4	Indonesians	_name_	Indonesians	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
5	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
6	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_s	true
7	an	_	an	DT	O	_	person	_	0	IGNORE	true
8	unfavourable	_	unfavourable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	favor-01	(s())	9	MOD_s	true
9	image	_	image	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	6	APP_o	true
10	of	_	of	IN	O	_	person	_	0	IGNORE	true
11	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_poss	true
12	in	_	in	IN	O	_	person	_	0	IGNORE	true
13	2003	_name_	2003	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@percentage, 6@@s@@have-03, 13@@explicitanon2@@_NUMBER_, 8@@s@@favor-01, 4@@c@@country, 1@@explicitanon0@@_NUMBER_, 3@@p@@include-91, 4@@n@@_NAME_, 9@@m@@image-01, 11@@c@@country, 13@@d@@date-entity, 11@@n@@_NAME_]
sentence=1	90	_	90	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	10	_	0	IGNORE	true
19	26_September_2001	_name_	2001	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	11	_	0	IGNORE	true

nodealignment=[19@@n@@_DATE_, 2@@p@@-, 17@@p3@@person, 5@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 10@@t@@way, 7@@s@@approve-01, 11@@p@@person, 11@@n@@_NAME_, 15@@m@@job, 13@@l@@handle-01, 17@@h2@@have-rel-role-91, 3@@d@@percentage, 17@@p4@@president, 5@@c@@country]
sentence=1	67	_	67	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	(d<root> / --LEX--)	have-org-role-91	()	3	APP_mod	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
19	26_September_2002	_name_	2002	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	11	_	0	IGNORE	true

nodealignment=[16@@d@@have-org-role-91, 17@@p3@@person, 7@@s@@approve-01, 5@@c@@country, 19@@n@@_DATE_, 3@@explicitanon0@@percentage, 1@@explicitanon0@@_NUMBER_, 11@@p@@person, 11@@n@@_NAME_, 5@@n@@_NAME_, 15@@m@@job, 13@@l@@handle-01, 17@@h2@@have-rel-role-91, 17@@p4@@president, 10@@t@@way]
sentence=1	54	_	54	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	(d<root> / --LEX--)	have-org-role-91	()	3	APP_mod	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
19	30	_	30	CD	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
20	September,	september,	september,	SYM	O	_	1	_	0	IGNORE	true
21	2003	_	2003	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	19	MOD_mod	true
22	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[16@@d@@have-org-role-91, 17@@p3@@person, 1@@explicitanon0@@_NUMBER_, 5@@c@@country, 21@@explicitanon0@@_NUMBER_, 3@@explicitanon0@@percentage, 11@@n@@_NAME_, 2@@p@@-, 5@@n@@_NAME_, 15@@m@@job, 13@@l@@handle-01, 17@@h2@@have-rel-role-91, 19@@explicitanon4@@_NUMBER_, 11@@p@@person, 17@@p4@@president, 7@@s@@approve-01, 10@@t@@way]
sentence=1	50	_	50	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	have-org-role-91	(mod())	7	MOD_mod	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	on	_	on	IN	O	_	10	_	0	IGNORE	true
19	15_October_2003	_name_	2003	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[17@@p4@@president, 5@@c@@country, 16@@p@@have-org-role-91, 17@@p3@@person, 5@@n@@_NAME_, 1@@explicitanon0@@_NUMBER_, 10@@t@@way, 7@@s@@approve-01, 11@@p@@person, 11@@n@@_NAME_, 15@@m@@job, 13@@l@@handle-01, 17@@h2@@have-rel-role-91, 3@@d@@percentage, 19@@n@@_DATE_]
sentence=1	49	_	49	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	approved	_	approve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	handling	_	handle	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	10	APP_mod	true
14	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
15	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
16	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	president	_	president	NN	O	(p3<root> / person  :condition-of (p2<mod>)  :ARG0-of (h2 / have-rel-role-91  :ARG2 (p4 / --LEX--)))	$FORM$	(mod())	15	MOD_mod	true
18	in	_	in	IN	O	_	10	_	0	IGNORE	true
19	May_2004	_name_	2004	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	2008	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@h2@@have-rel-role-91, 3@@d@@percentage, 17@@p4@@president, 2@@p@@-, 5@@c@@country, 1@@explicitanon0@@_NUMBER_, 17@@p3@@person, 5@@n@@_NAME_, 19@@explicitanon0@@2008, 10@@t@@way, 7@@s@@approve-01, 11@@p@@person, 11@@n@@_NAME_, 15@@m@@job, 13@@l@@handle-01]
sentence=1	3	_	3	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	companies	_	company	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	control	_	control	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	US	_name_	US	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	12	MOD_mod	true
10	voting	_	vote	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	vote-01	(mod())	11	MOD_mod	true
11	technology	_	technology	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	market	_	market	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[12@@d@@market, 1@@explicitanon0@@_NUMBER_, 5@@d@@company, 7@@s@@control-01, 10@@p@@vote-01, 9@@c@@country, 3@@explicitanon0@@number, 11@@p@@technology, 9@@n@@_NAME_]
sentence=1	29	_	29	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	votes	_	vote	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	will	_	will	MD	O	_	thing	_	0	IGNORE	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	cast	_	cast	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
10	via	_	via	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	computer	_	computer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	voting	_	voting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	vote-01	(mod())	13	MOD_mod	true
13	machines	_	machine	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
15	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	paper	_	paper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	record	_	record	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 15@@explicitanon0@@-, 19@@d@@record-01, 5@@d@@vote-01, 9@@s@@cast-01, 3@@explicitanon0@@percentage, 12@@p@@vote-01, 13@@m@@machine, 18@@p@@paper, 11@@p@@computer, 16@@s@@produce-01]
sentence=1	268	_	268	CD	O	(d<root> / --LEX--)	_NUMBER_	()	3	APP_s	true
2	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	include-91	(s(), o())	0	ROOT	true
4	Bush-Cheney	_name_	Bush-Cheney	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	fund-raisers	_	fund-raiser	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	3	APP_o	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	had	_	have	VBD	O	_	person	_	0	IGNORE	true
8	earned	_	earn	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	Pioneer	_name_	Pioneer	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	status	_	status	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	(by	_	(by	,	O	_	cause-01	_	0	IGNORE	true
12	raising	_	raise	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_s	true
13	$100,000	_	$100,000	CD	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	12	APP_o	true
14	each)	_	each)	NNP	O	_	this	_	0	IGNORE	true
15	as	_	as	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
16	of	_	of	IN	O	_	6	_	0	IGNORE	true
17	March_2004	_name_	2004	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_DATE_	()	15	APP_op1	true
18	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[13@@m2@@monetary-quantity, 10@@d@@status, 12@@s@@raise-02, 2@@explicitanon0@@number, 5@@s@@fund-raiser, 8@@s@@earn-01, 17@@d@@date-entity, 17@@explicitanon0@@_DATE_, 3@@s@@include-91, 4@@p@@person, 1@@d@@_NUMBER_, 4@@n@@_NAME_, 9@@p@@Pioneer, 15@@w@@as, 13@@explicitanon0@@_NUMBER_]
sentence=1	187	_	187	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Number	number	Number	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(d<root> / --LEX--)	include-91	()	3	APP_mod	true
5	Bush-Cheney	_name_	Bush-Cheney	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	fund-raisers	_	fund-raiser	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
8	had	_	have	VBD	O	_	person	_	0	IGNORE	true
9	earned	_	earn	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	Ranger	_name_	Ranger	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	status	_	status	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	(by	_	(by	WRB	O	_	person	_	0	IGNORE	true
13	raising	_	raise	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
14	$200,000	_	$200,000	CD	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	13	APP_o	true
15	each)	_	each)	NNP	O	_	this	_	0	IGNORE	true
16	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	of	_	of	IN	O	_	6	_	0	IGNORE	true
18	March_2004	_name_	2004	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	2	MOD_mod	true
19	.	_	.	.	O	_	date-interval	_	0	IGNORE	true

nodealignment=[6@@p@@fund-raiser, 14@@explicitanon0@@_NUMBER_, 5@@n@@_NAME_, 2@@p@@-, 3@@explicitanon0@@Number, 18@@n@@_DATE_, 11@@d@@status, 14@@m2@@monetary-quantity, 4@@d@@include-91, 9@@s@@earn-01, 1@@explicitanon0@@_NUMBER_, 10@@p@@Ranger, 13@@s@@raise-02]
sentence=1	85	_	85	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	SYM	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	can't	_	can't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	Name	name	name	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
10	Chief	chief	Chief	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	11	MOD_mod	true
11	Justice	justice	Justice	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	8	APP_o	true
12	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
14	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[11@@p2@@Justice, 1@@explicitanon0@@_NUMBER_, 2@@p@@-, 13@@n@@_NAME_, 11@@h@@have-org-role-91, 10@@p@@chief, 7@@explicitanon0@@-, 3@@d@@percentage, 5@@c@@country, 5@@n@@_NAME_, 8@@s@@name-01, 13@@c@@country]
sentence=1	69	_	69	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	3	MOD_s	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	the_White_House's	_name_	House's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	claims	_	claim	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	in	_	in	IN	O	_	10	_	0	IGNORE	true
11	September_2003	_name_	2003	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
12	that	_	that	IN	O	_	1	_	0	IGNORE	true
13	Saddam_Hussein	_name_	Hussein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	personally	_	personally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	personal-02	(s())	16	MOD_s	true
16	involved	_	involve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
17	in	_	in	IN	O	(d<root> / --LEX--)	i	()	3	APP_mod	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	11	_	11	CD	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	_NUMBER_	(mod())	20	MOD_mod	true
20	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	9	(mod())	21	MOD_mod	true
21	attacks	_	attack	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
22	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@d@@attack-01, 20@@explicitanon0@@9, 15@@s@@personal-02, 20@@d@@date-entity, 13@@n@@_NAME_, 5@@n@@_NAME_, 8@@p@@person, 19@@explicitanon4@@_NUMBER_, 9@@s@@claim-01, 17@@d@@i, 11@@d@@date-entity, 11@@explicitanon2@@_NUMBER_, 8@@n@@_NAME_, 5@@c@@country, 7@@s@@believe-01, 3@@explicitanon0@@percentage, 13@@p@@person, 16@@s@@involve-01, 4@@s@@include-91, 1@@explicitanon0@@_NUMBER_]
sentence=1	34	_	34	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
8	in	_	in	IN	O	_	10	_	0	IGNORE	true
9	June_2003	_name_	2003	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
10	that	_	that	IN	O	(d<root> / --LEX--)	name	()	0	ROOT	true
11	Saddam's	saddam's	saddam's	NN	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
12	"weapons	_	"weapons	XX	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
13	of	_	of	IN	O	_	person	_	0	IGNORE	true
14	mass	_	mass	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	destruction"	_	destruction"	NFP	O	_	person	_	0	IGNORE	true
16	had	_	have	VBD	O	_	person	_	0	IGNORE	true
17	been	_	be	VBN	O	_	person	_	0	IGNORE	true
18	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@percentage, 18@@s@@find-01, 7@@s@@believe-01, 9@@d@@date-entity, 5@@n@@_NAME_, 11@@c@@country, 12@@d@@"weapons, 11@@n@@_NAME_, 10@@d@@name, 9@@explicitanon2@@_NUMBER_, 5@@c@@country, 14@@s@@mass, 1@@explicitanon0@@_NUMBER_]
sentence=1	22-	_	22-	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	name	(mod())	2	MOD_mod	true
2	Percentage	percentage	percentage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_o	true
4	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
5	who	_	who	WP	O	_	person	_	0	IGNORE	true
6	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	in	_	in	IN	O	_	person	_	0	IGNORE	true
8	May_2003	_name_	2003	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
9	that	_	that	IN	O	_	name	_	0	IGNORE	true
10	Saddam	_name_	Saddam	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
11	had	_	have	VBD	O	(d<root> / --LEX--)	person	()	2	APP_s	true
12	used	_	use	VBN	O	(m<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (f<o>)  :ARG2 (t<o2>))	$LEMMA$-01	(o2(), o(poss_UNIFY_s()))	6	APP_o	true
13	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
14	WMDs	wmds	wmd	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	12	APP_o	true
15	on	_	on	IN	O	_	country	_	0	IGNORE	true
16	US	_name_	US	NNP	O	(n2<root> / --LEX--  :name-of (c2 / country  :mod-of (i<mod>)))	_NAME_	(mod())	17	MOD_mod	true
17	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	true
18	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@name, 10@@p@@person, 16@@c2@@country, 3@@s@@include-91, 4@@n@@_NAME_, 10@@n@@_NAME_, 14@@m@@wmd, 16@@n2@@_NAME_, 12@@m@@use-01, 11@@d@@person, 2@@s@@percentage, 8@@explicitanon2@@_NUMBER_, 8@@d@@date-entity, 4@@c@@country, 6@@s@@believe-01, 17@@d@@force]
sentence=1	85	_	85	CD	O	(explicitanon0<root> / --LEX--  :value-of (p<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	SYM	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	adults	_	adult	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	who	_	who	WP	O	_	and	_	0	IGNORE	true
9	cannot	_	cannot	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	Afghanistan,_Iraq,	_name_	Iraq,	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_op1	true
12	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
13	Israel	_name_	Israel	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_op2	true
14	on	_	on	IN	O	_	i	_	0	IGNORE	true
15	a	_	a	DT	O	_	person	_	0	IGNORE	true
16	map	_	map	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
17	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@p@@young, 13@@c@@country, 13@@n@@_NAME_, 5@@n@@_NAME_, 7@@d@@adult, 5@@c@@country, 16@@b@@map, 1@@explicitanon0@@_NUMBER_, 3@@explicitanon0@@percentage, 10@@s@@find-01, 12@@a@@or, 11@@c@@country, 11@@n@@_NAME_, 9@@s@@possible-01]
sentence=1	30	_	30	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	adults	_	adult	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	who	_	who	WP	O	_	and	_	0	IGNORE	true
9	cannot	_	cannot	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	the_Pacific_Ocean	_name_	Ocean	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
12	on	_	on	IN	O	_	name	_	0	IGNORE	true
13	a	_	a	DT	O	_	person	_	0	IGNORE	true
14	map	_	map	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@percentage, 1@@explicitanon0@@_NUMBER_, 14@@b@@map, 11@@n@@_NAME_, 5@@c@@country, 11@@c@@country, 10@@s@@find-01, 7@@d@@adult, 9@@s@@possible-01, 6@@p@@young, 5@@n@@_NAME_]
sentence=1	75	_	75	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	adults	_	adult	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	who	_	who	WP	O	_	-	_	0	IGNORE	true
9	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	population	_	population	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_poss	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 14@@n@@_NAME_, 14@@c@@country, 12@@m@@population, 5@@n@@_NAME_, 6@@p@@young, 9@@explicitanon0@@-, 5@@c@@country, 10@@s@@know-01, 7@@d@@adult, 3@@explicitanon0@@percentage]
sentence=1	53	_	53	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Canadian	_name_	canadian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	adults	_	adult	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	who	_	who	WP	O	_	-	_	0	IGNORE	true
9	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	population	_	population	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_poss	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@know-01, 7@@d@@adult, 3@@explicitanon0@@percentage, 1@@explicitanon0@@_NUMBER_, 14@@n@@_NAME_, 14@@c@@country, 12@@m@@population, 5@@n@@_NAME_, 6@@p@@young, 9@@explicitanon0@@-, 5@@c@@country]
sentence=1	11	_	11	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	adults	_	adult	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
8	who	_	who	WP	O	_	person	_	0	IGNORE	true
9	cannot	_	cannot	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	map	_	map	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@_NUMBER_, 6@@p@@young, 3@@explicitanon0@@percentage, 14@@b@@map, 5@@c@@country, 10@@s@@find-01, 7@@d@@adult, 9@@s@@possible-01, 11@@c@@country, 5@@n@@_NAME_, 11@@n@@_NAME_]
sentence=1	30	_	30	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	Percentage	percentage	percentage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	that	_	that	IN	O	_	person	_	0	IGNORE	true
9	"politics	_	"politics	XX	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
11	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	10	APP_op2	true
12	are	_	be	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	7	MOD_mod	true
13	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	complicated	_	complicated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	complicate-01	(s())	7	APP_o	true
15	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
16	understand.	_	understand.	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
17	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[16@@p@@understand., 10@@a@@and, 14@@s@@complicate-01, 1@@explicitanon0@@_NUMBER_, 7@@s@@believe-01, 5@@c@@country, 3@@d@@percentage, 9@@d@@"politics, 11@@g@@government-organization, 11@@g2@@govern-01, 5@@n@@_NAME_, 13@@s@@too, 2@@p@@-, 12@@p@@person]
sentence=1	70m	_	70m	LS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	-	_	-	HYPH	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Estimated	estimated	estimate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	of	_	of	IN	O	(d<root> / --LEX--)	include-91	()	3	APP_s	true
6	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
7	who	_	who	WP	O	_	person	_	0	IGNORE	true
8	describe	_	describe	VBP	O	(c<root> / --LEX--  :ARG0 (i<s>  :ARG1-of c)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), s())	5	MOD_s	true
9	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
10	as	_	as	IN	O	_	person	_	0	IGNORE	true
11	Evangelicals	_name_	evangelical	NNS	O	(d<root> / --LEX--)	_NAME_	()	8	APP_o2	true
12	who	_	who	WP	O	_	person	_	0	IGNORE	true
13	accept	_	accept	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	MOD_s	true
14	Jesus_Christ	_name_	Christ	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
15	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
16	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
17	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	saviour	_	saviour	NN	O	(d<root> / --LEX--)	save-02	()	13	APP_o2	true
19	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
20	who	_	who	WP	O	_	person	_	0	IGNORE	true
21	interpret	_	interpret	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	MOD_s	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Bible	_name_	Bible	NNP	O	(b<root> / book  :name (n / --LEX--))	_NAME_	()	21	APP_o	true
24	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	direct	_	direct	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	word	_	word	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	APP_o2	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	God	god	God	NNP	O	(d<root> / --LEX--)	_NAME_	()	27	APP_s	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@b@@interpret-01, 8@@c@@describe-01, 6@@n@@_NAME_, 19@@d@@and, 5@@d@@include-91, 23@@n@@_NAME_, 18@@d@@save-02, 11@@d@@_NAME_, 14@@p@@person, 4@@explicitanon0@@number, 23@@b@@book, 1@@p@@_NAME_, 27@@s@@word-01, 3@@s@@estimate-01, 29@@d@@_NAME_, 26@@s@@direct-02, 17@@s@@personal-02, 6@@c@@country, 2@@explicitanon0@@-, 14@@n@@_NAME_, 13@@b@@accept-01]
sentence=1	23m	_	23m	LS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Evangelicals	evangelicals	Evangelicals	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	voted	_	vote	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
10	in	_	in	IN	O	_	person	_	0	IGNORE	true
11	2000	_name_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	7	MOD_mod	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p@@person, 11@@explicitanon0@@_NUMBER_, 7@@s@@vote-01, 5@@d@@Evangelicals, 1@@p@@_NAME_, 3@@explicitanon0@@number, 9@@n@@_NAME_, 11@@d@@date-entity]
sentence=1	50m-	_	50m-	LS	O	_	_NAME_	_	0	IGNORE	true
2	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	voters	_	voter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	vote-01	()	2	APP_mod	true
5	in	_	in	IN	O	_	person	_	0	IGNORE	true
6	total	_	total	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
8	voted	_	vote	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	Bush	_name_	Bush	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
11	in	_	in	IN	O	_	person	_	0	IGNORE	true
12	2000	_name_	2000	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	8	MOD_mod	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@n@@_NAME_, 10@@p@@person, 12@@explicitanon0@@_NUMBER_, 4@@p2@@person, 6@@s@@total-01, 8@@s@@vote-01, 12@@d@@date-entity, 2@@explicitanon0@@number, 4@@e2@@vote-01]
sentence=1	46	_	46	CD	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	SYM	O	_	$LEMMA$	_	0	IGNORE	true
3	Percentage	percentage	percentage	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	voters	_	voter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	vote-01	()	3	APP_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	describe	_	describe	VBP	O	(c<root> / --LEX--  :ARG0 (i<s>  :ARG1-of c)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), s())	5	MOD_s	true
8	themselves	_	themselves	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	3	MOD_mod	true
9	as	_	as	IN	O	_	person	_	0	IGNORE	true
10	born-again	_	born-again	JJ	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o2	true
11	Christians	_name_	Christians	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	7	MOD_mod	true
12	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[11@@n@@_NAME_, 8@@p@@person, 3@@explicitanon0@@percentage, 5@@p2@@person, 11@@r@@religious-group, 7@@c@@describe-01, 10@@d@@_NAME_, 1@@explicitanon0@@_NUMBER_, 5@@e2@@vote-01]
sentence=1	5	_	5	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
2	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
3	Number	number	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	states	_	state	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	do	_	do	VBP	O	_	person	_	0	IGNORE	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	use	_	use	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	MOD_s	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	"evolution"	_	"evolution"	XX	O	_	thing	_	0	IGNORE	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
15	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	science	_	science	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	courses	_	course	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
18	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@s@@public-02, 5@@d@@state, 16@@p@@science, 11@@d@@word, 17@@d@@course, 1@@explicitanon0@@_NUMBER_, 3@@explicitanon0@@number, 15@@p@@school, 8@@explicitanon0@@-, 9@@b@@use-01]
sentence=1	Can	can	Can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
2	somebody	_	somebody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	give	_	give	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	APP_s	true
4	me	_	I	PRP	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	i	(mod())	1	MOD_mod	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	names	_	name	NNS	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	3	APP_o	true
7	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	collages	_	collage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
11	post	_	post	AFX	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
12	18	_	18	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	11	APP_op1	true
13	(degrees	_	(degree	NNS	O	(d<root> / --LEX--)	_NAME_	()	14	APP_op1	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
15	foundation	_	foundation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	degrees)	_	degrees)	NNS	O	_	et-cetera	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	either	_	either	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
19	:	_	:	:	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@b@@give-01, 11@@w@@post, 4@@explicitanon0@@i, 14@@a@@or, 8@@d@@collage, 15@@d@@foundation, 12@@t@@temporal-quantity, 2@@d@@somebody, 12@@explicitanon0@@_NUMBER_, 13@@d@@_NAME_, 6@@a@@name-01, 18@@p@@either, 7@@explicitanon0@@some, 1@@s@@possible-01, 10@@s@@do-02, 6@@t@@thing]
sentence=1	They'll	they'll	They'll	NNP	O	_	i	_	0	IGNORE	true
2	give	_	give	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	comprehensive	_	comprehensive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	universities	_	university	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	courses	_	course	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	want,	_	want,	NNP	O	_	and	_	0	IGNORE	true
17	plus	_	plus	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	add-02	(op2())	2	APP_o	true
18	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
21	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
23	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
24	apply	_	apply	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@list-01, 2@@b@@give-01, 3@@d@@you, 20@@d@@information, 8@@p@@all, 12@@s@@do-02, 10@@d@@university, 24@@o@@apply-01, 14@@d@@course, 18@@p@@all, 17@@a@@add-02, 22@@s@@need-01, 5@@p@@comprehensive]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	5	MOD_mod	true
3	Philippines	_name_	Philippines	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	famous	_	famous	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	fame-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_o	true
9	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	8	MOD_s	true
10	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	11	MOD_mod	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_o	true
12	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	13	APP_s	true
13	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
14	whose	_	whose	WP$	O	_	thing	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	filipinos	_	filipino	NNS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	5	MOD_s	true
18	helping	_	help	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Philippines	_name_	Philippines	NNPS	O	_	_NAME_	_	0	IGNORE	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	plunge	_	plunge	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	pit	_	pit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	18	MOD_o	true
27	they	_	they	PRP	O	_	person	_	0	IGNORE	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	the	_	the	DT	O	_	he	_	0	IGNORE	true
30	rot	_	rot	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	26	APP_s	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	he	_	0	IGNORE	true
33	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@s@@resemble-01, 3@@n@@_NAME_, 18@@s@@help-01, 5@@o@@fame-01, 16@@n@@_NAME_, 10@@p@@this, 15@@explicitanon0@@-, 13@@s@@mention-01, 33@@d@@country, 11@@d@@person, 7@@s@@accept-01, 17@@s@@contrast-01, 26@@s@@cause-01, 2@@p@@in-fact, 16@@c@@country, 30@@s@@rot, 12@@d@@i, 3@@c@@country, 22@@s@@plunge-01, 8@@d@@person, 25@@d@@pit]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	L.I.T	_name_	L.I.T	NNP	O	(p<root> / political-movement  :name (n / --LEX--))	-	()	5	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	Moyross,	moyross,	moyross,	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	yet	_	yet	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	ppl	_	ppl	NN	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
12	who	_	who	WP	O	_	name	_	0	IGNORE	true
13	talk	_	talk	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	sh*t	_	sh*t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
15	about	_	about	IN	O	_	name	_	0	IGNORE	true
16	Moyross	_name_	Moyross	NNP	O	_	name	_	0	IGNORE	true
17	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	5	APP_o	true
19	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@n@@-, 18@@g@@go-01, 8@@p@@yet, 17@@p@@still, 11@@n@@_NAME_, 14@@explicitanon0@@-, 9@@p@@again, 11@@o2@@organization, 13@@s@@talk-01, 4@@s@@so, 19@@d@@there, 2@@p@@political-movement, 5@@s@@close-06]
sentence=1	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
2	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
3	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	either	_	either	RB	O	_	$LEMMA$	_	0	IGNORE	true
6	recover	_	recover	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_op1	true
7	to	_	to	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	standard	_	standard	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	ROM,	_name_	ROM,	NNP	O	_	and	_	0	IGNORE	true
11	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	APP_s	true
12	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
13	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	crash	_	crash	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
17	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[3@@b2@@good-02, 13@@p@@one, 11@@a@@or, 15@@explicitanon0@@-, 12@@s@@find-01, 1@@d@@you, 6@@s@@recover-02, 9@@d@@standard, 16@@s@@crash-01, 3@@m@@most]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	be-located-at-91	_	0	IGNORE	true
4	western	_	western	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	pleasure	_	pleasure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	appy	_	appy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	thats	_	thats	UH	O	_	$LEMMA$	_	0	IGNORE	true
8	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	heavy	_	heavy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
10	on	_	on	IN	O	_	thing	_	0	IGNORE	true
11	her	_	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_poss	true
12	left	_	left	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-20	(s())	13	MOD_s	true
13	lead	_	lead	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	9	MOD_mod	true
14	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	lope	_	lope	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
17	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	2	MOD_mod	true

nodealignment=[11@@d@@she, 9@@p@@heavy, 5@@d@@pleasure, 1@@d@@i, 13@@w@@lead, 16@@n@@lope, 4@@n@@_NAME_, 6@@p@@appy, 8@@s@@really, 2@@s@@have-03, 12@@s@@left-20, 4@@w@@world-region, 17@@explicitanon0@@interrogative]
sentence=1	There	there	there	EX	O	_	location	_	0	IGNORE	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	recommend-01	(s(), o())	0	ROOT	true
3	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
5	Pixel_Mapping	_name_	mapping	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	function	_	function	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
7	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	menu	_	menu	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	that	_	that	WDT	O	_	mass	_	0	IGNORE	true
11	will	_	will	MD	O	_	thing	_	0	IGNORE	true
12	get	_	get	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
13	rid	_	rid	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	MOD_s	true
14	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	them,	_	them,	NNS	O	_	multi-sentence	_	0	IGNORE	true
16	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	sensors	_	sensor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	22	APP_op1	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	few	_	few	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	dead	_	dead	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	22	MOD_s	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	2	APP_o	true
23	flipped	_	flip	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
24	pixels,	_	pixels,	NNS	O	_	and	_	0	IGNORE	true
25	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
26	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	show	_	show	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	22	APP_op3	true
28	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
29	on	_	on	IN	O	_	possible-01	_	0	IGNORE	true
30	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	31	MOD_s	true
31	exposures	_	exposure	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@s@@long-03, 5@@p@@mapping, 16@@explicitanon0@@most, 27@@s@@show-up-02, 22@@a@@and, 13@@s@@rid-01, 21@@s@@dead, 17@@d@@sensor, 31@@b@@exposure, 6@@d@@function, 20@@d@@few, 26@@p@@only, 25@@d@@some, 18@@s@@have-03, 23@@d@@flip-01, 2@@s@@recommend-01, 9@@b@@menu]
sentence=1	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
2	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	wrong	_	wrong	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	9	APP_o	true
7	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
8	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
10	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	employ	_	employ	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_s	true
13	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_o	true
15	that	_	that	WDT	O	_	and	_	0	IGNORE	true
16	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	and	_	and	CC	O	_	$LEMMA$	_	9	IGNORE	true
18	shop	_	shop	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@s@@cause-01, 1@@explicitanon0@@-, 10@@d@@they, 6@@s@@wrong-02, 21@@b@@area, 8@@d@@that, 14@@d@@person, 11@@p@@also, 13@@s@@local-02, 5@@d@@anything, 16@@s@@live-01, 18@@s@@shop-01, 12@@s@@employ-01]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	cotton	_	cotton	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	cloth	_	cloth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
5	(I	(i	(I	NNP	O	_	resemble-01	_	0	IGNORE	true
6	like	_	like	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	resemble-01	(s())	4	MOD_s	true
7	diapers)	_	diapers)	NNP	O	_	resemble-01	_	0	IGNORE	true
8	that	_	that	WDT	O	_	resemble-01	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	barely	_	barely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	bare	(mod())	11	MOD_mod	true
11	damp	_	damp	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	4	MOD_s	true
12	w	_	w	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	will	_	will	MD	O	_	thing	_	0	IGNORE	true
15	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	0	ROOT	true
16	fine	_	fine	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	15	MOD_s	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@bare, 3@@p@@cotton, 11@@s@@damp-05, 13@@d@@water, 16@@s@@fine-04, 15@@s@@work-09, 1@@p@@even, 6@@s@@resemble-01, 4@@d@@cloth]
sentence=1	Yes	yes	yes	UH	O	_	$LEMMA$	_	0	IGNORE	true
2	obviously	_	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	7	MOD_s	true
3	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
4	USB	_name_	usb	NN	O	(d<root> / --LEX--)	_NAME_	()	7	APP_s	true
5	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	region	_	region	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
7	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	APP_o	true
12	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_s	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	anywhere	_	anywhere	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@obvious-01, 12@@s@@use-01, 14@@b@@anywhere, 10@@d@@you, 7@@s@@free-03, 6@@d@@region, 4@@d@@_NAME_, 11@@s@@possible-01, 9@@s@@mean-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_s	true
7	laptops	_	laptop	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	bought	_	buy	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	UK	_name_	UK	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	MOD_s	true
14	them	_	they	PRP	O	_	person	_	0	IGNORE	true
15	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	e	_	e	LS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[13@@s@@use-01, 7@@d@@laptop, 6@@s@@have-03, 2@@s@@have-03, 4@@f@@friend, 1@@d@@i, 4@@h@@have-rel-role-91, 4@@p@@person, 11@@n@@_NAME_, 3@@explicitanon0@@many, 8@@s@@buy-01, 11@@c@@country]
sentence=1	So	so	so	RB	O	_	infer-01	_	0	IGNORE	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	somebody	_	somebody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	please	_	please	UH	O	(explicitanon0<root> / --LEX--  :polite-of (c2<mod>))	+	(mod())	5	MOD_mod	true
5	list	_	list	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
6	ALL	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
12	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
13	game	_	game	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	pieces,	_	pieces,	NNP	O	_	mean-01	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	11	APP_s	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	APP_op2	true
18	of	_	of	IN	O	_	number	_	0	IGNORE	true
19	game	_	game	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_mod	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
23	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
24	THAT	that	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
25	FOOD	food	FOOD	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[15@@a@@and, 22@@s@@get-01, 19@@p@@game, 13@@p@@game, 20@@d@@piece, 9@@d@@food, 4@@explicitanon0@@+, 5@@s@@list-01, 3@@d@@somebody, 2@@s@@possible-01, 25@@p@@FOOD, 11@@s@@include-01, 21@@d@@you, 17@@explicitanon0@@number, 6@@p@@all]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	best	_	best	RB	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	5	MOD_s	true
5	explains	_	explain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	MOD_s	true
6	this,	_	this,	NNS	O	_	thing	_	0	IGNORE	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	helps	_	help	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	2	MOD_s	true
9	me	_	I	PRP	O	_	i	_	0	IGNORE	true
10	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-03	(s())	8	MOD_s	true
13	with	_	with	IN	O	_	i	_	0	IGNORE	true
14	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
15	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
16	will	_	will	MD	O	_	i	_	0	IGNORE	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	REWARDED	rewarded	REWARDED	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
19	WITH	with	with	IN	O	_	i	_	0	IGNORE	true
20	TEN	ten	ten	CD	O	(p<root> / person  :quant (n / --LEX--))	10	()	18	APP_o	true
21	POINTS!!!!!!	points!!!!!!	points!!!!!!	JJ	O	_	expressive	_	0	IGNORE	true
22	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[8@@s@@help-out-03, 5@@s@@explain-01, 15@@d@@question-01, 2@@d@@person, 12@@m@@most, 18@@s@@REWARDED-01, 4@@m@@most, 20@@n@@10, 20@@p@@person, 4@@b2@@good-02, 12@@b2@@good-03]
sentence=1	Used	used	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	help	_	help	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_s	true
5	for	_	for	IN	O	_	thing	_	0	IGNORE	true
6	horses	_	horse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	pullers	_	puller	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	enable-01	(s())	6	MOD_s	true
12	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
13	hacking,	_	hacking,	CD	O	_	and	_	0	IGNORE	true
14	hunting	_	hunt	VBG	O	(d<root> / --LEX--)	hunt-01	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_o	true
16	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_op2	true
17	cross	_	cross	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[17@@p@@cross, 15@@a@@and, 16@@s@@do-02, 18@@d@@country, 9@@s@@quite, 10@@s@@strong-02, 4@@s@@help-01, 14@@d@@hunt-01, 1@@s@@use-01, 11@@s@@enable-01, 6@@d@@horse]
sentence=1	Useful	useful	useful	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-05	(s())	0	ROOT	true
2	for	_	for	IN	O	_	thing	_	0	IGNORE	true
3	younger	_	young	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	young	(mod())	4	MOD_mod	true
4	kids	_	kid	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	who	_	who	WP	O	_	person	_	0	IGNORE	true
6	do	_	do	VBP	O	_	person	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_s	true
9	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	enough	_	enough	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	hands	_	hand	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	ability	_	ability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	capable-01	(s())	12	APP_op2	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	18	MOD_mod	true
18	reins	_	rein	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	independently	_	independently	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	depend-01	(mod())	16	MOD_mod	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[16@@s@@handle-01, 10@@p@@enough, 19@@t@@depend-01, 14@@s@@capable-01, 11@@d@@hand, 7@@explicitanon0@@-, 8@@s@@have-03, 18@@d@@rein, 1@@s@@useful-05, 3@@f2@@young, 17@@explicitanon0@@2, 3@@m@@more, 12@@a@@or, 9@@p@@big, 4@@d@@kid]
sentence=1	For	for	for	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
2	horses	_	horse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	pullers	_	puller	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	golf-01	(s())	2	MOD_s	true
7	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@s@@golf-01, 2@@d@@horse, 5@@s@@strong-02]
sentence=1	It's	it's	it's	PRP	O	_	$LEMMA$-01	_	0	IGNORE	true
2	nice	_	nice	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	for	_	for	IN	O	_	say-01	_	0	IGNORE	true
4	horses	_	horse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	than	_	than	IN	O	_	more-$LEMMA$	_	0	IGNORE	true
11	a	_	a	DT	O	_	except-01	_	0	IGNORE	true
12	snaffle	_	snaffle	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
13	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[8@@s@@little, 4@@d@@horse, 6@@s@@need-01, 9@@d@@more, 2@@s@@nice-01, 12@@p@@snaffle]
sentence=1	It's	it's	it's	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	around	_	around	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	1	APP_s	true
3	$100	_	$100	NNP	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	2	APP_op1	true
4	less,	_	less,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
5	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	camera	_	camera	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
13	quicker	_	quick	JJR	O	(c<root> / --LEX--  :degree (m / more))	fast-02	()	12	APP_o	true
14	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[13@@m@@more, 3@@explicitanon0@@_NUMBER_, 2@@o@@around, 1@@s@@it's-01, 13@@c@@fast-02, 11@@d@@camera, 3@@m2@@monetary-quantity, 8@@s@@get-01, 7@@d@@you, 12@@s@@contrast-01, 6@@s@@mean-01, 10@@s@@same-01]
sentence=1	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	17	MOD_s	true
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
3	bit	_	bit	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	searching	_	search	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_o	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	discover	_	discover	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	POP	_name_	pop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_dom	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	14	MOD_mod	true
12	PoP	pop	pop	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
13	-	_	-	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	plaster	_	plaster	NN	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	17	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
18	yes	_	yes	UH	O	_	$LEMMA$	_	0	IGNORE	true
19	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	Paris	_name_	Paris	NNP	O	_	_NAME_	_	0	IGNORE	true
22	will	_	will	MD	O	_	thing	_	0	IGNORE	true
23	slow	_	slow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-down-03	(s())	17	APP_op2	true
24	way	_	way	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	down	_	down	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
26	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
29	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	30	MOD_mod	true
30	exposed	_	expose	VBN	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
31	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
32	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
34	in	_	in	NN	O	_	multi-sentence	_	0	IGNORE	true
35	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	true
36	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	17	MOD_o	true
37	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op3	true
38	are	_	be	VBP	O	_	person	_	0	IGNORE	true
39	building	_	build	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-up-05	(mod(), s())	36	MOD_mod	true
40	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
41	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
42	("the	_	("the	UH	O	_	see-01	_	0	IGNORE	true
43	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
44	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op4	true
45	would	_	would	MD	O	_	be-located-at-91	_	0	IGNORE	true
46	icing")	_	icing")	VB	O	_	shit	_	0	IGNORE	true
47	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
48	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
49	sculpting,	_	sculpting,	NNP	O	_	and	_	0	IGNORE	true
50	which	_	which	WDT	O	_	i	_	0	IGNORE	true
51	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
52	rather	_	rather	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	59	MOD_mod	true
53	uncommon,	_	uncommon,	NFP	O	_	contrast-01	_	0	IGNORE	true
54	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
55	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	67	APP_op1	true
56	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
57	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	58	MOD_s	true
58	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
59	damp	_	damp	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_o	true
60	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
61	order	_	order	NN	O	_	cause-01	_	0	IGNORE	true
62	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
63	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	55	MOD_mod	true
64	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	66	MOD_mod	true
65	unset	_	unset	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	66	MOD_s	true
66	plaster	_	plaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_s	true
67	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_s	true
68	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
69	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	67	APP_op2	true
70	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
71	wet	_	wet	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	APP_s	true
72	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
73	area	_	area	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	71	APP_s	true
74	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
75	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
76	will	_	will	MD	O	_	thing	_	0	IGNORE	true
77	be	_	be	VB	O	_	person	_	0	IGNORE	true
78	adding	_	add	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	73	APP_mod	true
79	plaster	_	plaster	NN	O	_	$LEMMA$	_	0	IGNORE	true
80	"mud	_	"mud	NNP	O	_	$LEMMA$	_	0	IGNORE	true
81	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[14@@r@@_NAME_, 23@@s@@slow-down-03, 25@@a@@down, 24@@t@@way, 17@@a@@and, 58@@d@@plaster, 3@@explicitanon0@@bit, 69@@s@@obligate-01, 7@@s@@discover-01, 29@@explicitanon0@@-, 73@@b@@area, 9@@d@@pop, 32@@d@@air, 44@@d@@you, 63@@s@@add-02, 12@@s@@pop-01, 19@@d@@plaster, 52@@s@@rather, 65@@s@@unset, 59@@d@@damp, 37@@d@@you, 41@@d@@plaster, 55@@s@@keep-04, 36@@s@@have-condition-91, 66@@d@@plaster, 1@@s@@take-10, 30@@h@@expose-01, 64@@explicitanon0@@more, 57@@s@@set, 67@@a@@or, 39@@o@@build-up-05, 78@@d@@add-02, 11@@p@@probable, 71@@s@@wet-01, 5@@d@@search-01]
sentence=1	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
2	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	dwarf	_	dwarf	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	Hamster	_name_	Hamster	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	tomorrow	_	tomorrow	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	talking	_	talk	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	7	APP_op2	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
14	Mom	mom	Mom	NNP	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	11	APP_o	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
16	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
18	that	_	that	IN	O	_	and	_	0	IGNORE	true
19	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	17	APP_s	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-11	(s(), o())	20	APP_o	true
23	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	wheel	_	wheel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	night	_name_	night	NN	O	(n2<root> / --LEX--  :dayperiod-of (d / date-entity  :time-of (o<mod>)))	$LEMMA$	(mod())	22	MOD_mod	true
28	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	would	_	would	MD	O	_	thing	_	0	IGNORE	true
31	disturb	_	disturb	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	true
32	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
33	sleep	_	sleep	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_s	true
34	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	7	MOD_s	true
35	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_o	true
37	her	_	she	PRP	O	_	cause-01	_	0	IGNORE	true
38	no	_	no	UH	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
39	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	36	MOD_o	true
40	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	said	_	say	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	39	APP_s	true
42	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
43	energetic	_	energetic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	67	APP_dom	true
44	at	_	at	IN	O	_	i	_	0	IGNORE	true
45	night	_name_	night	NN	O	(n2<root> / --LEX--  :dayperiod-of (d / date-entity  :time-of (o<mod>)))	$LEMMA$	(mod())	43	MOD_mod	true
46	at	_	at	IN	O	_	i	_	0	IGNORE	true
47	my	_	my	PRP$	O	_	mean-01	_	0	IGNORE	true
48	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
49	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
50	right	_	right	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
51	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	52	MOD_mod	true
52	door	_	door	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
53	to	_	to	IN	O	_	thing	_	0	IGNORE	true
54	hers	_	hers	PRP	O	_	i	_	0	IGNORE	true
55	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	34	MOD_s	true
56	i	_	i	PRP	O	_	and	_	0	IGNORE	true
57	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	55	APP_o	true
58	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
59	are	_	be	VBP	O	_	person	_	0	IGNORE	true
60	wheels	_	wheel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	71	APP_o	true
61	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
62	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	63	MOD_mod	true
63	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	60	MOD_s	true
64	noise	_	noise	NN	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_o	true
65	at	_	at	RB	O	_	$LEMMA$	_	0	IGNORE	true
66	all	_	all	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	at-$LEMMA$	(mod())	63	MOD_mod	true
67	what	_	what	WP	O	(r<root> / --LEX--  :domain (q<dom>))	amr-unknown	(dom())	71	APP_s	true
68	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
69	be	_	be	VB	O	_	person	_	0	IGNORE	true
70	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
71	price	_	price	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	57	APP_s	true
72	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
73	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
74	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[36@@s@@tell-01, 14@@p@@person, 28@@s@@cause-01, 66@@s@@at-all, 19@@d@@we, 64@@d@@noise, 10@@p@@just, 45@@d@@date-entity, 22@@s@@take-out-11, 71@@s@@price-01, 5@@d@@Hamster, 60@@d@@wheel, 27@@d@@date-entity, 57@@s@@hear-01, 25@@d@@wheel, 55@@s@@contrast-01, 17@@s@@say-01, 43@@d@@energetic, 7@@a@@and, 62@@explicitanon0@@-, 48@@b@@room, 63@@s@@make-01, 34@@s@@contrast-01, 52@@d@@door, 50@@p@@right, 4@@p@@dwarf, 15@@a@@and, 2@@s@@get-01, 14@@f@@Mom, 39@@s@@cause-01, 38@@d@@no, 33@@d@@sleep-01, 45@@n2@@night, 6@@n@@tomorrow, 27@@n2@@night, 20@@o@@obligate-01, 41@@d@@say-01, 51@@p@@next, 67@@r@@amr-unknown, 31@@s@@disturb-01, 11@@t@@talk-01, 14@@h@@have-rel-role-91]
sentence=1	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
2	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	APP_op1	true
4	,	_	,	,	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	and	(op2(s()), op1(s()))	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
7	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	have	_	have	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	3	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
11	another	_	another	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	,	_	,	,	O	_	and	_	0	IGNORE	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_op2	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_s	true
18	,	_	,	,	O	_	and	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	pour	_	pour	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	APP_op1	true
22	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	wheel	_	wheel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
27	,	_	,	,	O	_	and	_	0	IGNORE	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
29	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	put	_	put	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	28	APP_op2	true
31	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	rubber	_	rubber	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	it's	_	it's	PRP$	O	_	mean-01	_	0	IGNORE	true
35	edges	_	edge	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o2	true
36	,	_	,	,	O	_	mean-01	_	0	IGNORE	true
37	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
38	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
39	that	_	that	WDT	O	_	i	_	0	IGNORE	true
40	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
41	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	MOD_s	true
42	the	_	the	DT	O	_	person	_	0	IGNORE	true
43	noise	_	noise	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_o	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@another, 2@@s@@quite, 3@@s@@sure-02, 13@@p@@all, 22@@explicitanon0@@some, 28@@a@@or, 30@@b@@put-01, 38@@d@@part, 23@@d@@oil, 43@@d@@noise, 29@@p@@even, 32@@d@@rubber, 35@@d@@edge, 21@@s@@pour-01, 26@@d@@wheel, 17@@s@@do-02, 8@@o@@obligate-01, 10@@s@@buy-01, 31@@p@@some, 6@@explicitanon0@@-, 7@@p@@even, 4@@a@@and, 41@@s@@make-01, 15@@s@@need-01, 5@@d@@you]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	dwarf	_	dwarf	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	hamster	_	hamster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
7	HATES	hates	hate	VBZ	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	5	MOD_s	true
8	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	wheel	_	wheel	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
10	and	_	and	CC	O	_	$LEMMA$	_	2	IGNORE	true
11	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	-	_	-	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@p@@dwarf, 11@@explicitanon0@@-, 12@@s@@use-01, 2@@s@@have-03, 5@@d@@hamster, 1@@d@@i, 7@@l@@hate-01, 9@@m@@wheel]
sentence=1	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
2	name	_	name	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	5	MOD_poss	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	Josalyn_Leainne_Creek	_name_	Creek	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op2	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	MOD_op1	true
6	i'm	_	i'm	NNP	O	_	year	_	40	IGNORE	true
7	19_years_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	10	MOD_mod	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	MOD_op1	true
9	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
10	graduated	_	graduate	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	APP_op2	true
11	from	_	from	IN	O	_	have-rel-role-91	_	0	IGNORE	true
12	high	_	high	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	May_adn_of_this_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
15	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	i	_	i	PRP	O	_	1	_	0	IGNORE	true
17	love	_	love	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op3	true
18	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	40	MOD_op1	true
20	i'm	_	i'm	NNS	O	_	and	_	0	IGNORE	true
21	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
22	at	_	at	IN	O	_	and	_	0	IGNORE	true
23	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	40	MOD_o	true
27	drama	_	drama	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
30	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	job	_	job	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	26	MOD_mod	true
32	which	_	which	WDT	O	_	i	_	0	IGNORE	true
33	was	_	be	VBD	O	_	mean-01	_	0	IGNORE	true
34	mcallister's	_	mcallister's	CD	O	_	$LEMMA$	_	0	IGNORE	true
35	deli	_	deli	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_poss	true
36	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
37	i',	_	i',	NN	O	_	person	_	0	IGNORE	true
38	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
39	mormon	_	mormon	NN	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	43	MOD_mod	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
41	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	hvae	_	hvae	VBP	O	_	$LEMMA$	_	43	IGNORE	true
43	changed	_	change	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	71	APP_op2	true
44	to	_	to	TO	O	_	thing	_	0	IGNORE	true
45	be	_	be	VB	O	_	person	_	0	IGNORE	true
46	a	_	a	DT	O	_	1	_	0	IGNORE	true
47	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	48	MOD_s	true
48	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
49	that	_	that	IN	O	_	more	_	0	IGNORE	true
50	pwople	_	pwople	NN	O	(d<root> / --LEX--)	_NAME_	()	52	APP_s	true
51	are	_	be	VBP	O	_	person	_	40	IGNORE	true
52	wanting	_	want	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	48	MOD_o	true
53	to	_	to	IN	O	_	thing	_	0	IGNORE	true
54	hirier	_	hirier	NN	O	_	$LEMMA$-01	_	48	IGNORE	true
55	and	_	and	CC	O	_	$LEMMA$	_	40	IGNORE	true
56	i'm	_	i'm	NNP	O	_	cause-01	_	0	IGNORE	true
57	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	40	MOD_s	true
58	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
59	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	57	APP_o	true
60	whenever	_	whenever	WRB	O	_	$LEMMA$	_	0	IGNORE	true
61	you	_	you	PRP	O	_	$LEMMA$	_	43	IGNORE	true
62	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	59	MOD_mod	true
63	me	_	I	PRP	O	_	and	_	0	IGNORE	true
64	but	_	but	CC	O	_	contrast-01	_	55	IGNORE	true
65	i	_	i	PRP	O	_	1	_	0	IGNORE	true
66	go	_	go	VBP	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	71	APP_op1	true
67	to	_	to	IN	O	_	and	_	0	IGNORE	true
68	church	_	church	NN	O	(d<root> / --LEX--)	$LEMMA$	()	66	APP_s	true
69	on	_	on	IN	O	_	and	_	0	IGNORE	true
70	every_sunday	_name_	sunday	NN	O	(n3<root> / --LEX--  :name-of (e / event  :time-of (l<mod>)))	_NAME_	(mod())	66	MOD_mod	true
71	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	APP_op2	true
72	i	_	i	PRP	O	_	1	_	0	IGNORE	true
73	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
74	a	_	a	DT	O	_	1	_	0	IGNORE	true
75	doctor's	_	doctor'	NNS	O	_	_NAME_	_	76	IGNORE	true
76	appointment	_	appointment	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	66	MOD_s	true
77	this_thursday	_name_	thursday	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	66	MOD_mod	true
78	at	_	at	IN	O	_	today	_	0	IGNORE	true
79	2;30	_	2;30	CD	O	_	$LEMMA$	_	51	IGNORE	true
80	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
81	i	_	i	PRP	O	_	1	_	0	IGNORE	true
82	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	71	MOD_s	true
83	you	_	you	PRP	O	_	$LEMMA$	_	40	IGNORE	true
84	h=guys	_	h=guys	NFP	O	_	$LEMMA$	_	82	IGNORE	true
85	hirier	_	hirier	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	82	APP_o	true
86	me	_	I	PRP	O	_	cause-01	_	0	IGNORE	true
87	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	66	MOD_o	true
88	i	_	i	PRP	O	_	1	_	0	IGNORE	true
89	work	_	work	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	92	APP_op1	true
90	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	91	MOD_mod	true
91	hard	_	hard	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	89	MOD_s	true
92	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	APP_op1	true
93	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
94	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	95	MOD_mod	true
95	care	_	care	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	92	APP_op2	true
96	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
97	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
98	much	_	much	JJ	O	_	cause-01	_	0	IGNORE	true
99	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	101	APP_s	true
100	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	101	MOD_mod	true
101	pay	_	pay	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	95	APP_s	true
102	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
103	i've	_	i've	XX	O	_	and	_	0	IGNORE	true
104	been	_	be	VBN	O	_	person	_	0	IGNORE	true
105	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	114	APP_op2	true
106	for	_	for	IN	O	_	or	_	0	IGNORE	true
107	a	_	a	DT	O	_	1	_	0	IGNORE	true
108	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	105	APP_s	true
109	ever	_	ever	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	110	MOD_mod	true
110	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	105	MOD_mod	true
111	i	_	i	PRP	O	_	1	_	0	IGNORE	true
112	have	_	have	VBP	O	_	person	_	0	IGNORE	true
113	graduated	_	graduate	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	110	APP_op1	true
114	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	MOD_op1	true
115	i	_	i	PRP	O	_	1	_	0	IGNORE	true
116	hate	_	hate	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	114	MOD_s	true
117	dram	_	dram	NN	O	_	$LEMMA$	_	0	IGNORE	true
118	a	_	a	DT	O	_	1	_	0	IGNORE	true

nodealignment=[99@@d@@you, 40@@a@@and, 70@@e@@event, 12@@d@@high, 17@@s@@love-01, 2@@m@@name-01, 70@@n3@@_NAME_, 4@@n@@_NAME_, 18@@d@@animal, 47@@m@@more, 21@@p@@great, 77@@n@@thursday, 30@@p@@last, 100@@p@@guy, 26@@s@@have-03, 39@@r@@religious-group, 27@@d@@drama, 59@@s@@work-01, 94@@explicitanon0@@-, 52@@s@@want-01, 68@@d@@church, 66@@p@@go-02, 76@@s@@appointment, 114@@a@@and, 92@@a@@and, 105@@s@@look-01, 47@@b@@good-02, 108@@d@@job, 57@@c@@will-02, 110@@w@@since, 5@@a@@and, 8@@a@@and, 14@@n@@_NAME_, 19@@a@@and, 35@@d@@deli, 62@@s@@need-01, 50@@d@@_NAME_, 43@@s@@change-01, 87@@s@@cause-01, 4@@p@@person, 82@@s@@hope-01, 10@@s@@graduate-01, 85@@d@@hirier-01, 71@@a@@and, 101@@s@@pay-01, 7@@t@@temporal-quantity, 31@@w@@job, 7@@y@@year, 48@@d@@person, 39@@n@@_NAME_, 90@@s@@very, 95@@s@@care-01, 91@@s@@hard-02, 89@@d@@work-01, 109@@p@@ever, 113@@d@@graduate-01, 116@@s@@hate-01, 23@@s@@work-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	applied	_	apply	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_op2	true
3	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
4	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	student	_	student	NN	O	(p<root> / person  :mod-of (y<mod>)  :ARG0-of (f / --LEX--))	study-01	(mod())	7	MOD_mod	true
7	visa	_	visa	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
9	study	_	study	VB	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	Canada,	canada,	canada,	CD	O	(a<root> / --LEX--  :op2 (f<op2>))	and	(op2())	0	ROOT	true
12	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
13	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
14	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	1	_	0	IGNORE	true
17	valid	_	valid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
18	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	17	MOD_mod	true
19	October_of_2015	_name_	2015	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_DATE_	()	18	APP_op1	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@w@@until, 2@@c@@apply-01, 1@@d@@i, 6@@f@@study-01, 17@@s@@valid-02, 13@@s@@receive-01, 19@@d@@date-entity, 7@@d@@visa, 9@@o@@study-01, 6@@p@@person, 19@@explicitanon0@@_DATE_, 4@@s@@get-01, 11@@a@@and]
sentence=1	Problem	problem	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	14	APP_s	true
2	is,	_	is,	VBP	O	_	cause-01	_	0	IGNORE	true
3	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
4	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	reason,	_	reason,	NNS	O	_	cause-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	oppose-01	_	0	IGNORE	true
7	visa	_	visa	NN	O	(d<root> / --LEX--)	$FORM$	()	8	APP_s	true
8	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	APP_s	true
9	took	_	take	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-10	(o(s()))	1	APP_dom	true
10	longer	_	long	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	9	APP_o	true
11	than	_	than	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	more	(s(), o())	0	ROOT	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	should,	_	should,	VBZ	O	_	mean-01	_	0	IGNORE	true
14	thus	_	thus	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	APP_o	true
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	true
16	missed	_	miss	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_o	true
17	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
18	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	semester	_	semester	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	(visa	_	(visa	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	issued	_	issue	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	16	MOD_mod	true
23	to	_	to	IN	O	_	and	_	0	IGNORE	true
24	me	_	I	PRP	O	_	i	_	0	IGNORE	true
25	about_25_days	_name_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
27	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op1	true
29	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_s	true
30	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	couldn't	_	couldn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
32	attend),	_	attend),	MD	O	_	and	_	0	IGNORE	true
33	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
34	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	no	_	no	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
36	longer	_	longer	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	no-$LEMMA$	(mod())	37	MOD_mod	true
37	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_o	true
38	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
39	go	_	go	VB	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	37	APP_s	true
40	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
43	(because	_	(because	NFP	O	_	$LEMMA$	_	0	IGNORE	true
44	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_s	true
45	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
46	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
47	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	37	MOD_o	true
48	me	_	I	PRP	O	_	and	_	0	IGNORE	true
49	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
50	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
51	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	9	(mod())	47	MOD_mod	true
52	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
53	2012),	_	2012),	CD	O	_	-	_	0	IGNORE	true
54	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
55	found	_	find	VBD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	64	MOD_mod	true
56	a	_	a	DT	O	_	1	_	0	IGNORE	true
57	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
58	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
59	accepted	_	accept	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	57	MOD_s	true
60	me	_	I	PRP	O	_	and	_	0	IGNORE	true
61	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
62	may	_	may	MD	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	5	(mod())	59	MOD_mod	true
63	2012,	_	2012,	RB	O	_	possible-01	_	0	IGNORE	true
64	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	71	APP_o	true
65	I	i	I	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
66	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	64	APP_s	true
67	the	_	the	DT	O	_	thing	_	0	IGNORE	true
68	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	MOD_s	true
69	visa	_	visa	NN	O	(d<root> / --LEX--)	$LEMMA$	()	66	APP_s	true
70	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
71	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	11	MOD_s	true
72	issued	_	issue	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	69	MOD_s	true
73	to	_	to	IN	O	_	and	_	0	IGNORE	true
74	me	_	I	PRP	O	_	and	_	0	IGNORE	true
75	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	64	MOD_mod	true

nodealignment=[68@@s@@same-01, 55@@i@@find-01, 64@@s@@possible-01, 69@@d@@visa, 57@@d@@school, 42@@d@@school, 71@@s@@person, 33@@n@@now, 37@@s@@want-01, 10@@m@@more, 75@@explicitanon0@@interrogative, 41@@p@@that, 7@@d@@visa, 19@@n@@semester, 62@@explicitanon1@@5, 11@@s@@more, 39@@p@@go-02, 17@@d@@school, 31@@explicitanon0@@-, 18@@p@@this, 10@@b@@long-03, 20@@p@@_NAME_, 22@@s@@issue-01, 4@@p@@some, 1@@r@@problem, 49@@p@@again, 16@@s@@miss-02, 9@@c@@take-10, 26@@w@@after, 25@@n@@day, 51@@d@@date-entity, 28@@s@@start-01, 65@@d@@I, 27@@d@@school, 35@@explicitanon0@@-, 15@@d@@i, 36@@n@@no-longer, 14@@s@@cause-01, 45@@p@@only, 8@@s@@process-02, 51@@explicitanon0@@9, 29@@s@@cause-01, 47@@s@@accept-01, 72@@s@@issue-01, 44@@d@@they, 66@@s@@use-01, 59@@s@@accept-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	expressive	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	cage	_	cage	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	APP_s	true
7	whhich	_	whhich	VBN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	_NAME_	(mod())	4	MOD_mod	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-much	(mod())	10	MOD_mod	true
10	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	IMPOSSIBLE	impossible	impossible	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	possible-01	(o(s()))	0	ROOT	true
12	to	_	to	TO	O	_	-	_	0	IGNORE	true
13	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_o	true
14	from	_	from	IN	O	_	-	_	0	IGNORE	true
15	:	_	:	:	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@s@@have-03, 5@@d@@i, 1@@d@@this, 9@@s@@pretty-much, 13@@s@@escape-01, 11@@o@@possible-01, 10@@p@@much, 7@@explicitanon0@@_NAME_, 4@@r@@cage]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	filter	_	filter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	device	_	device	NN	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
10	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
11	DSL	dsl	DSL	NNP	O	(d<root> / --LEX--)	_NAME_	()	9	APP_s	true
12	modem,	_	modem,	NNP	O	_	mean-01	_	0	IGNORE	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	home	_	home	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	filter	_	filter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
18	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
19	filters	_	filter	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
20	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	jacks,	_	jacks,	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
24	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
25	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
26	which	_	which	WDT	O	_	except-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	DSL	dsl	DSL	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	modem	_	modem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	connects	_	connect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_o	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[13@@a@@or, 19@@s@@filter-01, 16@@p@@home, 17@@d@@filter, 22@@d@@jacks,, 7@@p@@each, 9@@s@@except-01, 5@@d@@filter, 20@@p@@all, 8@@i@@device, 25@@p@@one, 11@@d@@_NAME_, 2@@s@@need-01, 29@@d@@modem, 1@@d@@You, 23@@s@@except-01, 15@@p@@whole, 30@@s@@connect-01]
sentence=1	It's	it's	it's	PRP	O	_	i	_	0	IGNORE	true
2	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	real-04	(mod())	3	MOD_mod	true
3	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	hard-02	(dom())	0	ROOT	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_dom	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	absolutely	_	absolutely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	absolute	(mod())	11	MOD_mod	true
11	dark	_	dark	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
12	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_mod	true
13	accessible	_	accessible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	access-01	(s())	7	MOD_s	true
14	to	_	to	IN	O	_	-	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
16	when	_	when	WRB	O	_	i	_	0	IGNORE	true
17	you're	_	you're	PRP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-located-at-91	(mod(), s())	3	MOD_mod	true
18	outside	_	outside	RB	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@b@@place, 3@@r@@hard-02, 11@@s@@dark-02, 10@@p@@absolute, 15@@d@@you, 13@@s@@access-01, 5@@s@@find-01, 12@@d@@and, 17@@s@@you're-located-at-91, 2@@s@@real-04, 18@@d@@outside]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	3	MOD_s	true
5	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
6	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	female	_	female	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	nudes	_	nude	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	considering	_	consider	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	APP_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	nearly	_	nearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	near	(s())	13	MOD_s	true
13	naked	_	naked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	MOD_s	true
14	girls/women	_	girls/woman	NNS	O	(d<root> / --LEX--)	_NAME_	()	20	APP_op1	true
15	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
16	at	_	at	IN	O	_	relative-position	_	0	IGNORE	true
17	pools	_	pool	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
19	beaches	_	beach	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	completely	_	completely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	complete-02	(s())	23	MOD_s	true
23	naked	_	naked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	24	MOD_s	true
24	manikins	_	manikin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	show	_	show	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	24	MOD_s	true
27	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	store	_	store	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	windows	_	window	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	malls	_	mall	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
33	during	_	during	IN	O	_	i	_	0	IGNORE	true
34	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
35	in	_	in	IN	O	_	i	_	0	IGNORE	true
36	display	_	display	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_s	true
37	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[8@@p@@female, 14@@d@@_NAME_, 4@@s@@be, 23@@s@@naked, 37@@explicitanon0@@interrogative, 3@@s@@think-01, 1@@d@@You, 12@@s@@near, 17@@d@@pool, 15@@s@@see-01, 20@@a@@and, 2@@explicitanon0@@-, 30@@b@@window, 24@@d@@manikin, 19@@d@@beach, 22@@s@@complete-02, 32@@b@@mall, 29@@p@@store, 34@@s@@change-01, 26@@s@@show-up-02, 36@@d@@display-01, 18@@b@@and, 10@@s@@consider-02, 13@@s@@naked, 6@@s@@cause-01, 9@@d@@nude]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	have	_	have	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
3	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	4	MOD_mod	true
4	eaten	_	eat	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
5	at	_	at	IN	O	_	-	_	0	IGNORE	true
6	the	_	the	DT	O	_	-	_	0	IGNORE	true
7	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	have	_	have	VBP	O	_	-	_	0	IGNORE	true
10	listed	_	list	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	nor	_	nor	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	-	(op2(), op1())	0	ROOT	true
12	do	_	do	VBP	O	_	person	_	0	IGNORE	true
13	I	i	I	PRP	O	_	-	_	0	IGNORE	true
14	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
18	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@know-01, 16@@d@@anyone, 8@@d@@you, 4@@s@@eat-01, 1@@d@@i, 10@@s@@list-01, 7@@d@@one, 3@@n@@ever, 11@@a@@-, 2@@explicitanon0@@-]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	airport,	_	airport,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	follow	_	follow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	signs	_	sign	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	"Paris	"paris	"Paris	NFP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_o	true
10	by	_	by	IN	O	_	name	_	0	IGNORE	true
11	train"	_	train"	ADD	O	_	mean-01	_	0	IGNORE	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@airport,, 8@@s@@say-01, 6@@d@@sign, 9@@d@@_NAME_, 4@@s@@follow-02]
sentence=1	try	_	try	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
2	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	2	MOD_s	true
4	photoscape	_	photoscape	FW	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
5	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
6	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_s	true
7	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	6	MOD_s	true
8	options..	_	options..	NN	O	(d<root> / --LEX--)	thing	()	6	APP_o	true
9	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[2@@d@@something, 7@@s@@differ-02, 3@@s@@resemble-01, 1@@y@@you, 8@@d@@thing, 4@@n@@_NAME_, 1@@explicitanon0@@imperative, 1@@b@@try-01, 4@@c@@company, 6@@s@@have-03]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	check	_	check	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	one	_	one	CD	O	(d<root> / --LEX--)	1	()	4	APP_s	true
7	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	6	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	hospital	_	hospital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	performance	_	performance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	procedure	_	procedure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
16	Bumrungard_Hospital	_name_	Hospital	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
17	or	_	or	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
18	Yanhee_Hospital	_name_	Hospital	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@1, 10@@d@@hospital, 9@@s@@major-02, 16@@n@@_NAME_, 2@@s@@need-01, 17@@a@@or, 1@@d@@You, 18@@p@@person, 16@@p@@person, 12@@s@@performance-02, 18@@n@@_NAME_, 14@@d@@procedure, 13@@p@@this, 4@@s@@check-01, 7@@s@@include-91]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
4	invasive	_	invasive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	surgery	_	surgery	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
6	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	could	_	could	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
8	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	infections,	_	infections,	NNP	O	_	contrast-01	_	0	IGNORE	true
11	accidental	_	accidental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	nicks	_	nick	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
14	cuts	_	cut	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	13	APP_op2	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	cause	_	cause	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	too	_	too	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[14@@d@@cut-02, 19@@p@@too, 17@@p@@other, 11@@p@@accidental, 18@@d@@problem, 13@@a@@and, 12@@d@@nick-01, 2@@d@@you, 8@@p@@also, 7@@f@@possible-01, 16@@s@@cause-01, 9@@s@@get-01, 4@@p@@invasive, 5@@s@@surgery-01]
sentence=1	Maybe	maybe	maybe	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	6	MOD_s	true
2	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	8	APP_s	true
3	an	_	an	DT	O	_	possible-01	_	0	IGNORE	true
4	experienced	_	experienced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	experience-01	(s())	5	MOD_s	true
5	doctor	_	doctor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
7	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	6	MOD_s	true
8	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	6	APP_s	true
9	than	_	than	IN	O	_	that	_	0	IGNORE	true
10	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	guy	_	guy	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	cheaper	_	cheap	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	cheap-02	(s())	11	MOD_s	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	6	MOD_s	true
16	less	_	less	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	experienced	_	experienced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
18	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[6@@s@@possible-01, 5@@d@@doctor, 2@@s@@have-03, 10@@p@@some, 16@@s@@less, 11@@p@@guy, 4@@s@@experience-01, 14@@b@@cheap-02, 14@@m@@more, 17@@s@@experienced-01, 1@@s@@possible-01, 7@@s@@possible-01, 8@@m@@more, 15@@s@@contrast-01, 8@@b@@good-02]
sentence=1	I've	i've	I've	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	cats	_	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
8	refused	_	refuse	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	eat	_	eat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	canned	_	can	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
13	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[12@@s@@can-01, 6@@d@@cat, 8@@s@@refuse-01, 10@@s@@eat-01, 13@@d@@food, 2@@s@@have-03, 1@@d@@I've, 4@@explicitanon0@@lot]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	end	_	end	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	sump,	_	sump,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
10	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
11	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
12	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	return	_	return	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	pump	_	pump	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
16	a	_	a	DT	O	_	thing	_	0	IGNORE	true
17	hose	_	hose	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	puts	_	put	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	17	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	tank	_	tank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o2	true
26	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[10@@s@@have-03, 8@@d@@you, 22@@a@@back, 21@@d@@water, 25@@d@@tank, 12@@p@@small, 17@@m@@hose, 19@@b@@put-01, 3@@p@@other, 13@@s@@return-01, 4@@b@@end, 14@@d@@pump]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Hydor_SlimSkim_Nano	_name_	Nano	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	7	APP_dom	true
3	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
4	a	_	a	DT	O	_	sl$LEMMA$sh	_	0	IGNORE	true
5	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
6	nano	_	nano	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	protein	_	protein	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	9	APP_o	true
8	skimmer,	_	skimmer,	NFP	O	_	mean-01	_	0	IGNORE	true
9	it's	_	it's	PRP$	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	0	ROOT	true
10	an	_	an	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
11	in-tank	_	in-tank	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	design	_	design	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_s	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	MOD_s	true
15	easily	_	easily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	easy-05	(s())	16	MOD_s	true
16	sit	_	sit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
17	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
19	sump	_	sump	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	APP_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@d@@your, 19@@m@@sump, 2@@n@@_NAME_, 11@@p@@in-tank, 9@@s@@mean-01, 7@@r@@protein, 2@@p@@product, 16@@s@@sit-01, 5@@s@@good-02, 12@@d@@design-01, 6@@p@@nano, 14@@s@@possible-01, 15@@s@@easy-05]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	an	_	an	DT	O	_	thing	_	0	IGNORE	true
5	e-reader	_	e-reader	NN	O	(d<root> / --LEX--)	weld-01	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	5	MOD_s	true
8	a	_	a	DT	O	_	or	_	0	IGNORE	true
9	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	than	_	than	IN	O	_	except-01	_	0	IGNORE	true
13	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	read	_	read	VBN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@want-01, 11@@p@@more, 1@@d@@i, 7@@s@@do-02, 5@@d@@weld-01, 9@@p@@little, 10@@s@@bit, 13@@p@@just, 14@@p@@read-01, 2@@p@@just]
sentence=1	I'm	i'm	I'm	NNS	O	_	say-01	_	0	IGNORE	true
2	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	for	_	for	IN	O	_	or	_	0	IGNORE	true
4	suggestions	_	suggestion	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	suggest-01	(s())	2	APP_s	true
5	from	_	from	IN	O	_	thing	_	0	IGNORE	true
6	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	who	_	who	WP	O	_	capable-01	_	0	IGNORE	true
8	knows	_	know	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	philly	_	philly	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	8	APP_o	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	where	_	where	WRB	O	(d<root> / --LEX--)	amr-unknown	()	12	APP_op3	true
15	to's	_	to's	NN	O	(d<root> / --LEX--)	thing	()	12	APP_op2	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@s@@suggest-01, 6@@d@@anyone, 2@@s@@look-01, 10@@n@@_NAME_, 11@@d@@area, 12@@a@@and, 14@@d@@amr-unknown, 15@@d@@thing, 8@@s@@know-01]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	get	_	get	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
4	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
5	tank	_	tank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
7	sure	_	sure	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	en$LEMMA$-01	(o(s()))	0	ROOT	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	wash	_	wash	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	inside	_	inside	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	(with	_	(with	-LRB-	O	_	-	_	0	IGNORE	true
13	plain	_	plain	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
14	water)	_	water)	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	7	MOD_s	true
15	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	wash	_	wash	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
18	the	_	the	DT	O	_	and	_	0	IGNORE	true
19	gravel	_	gravel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	(with	_	(with	NFP	O	_	$LEMMA$	_	0	IGNORE	true
21	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
23	too)	_	too)	NNP	O	_	mean-01	_	0	IGNORE	true
24	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-11	(s(), o())	7	MOD_s	true
25	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
26	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	stuff	_	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
31	floating	_	float	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	top	_	top	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@d@@gravel, 14@@s@@and, 15@@n@@then, 21@@p@@only, 5@@d@@tank, 9@@s@@wash-01, 17@@s@@wash-01, 3@@t@@get-01, 33@@b@@top, 24@@s@@take-out-11, 11@@d@@inside, 22@@d@@water, 13@@s@@plain, 26@@p@@all, 7@@c@@ensure-01, 31@@s@@float-01, 2@@d@@you, 28@@d@@stuff]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	4	MOD_mod	true
4	screws	_	screw	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	attach	_	attach	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
7	the	_	the	DT	O	_	post-01	_	0	IGNORE	true
8	sight	_	sight	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
9	to	_	to	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	wang	_	wang	NN	O	(d<root> / --LEX--)	_NAME_	()	6	APP_o2	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@_NAME_, 3@@explicitanon0@@2, 1@@d@@You, 6@@b@@attach-01, 2@@s@@have-03, 4@@d@@screw, 8@@d@@sight-01]
sentence=1	Flip	flip	flip	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	4	APP_op1	true
2	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
3	switch	_	switch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
5	adjust	_	adjust	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	4	APP_op2	true
6	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	laser	_	laser	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	sight	_	sight	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_o	true
9	according	_	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	4	MOD_s	true
10	to	_	to	IN	O	_	conform-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	and	_	0	IGNORE	true
12	directions	_	direction	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	owner	_	owner	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	own-01	(mod())	16	MOD_mod	true
16	manual	_	manual	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	laser	_	laser	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	sight	_	sight	NN	O	_	$LEMMA$	_	0	IGNORE	true
23	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@p@@own-01, 8@@m@@sight, 1@@explicitanon0@@imperative, 7@@p@@laser, 16@@b@@manual, 18@@s@@come-01, 3@@d@@switch, 6@@d@@your, 1@@h@@flip-01, 9@@s@@say-01, 4@@a@@and, 12@@d@@direction, 5@@l@@adjust-01]
sentence=1	I'd	i'd	i'd	PRP	O	_	i	_	0	IGNORE	true
2	be	_	be	VB	O	_	person	_	0	IGNORE	true
3	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
5	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	helps,	_	helps,	NFP	O	_	and	_	0	IGNORE	true
7	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	someone	_	someone	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	who	_	who	WP	O	_	name	_	0	IGNORE	true
10	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	5	MOD_s	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	Fujairah	_name_	Fujairah	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
15	lives	_	live	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op2	true
16	there.	_	there.	NN	O	_	et-cetera	_	0	IGNORE	true
17	:	_	:	:	O	_	contrast-01	_	0	IGNORE	true
18	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@s@@be-located-at-91, 5@@d@@someone, 7@@p@@especially, 15@@d@@live-01, 3@@s@@happy-01, 13@@n@@_NAME_, 8@@p@@someone, 14@@a@@or, 13@@c@@city]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	21	APP_op1	true
3	X-BOX	x-box	X-BOX	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	8	APP_dom	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	smooth	_	smooth	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	8	MOD_s	true
8	system	_	system	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
9	i	_	i	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	own	_	own	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	10	MOD_s	true
13	3	_	3	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
14	years,	_	years,	NNS	O	_	before	_	0	IGNORE	true
15	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
16	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	compatible	_	compatible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op2	true
18	to	_	to	IN	O	_	and	_	0	IGNORE	true
19	previous	_	previous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	versions	_	version	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
22	mostly	_	mostly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	most	(mod())	23	MOD_mod	true
23	important	_	important	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op4	true
24	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
25	was	_	be	VBD	O	_	person	_	0	IGNORE	true
26	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	comfortable	_	comfortable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	21	APP_op3	true
28	with	_	with	IN	O	_	-	_	0	IGNORE	true
29	the	_	the	DT	O	_	and	_	0	IGNORE	true
30	User	user	User	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	Interface	interface	Interface	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_s	true
33	the	_	the	DT	O	_	and	_	0	IGNORE	true
34	JOYSTICK....coz	_name_	joystick....coz	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op2	true
35	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
36	dont	_	dont	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	true
37	wana	_	wana	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	38	MOD_mod	true
38	hold	_	hold	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	APP_o	true
39	a	_	a	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	21	MOD_s	true
40	joystick	_	joystick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
41	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
42	gives	_	give	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	MOD_s	true
43	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
44	discomfort	_	discomfort	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	42	APP_o	true
45	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@p@@product, 36@@explicitanon0@@-, 7@@s@@smooth-04, 42@@s@@give-01, 20@@d@@version, 40@@d@@joystick, 19@@p@@previous, 3@@n@@_NAME_, 21@@a@@and, 30@@p@@User, 6@@s@@very, 8@@r@@system, 23@@d@@important, 2@@s@@feel-02, 27@@s@@comfortable-02, 37@@p@@thing, 22@@p@@most, 12@@s@@resemble-01, 16@@s@@very, 17@@s@@compatible-01, 31@@d@@Interface, 26@@s@@very, 32@@a@@and, 13@@explicitanon0@@_NUMBER_, 44@@d@@discomfort-01, 38@@s@@hold-01, 35@@d@@you, 34@@d@@joystick....coz, 39@@s@@-, 1@@d@@i, 10@@s@@own-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	do	_	do	VBP	O	_	$LEMMA$	_	0	IGNORE	true
3	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_o2	true
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
6	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	announced	_	announce	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
8	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	wii	_	wii	NN	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
11	though	_	though	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	have-concession-91	(s())	22	MOD_s	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	22	APP_s	true
13	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
16	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
17	Sony	_name_	Sony	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
18	has	_	have	VBZ	O	_	thing	_	0	IGNORE	true
19	said	_	say	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_s	true
20	about	_	about	IN	O	_	thing	_	0	IGNORE	true
21	playstation	_	playstation	NN	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
22	but	_	but	CC	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	contrast-01	(o2(), s(), o())	0	ROOT	true
23	again,	_	again,	NNP	O	_	and	_	0	IGNORE	true
24	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
25	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
26	get	_	get	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	40	MOD_mod	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	Xbox	_name_	Xbox	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
29	(which	_	(which	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
31	personally	_	personally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	personal-02	(s())	32	MOD_s	true
32	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
33	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
34	the	_	the	DT	O	_	thing	_	0	IGNORE	true
35	best	_	good	JJS	O	(g<root> / --LEX--  :degree (m / most))	good-02	()	32	APP_o	true
36	anyways)	_	anyways)	NN	O	_	and	_	0	IGNORE	true
37	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	22	APP_o	true
39	be	_	be	VB	O	_	thing	_	0	IGNORE	true
40	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	38	APP_s	true
41	for	_	for	IN	O	_	thing	_	0	IGNORE	true
42	a	_	a	DT	O	_	1	_	0	IGNORE	true
43	while	_	while	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[38@@s@@recommend-01, 11@@s@@have-concession-91, 35@@g@@good-02, 9@@s@@new-01, 6@@n@@already, 22@@b@@contrast-01, 10@@d@@_NAME_, 17@@g@@government-organization, 21@@n@@_NAME_, 35@@m@@most, 19@@s@@say-01, 28@@n@@_NAME_, 17@@n@@_NAME_, 26@@o@@get-01, 15@@s@@know-01, 40@@s@@set-01, 31@@s@@personal-02, 7@@s@@announce-01, 28@@p@@product, 4@@d@@they, 14@@explicitanon0@@-, 3@@s@@know-01, 12@@a@@and, 1@@d@@i, 43@@b@@while, 21@@c@@company, 25@@d@@you, 32@@s@@think-01]
sentence=1	According	according	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	0	ROOT	true
2	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	couple	_	couple	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	sources,	_	sources,	NNP	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	world	_	world	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	record	_	record	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
9	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	oldest	_	old	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	old	(mod())	12	MOD_mod	true
12	cat	_	cat	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	cat	_	cat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
16	in	_	in	IN	O	_	name	_	0	IGNORE	true
17	Devon,	devon,	devon,	NN	O	_	and	_	0	IGNORE	true
18	England	_name_	England	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true
19	who	_	who	WP	O	_	name	_	0	IGNORE	true
20	reportedly	_	reportedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	report-01	(s())	21	MOD_s	true
21	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
22	to	_	to	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	date-entity	(op1(), mod())	1	MOD_mod	true
23	the_age_of_36	_name_	36	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NAME_	()	22	APP_op1	true
24	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[1@@s@@say-01, 15@@d@@cat, 8@@d@@record, 20@@s@@report-01, 23@@explicitanon0@@_NAME_, 11@@m@@most, 22@@s@@date-entity, 18@@n@@_NAME_, 12@@a@@cat, 7@@p@@world, 4@@explicitanon0@@couple, 21@@s@@live-01, 23@@t@@temporal-quantity, 11@@t@@old, 18@@c@@country]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	cat	_	cat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	hate-01	_	0	IGNORE	true
6	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	its	_	its	PRP$	O	_	cause-01	_	0	IGNORE	true
9	sleep	_	sleep	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
10	aged	_	age	VBN	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	age-01	(mod(), s(), o())	6	MOD_mod	true
11	21	_name_	21	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	10	APP_o	true
12	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@_NUMBER_, 10@@b@@age-01, 6@@s@@die-01, 4@@d@@cat, 11@@t@@temporal-quantity, 9@@n@@sleep-01, 2@@s@@know-02, 1@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	be-located-at-91	_	0	IGNORE	true
4	kitten	_	kitten	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	turned	_	turn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
8	3_months	_name_	month	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	.	_	.	.	O	_	today	_	0	IGNORE	true

nodealignment=[6@@p@@just, 7@@s@@turn-02, 4@@d@@kitten, 8@@d@@month, 9@@n@@today, 2@@s@@have-03, 1@@d@@i]
sentence=1	maybe	_	maybe	RB	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
2	buy	_	buy	VB	O	(g<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (b<o>)  :ARG2 (i<s>)  :ARG0 (y / you))	$LEMMA$-01	(s(), o())	1	APP_o	true
3	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	toys	_	toy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	play	_	play	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
9	with	_	with	IN	O	_	i	_	0	IGNORE	true
10	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	give	_	give	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
12	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	APP_o	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_mod	true
17	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	u	_	u	NN	O	_	expressive	_	0	IGNORE	true
20	p	_	p	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@s@@give-01, 16@@s@@use-01, 4@@d@@toy, 18@@d@@energy, 2@@explicitanon0@@imperative, 8@@s@@play-01, 6@@d@@he, 14@@t@@way, 1@@f@@possible-01, 2@@g@@buy-01, 2@@y@@you, 7@@s@@possible-01]
sentence=1	SOLAS	_name_	SOLAS	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
2	(Safety	(safety	(Safety	NNP	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
3	Of	of	of	IN	O	_	include-91	_	0	IGNORE	true
4	Life	life	life	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	At	at	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	Sea),	sea),	Sea),	NNP	O	_	$LEMMA$	_	0	IGNORE	true
7	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	an	_	an	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
10	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	maritime	_	maritime	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	treaty,	_	treaty,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	name	(s(), o())	13	MOD_s	true
13	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-about-06	(s())	0	ROOT	true
14	about	_	about	RP	O	_	thing	_	0	IGNORE	true
15	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
16	response	_	response	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	respond-01	(s(), o())	13	MOD_o	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	tragedy	_	tragedy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	Titanic	_name_	Titanic	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@p@@product, 12@@s@@name, 2@@w@@war, 16@@s@@respond-01, 22@@n@@_NAME_, 1@@n@@_NAME_, 4@@p@@life, 2@@n@@_NAME_, 10@@p@@international, 13@@s@@come-about-06, 11@@p@@maritime, 19@@d@@tragedy]
sentence=1	Are	are	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
2	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
3	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	venues	_	venue	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	showcase	_	showcase	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	underground	_	underground	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	bands,	_	bands,	RB	O	(d<root> / --LEX--)	and	()	7	APP_o	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	venue	_	venue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
14	at	_	at	RB	O	_	i	_	0	IGNORE	true
15	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	13	MOD_mod	true
16	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	10	MOD_mod	true

nodealignment=[5@@d@@venue, 8@@p@@underground, 7@@s@@showcase-01, 9@@d@@and, 11@@p@@just, 10@@a@@or, 16@@explicitanon0@@interrogative, 15@@p@@at-all, 4@@s@@good-02, 13@@d@@venue, 3@@p@@any]
sentence=1	There's	there's	There's	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
2	the	_	the	DT	O	_	and	_	0	IGNORE	true
3	market	_	market	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	Naha,	_name_	Naha,	NNP	O	_	_NAME_	_	0	IGNORE	true
6	which	_	which	WDT	O	_	i	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	event	_	0	IGNORE	true
8	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@p@@great, 1@@s@@There's, 3@@d@@market]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	playing	_	play	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	video	_	video	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	game	_	game	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	MOD_s	true
9	a	_	a	DT	O	_	person	_	0	IGNORE	true
10	m16	_	m16	NN	O	(a2<root> / aircraft-type  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
11	Vietnam	_name_	Vietnam	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
12	model,	_	model,	NNP	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	game	_	game	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	it's	_	it's	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	13	APP_op2	true
18	3-shot	_name_	3-shot	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	shoot-02	(mod())	19	MOD_mod	true
19	burst	_	burst	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	17	APP_s	true
20	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[3@@s@@play-01, 1@@d@@i, 10@@n@@_NAME_, 18@@p@@shoot-02, 5@@p@@video, 10@@a2@@aircraft-type, 13@@a@@and, 17@@s@@and, 8@@s@@have-03, 11@@c@@country, 6@@d@@game, 19@@d@@burst-02, 11@@n@@_NAME_]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	ordered	_	order	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	receiver	_	receiver	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
9	a	_	a	DT	O	_	-	_	0	IGNORE	true
10	(I	(i	(i	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
11	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
12	chrome)	_	chrome)	NNS	O	_	and	_	0	IGNORE	true
13	coating	_	coat	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	helped	_	help	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	15	APP_o	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	gun	_	gun	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	from	_	from	IN	O	_	-	_	0	IGNORE	true
20	jamming	_	jam	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
21	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@d@@gun, 15@@s@@help-01, 10@@d@@(i, 16@@s@@keep-04, 2@@p@@also, 8@@s@@get-01, 11@@s@@think-01, 7@@explicitanon0@@-, 20@@d@@jam-01, 6@@d@@receiver, 3@@s@@order-01, 1@@d@@He, 13@@d@@coat-01]
sentence=1	I'm	i'm	i'm	PRP	O	_	_NAME_	_	0	IGNORE	true
2	sure	_	sure	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	16	MOD_s	true
3	that	_	that	IN	O	_	request-confirmation-91	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
6	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
7	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	hotels	_	hotel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	running	_	run	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
12	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
13	the	_	the	DT	O	(d<root> / --LEX--)	name	()	16	APP_s	true
14	christchurch	_	christchurch	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	11	MOD_mod	true
15	area,	_	area,	NNP	O	_	and	_	0	IGNORE	true
16	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
17	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
19	then	_	then	RB	O	_	have-polarity-91	_	0	IGNORE	true
20	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
21	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
22	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
24	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-10	(s())	27	MOD_s	true
26	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	towns	_	town	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@d@@name, 23@@d@@some, 16@@s@@contrast-01, 6@@s@@find-01, 4@@d@@you, 14@@n@@_NAME_, 8@@d@@hotel, 25@@s@@close-10, 18@@explicitanon0@@-, 5@@s@@possible-01, 2@@s@@sure-02, 11@@s@@run-01, 7@@explicitanon0@@some, 27@@b@@town, 14@@c@@city]
sentence=1	However,	_name_	However,	LS	O	_	say-01	_	0	IGNORE	true
2	save	_	save	VBP	O	(t<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG2 (i2<o2>)  :ARG1 (i<o>)  :ARG0 (d<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	13	MOD_s	true
5	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	shots	_	shot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	rest	_	rest	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	2	APP_o2	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	falls,	_	falls,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
13	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	total	_	total	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	13	MOD_s	true
16	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
17	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
18	around	_	around	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
19	270	_	270	CD	O	(d<root> / --LEX--)	_NUMBER_	()	18	APP_op1	true
20	cascades	_	cascade	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	spread	_	spread	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-03	(s())	13	APP_s	true
23	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
24	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	nearly	_	nearly	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	22	MOD_mod	true
26	2	_	2	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	27	MOD_mod	true
27	miles	_	mile	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	25	APP_op1	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the_Iguazu_River	_name_	River	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@cause-01, 9@@h@@rest, 18@@s@@around, 5@@d@@your, 2@@t@@save-01, 6@@d@@shot, 19@@d@@_NUMBER_, 25@@s@@nearly, 22@@s@@spread-out-03, 3@@explicitanon0@@some, 27@@d@@distance-quantity, 29@@d@@River, 27@@m@@mile, 26@@explicitanon0@@_NUMBER_, 4@@s@@include-91, 20@@d@@cascade, 15@@s@@total-01, 2@@explicitanon0@@imperative]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	nearest	_	near	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	near-02	(s())	3	MOD_s	true
3	towns	_	town	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
4	to	_	to	IN	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	site	_	site	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	Puerto_Iguazu	_name_	Iguazu	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
9	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
10	Argentina,	argentina,	argentina,	CD	O	_	_NAME_	_	0	IGNORE	true
11	about	_	about	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
12	12	_	12	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
13	miles	_	mile	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	11	APP_op1	true
14	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	relative-position	_	0	IGNORE	true
16	falls,	_	falls,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
18	Foz	_name_	Foz	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	17	APP_op2	true
19	do	_	do	VBP	O	_	$LEMMA$-02	_	0	IGNORE	true
20	Iguaçu	_name_	Iguaçu	NNP	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	17	APP_op3	true
21	in	_	in	IN	O	_	contrast-01	_	0	IGNORE	true
22	Brazil,	_name_	brazil,	NN	O	_	_NAME_	_	0	IGNORE	true
23	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
24	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
25	equally	_	equally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	26	MOD_mod	true
26	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-10	(s())	18	MOD_s	true
27	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[12@@explicitanon0@@_NUMBER_, 20@@explicitanon0@@_NAME_, 13@@m@@mile, 17@@a@@and, 18@@n@@_NAME_, 3@@b@@town, 2@@b2@@near-02, 18@@c@@city, 6@@p@@site, 13@@d@@distance-quantity, 26@@s@@close-10, 25@@s@@equal, 20@@u@@url-entity, 2@@m@@most, 8@@c@@city, 8@@n@@_NAME_, 11@@s@@about]
sentence=1	Bredders	_name_	bredder	NNS	O	(d<root> / --LEX--)	_NAME_	()	10	APP_s	true
2	take	_	take	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	interest-01	(s())	4	MOD_s	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	put	_	put	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	alone	_	alone	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	in	_	in	IN	O	_	person	_	0	IGNORE	true
15	a	_	a	DT	O	_	work-01	_	0	IGNORE	true
16	breeeding	_	breeeding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	17	MOD_s	true
17	tank	_	tank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
18	for	_	for	IN	O	_	and	_	0	IGNORE	true
19	3-5_days	_name_	day	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	_NAME_	(mod())	11	MOD_mod	true
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@d@@_NAME_, 8@@s@@very, 2@@s@@take-01, 11@@s@@put-01, 13@@p@@alone, 7@@explicitanon0@@-, 16@@s@@breeeding, 19@@explicitanon0@@_NAME_, 19@@t2@@temporal-quantity, 10@@a@@and, 9@@s@@interest-01, 4@@d@@one, 17@@d@@tank]
sentence=1	Given	given	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_o	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	chance	_	chance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	APP_s	true
4	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
5	cat	_	cat	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_s	true
6	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_s	true
7	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_s	true
9	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	true
10	kidney,	_	kidney,	.	O	_	$LEMMA$	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
12	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
13	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	16	MOD_s	true
16	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	MOD_s	true
17	scenario	_	scenario	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
18	would	_	would	MD	O	_	thing	_	0	IGNORE	true
19	be	_	be	VB	O	_	person	_	0	IGNORE	true
20	kidney	_	kidney	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
21	disease,	_	disease,	NNS	O	_	include-91	_	0	IGNORE	true
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
23	untreated	_	untreate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	lead	_	lead	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	20	MOD_s	true
26	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
27	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
28	renal	_	renal	JJ	O	(d<root> / --LEX--)	kidney	()	29	APP_s	true
29	failure	_	failure	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	fail-01	(s())	25	APP_o	true
30	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@s@@give-01, 9@@explicitanon0@@1, 27@@s@@possible-01, 24@@s@@possible-01, 20@@d@@kidney, 29@@s@@fail-01, 28@@d@@kidney, 8@@s@@have-03, 13@@s@@think-01, 16@@s@@case-04, 6@@s@@possible-01, 17@@d@@scenario, 3@@s@@chance-02, 4@@d@@your, 5@@m@@cat, 15@@m@@most, 15@@b2@@bad-07, 7@@p@@only, 23@@s@@untreate-01, 25@@t@@lead-03, 11@@d@@i]
sentence=1	1)	_	1)	LS	O	_	multi-sentence	_	0	IGNORE	true
2	The_Italian_Renaissance	_name_	Renaissance	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	began	_	begin	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	opening	_	opening	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	open-01	(mod(), s())	6	MOD_s	true
6	phase	_	phase	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	Renaissance,	renaissance,	renaissance,	JJ	O	_	_NAME_	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	APP_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	15	APP_s	true
15	change	_	change	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_mod	true
17	achievement	_	achievement	NN	O	(d<root> / --LEX--)	achieve-01	()	16	APP_op2	true
18	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
19	Europe	_name_	Europe	NNP	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	11	MOD_mod	true
20	that	_	that	WDT	O	_	date-interval	_	0	IGNORE	true
21	spanned	_	span	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
22	the	_	the	DT	O	(m<root> / --LEX--  :unit-of (a<mod>))	date-interval	(mod())	3	MOD_mod	true
23	period	_	period	NN	O	(o<root> / --LEX--  :op1 (b<op1>))	date-interval	(op1())	21	APP_o	true
24	from	_	from	IN	O	_	date-interval	_	3	IGNORE	true
25	the_end_of_the_13th_century	_name_	century	NN	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	23	APP_op1	true
26	to	_	to	IN	O	_	date-interval	_	0	IGNORE	true
27	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
28	1600,	_	1600,	NN	O	_	date-entity	_	0	IGNORE	true
29	marking	_	mark	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
30	the	_	the	DT	O	_	date-interval	_	0	IGNORE	true
31	transition	_	transition	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	29	APP_o	true
32	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	Medieval	medieval	Medieval	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
34	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
35	Early	early	Early	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	Modern	modern	Modern	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	37	MOD_s	true
37	Europe	europe	Europe	NNP	O	(d<root> / --LEX--)	_NAME_	()	31	APP_s	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@n@@phase, 5@@i@@open-01, 3@@s@@begin-01, 2@@n@@_NAME_, 22@@m@@date-interval, 11@@n@@period, 23@@o@@date-interval, 19@@c3@@continent, 19@@n2@@_NAME_, 33@@p@@Medieval, 13@@p@@great, 15@@s@@change-01, 14@@d@@culture, 31@@s@@transition-01, 25@@w@@war, 29@@s@@mark-01, 27@@p@@about, 25@@n@@_NAME_, 35@@p@@Early, 16@@a@@and, 2@@o2@@organization, 17@@d@@achieve-01, 36@@s@@Modern-02, 37@@d@@_NAME_, 21@@s@@span-01]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	term	_	term	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
3	renaissance	_	renaissance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	in	_	in	IN	O	_	person	_	0	IGNORE	true
6	essence	_	essence	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	modern	_	modern	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	0	ROOT	true
9	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	into	_	into	IN	O	_	-	_	0	IGNORE	true
13	currency	_	currency	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	APP_o	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	19th	_name_	19th	JJ	O	(explicitanon5<root> / --LEX--  :century-of (d2 / date-entity  :time-of (c2<mod>)))	19	(mod())	11	MOD_mod	true
17	century,	_	century,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	work	_	work	NN	O	(p<root> / --LEX--  :ARG0 (i<s>)  :location-of (e<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	historians	_	historian	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
24	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	Jacob_Burckhardt	_name_	Burckhardt	NNP	O	(p3<root> / person  :name (n2 / --LEX--)  :example-of (p<mod>))	_NAME_	(mod())	22	MOD_mod	true
26	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[8@@d@@modern-02, 16@@explicitanon5@@19, 20@@p@@work-01, 25@@n2@@_NAME_, 22@@d@@historian, 11@@s@@come-01, 3@@d@@renaissance, 6@@p@@essence, 16@@d2@@date-entity, 2@@s@@term-01, 13@@s@@currency, 25@@p3@@person]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	3	MOD_o	true
5	talk	_	talk	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	3	APP_o	true
6	to	_	to	IN	O	_	person	_	0	IGNORE	true
7	an	_	an	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	3	MOD_mod	true
8	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	american	_name_	american	NN	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
10	who	_	who	WP	O	_	name	_	0	IGNORE	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	gone	_	go	VBN	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	8	MOD_s	true
13	to	_	to	IN	O	_	name	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	UK	_name_	UK	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
16	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
18	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op1	true
21	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
22	expect	_	expect	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_s	true
23	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
24	arriving	_	arrive	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op1	true
25	at	_	at	IN	O	_	location	_	0	IGNORE	true
26	the	_	the	DT	O	_	location	_	0	IGNORE	true
27	airport	_	airport	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
28	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
29	with	_	with	IN	O	_	thing	_	0	IGNORE	true
30	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-12	(s())	28	APP_op2	true
31	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	visa	_	visa	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
33	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	34	APP_op2	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	30	APP_s	true
35	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op3	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@g@@go-02, 3@@c@@need-01, 32@@d@@visa, 4@@s@@person, 1@@d@@i, 35@@d@@everything, 15@@n@@_NAME_, 30@@s@@go-12, 34@@a@@and, 28@@d@@and, 24@@s@@arrive-01, 20@@s@@know-01, 33@@s@@process-02, 22@@d@@expect-01, 9@@c@@country, 7@@p@@person, 16@@n@@before, 8@@p@@another, 9@@n@@_NAME_, 2@@p@@just, 5@@s@@talk-01, 15@@c@@country, 27@@d@@airport]
sentence=1	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	3	APP_s	true
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
3	talked	_	talk	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	and	_	0	IGNORE	true
5	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	medical	_	medical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	medicine	(mod())	12	MOD_mod	true
12	exam	_	exam	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
13	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
14	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
15	invasion	_	invasion	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
16	of	_	of	IN	O	_	-	_	0	IGNORE	true
17	privacy	_	privacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
19	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op2	true
21	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	routine	_	routine	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
26	entering	_	enter	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
27	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@say-01, 19@@d@@other, 18@@a@@and, 5@@explicitanon0@@some, 26@@s@@enter-01, 6@@d@@person, 24@@d@@thing, 3@@s@@talk-01, 11@@p@@medicine, 8@@s@@say-01, 23@@p@@routine, 1@@d@@i, 12@@d@@exam-01, 17@@d@@privacy, 15@@s@@invasion-01, 27@@p@@another, 28@@d@@country]
sentence=1	Above	above	above	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	link	_	link	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	to	_	to	IN	O	_	-	_	0	IGNORE	true
6	the_Department_of_State	_name_	State	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
8	website,	_	website,	NNP	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	give	_	give	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
13	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	info	_	info	NN	O	(d<root> / --LEX--)	$LEMMA$rmation	()	11	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	need,	_	need,	NNP	O	_	and	_	0	IGNORE	true
19	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
20	passport	_	passport	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[20@@p@@passport, 21@@d@@information, 12@@d@@you, 11@@b@@give-01, 19@@s@@include-01, 15@@d@@information, 6@@n@@_NAME_, 13@@p@@all, 1@@b@@above, 4@@s@@link-01, 7@@d@@travel-01]
sentence=1	Skin	skin	skin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
2	Color:	color:	color:	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
3	Silkies	silkies	silkie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	6	MOD_s	true
6	skin	_	skin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	color,	_	color,	NNP	O	_	and	_	0	IGNORE	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
10	dominate	_	dominate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@s@@have-03, 5@@s@@black-05, 3@@d@@silkie, 6@@d@@skin, 10@@s@@dominate-01, 2@@s@@contrast-01, 1@@d@@skin]
sentence=1	Sussex	_name_	Sussex	NNS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	White_Skin	_name_	skin	NN	O	(d<root> / --LEX--)	_NAME_	()	2	APP_o	true
4	which	_	which	WDT	O	_	name	_	0	IGNORE	true
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
6	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
7	recessive	_	recessive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	MOD_s	true
8	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
9	dominate	_	dominate	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	8	APP_op2	true
10	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 1@@p@@person, 8@@a@@or, 2@@s@@have-03, 7@@s@@recessive-02, 9@@d@@dominate-02, 3@@d@@_NAME_, 5@@s@@possible-01]
sentence=1	Comb_Type:_Silkies	_name_	silkie	NNS	O	(d<root> / --LEX--)	_NAME_	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	walnut	_	walnut	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	combs	_	comb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	which	_	which	WDT	O	_	name	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	11	MOD_s	true
8	genetically	_	genetically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	design-01	(mod())	11	MOD_mod	true
9	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	11	MOD_mod	true
10	comb	_	comb	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	types	_	type	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
12	(Rose	(rose	(Rose	NFP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	Pea)	pea)	Pea)	NNS	O	_	contrast-01	_	0	IGNORE	true
15	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
16	is	_	be	VBZ	O	_	contrast-01	_	0	IGNORE	true
17	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	there,	_	there,	NNS	O	_	and	_	0	IGNORE	true
19	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
20	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
21	recessive	_	recessive	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@explicitanon0@@2, 17@@p@@also, 7@@s@@actual-02, 10@@p@@comb, 4@@d@@comb, 12@@p@@_NAME_, 15@@s@@single-02, 11@@p@@type, 19@@s@@contrast-01, 21@@d@@recessive, 1@@d@@_NAME_, 3@@p@@_NAME_, 2@@s@@have-03, 8@@t@@design-01]
sentence=1	The	the	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
2	Pioneers	_name_	Pioneers	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_dom	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	organization	_	organization	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_s	true
6	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	at	_	at	IN	O	_	thing	_	0	IGNORE	true
8	the_end_of_the_19th_century	_name_	century	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	pushed	_	push	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	5	MOD_s	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
12	supported	_	support	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	ideal	_	ideal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	temperance	_	temperance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	(abstaining	_	(abstaining	-LRB-	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
18	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	alcohol),	_name_	alcohol),	NNP	O	_	and	_	0	IGNORE	true
20	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
21	an	_	an	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
22	attempt	_	attempt	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	deal	_	deal	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	22	APP_s	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
27	massive	_	massive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	24	APP_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	alcoholism	_	alcoholism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	that	_	that	WDT	O	_	name	_	0	IGNORE	true
32	Ireland	_name_	Ireland	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
33	was	_	be	VBD	O	_	person	_	0	IGNORE	true
34	gripped	_	grip	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
35	by	_	by	IN	O	_	name	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@start-01, 32@@n@@_NAME_, 24@@s@@deal-01, 32@@c@@country, 27@@p@@massive, 22@@i@@attempt-01, 5@@r@@organization, 17@@n@@_NAME_, 30@@d@@alcoholism, 16@@p@@temperance, 10@@s@@push-04, 28@@s@@issue-02, 12@@s@@support-01, 14@@d@@ideal, 11@@a@@and, 8@@n@@_NAME_, 8@@c@@city, 34@@s@@grip-01, 2@@d@@_NAME_]
sentence=1	The	the	the	DT	O	_	say-01	_	0	IGNORE	true
2	pictures	_	picture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
4	broadcast	_	broadcast	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	at	_	at	IN	O	_	thing	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	rate	_	rate	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	60Hz,	60hz,	60hz,	CD	O	_	$LEMMA$	_	0	IGNORE	true
11	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	4	MOD_mod	true
14	fast	_	fast	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
15	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
16	need	_	need	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	MOD_s	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	move	_	move	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
20	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
21	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
22	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
23	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
25	a	_	a	DT	O	_	thing	_	0	IGNORE	true
26	moving,	_	moving,	NNP	O	_	so	_	0	IGNORE	true
27	flawless	_	flawless	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
28	picture	_	picture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@d@@picture, 22@@s@@see-01, 20@@d@@us, 27@@s@@flawless-02, 18@@s@@move-01, 9@@p@@about, 16@@c@@need-01, 4@@s@@broadcast-01, 15@@d@@they, 7@@t@@rate, 13@@s@@so, 14@@s@@fast-02, 28@@d@@picture]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	rate-entity-91	_	0	IGNORE	true
6	charges	_	charge	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	$0.70	_name_	$0.70	NNP	O	(d<root> / --LEX--)	_NUMBER_	()	8	APP_s	true
8	per	_	per	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	rate-entity-91	(s(), o())	6	APP_o	true
9	mile	_	mile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@d@@_NUMBER_, 8@@s@@rate-entity-91, 6@@s@@charge-01, 4@@d@@site, 9@@d@@mile, 2@@s@@see-01, 1@@d@@i]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	willing	_	willing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	will-02	(s(), o())	9	APP_s	true
5	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
6	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
8	horse,	_	horse,	NNS	O	(d<root> / --LEX--)	have-org-role-91	()	6	APP_o	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	12	MOD_s	true
12	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	APP_o	true
13	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	trailers	_	trailer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	safest	_	safe	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	nice-01	(s())	14	MOD_s	true
20	in	_	in	IN	O	_	oil	_	0	IGNORE	true
21	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
22	world	_	world	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@some, 6@@s@@take-01, 17@@explicitanon0@@-, 19@@m@@most, 8@@d@@have-org-role-91, 13@@p@@old, 7@@d@@your, 19@@b2@@nice-01, 14@@d@@trailer, 12@@s@@have-03, 4@@s@@will-02, 2@@d@@person, 22@@p@@world, 11@@s@@real-04, 9@@s@@contrast-01]
sentence=1	Since	since	since	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	then,	_	then,	NNP	O	_	and	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_op1	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	hauling	_	hauling	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_s	true
10	service	_	service	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	serve-01	(s(), o())	5	APP_o	true
11	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
12	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_o	true
13	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
14	ride	_	ride	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
17	horse	_	horse	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	keep	_	keep	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
20	an	_	an	DT	O	_	1	_	0	IGNORE	true
21	eye	_	eye	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
22	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	him,	_	him,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	stop	_	stop	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
25	every_few_hours	_name_	hour	NNS	O	(d<root> / --LEX--)	_NAME_	()	24	APP_s	true
26	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	water,	_name_	water,	NNS	O	(d<root> / --LEX--)	and	()	28	APP_op3	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
29	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	trailers	_	trailer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
31	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
32	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	28	APP_op2	true
33	super	_	super	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	smooth	_	smooth	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	35	MOD_s	true
35	suspension	_	suspension	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@d@@trailer, 5@@s@@use-01, 12@@d@@person, 7@@p@@professional, 34@@s@@smooth-04, 3@@d@@i, 14@@s@@ride-01, 24@@s@@stop-01, 28@@a@@and, 21@@s@@eye-01, 35@@d@@suspension, 25@@d@@_NAME_, 10@@s@@serve-01, 33@@s@@super, 9@@s@@hauling-01, 1@@n@@since, 8@@d@@horse, 32@@s@@have-03, 27@@d@@and, 31@@p@@all, 4@@n@@now]
sentence=1	1.	_	1.	LS	O	_	_NAME_	_	0	IGNORE	true
2	Here's	here's	here's	NN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	lists	_	list	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	world	_	world	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	cruises	_	cruise	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
10	prices	_	price	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_s	true
11	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@p@@world, 9@@s@@include-01, 4@@d@@site, 10@@d@@price-01, 6@@s@@list-01, 8@@d@@cruise]
sentence=1	San_Francisco	_name_	Francisco	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	settled	_	settle	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	in	_	in	IN	O	_	name	_	0	IGNORE	true
5	the_19th_and_20th_century	_name_	century	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	by	_	by	IN	O	_	person	_	0	IGNORE	true
7	mainly	_	mainly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	main	(mod())	9	MOD_mod	true
8	European	_name_	european	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	immigrants	_	immigrant	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	immigrate-01	()	3	APP_s	true
10	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
11	for	_	for	IN	O	_	-	_	0	IGNORE	true
12	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	Asian	_name_	asian	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	10	APP_s	true
15	who	_	who	WP	O	_	person	_	0	IGNORE	true
16	were	_	be	VBD	O	_	person	_	0	IGNORE	true
17	manual	_	manual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	laborers	_	laborer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	labor-01	(s())	14	MOD_s	true
19	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[7@@p@@main, 3@@s@@settle-01, 18@@s@@labor-01, 5@@c@@city, 10@@s@@except-01, 17@@p@@manual, 14@@p2@@person, 12@@explicitanon0@@some, 9@@e2@@immigrate-01, 9@@p2@@person, 13@@c@@continent, 8@@c@@continent, 13@@n2@@_NAME_, 8@@n2@@_NAME_, 1@@n@@_NAME_, 5@@n@@_NAME_, 14@@e2@@work-01, 1@@p@@person]
sentence=1	EDIT:	edit:	EDIT:	NFP	O	_	i	_	0	IGNORE	true
2	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
3	memory	_	memory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_s	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_s	true
8	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_o	true
11	get	_	get	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	APP_s	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	accurate	_	accurate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	answer	_	answer	NN	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	11	APP_o	true
16	from	_	from	IN	O	_	and	_	0	IGNORE	true
17	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
18	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
19	who	_	who	WP	O	_	person	_	0	IGNORE	true
20	remembers	_	remember	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@you, 10@@s@@possible-01, 15@@a@@answer-01, 8@@s@@cause-01, 5@@explicitanon0@@-, 7@@s@@good-02, 11@@b@@get-01, 18@@p@@else, 3@@d@@memory, 20@@s@@remember-01, 17@@d@@someone, 15@@t@@thing, 4@@s@@possible-01, 13@@s@@more, 22@@d@@time, 14@@p@@accurate]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	bet	_	bet	VBP	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
6	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
7	charcoal	_	charcoal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_o	true
9	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	2	MOD_s	true
11	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	barbecue	_	barbecue	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
16	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	13	MOD_s	true
18	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	11	MOD_mod	true
19	hot	_	hot	JJ	O	(d<root> / --LEX--)	$LEMMA$-04	()	17	APP_o	true
20	as	_	as	IN	O	_	equal	_	0	IGNORE	true
21	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	22	MOD_s	true
22	coal	_	coal	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	(e.g.	_	(e.g.	NNP	O	_	mean-01	_	0	IGNORE	true
24	for	_	for	IN	O	_	or	_	0	IGNORE	true
25	blacksmithing	_	blacksmithe	VBG	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	27	MOD_mod	true
26	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
28	coal,	_	coal,	NNS	O	_	contrast-01	_	0	IGNORE	true
29	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	30	MOD_mod	true
30	barbecue	_	barbecue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
31	charcoal)	_	charcoal)	NN	O	_	contrast-01	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@thing, 27@@s@@need-01, 6@@s@@take-01, 11@@s@@use-01, 30@@d@@barbecue, 1@@d@@i, 2@@t@@bet-01, 8@@s@@cause-01, 26@@d@@one, 16@@explicitanon0@@-, 22@@p@@coal, 7@@d@@charcoal, 21@@s@@real-04, 5@@s@@cause-01, 25@@o@@blacksmithe-01, 17@@s@@get-03, 13@@d@@barbecue-01, 19@@d@@hot-04, 4@@p@@also, 29@@explicitanon0@@-, 3@@d@@you, 18@@s@@equal]
sentence=1	Brass	brass	brass	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	melts	_	melt	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	at	_	at	IN	O	_	after	_	0	IGNORE	true
4	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	under	_	under	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o	true
6	2000F	2000f	2000F	NNP	O	(m<root> / mass-quantity  :unit (g2 / --LEX--))	$LEMMA$	()	5	APP_op1	true
7	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
8	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	2	MOD_s	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	bright	_	bright	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	yellow	_	yellow	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	heat,	_	heat,	NNS	O	_	and	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	red	_	red	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	MOD_s	true
15	hot	_	hot	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	true
16	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[15@@s@@hot-04, 5@@o@@under, 4@@p@@just, 8@@s@@person, 10@@s@@bright-02, 13@@explicitanon0@@-, 11@@d@@yellow, 2@@s@@melt-01, 1@@d@@brass, 6@@g2@@2000F, 6@@m@@mass-quantity, 14@@s@@red]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
4	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	cafes	_	cafe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
8	food	_	food	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	shops	_	shop	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	provided	_	provide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	Halal	_name_	Halal	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	prepared	_	prepare	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	foods	_	food	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@s@@find-01, 1@@d@@They, 7@@a@@or, 8@@p@@food, 3@@explicitanon0@@-, 13@@s@@prepare-01, 9@@d@@shop, 2@@s@@possible-01, 11@@s@@provide-01, 12@@p@@Halal, 14@@d@@food, 5@@p@@any, 6@@d@@cafe]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	eat	_	eat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
5	halal	_	halal	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	meat,	_	meat,	NNS	O	(d<root> / --LEX--)	and	()	4	APP_o	true
7	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
8	guess	_	guess	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
9	what,	_	what,	NNP	O	_	expressive	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
11	opted	_	opt	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	for	_	for	IN	O	_	-	_	0	IGNORE	true
13	foods	_	food	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
15	weren't	_	weren't	VBZ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
16	a	_	a	DT	O	_	-	_	0	IGNORE	true
17	meat	_	meat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	dish,	_	dish,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
20	were	_	be	VBD	O	_	person	_	0	IGNORE	true
21	plenty	_	plenty	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
22	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
23	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	options	_	option	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	opt-01	(mod())	13	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@and, 4@@s@@eat-01, 1@@d@@i, 23@@p@@other, 24@@p@@opt-01, 21@@explicitanon0@@plenty, 3@@explicitanon0@@-, 11@@s@@opt-01, 15@@explicitanon0@@-, 17@@p@@meat, 10@@d@@i, 5@@p@@halal, 7@@s@@cause-01, 8@@s@@guess-01, 13@@d@@food]
sentence=1	try	_	try	VB	O	(l<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (i<o>)  :ARG0 (y<s>))	$LEMMA$-01	(o(s()))	21	APP_op1	true
2	to	_	to	TO	O	_	you	_	0	IGNORE	true
3	train	_	train	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	1	APP_o	true
4	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	to	_	to	IN	O	_	you	_	0	IGNORE	true
6	heel,	_	heel,	NNP	O	_	and	_	0	IGNORE	true
7	which	_	which	WDT	O	_	i	_	0	IGNORE	true
8	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
10	walk	_	walk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
11	round	_	round	IN	O	(a<root> / --LEX--  :op1 (t<op1>)  :path-of (r<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
13	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
14	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	needs	_	need	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op1	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	go	_	go	VB	O	(d<root> / --LEX--)	$LEMMA$-06	()	21	APP_s	true
18	on	_	on	IN	O	_	i	_	0	IGNORE	true
19	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
20	leash,	_	leash,	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
22	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	may	_	may	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	21	APP_op2	true
24	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	APP_o	true
25	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@a@@round, 13@@w@@before, 17@@d@@go-06, 15@@d@@need-01, 8@@s@@mean-01, 21@@a@@and, 3@@s@@train-01, 23@@f@@possible-01, 1@@l@@try-01, 10@@d@@walk-01, 1@@explicitanon0@@imperative, 12@@d@@you, 24@@s@@do-02]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	would	_	would	MD	O	_	+	_	0	IGNORE	true
3	be	_	be	VB	O	_	person	_	0	IGNORE	true
4	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
6	walk-in	_	walk-in	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
7	basis	_	basis	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	base-02	(s(), o())	0	ROOT	true
8	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_s	true
11	to	_	to	TO	O	_	have-condition-91	_	0	IGNORE	true
12	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	freedom	_	freedom	NN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	free-04	(o(s()))	10	APP_o	true
15	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	finding	_	find	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
21	good	_	good	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_o	true
22	(Not	(not	(Not	NNP	O	_	-	_	0	IGNORE	true
23	relying	_	rely	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
24	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
25	pictures	_	picture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	from	_	from	IN	O	_	and	_	0	IGNORE	true
27	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
28	internet)	_	internet)	NN	O	_	and	_	0	IGNORE	true
29	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	7	MOD_s	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	a	_	a	DT	O	_	thing	_	0	IGNORE	true
33	spot	_	spot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
34	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@look-02, 18@@d@@place, 23@@s@@rely-01, 30@@s@@be-located-at-91, 14@@f@@free-04, 21@@d@@good-02, 7@@s@@base-02, 1@@d@@this, 9@@d@@we, 25@@d@@picture, 35@@s@@like-01, 16@@s@@find-01, 33@@d@@spot, 10@@c@@want-01, 8@@s@@cause-01, 6@@d@@walk-in]
sentence=1	I've	i've	I've	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
2	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	3	MOD_mod	true
3	met	_	meet	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
5	hamster	_	hamster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	(d<root> / --LEX--)	-	()	3	APP_s	true
7	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	bite	_	bite	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	me	_	I	PRP	O	_	i	_	0	IGNORE	true
10	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@-, 6@@d@@-, 8@@s@@bite-01, 4@@explicitanon0@@-, 1@@explicitanon0@@-, 5@@d@@hamster, 3@@s@@meet-02, 2@@n@@ever]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	add	_	add	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	in	_	in	RP	O	_	cause-01	_	0	IGNORE	true
5	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
6	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
7	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
8	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	13	APP_s	true
11	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
12	have	_	have	VBP	O	_	person	_	0	IGNORE	true
13	tried	_	try	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_s	true
14	to	_	to	TO	O	_	person	_	0	IGNORE	true
15	claim	_	claim	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
16	citizenship	_	citizenship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	by	_	by	IN	O	_	-	_	0	IGNORE	true
18	sending	_	send	VBG	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
19	for	_	for	IN	O	_	and	_	0	IGNORE	true
20	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	birth	_	birth	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	bear-02	(mod())	22	MOD_mod	true
22	certificate	_	certificate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	when	_	when	WRB	O	_	-	_	0	IGNORE	true
24	they	_	they	PRP	O	_	-	_	0	IGNORE	true
25	were	_	be	VBD	O	_	-	_	0	IGNORE	true
26	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	28	MOD_mod	true
27	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	28	MOD_s	true
28	born	_	bear	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-02	(mod(), s())	18	MOD_mod	true
29	in	_	in	IN	O	_	-	_	0	IGNORE	true
30	Canada	_name_	Canada	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	28	MOD_mod	true
31	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	28	APP_s	true
32	to	_	to	IN	O	_	-	_	0	IGNORE	true
33	Canadian	_name_	canadian	JJ	O	_	_NAME_	_	0	IGNORE	true
34	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	31	APP_op2	true
35	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[18@@b@@send-01, 2@@s@@add-01, 31@@a@@or, 21@@p@@bear-02, 30@@c@@country, 15@@s@@claim-01, 16@@d@@citizenship, 10@@d@@person, 13@@c@@try-01, 30@@n@@_NAME_, 5@@s@@cause-01, 34@@p@@person, 3@@d@@that, 1@@d@@i, 34@@h@@have-rel-role-91, 34@@f@@parent, 27@@s@@real-04, 9@@explicitanon0@@some, 28@@o@@bear-02, 22@@d@@certificate, 26@@n@@ever]
sentence=1	Each	each	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	provincial	_	provincial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	province	(mod())	3	MOD_mod	true
3	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	4	APP_s	true
4	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	lists	_	list	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	8	APP_o	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
13	Province	_name_	Province	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_s	true
15	depending	_	depend	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
16	upon	_	upon	IN	O	_	cause-01	_	0	IGNORE	true
17	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
19	were	_	be	VBD	O	_	person	_	0	IGNORE	true
20	born	_	bear	VBN	O	(d<root> / --LEX--)	$LEMMA$-02	()	15	APP_o	true
21	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	APP_o	true
23	google	_	google	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_s	true
24	it	_	it	PRP	O	_	i	_	0	IGNORE	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@g@@government-organization, 18@@d@@you, 1@@p@@each, 3@@g2@@govern-01, 14@@s@@cause-01, 10@@d@@process-02, 8@@s@@list-01, 12@@p@@that, 20@@d@@bear-02, 22@@s@@possible-01, 2@@p@@province, 6@@d@@website, 23@@s@@google-01, 15@@s@@depend-01, 4@@s@@have-03]
sentence=1	Carnival	carnival	carnival	NN	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_dom	true
3	Royal_Caribbean	_name_	Caribbean	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op2	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	8	MOD_mod	true
6	popular	_	popular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
7	cruise	_	cruise	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	lines	_	line	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
9	that	_	that	WDT	O	_	name	_	0	IGNORE	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_s	true
11	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	followings	_	following	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@s@@popular-02, 7@@p@@cruise, 1@@n@@_NAME_, 12@@d@@following, 11@@s@@strong-02, 3@@p@@person, 3@@n@@_NAME_, 5@@explicitanon0@@2, 2@@a@@and, 8@@r@@line, 10@@s@@have-03, 1@@c@@company]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	did	_	do	VBD	O	_	person	_	0	IGNORE	true
3	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	5	MOD_mod	true
5	waiter	_	waiter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	complained	_	complain	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	on	_	on	IN	O	_	and	_	0	IGNORE	true
10	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	13	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	trips	_	trip	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-03	(mod(), s())	7	MOD_mod	true
14	on	_	on	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Mariner	_name_	Mariner	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
17	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[3@@s@@have-03, 5@@d@@waiter, 13@@v@@trip-03, 10@@explicitanon0@@1, 16@@n@@_NAME_, 1@@d@@We, 4@@explicitanon0@@1, 8@@p@@some, 7@@s@@complain-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	APP_op1	true
3	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	overnight	_	overnight	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	stay	_	stay	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
11	sweet	_	sweet	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	8	MOD_s	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	water	_	water	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	market	_	market	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	was	_	be	VBD	O	_	and	_	0	IGNORE	true
17	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	APP_op2	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@a@@and, 14@@p@@water, 15@@d@@market, 17@@s@@wonderful-03, 1@@d@@i, 11@@s@@sweet-05, 8@@s@@stay-01, 2@@s@@do-02, 4@@n@@overnight, 7@@d@@home]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	back	_	back	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	transfer	_	transfer	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	into	_	into	IN	O	_	-	_	0	IGNORE	true
9	my	_	my	PRP$	O	_	and	_	0	IGNORE	true
10	legs	_	leg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@p@@back, 3@@s@@have-03, 1@@d@@i, 7@@s@@transfer-01, 2@@p@@also, 5@@d@@problem, 10@@d@@leg]
sentence=1	From	from	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	there	_	there	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	end	_	end	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-03	(s(), o())	0	ROOT	true
5	up	_	up	RP	O	_	contrast-01	_	0	IGNORE	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	electrolyte	_	electrolyte	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	imbalances,	_	imbalances,	CD	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	lead	_	lead	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	7	MOD_s	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	16	MOD_mod	true
15	kidney	_	kidney	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
17	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@t@@lead-03, 7@@d@@electrolyte, 13@@d@@heart, 15@@d@@kidney, 2@@p@@there, 14@@a@@and, 3@@d@@you, 16@@d@@problem, 4@@s@@end-up-03, 10@@s@@possible-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	would	_	would	MD	O	_	prefer-01	_	0	IGNORE	true
3	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	love	_	love	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
8	the	_	the	DT	O	_	name	_	0	IGNORE	true
9	French	_name_	french	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	18	APP_s	true
11	those	_	those	DT	O	_	that	_	0	IGNORE	true
12	who	_	who	WP	O	_	person	_	0	IGNORE	true
13	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	4	MOD_o	true
14	dated	_	date	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op2	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	French	_name_	French	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	4	MOD_o	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
19	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	about	_	about	IN	O	_	thing	_	0	IGNORE	true
21	this	_	this	DT	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@d@@something, 9@@c@@country, 21@@a@@this, 1@@d@@i, 4@@c@@love-02, 18@@s@@say-01, 9@@n@@_NAME_, 6@@s@@hear-01, 10@@a@@or, 16@@s@@French, 14@@d@@date-01, 3@@s@@really, 13@@s@@person]
sentence=1	In	in	in	IN	O	_	have-concession-91	_	0	IGNORE	true
2	addition,	_	addition,	NNS	O	_	and	_	0	IGNORE	true
3	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
4	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	11	APP_s	true
5	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	understand-01	(s(), o())	17	MOD_s	true
6	one-on-one	_	one-on-one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	dates	_	date	VBZ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	something	_	something	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
12	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	later	_	later	RB	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	late	(mod())	11	MOD_mod	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
16	'straight-away'	_	'straight-away'	NNS	O	_	-	_	0	IGNORE	true
17	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	11	MOD_s	true
18	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	anglo-saxons	_	anglo-saxon	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
20	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[13@@m@@more, 4@@d@@i, 5@@s@@understand-01, 11@@s@@come-01, 13@@e@@late, 19@@p@@_NAME_, 12@@s@@much, 7@@d@@date, 17@@s@@resemble-01, 9@@p@@something, 18@@d@@us, 6@@p@@one-on-one, 15@@explicitanon0@@-]
sentence=1	At	at	at	IN	O	_	cause-01	_	0	IGNORE	true
2	parties	_	party	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	considered	_	consider	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	6	APP_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	attached	_	attach	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	you,	_	you,	NNS	O	_	_NAME_	_	0	IGNORE	true
16	which	_	which	WDT	O	_	i	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
18	consistent	_	consistent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@she, 6@@c@@want-01, 12@@t@@way, 11@@p@@any, 2@@b@@party, 5@@explicitanon0@@-, 18@@s@@consistent-02, 13@@d@@attach-01, 9@@s@@consider-02]
sentence=1	What	what	what	WP	O	_	and	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	add	_	add	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
7	that	_	that	IN	O	_	and	_	0	IGNORE	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	3	MOD_s	true
10	normal	_	normal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	APP_o	true
11	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
12	France	_name_	France	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	10	MOD_mod	true
13	to	_	to	TO	O	_	and	_	0	IGNORE	true
14	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_s	true
15	mixed	_	mix	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	gender	_	gender	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	friends,	_	friends,	NNS	O	_	and	_	0	IGNORE	true
20	there's	_	there'	VBZ	O	_	and	_	0	IGNORE	true
21	nothing	_	nothing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
22	unusual	_	unusual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	21	MOD_mod	true
23	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
24	boys	_	boy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	22	MOD_mod	true
26	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
27	being	_	be	VBG	O	_	person	_	0	IGNORE	true
28	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
29	friends,	_	friends,	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_o	true
30	which	_	which	WDT	O	_	i	_	0	IGNORE	true
31	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
32	obviously	_	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	36	MOD_s	true
33	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
34	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
37	from	_	from	IN	O	_	thing	_	0	IGNORE	true
38	you	_	you	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@s@@and, 38@@p@@you, 10@@s@@normal-02, 17@@d@@group, 12@@c@@country, 12@@n@@_NAME_, 15@@s@@mix-01, 34@@p@@this, 2@@d@@i, 16@@p@@gender, 9@@s@@cause-01, 3@@o@@obligate-01, 21@@p@@nothing, 32@@s@@obvious-01, 14@@s@@have-03, 26@@d@@girl, 5@@s@@add-01, 36@@s@@want-01, 24@@d@@boy, 25@@a@@and, 28@@p@@only, 22@@p@@usual, 35@@d@@girl]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	they're	_	they're	NNP	O	_	thing	_	0	IGNORE	true
3	working	_	work	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op2	true
4	towards	_	towards	IN	O	_	thing	_	0	IGNORE	true
5	being	_	be	VBG	O	_	person	_	0	IGNORE	true
6	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_s	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	extradite	_	extradite	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	8	APP_s	true
10	who	_	who	WP	O	_	name	_	0	IGNORE	true
11	have	_	have	VBP	O	_	person	_	0	IGNORE	true
12	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-11	(s(), o())	9	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	avoid	_	avoid	VB	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	8	MOD_mod	true
17	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@pay-01, 3@@s@@work-01, 1@@a@@and, 6@@s@@possible-01, 12@@s@@leave-11, 14@@d@@country, 9@@d@@person, 16@@d2@@avoid-01, 8@@s@@extradite-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	guess	_	guess	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
4	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	5	MOD_mod	true
5	fortunate	_	fortunate	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
6	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_dom	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	scholarship	_	scholarship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
11	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	paid	_	pay	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	800f	_	800f	NNS	O	_	$LEMMA$	_	0	IGNORE	true
15	my	_	my	PRP$	O	_	dollar	_	0	IGNORE	true
16	course	_	course	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	fees	_	fee	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
18	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
20	degree	_	degree	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
21	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[2@@s@@guess-01, 1@@d@@i, 16@@p@@course, 20@@n@@degree, 13@@p@@about, 17@@d@@fee, 4@@s@@extreme, 5@@r@@fortunate, 8@@s@@receive-01, 12@@s@@pay-01, 10@@d@@scholarship]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	lazy	_	lazy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	0	ROOT	true
8	out	_	out	RB	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
9	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
10	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
11	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
13	they	_	they	PRP	O	_	person	_	0	IGNORE	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	APP_o	true
15	sit	_	sit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
16	around	_	around	IN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	a	_	a	DT	O	_	person	_	0	IGNORE	true
18	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	will	_	will	MD	O	_	monetary-quantity	_	0	IGNORE	true
20	fall	_	fall	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
21	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
23	lap	_	lap	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[23@@d@@lap, 14@@s@@possible-01, 5@@explicitanon0@@many, 9@@d@@there, 11@@s@@think-01, 18@@d@@job, 4@@s@@too, 8@@b@@out, 6@@p@@lazy, 7@@d@@person, 15@@s@@sit-01, 3@@s@@far, 16@@d@@around, 20@@s@@fall-01]
sentence=1	(i	_	(i	NNP	O	(d<root> / --LEX--)	$FORM$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
4	snakes	_	snake	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_s	true
7	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	going	_	go	VBG	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
9	to	_	to	IN	O	_	-	_	0	IGNORE	true
10	the	_	the	DT	O	_	-	_	0	IGNORE	true
11	bathroom	_	bathroom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	won't	_	won't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
13	eat.	_	eat.	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$-01	(mod())	2	MOD_mod	true
14	)	_	)	-RRB-	O	_	-	_	0	IGNORE	true

nodealignment=[1@@d@@(i, 12@@explicitanon0@@-, 4@@d@@snake, 6@@s@@have-03, 8@@g@@go-02, 7@@d@@problem, 11@@d@@bathroom, 13@@explicitanon0@@eat.-01, 2@@s@@know-01]
sentence=1	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	4	APP_s	true
2	have	_	have	VBP	O	_	-	_	0	IGNORE	true
3	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	4	MOD_mod	true
4	tried	_	try	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	feeding	_	feed	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
6	him	_	he	PRP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
7	a	_	a	DT	O	_	-	_	0	IGNORE	true
8	pinky	_	pinky	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	that	_	that	WDT	O	_	foot	_	0	IGNORE	true
10	was	_	be	VBD	O	_	relative-position	_	0	IGNORE	true
11	bigger	_	big	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	big	(mod())	8	MOD_mod	true
12	around	_	around	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	than	_	than	IN	O	_	more	_	0	IGNORE	true
14	he	_	he	PRP	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@he, 12@@b@@around, 6@@explicitanon0@@-, 1@@d@@i, 4@@c@@try-01, 11@@f2@@big, 5@@t@@feed-01, 8@@d@@pinky, 11@@m@@more, 3@@n@@ever]
sentence=1	Hibernation	hibernation	hibernation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
2	is	_	be	VBZ	O	_	last-01	_	0	IGNORE	true
3	natural,	_	natural,	NNS	O	_	and	_	0	IGNORE	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	necessity	_	necessity	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	4	APP_op2	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	snakes	_	snake	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	are	_	be	VBP	O	_	person	_	0	IGNORE	true
11	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
12	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	bred	_	breed	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@hibernation, 4@@a@@and, 8@@d@@snake, 14@@s@@breed-01, 6@@s@@need-01]
sentence=1	Another	another	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_dom	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	MOD_s	true
5	cause	_	cause	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
7	king	_	king	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	8	MOD_mod	true
8	snake	_	snake	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	stop	_	stop	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
11	eating	_	eat	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	eat-01	(s())	10	APP_o	true
12	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
13	shedding	_	shed	VBG	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	0	ROOT	true
14	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@r@@shed-01, 1@@p@@another, 10@@c@@stop-01, 11@@s@@eat-01, 5@@s@@cause-01, 2@@d@@thing, 7@@p@@king, 4@@s@@possible-01, 8@@d@@snake]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	7	APP_s	true
3	Westmoreland	_name_	Westmoreland	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
4	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
5	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	options,	_	options,	NNS	O	_	and	_	0	IGNORE	true
7	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	adapted	_	adapt	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
11	Search	_name_	Search	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
13	Destroy	destroy	destroy	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	true
14	strategy	_	strategy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
15	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	9	MOD_s	true
16	of	_	of	IN	O	_	-	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	Clear	_name_	clear	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	21	MOD_s	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	Defend	defend	defend	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
21	strategy	_	strategy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
22	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	is,	_	is,	VBP	O	_	original	_	0	IGNORE	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	30	MOD_s	true
27	run,	_	run,	NNS	O	_	and	_	0	IGNORE	true
28	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
29	preferred	_	preferred	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	method	_	method	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	pacifying	_	pacify	VBG	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	30	MOD_mod	true
33	an	_	an	DT	O	_	-	_	0	IGNORE	true
34	insurgency	_	insurgency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
35	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[20@@s@@defend-01, 12@@a@@and, 15@@s@@instead-of-91, 5@@explicitanon0@@few, 14@@d@@strategy, 2@@s@@leave-13, 34@@d@@insurgency, 18@@s@@clear-06, 13@@d@@destroy-01, 21@@d@@strategy, 29@@s@@preferred-01, 3@@n@@_NAME_, 32@@i@@pacify-01, 9@@s@@adapt-01, 3@@p@@person, 7@@s@@cause-01, 30@@t@@method, 1@@d@@this, 11@@d@@Search-01, 26@@s@@long-03]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	ARVN	_name_	ARVN	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
5	having	_	have	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Local	local	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	VC	vc	VC	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	24	APP_o	true
13	(the	_	(the	ADD	O	_	name	_	0	IGNORE	true
14	guerilla	_	guerilla	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	movement),	_	movement),	NNP	O	_	and	_	0	IGNORE	true
16	they	_	they	PRP	O	(d<root> / --LEX--)	person	()	5	APP_s	true
17	were	_	be	VBD	O	_	person	_	0	IGNORE	true
18	being	_	be	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	5	MOD_s	true
19	challenged	_	challenge	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	APP_o	true
20	by	_	by	IN	O	_	and	_	0	IGNORE	true
21	the_Main_Force	_name_	Force	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	27	APP_op1	true
22	VC	vc	VC	NNP	O	_	_NAME_	_	0	IGNORE	true
23	(which	_	(which	NNP	O	_	$LEMMA$	_	0	IGNORE	true
24	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	5	MOD_s	true
25	light	_	light	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	27	MOD_s	true
26	infantry)	_	infantry)	NNP	O	_	mean-01	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_s	true
28	the_North_Vietnamese_Army	_name_	Army	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	27	APP_op2	true
29	(NVA)	(nva)	(nva)	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	5	MOD_s	true

nodealignment=[25@@s@@light-06, 28@@m@@military, 18@@s@@person, 24@@s@@person, 12@@n@@_NAME_, 27@@a@@and, 30@@s@@multi-sentence, 21@@g@@government-organization, 7@@p@@big, 14@@p@@guerilla, 12@@c2@@criminal-organization, 21@@n@@_NAME_, 28@@n@@_NAME_, 5@@s@@have-03, 11@@s@@local-02, 2@@n@@_NAME_, 4@@explicitanon0@@-, 8@@d@@problem, 16@@d@@person, 2@@c@@country, 19@@s@@challenge-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	describe-01	_	0	IGNORE	true
4	basking	_	basking	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	MOD_s	true
5	spot	_	spot	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	lamp	_	lamp	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	double	_	double	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	reflector	_	reflector	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	focuses	_	focus	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	35%	_	35%	XX	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	2	MOD_mod	true
17	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	light/heat	_	light/heat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	and	_	and	CC	O	_	$LEMMA$	_	2	IGNORE	true
20	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
21	beneficial	_	beneficial	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	23	MOD_s	true
22	UVA	_name_	UVA	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
23	rays	_	ray	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	to	_	to	IN	O	_	thing	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	psycholical	_	psycholical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	well-being	_	well-being	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@p@@more, 27@@p@@psycholical, 18@@d@@light/heat, 1@@d@@i, 23@@d@@ray, 20@@s@@provide-01, 16@@explicitanon0@@3, 2@@s@@have-03, 6@@d@@lamp, 5@@p@@spot, 22@@p@@_NAME_, 28@@o@@well-being, 8@@s@@say-01, 15@@t@@focus-01, 13@@d@@reflector, 4@@s@@basking-01, 12@@p@@double, 21@@s@@beneficial-02, 24@@p@@important]
sentence=1	UVB	_name_	uvb	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_dom	true
2	will	_	will	MD	O	_	name	_	0	IGNORE	true
3	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	separate	_	separate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	bulb	_	bulb	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	from	_	from	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	the	_	the	DT	O	_	15	_	0	IGNORE	true
10	heat	_	heat	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
11	lamp,	_	lamp,	NNS	O	_	mean-01	_	0	IGNORE	true
12	unless	_	unless	IN	O	_	-	_	0	IGNORE	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	use	_	use	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	8	MOD_mod	true
15	a	_	a	DT	O	_	-	_	0	IGNORE	true
16	MVB	_name_	MVB	NNP	O	_	_NAME_	_	0	IGNORE	true
17	(mercury	_	(mercury	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	vapor	_	vapor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	bulb)	_	bulb)	NNP	O	_	mean-01	_	0	IGNORE	true
20	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
23	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
24	reptile	_	reptile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
25	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
26	bulb	_	bulb	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
27	that	_	that	WDT	O	_	slash	_	0	IGNORE	true
28	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
29	emit	_	emit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
30	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	UVB	uvb	uvb	NN	O	_	$LEMMA$	_	0	IGNORE	true
32	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
33	heat	_	heat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
34	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	36	MOD_mod	true
36	bulb	_	bulb	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[35@@explicitanon0@@1, 25@@s@@use-01, 33@@d@@heat, 26@@p@@bulb, 32@@p@@and, 18@@d@@vapor, 13@@d@@you, 36@@s@@bulb, 10@@p@@heat-01, 23@@p@@only, 14@@m@@use-01, 24@@d@@reptile, 1@@p@@person, 1@@n@@_NAME_, 6@@s@@separate-02, 7@@r@@bulb, 17@@p@@(mercury, 8@@p@@from, 3@@n@@always, 29@@s@@emit-01]
sentence=1	So,	so,	So,	NNS	O	_	say-01	_	0	IGNORE	true
2	to	_	to	TO	O	_	say-01	_	0	IGNORE	true
3	answer	_	answer	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
4	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	question,	_	question,	NNS	O	_	and	_	0	IGNORE	true
6	no,	_	no,	XX	O	_	and	_	0	IGNORE	true
7	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-03	(mod(), s())	3	MOD_mod	true
11	a	_	a	DT	O	_	or	_	0	IGNORE	true
12	bulb	_	bulb	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	produces	_	produce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
17	UVA	_name_	UVA	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_o	true
18	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	30	MOD_s	true
23	"the	_	"the	``	O	_	_NAME_	_	0	IGNORE	true
24	sun's	_	sun'	NNS	O	(d<root> / --LEX--)	_NAME_	()	22	APP_o	true
25	rays"	_	rays"	VBD	O	_	and	_	0	IGNORE	true
26	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
28	bearded	_	bearded	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	needs	_	need	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
30	.	_	.	.	O	(d<root> / --LEX--)	thing	()	0	ROOT	true

nodealignment=[21@@explicitanon0@@-, 9@@p@@just, 10@@o@@have-03, 16@@s@@produce-01, 30@@d@@thing, 22@@s@@have-03, 17@@d@@_NAME_, 29@@s@@need-01, 28@@d@@bearded, 14@@s@@say-01, 12@@d@@bulb, 3@@s@@answer-01, 24@@d@@_NAME_]
sentence=1	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
2	to	_	to	IN	O	_	thing	_	0	IGNORE	true
3	what	_	what	WP	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
7	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	gives	_	give	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
9	UV	uv	uv	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	rays..which	_	rays..which	CD	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_dom	true
11	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
12	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
13	for	_	for	IN	O	_	thing	_	0	IGNORE	true
14	health	_	health	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$y	(mod())	12	MOD_mod	true
15	in	_	in	IN	O	_	thing	_	0	IGNORE	true
16	lizards	_	lizard	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	12	MOD_o	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
21	humans	_	human	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
22	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[16@@b@@lizard, 10@@d@@rays..which, 6@@s@@provide-01, 8@@s@@give-01, 17@@s@@cause-01, 21@@d@@human, 5@@d@@light, 9@@p@@_NAME_, 12@@r@@important, 14@@a@@healthy]
sentence=1	Also,_Beardies	_name_	beardie	NNS	O	(d<root> / --LEX--)	_NAME_	()	5	APP_s	true
2	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	eat	_	eat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
10	moving,	_	moving,	CD	O	_	and	_	0	IGNORE	true
11	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_s	true
12	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	anyone's	_	anyone'	NNS	O	_	-	_	0	IGNORE	true
14	guess	_	guess	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
15	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
16	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
18	he'll	_	he'll	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	thing	(mod())	5	MOD_mod	true
19	touch	_	touch	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
20	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
21	freeze-dried	_	freeze-dried	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	stupid	(mod())	22	MOD_mod	true
22	crickets	_	cricket	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_s	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	processed	_	process	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
27	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[23@@a@@or, 2@@o@@often, 19@@s@@touch-01, 6@@d@@food, 5@@s@@eat-01, 9@@explicitanon0@@-, 21@@p@@stupid, 25@@s@@process-01, 17@@explicitanon0@@-, 18@@explicitanon0@@thing, 26@@d@@food, 1@@d@@_NAME_, 22@@d@@cricket, 4@@explicitanon0@@-, 11@@s@@cause-01, 14@@s@@guess-01]
sentence=1	Look	look	look	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	for	_	for	IN	O	_	interrogative	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
6	stripes	_	stripe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
9	head	_	head	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	starts	_	start	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
12	from	_	from	IN	O	_	mean-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	beak	_	beak	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	MOD_op1	true
16	goes	_	go	VBZ	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-back-19	(s())	15	APP_op2	true
17	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
18	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	back	_	back	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	16	APP_s	true
21	fo	_	fo	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_poss	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@b@@head, 4@@explicitanon0@@lot, 6@@d@@stripe, 11@@s@@start-01, 14@@d@@beak, 15@@a@@and, 8@@d@@they, 1@@explicitanon0@@imperative, 16@@p@@go-back-19, 20@@h@@back, 23@@d@@bird, 1@@h@@look-01]
sentence=1	(do	_	(do	ADD	O	_	you	_	0	IGNORE	true
2	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	take	_	take	VB	O	(explicitanon0<root> / imperative  :mode-of (t2 / --LEX--  :ARG1 (m<s>)  :ARG0 (y / you)  :condition-of (l<mod>)))	$LEMMA$-away-05	(mod(), s())	13	MOD_mod	true
4	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	food	_	food	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	dish	_	dish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
8	from	_	from	IN	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	birds,	_	birds,	NNS	O	_	and	_	0	IGNORE	true
11	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	will	_	will	MD	O	_	i	_	0	IGNORE	true
13	associate	_	associate	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o2	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-away-05	(s())	17	MOD_s	true
20	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
21	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	food)...	_	food)...	NNS	O	_	$LEMMA$	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@p@@food, 3@@explicitanon0@@imperative, 7@@d@@dish, 13@@b@@associate-01, 2@@explicitanon0@@-, 19@@s@@take-away-05, 14@@d@@you, 17@@d@@person, 11@@d@@they, 3@@t2@@take-away-05, 3@@y@@you]
sentence=1	The	the	the	DT	O	(explicitanon1<root> / Britain  :op1-of (n / --LEX--  :name-of (c<mod>)))	name	(mod())	4	MOD_mod	true
2	Irish	_name_	irish	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	country	(mod())	3	MOD_mod	true
3	weather	_	weather	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	works	_	work	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-09	(s(), o())	0	ROOT	true
5	on	_	on	IN	O	_	name	_	0	IGNORE	true
6	the	_	the	DT	O	_	name	_	0	IGNORE	true
7	‘four	_name_	‘four	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	seasons	_	season	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	day’	_	day’	JJ	O	_	$LEMMA$	_	0	IGNORE	true
12	principle,	_	principle,	NNP	O	_	mean-01	_	0	IGNORE	true
13	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
14	basic­ally	_	basic­ally	RB	O	_	mean-01	_	0	IGNORE	true
15	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
16	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	can’t	_	can’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	predict	_	predict	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-12	(mod(), s())	19	MOD_mod	true
25	to	_	to	IN	O	_	thing	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	behaviour	_	behaviour	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	behave-01	(s())	24	APP_s	true
28	of	_	of	IN	O	_	thing	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	sky	_	sky	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@p@@‘four, 17@@d@@you, 19@@s@@predict-01, 8@@d@@season, 27@@s@@behave-01, 21@@d@@thing, 30@@d@@sky, 4@@s@@work-09, 15@@s@@mean-01, 3@@d@@weather, 1@@n@@name, 18@@explicitanon0@@-, 2@@n@@country, 1@@explicitanon1@@Britain, 24@@s@@come-12, 2@@c@@country]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	peak	_	peak	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	tourist	_	tourist	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	6	APP_s	true
6	season,	_	season,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	25	APP_op1	true
7	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
10	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	17	APP_s	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	about	_	about	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	everywhere	_	everywhere	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	25	MOD_o	true
18	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
19	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	remote	_	remote	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	corners	_	corner	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
24	island,	_	island,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
26	prices	_	price	NNS	O	(t<root> / thing  :ARG2-of (a / --LEX--))	$LEMMA$-01	()	30	APP_s	true
27	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
28	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	highest	_	high	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	high-02	(s())	25	APP_op2	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@b@@everywhere, 21@@b@@corner, 5@@e2@@tour-01, 4@@p@@peak, 3@@p@@also, 25@@a@@and, 30@@b2@@high-02, 14@@p@@just, 26@@t@@thing, 11@@s@@far, 8@@s@@mean-01, 26@@a@@price-01, 20@@p@@remote, 6@@s@@and, 5@@p2@@person, 17@@s@@contrast-01, 12@@explicitanon0@@more, 19@@s@@most, 15@@p@@about, 13@@d@@person, 30@@m@@most]
sentence=1	Crowds	crowds	crowd	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-temporally-at-91	(s())	6	APP_s	true
3	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
4	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
5	thinnest,	_	thinnest,	NNS	O	_	and	_	0	IGNORE	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
8	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	6	MOD_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	country’s	_	country’s	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
11	tourist	_	tourist	NN	O	(p<root> / person  :mod-of (y<mod>)  :ARG0-of (f / --LEX--))	tour-01	(mod())	12	MOD_mod	true
12	attractions	_	attraction	NNS	O	(t<root> / thing  :ARG0-of (a / --LEX--))	attract-01	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
14	services	_	service	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	close	_	close	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-down-04	(s())	19	APP_op1	true
16	down	_	down	RB	O	_	$LEMMA$	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	October	_name_	October	NNP	O	(explicitanon2<root> / --LEX--  :month-of (d / date-entity  :time-of (s<mod>)))	10	(mod())	15	MOD_mod	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
20	don’t	_	don’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	reopen	_	reopen	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op2	true
22	until	_	until	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
23	Easter,	easter,	easter,	CD	O	_	_NAME_	_	0	IGNORE	true
24	which	_	which	WDT	O	_	i	_	0	IGNORE	true
25	paradoxically	_	paradoxically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	idiot	(mod())	26	MOD_mod	true
26	leaves	_	leave	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-13	(o2(), s(), o())	19	MOD_s	true
27	visitors	_	visitor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	visit-01	()	26	APP_o	true
28	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	convincing	_	convincing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	convince-01	(s())	32	MOD_s	true
32	taste	_	taste	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o2	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
35	Ireland	_name_	Ireland	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	37	APP_o	true
36	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
37	experienced	_	experience	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_s	true
38	by	_	by	IN	O	_	thing	_	0	IGNORE	true
39	most	_	most	JJS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
42	Irish:	_name_	irish:	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	49	MOD_mod	true
43	it’s	_	it’s	JJ	O	_	thing	_	0	IGNORE	true
44	cold,	_	cold,	NNS	O	_	thing	_	0	IGNORE	true
45	grey	_	grey	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	46	APP_op1	true
46	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	37	MOD_mod	true
47	dark	_	dark	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	46	APP_op2	true
48	by	_	by	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
49	5pm,	_	5pm,	CD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
50	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
51	there’s	_	there’s	NNP	O	_	-	_	0	IGNORE	true
52	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
53	a	_	a	DT	O	_	1	_	0	IGNORE	true
54	pub	_	pub	NN	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_o	true
55	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
56	escape	_	escape	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	54	MOD_s	true
57	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
58	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
59	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
60	rain	_	rain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	61	APP_s	true
61	starts	_	start	VBZ	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	56	MOD_mod	true
62	sheeting	_	sheet	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	61	APP_o	true
63	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
64	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@crowd, 32@@s@@taste-01, 56@@s@@escape-01, 35@@c@@country, 7@@explicitanon0@@many, 18@@d@@date-entity, 11@@f@@tour-01, 52@@n@@always, 2@@s@@be-temporally-at-91, 45@@d@@grey-02, 19@@a@@and, 61@@s2@@start-01, 39@@d@@most, 54@@d@@pub, 35@@n@@_NAME_, 6@@s@@contrast-01, 22@@n@@until, 48@@n@@by, 27@@e2@@visit-01, 12@@a@@attract-01, 20@@explicitanon0@@-, 11@@p@@person, 46@@a@@and, 12@@t@@thing, 15@@s@@close-down-04, 37@@s@@experience-01, 42@@c@@country, 31@@s@@convince-01, 25@@p@@idiot, 10@@n@@_NAME_, 18@@explicitanon2@@10, 27@@p2@@person, 10@@c@@country, 60@@d@@rain-01, 49@@explicitanon0@@5pm,, 14@@d@@service, 47@@d@@dark-02, 13@@a@@and, 26@@b@@leave-13, 62@@s@@sheet-01, 21@@d@@reopen-01, 50@@s@@contrast-01, 8@@s@@include-91, 42@@n@@_NAME_, 30@@s@@more]
sentence=1	Ironically	ironically	ironically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ironic	(mod())	5	MOD_mod	true
2	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	have-concession-91	_	0	IGNORE	true
5	wise	_	wise	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
7	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-14	(s(), o())	5	APP_dom	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	newly	_	newly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	new-01	(s())	10	MOD_s	true
10	picked	_	pick	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	eggs	_	egg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
12	in	_	in	IN	O	_	-	_	0	IGNORE	true
13	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	15	MOD_s	true
14	tap	_	tap	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
15	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
16	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
17	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	chlorination	_	chlorination	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	moisturize-01	(mod())	7	MOD_mod	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	kill	_	kill	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
21	microscopic	_	microscopic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	critters	_	critter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	ride	_	ride	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	MOD_s	true
25	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	eggs	_	egg	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@pick-01, 13@@s@@fresh-04, 5@@r@@wise, 9@@s@@new-01, 28@@y@@egg, 18@@y@@moisturize-01, 21@@p@@microscopic, 1@@p@@ironic, 22@@d@@critter, 20@@s@@kill-01, 15@@d@@water, 2@@o@@sometimes, 7@@s@@leave-14, 24@@s@@ride-01, 11@@d@@egg, 17@@p@@some, 14@@p@@tap-01]
sentence=1	Ironically	ironically	ironically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ironic	(mod())	5	MOD_mod	true
2	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	have-concession-91	_	0	IGNORE	true
5	wise	_	wise	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
7	newly	_	newly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	new-01	(s())	8	MOD_s	true
8	picked	_	pick	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	eggs	_	egg	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
10	in	_	in	IN	O	_	-	_	0	IGNORE	true
11	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	13	MOD_s	true
12	tap	_	tap	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
13	water	_	water	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
15	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	chlorination	_	chlorination	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	moisturize-01	(mod())	13	MOD_mod	true
17	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
18	kill	_	kill	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
19	microscopic	_	microscopic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	critters	_	critter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	ride	_	ride	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	MOD_s	true
23	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	eggs	_	egg	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@i@@kill-01, 19@@p@@microscopic, 20@@d@@critter, 2@@o@@sometimes, 1@@p@@ironic, 13@@b@@water, 5@@r@@wise, 22@@s@@ride-01, 12@@p@@tap-01, 15@@p@@some, 16@@y@@moisturize-01, 9@@d@@egg, 8@@s@@pick-01, 26@@y@@egg, 7@@s@@new-01, 11@@s@@fresh-04]
sentence=1	Cell	cell	cell	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	phones	_	phone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
4	NOT	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	8	APP_s	true
6	on	_	on	IN	O	_	and	_	0	IGNORE	true
7	board	_	board	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	give	_	give	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	APP_o	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o2	true
12	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
13	'walkie-talkie'	_	'walkie-talkie'	NN	O	_	i	_	0	IGNORE	true
14	kind	_	kind	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	phone	_	phone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	WILL	will	WILL	MD	O	_	i	_	0	IGNORE	true
22	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
23	onboard	_	onboard	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@phone, 22@@s@@work-01, 2@@d@@phone, 10@@b@@give-01, 19@@b@@room, 8@@s@@contrast-01, 9@@d@@they, 1@@p@@cell, 11@@d@@you, 7@@b@@board, 5@@s@@work-09, 23@@b@@onboard, 4@@explicitanon0@@-, 14@@p@@kind]
sentence=1	Each	each	each	DT	O	(r<root> / --LEX--  :ARG3 (t<s>)  :frequency-of (t2<mod>))	$LEMMA$	(mod(), s())	5	MOD_mod	true
2	evening	_name_	evening	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	will	_	will	MD	O	_	and	_	0	IGNORE	true
5	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	'magazine'	_	'magazine'	NN	O	_	thing	_	0	IGNORE	true
8	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
9	The	the	the	DT	O	_	person	_	0	IGNORE	true
10	Navigator	navigator	Navigator	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_o	true
11	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
12	lists	_	list	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	of	_	of	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	activities	_	activity	NNS	O	(d<root> / --LEX--)	$LEMMA$-06	()	12	APP_o	true
17	for	_	for	IN	O	_	and	_	0	IGNORE	true
18	the_next_day	_name_	day	NN	O	(n3<root> / --LEX--  :name-of (e / event  :time-of (l<mod>)))	_NAME_	(mod())	16	MOD_mod	true
19	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[10@@d@@_NAME_, 12@@s@@list-01, 18@@n3@@_NAME_, 16@@d@@activity-06, 18@@e@@event, 2@@d@@evening, 5@@s@@get-01, 3@@d@@you, 1@@r@@each, 13@@p@@all]
sentence=1	Obviously	obviously	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	3	MOD_s	true
2	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-09	(mod())	7	MOD_mod	true
6	beverage	_	beverage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
9	alcohol	_	alcohol	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	adults	_	adult	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	who	_	who	WP	O	_	person	_	0	IGNORE	true
13	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[8@@s@@include-01, 6@@p@@beverage, 9@@d@@alcohol, 5@@p@@full-09, 7@@d@@list, 13@@s@@want-01, 2@@d@@they, 1@@s@@obvious-01, 11@@i@@adult, 3@@s@@have-03]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	14	MOD_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	switched	_	switch	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
7	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
8	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	true
12	place	_	place	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	true
15	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
16	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	23	APP_s	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	apprenticed	_	apprentice	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	with	_	with	IN	O	_	i	_	0	IGNORE	true
21	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	was	_	be	VBD	O	_	person	_	0	IGNORE	true
23	starting	_	start	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-out-03	(s())	14	APP_s	true
24	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
25	on	_	on	IN	O	_	i	_	0	IGNORE	true
26	his	_	he	PRP$	O	_	i	_	0	IGNORE	true
27	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@only, 8@@d@@they, 17@@p@@person, 11@@explicitanon0@@1, 11@@o@@ordinal-entity, 12@@t@@place, 5@@t@@switch-01, 17@@f@@friend, 16@@s@@good-02, 19@@s@@apprentice-01, 17@@h@@have-rel-role-91, 3@@s@@cause-01, 4@@d@@i, 14@@s@@cause-01, 23@@s@@start-out-03]
sentence=1	Which,	which,	which,	UH	O	_	$LEMMA$	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	add	_	add	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	foot	_	foot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	keeps	_	keep	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	8	MOD_s	true
11	crumbling	_	crumble	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	nails	_	nail	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[8@@d@@foot, 10@@c@@keep-02, 2@@d@@i, 11@@s@@crumble-01, 3@@s@@possible-01, 4@@s@@add-01, 14@@m@@nail, 7@@s@@same-01]
sentence=1	Ok,	ok,	ok,	CD	O	_	expressive	_	0	IGNORE	true
2	calm	_	calm	NN	O	(d<root> / --LEX--)	$LEMMA$-down-02	()	0	ROOT	true
3	down,	_	down,	NNP	O	_	and	_	0	IGNORE	true
4	it's	_	it's	PRP	O	_	we	_	0	IGNORE	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	2	MOD_o	true
7	he's	_	he's	NNP	O	_	person	_	0	IGNORE	true
8	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	stranger	_	stranger	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	groped	_	grope	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	lol	_	lol	UH	O	_	loud	_	0	IGNORE	true
17	.	_	.	.	O	_	loud	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@-, 8@@p@@some, 11@@s@@come-01, 9@@d@@stranger, 6@@s@@resemble-01, 2@@d@@calm-down-02, 14@@s@@grope-01]
sentence=1	When	when	when	WRB	O	_	i	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_dom	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	Younger	younger	young	JJR	O	(m<root> / more  :degree-of (l / --LEX--  :time-of (s<mod>)))	young	(mod())	25	MOD_mod	true
5	In	in	in	IN	O	_	i	_	0	IGNORE	true
6	my	_	my	PRP$	O	_	year	_	0	IGNORE	true
7	early	_	early	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	20s	_	20	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :age-of (g<mod>))	19	(mod())	4	MOD_mod	true
9	My	my	My	PRP$	O	_	year	_	0	IGNORE	true
10	farrier	_	farrier	NN	O	(d<root> / distance-quantity  :unit (i / --LEX--)  :mod-of (p2<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	A	a	a	DT	O	(d<root> / --LEX--)	1	()	25	APP_s	true
13	hottie	_	hottie	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	14	APP_o	true
14	named	_	name	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
15	Joby..(	_name_	Joby..(	NNP	O	_	_NAME_	_	0	IGNORE	true
16	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	those	_	those	DT	O	_	that	_	0	IGNORE	true
18	who	_	who	WP	O	_	person	_	0	IGNORE	true
19	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	Know	know	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
21	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
22	AM	am	am	VBP	O	_	person	_	0	IGNORE	true
23	A	a	a	DT	O	_	1	_	0	IGNORE	true
24	GIRL	girl	GIRL	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
26	my	_	my	PRP$	O	_	and	_	0	IGNORE	true
27	Bio	_name_	bio	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	on	_	on	IN	O	_	i	_	0	IGNORE	true
29	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	Page)	page)	page)	NN	O	_	i	_	0	IGNORE	true
31	dumb	_	dumb	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
32	as	_	as	IN	O	_	equal	_	0	IGNORE	true
33	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
34	post	_	post	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$-01	(mod())	31	MOD_mod	true
35	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	everything	_	everything	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
37	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	except-01	(s())	36	MOD_s	true
38	horses.	_	horses.	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	_NAME_	(mod())	36	MOD_mod	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@name-01, 27@@d@@bio, 2@@d@@i, 19@@explicitanon0@@-, 25@@s@@read-01, 24@@d@@GIRL, 7@@p@@early, 10@@d@@distance-quantity, 31@@p@@dumb, 38@@a@@_NAME_, 13@@r@@hottie, 10@@i@@farrier, 12@@d@@1, 8@@explicitanon0@@19, 20@@s@@know-01, 34@@p@@post-01, 37@@s@@except-01, 4@@m@@more, 4@@l@@young, 8@@t2@@temporal-quantity, 36@@a@@everything]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	(m<root> / --LEX--  :unit-of (a<mod>))	year	(mod())	2	MOD_mod	true
4	5_year_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	2	MOD_mod	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	lost	_	lose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
7	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	his	_	he	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
10	cheek	_	cheek	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	muscle	_	muscle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
12	on	_	on	IN	O	_	i	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-20	(s())	15	MOD_s	true
15	side	_	side	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
16	about_3-4_months_ago	_name_	ago	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
17	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[6@@s@@lose-02, 4@@y@@year, 16@@p@@ago, 1@@d@@i, 14@@s@@right-20, 3@@m@@year, 11@@d@@muscle, 15@@b@@side, 2@@s@@have-03, 7@@p@@all, 10@@p@@cheek, 9@@d@@he, 4@@t@@temporal-quantity]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	one	_	one	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	afford	_	afford	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	MOD_s	true
8	to	_	to	TO	O	_	-	_	0	IGNORE	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	APP_o	true
10	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	for	_	for	IN	O	_	-	_	0	IGNORE	true
13	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	case	_	case	NN	O	_	cause-01	_	0	IGNORE	true
16	he	_	he	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
17	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	recover	_	recover	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
19	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	18	MOD_mod	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[19@@s@@full, 6@@explicitanon0@@-, 16@@p@@he, 18@@o@@recover-01, 10@@d@@anything, 17@@explicitanon0@@-, 11@@p@@else, 9@@s@@do-02, 4@@r@@one, 1@@d@@She, 7@@c@@afford-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	5	APP_dom	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
5	one	_	one	CD	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	unable	_	unable	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	possible-01	(s())	2	MOD_s	true
9	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[8@@explicitanon0@@-, 8@@p@@possible-01, 5@@r@@one, 2@@p2@@person, 2@@e2@@own-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	will	_	will	MD	O	_	name	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	having	_	have	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	vet	_	vet	NN	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$	()	5	APP_o	true
9	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
10	who's	_	who'	VBZ	O	_	have-rel-role-91	_	0	IGNORE	true
11	a	_	a	DT	O	_	vice	_	0	IGNORE	true
12	chiro	_	chiro	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	&	_	&	CC	O	_	have-org-role-91	_	0	IGNORE	true
14	acupuncturist	_	acupuncturist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	evaluate	_	evaluate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
17	him	_	he	PRP	O	_	i	_	0	IGNORE	true
18	for	_	for	IN	O	_	i	_	0	IGNORE	true
19	wobblers	_	wobbler	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@p@@chiro, 19@@i@@wobbler, 3@@p@@also, 8@@l@@vet, 16@@i@@evaluate-01, 8@@p@@person, 5@@s@@have-03, 7@@p@@other, 1@@d@@i, 14@@p@@acupuncturist]
sentence=1	He's	_name_	He's	NNP	O	_	name	_	0	IGNORE	true
2	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	exhibited	_	exhibit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	weight	_	weight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	loss	_	loss	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	lose-02	(s())	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
7	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	muscle	_	muscle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
9	atrophy,	_	atrophy,	NNS	O	_	and	_	0	IGNORE	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	slight	_	slight	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	toe	_	toe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	drag	_	drag	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (u<op1>)  :op2 (b2<op2>)  :accompanier-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	bit	_	bit	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	trouble	_	trouble	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
20	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	23	MOD_s	true
23	lead	_	lead	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
24	(which	_	(which	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
25	could	_	could	MD	O	(d<root> / --LEX--)	possible-01	()	26	APP_op2	true
26	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
27	couldn't	_	couldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
28	be	_	be	VB	O	_	person	_	0	IGNORE	true
29	related)	_	related)	NN	O	_	-	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@explicitanon0@@-, 15@@a@@and, 8@@d@@muscle, 26@@a@@or, 12@@p@@slight, 6@@a@@and, 17@@explicitanon0@@bit, 24@@d@@(which, 14@@s@@drag-01, 22@@s@@right-04, 13@@d@@toe, 25@@d@@possible-01, 5@@s@@lose-02, 19@@d@@trouble, 7@@p@@some, 3@@s@@exhibit-01, 4@@d@@weight, 23@@a@@lead, 2@@p@@only]
sentence=1	At	at	at	IN	O	_	thing	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
7	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
8	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_o	true
9	who	_	who	WP	O	_	and	_	0	IGNORE	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	had	_	have	VBN	O	_	$LEMMA$-03	_	0	IGNORE	true
12	horses	_	horse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
13	come	_	come	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
14	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	successfully	_	successfully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	13	MOD_s	true
16	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
17	EPM	_name_	EPM	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_op1	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@same-01, 4@@n@@time, 5@@d@@i, 14@@a@@back, 8@@d@@person, 15@@s@@succeed-01, 13@@g@@come-01, 17@@d@@_NAME_, 16@@w@@after, 7@@s@@know-02, 12@@d@@horse]
sentence=1	We've	we've	We've	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_s	true
2	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	liked	_	like	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	6	MOD_s	true
6	trotters	_	trotter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that	_	that	WDT	O	_	slash	_	0	IGNORE	true
8	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
9	better	_	better	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	8	MOD_s	true
10	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	mile	_	mile	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	tracks	_	track	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	then	_	then	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	say-01	(mod())	3	MOD_mod	true
14	1/2	_	1/2	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	mile	_	mile	NN	O	(d<root> / distance-quantity  :unit (m2 / --LEX--)  :extent-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@do-02, 3@@s@@like-01, 9@@b@@good-02, 5@@s@@long-03, 6@@d@@trotter, 12@@b@@track, 15@@d@@distance-quantity, 1@@d@@_NAME_, 15@@m2@@mile, 9@@m@@more, 13@@p@@say-01, 14@@explicitanon0@@1/2, 4@@p@@big, 11@@p@@mile, 2@@n@@always]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	didnt	_	didnt	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	prescribe	_	prescribe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o2	true
4	pain	_	pain	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
5	meds	_	med	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_op2	true
6	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	3	APP_o	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
8	drugs,	_	drugs,	NNPS	O	_	and	_	0	IGNORE	true
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	used	_	use	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
11	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
12	bodytalk	_	bodytalk	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	method	_	method	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	unusual	_	unusual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	13	MOD_mod	true
17	but	_	but	CC	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	contrast-01	(o2(), s(), o())	0	ROOT	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	results	_	result	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
20	are	_	be	VBP	O	_	prove-01	_	0	IGNORE	true
21	undeniable	_	undeniable	JJ	O	(p<root> / possible-01  :ARG1 (j / --LEX--  :ARG1 (t<s>))  :polarity (explicitanon0 / -))	deny-01	(s())	17	APP_o	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@He, 4@@p@@pain-01, 3@@s@@prescribe-01, 6@@a@@or, 5@@d@@med-01, 21@@explicitanon0@@-, 2@@explicitanon0@@-, 16@@p@@usual, 7@@p@@other, 12@@p@@bodytalk, 17@@b@@contrast-01, 13@@d@@method, 21@@j@@deny-01, 19@@d@@result-01, 10@@s@@use-01, 21@@p@@possible-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	need	_	need	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	cater	_	cater	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
8	affordable	_	affordable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	afford-01	(s())	5	MOD_s	true
9	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	easy	_	easy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	12	MOD_s	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_dom	true
15	are	_	be	VBP	O	_	person	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	ones	_	one	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@they, 8@@s@@afford-01, 12@@s@@work-01, 5@@d@@cater, 10@@s@@easy-05, 3@@m@@need-01, 2@@d@@you, 17@@r@@one]
sentence=1	Overall,	overall,	overall,	JJ	O	_	and	_	0	IGNORE	true
2	Joe	_name_	Joe	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_dom	true
3	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	camper	_	camper	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	who	_	who	WP	O	_	name	_	0	IGNORE	true
8	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
9	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	spot	_	spot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@spot, 5@@s@@happy-01, 11@@p@@great, 9@@s@@find-01, 2@@n@@_NAME_, 6@@r@@camper, 2@@p@@person]
sentence=1	Nothing	nothing	Nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	compares	_	compare	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	to	_	to	IN	O	_	-	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
7	product	_	product	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	that	_	that	WDT	O	_	i	_	0	IGNORE	true
9	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	10	MOD_s	true
10	stands	_	stand	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	MOD_s	true
11	the	_	the	DT	O	_	and	_	0	IGNORE	true
12	test	_	test	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	of	_	of	IN	O	_	event	_	0	IGNORE	true
14	time.	_	time.	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@c@@stand-01, 5@@d@@home, 7@@d@@product, 12@@s@@test-01, 9@@s@@real-04, 2@@s@@compare-01, 1@@d@@Nothing, 6@@s@@make-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	end	_	end	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-up-03	(o(s()))	9	APP_s	true
4	up	_	up	RP	O	_	monetary-quantity	_	0	IGNORE	true
5	buying	_	buy	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	3	APP_o	true
6	my	_	my	PRP$	O	_	product	_	0	IGNORE	true
7	car	_	car	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_o	true
8	here,	_	here,	NNS	O	_	and	_	0	IGNORE	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	did	_	do	VBD	O	_	person	_	0	IGNORE	true
12	think	_	think	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
13	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
14	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	worked	_	work	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	with	_	with	IN	O	_	i	_	0	IGNORE	true
18	me	_	I	PRP	O	_	i	_	0	IGNORE	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	cool	_	cool	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	12	APP_s	true
22	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	9	MOD_o	true
25	willing	_	willing	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	will-02	(s())	24	APP_s	true
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
27	budge	_	budge	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
30	on	_	on	IN	O	_	i	_	0	IGNORE	true
31	the	_	the	DT	O	_	he	_	0	IGNORE	true
32	price	_	price	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_s	true
33	which	_	which	WDT	O	_	i	_	0	IGNORE	true
34	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
35	a	_	a	DT	O	_	1	_	0	IGNORE	true
36	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
37	to	_	to	IN	O	_	and	_	0	IGNORE	true
38	me	_	I	PRP	O	_	i	_	0	IGNORE	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@explicitanon0@@-, 5@@l@@buy-01, 12@@s@@think-01, 1@@d@@i, 25@@s@@will-02, 3@@o@@end-up-03, 24@@s@@person, 7@@m@@car, 32@@d@@price-01, 21@@s@@cool-04, 14@@d@@guy, 16@@s@@work-01, 34@@s@@mean-01, 27@@s@@budge-01, 9@@s@@contrast-01, 29@@s@@little, 36@@d@@lot, 20@@s@@pretty]
sentence=1	Thanks	thanks	thank	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	thank-01	(s())	0	ROOT	true
2	for	_	for	IN	O	_	i	_	0	IGNORE	true
3	doing	_	do	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
4	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	work	_	work	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
7	on	_	on	IN	O	_	i	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	of	_	of	IN	O	_	thing	_	0	IGNORE	true
12	clothing	_	clothing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	clothe-01	(mod())	10	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	MOD_s	true
16	great	_	great	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[9@@p@@important, 10@@d@@piece, 15@@s@@look-02, 12@@p@@clothe-01, 4@@s@@such, 5@@p@@great, 14@@n@@always, 16@@d@@great, 6@@s@@work-01, 1@@s@@thank-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	dude	_	dude	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
4	grills	_	grill	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	retarded	_	retarded	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	dogs	_	dog	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	rude	_	rude	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	0	ROOT	true
10	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[9@@r@@rude-01, 7@@d@@dog, 2@@d@@dude, 6@@s@@retarded-01, 4@@s@@grill-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	every_other_week	_name_	week	NN	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	2	APP_o	true
4	for	_	for	IN	O	_	or	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	shallac/gel	_	shallac/gel	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	manicure	_	manicure	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
10	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	$25	_	$25	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	truly	_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	true-01	(s())	15	MOD_s	true
15	lasts	_	last	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
16	2_weeks	_name_	week	NNS	O	(d<root> / --LEX--)	5	()	15	APP_s	true
17	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[16@@d@@5, 3@@n@@newspaper, 11@@explicitanon0@@_NUMBER_, 7@@p@@manicure, 15@@s@@last-01, 6@@n@@_NAME_, 3@@n2@@_NAME_, 2@@s@@go-02, 10@@p@@only, 1@@d@@i, 14@@s@@true-01, 12@@a@@and]
sentence=1	Someone	someone	Someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
2	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
7	they	_	they	PRP	O	_	person	_	0	IGNORE	true
8	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	6	APP_o	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_s	true
10	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
12	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
13	to	_	to	TO	O	_	i	_	0	IGNORE	true
14	charge	_	charge	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op1	true
15	me	_	I	PRP	O	_	i	_	0	IGNORE	true
16	more	_	more	RBR	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
18	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
19	me	_	I	PRP	O	_	and	_	0	IGNORE	true
20	less	_	less	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	warranty	_	warranty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@give-01, 14@@s@@charge-01, 3@@d@@i, 16@@d@@more, 12@@s@@want-01, 9@@s@@do-02, 11@@s@@contrast-01, 21@@d@@warranty, 17@@a@@and, 10@@d@@it, 20@@s@@less, 8@@s@@possible-01, 6@@s@@say-01, 2@@p@@else, 1@@d@@Someone, 4@@s@@find-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	prompt,	_	prompt,	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	and	(mod())	7	APP_op1	true
4	knowledgable,	_	knowledgable,	NNP	O	_	and	_	0	IGNORE	true
5	friendly,	_	friendly,	NNP	O	_	and	_	0	IGNORE	true
6	clean	_	clean	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	7	APP_op3	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
8	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
9	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
10	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
13	who	_	who	WP	O	_	name	_	0	IGNORE	true
14	obviously	_	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	15	MOD_s	true
15	cares	_	care	VBZ	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	12	MOD_s	true
16	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	business	_	business	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	15	APP_o	true
19	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[15@@l@@care-01, 11@@p@@great, 8@@p@@just, 18@@m@@business, 3@@explicitanon0@@and, 6@@d@@clean-02, 1@@d@@He, 7@@a@@and, 12@@d@@guy, 14@@s@@obvious-01, 10@@p@@overall]
sentence=1	Beats	beats	beat	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
2	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	1	APP_o	true
3	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
4	"cleaning	_	"cleaning	''	O	(d<root> / --LEX--)	fuck-01	()	2	APP_s	true
5	lady"	_	lady"	NFP	O	_	and	_	0	IGNORE	true
6	who	_	who	WP	O	_	1	_	0	IGNORE	true
7	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	4	MOD_s	true
8	twice	_	twice	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	product-of	(mod())	10	MOD_mod	true
9	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	10	MOD_mod	true
10	long	_	long	RB	O	(d<root> / --LEX--)	$LEMMA$-03	()	7	APP_o	true
11	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
12	did	_	do	VBD	O	_	person	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
15	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
16	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	through	_	through	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	18	MOD_s	true
18	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	18	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	"maids"	_	"maids"	NNP	O	_	_NAME_	_	0	IGNORE	true
22	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
23	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[11@@d@@and, 4@@d@@fuck-01, 14@@s@@do-02, 13@@explicitanon0@@-, 1@@s@@beat-03, 9@@s@@equal, 7@@s@@take-10, 18@@d@@job, 22@@s@@do-02, 3@@explicitanon0@@1, 10@@d@@long-03, 19@@s@@resemble-01, 2@@s@@have-03, 16@@s@@very, 8@@s@@product-of, 17@@s@@through]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	ordered	_	order	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the_Neptune_Platter	_name_	Platter	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
5	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	awesome...	_	awesome...	XX	O	_	cause-01	_	0	IGNORE	true
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_s	true
9	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	gets	_	get	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
12	5	_	5	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	16	MOD_mod	true
13	out	_	out	IN	O	_	request-confirmation-91	_	0	IGNORE	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	5	_	5	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	16	MOD_mod	true
16	stars	_	star	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@get-01, 3@@s@@order-01, 4@@n@@_NAME_, 1@@d@@i, 2@@p@@also, 15@@explicitanon0@@_NUMBER_, 10@@d@@place, 9@@p@@this, 8@@s@@cause-01, 12@@explicitanon0@@_NUMBER_, 4@@c@@company, 16@@d@@star]
sentence=1	Got	got	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	crab	_	crab	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	rangoon	_	rangoon	NN	O	(d<root> / --LEX--)	_NAME_	()	1	APP_s	true
5	which	_	which	WDT	O	_	and	_	0	IGNORE	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	great,	_	great,	NNP	O	_	and	_	0	IGNORE	true
8	tofu	_	tofu	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op1	true
9	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
10	cabbage	_	cabbage	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	which	_	which	WDT	O	_	and	_	0	IGNORE	true
12	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
13	spicy	_	spicy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	1	MOD_s	true
15	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_o	true
17	shrimp	_	shrimp	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	satay	_	satay	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
19	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	was	_	be	VBD	O	_	monetary-quantity	_	0	IGNORE	true
21	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@contrast-01, 21@@p@@also, 4@@d@@_NAME_, 3@@p@@crab, 8@@d@@tofu, 16@@a@@and, 1@@s@@get-01, 18@@d@@satay, 15@@s@@good-02, 22@@s@@good-02, 17@@p@@shrimp, 13@@p@@spicy, 10@@y@@cabbage]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	inspected	_	inspect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	my	_	my	PRP$	O	(p<root> / --LEX--  :mod-of (s<mod>))	i	(mod())	3	MOD_mod	true
5	entie	_	entie	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
6	roof	_	roof	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
9	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
10	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	needed	_	need	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	12	MOD_s	true
16	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	attend-02	(s())	15	APP_o	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@c@@need-01, 8@@s@@see-01, 5@@d@@entie, 4@@p@@i, 13@@p@@else, 16@@s@@attend-02, 12@@d@@anything, 6@@m@@roof, 1@@d@@He, 3@@s@@inspect-01, 2@@p@@also]
sentence=1	To	to	to	IN	O	_	cause-01	_	0	IGNORE	true
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
3	surprise	_	surprise	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
4	$20	_	$20	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	7	MOD_mod	true
5	deposit....	_	deposit....	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	New	new	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	movies	_	movie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
9	on	_	on	IN	O	_	thing	_	0	IGNORE	true
10	shelf..under	_	shelf..under	CD	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
11	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
12	counter	_	counter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
13	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	Telugu	_name_	Telugu	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	Speaking	speaking	speak	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	18	APP_op3	true
17	only...	_	only...	NNP	O	_	include-91	_	0	IGNORE	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
19	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	18	APP_op2	true
20	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
21	spend	_	spend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	$30	_name_	$30	NN	O	(d<root> / --LEX--)	_NUMBER_	()	21	APP_o	true
23	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
24	more	_	more	JJR	O	_	at-least	_	0	IGNORE	true
25	groceries.	_	groceries.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@person, 3@@p@@surprise-01, 4@@explicitanon0@@_NUMBER_, 8@@explicitanon0@@-, 10@@b@@shelf..under, 7@@d@@movie, 15@@s@@speak-01, 25@@p@@_NAME_, 18@@a@@or, 14@@p@@_NAME_, 22@@d@@_NUMBER_, 5@@explicitanon0@@deposit...., 21@@s@@spend-01, 12@@d@@counter, 19@@d@@person, 6@@s@@new-01]
sentence=1	FITNESS	fitness	FITNESS	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	UNLIMITED	unlimited	UNLIMITED	NNP	O	(d<root> / --LEX--)	$REPL$	()	0	ROOT	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	6	MOD_mod	true
6	home	_	home	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	to	_	to	IN	O	_	and	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	us	_	us	PRP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
12	gym	_	gym	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
13	members	_	member	NNS	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	14	APP_o	true
14	who	_	who	WP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	1	(s(), o())	2	MOD_s	true
15	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-out-03	(s())	13	MOD_s	true
16	out	_	out	RP	O	_	1	_	0	IGNORE	true
17	daily	_name_	daily	RB	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	15	MOD_mod	true
18	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@2, 15@@s@@work-out-03, 17@@r@@rate-entity-91, 2@@d@@unlimited, 12@@d@@gym, 6@@b@@home, 17@@t@@temporal-quantity, 17@@d@@day, 11@@d@@_NAME_, 9@@explicitanon0@@lot, 13@@h@@have-org-role-91, 13@@g@@member, 14@@s@@1, 1@@p@@fitness, 5@@o@@ordinal-entity]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
3	come	_	come	VBP	O	(g<root> / --LEX--  :ARG4 (s<o>)  :ARG1 (y<s>)  :time-of (p2<mod>))	$LEMMA$-01	(mod(), s(), o())	8	MOD_mod	true
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	ncfa	_	ncfa	NN	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
6	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	will	_	will	MD	O	_	person	_	0	IGNORE	true
8	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	true
11	instructor	_	instructor	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	teach-01	()	8	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	teaches	_	teach	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	and	_	and	CC	O	_	$LEMMA$	_	8	IGNORE	true
15	trains	_	train	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	everyday	_	everyday	RB	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	1	(mod())	13	MOD_mod	true
17	!	_	!	.	O	_	person	_	0	IGNORE	true

nodealignment=[15@@s@@train-01, 16@@d@@1, 8@@s@@see-01, 13@@s@@teach-01, 11@@e2@@teach-01, 3@@g@@come-01, 5@@n@@_NAME_, 10@@s@@real-04, 16@@r@@rate-entity-91, 5@@o2@@organization, 2@@d@@you, 11@@p2@@person, 16@@t@@temporal-quantity]
sentence=1	Plus	plus	plus	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	plans	_	plan	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
5	monthly	_name_	monthly	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	month	(mod())	6	MOD_mod	true
6	breakfasts	_	breakfast	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
8	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
10	at	_	at	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	clubhouse	_	clubhouse	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
15	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
16	nice	_	nice	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
17	added	_	add	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	benefit	_	benefit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
19	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[18@@s@@benefit-01, 12@@b@@clubhouse, 9@@d@@event, 17@@s@@add-02, 8@@p@@other, 1@@p@@plus, 3@@s@@plan-01, 5@@r@@rate-entity-91, 2@@d@@she, 5@@t@@temporal-quantity, 5@@d@@month, 7@@a@@and, 16@@s@@nice-01, 4@@explicitanon0@@1, 6@@d@@breakfast]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	feeling	_	feel	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	18	APP_s	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	need	_	need	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	fish	_	fish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	so	_	so	RB	O	_	cause-01	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-03	(mod(), s())	18	MOD_mod	true
12	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
13	salmon	_	salmon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
16	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
18	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
19	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
20	steaks	_	steak	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	23	APP_op1	true
22	amazing	_	amazing	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
24	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	town	_	town	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
29	again,	_	again,	NNP	O	_	and	_	0	IGNORE	true
30	I'll	i'll	I'll	NNP	O	_	i	_	0	IGNORE	true
31	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	32	MOD_mod	true
32	order	_	order	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
33	a	_	a	DT	O	_	1	_	0	IGNORE	true
34	steak	_	steak	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
35	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@some, 5@@s@@need-01, 16@@s@@very, 3@@c@@feel-01, 20@@d@@steak, 31@@p@@definite, 8@@d@@fish, 22@@d@@amazing, 32@@s@@order-01, 34@@d@@steak, 11@@s@@have-03, 13@@d@@salmon, 21@@s@@look-02, 28@@t@@town, 18@@s@@contrast-01, 17@@s@@good-02, 23@@a@@and, 1@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	APP_op1	true
4	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_op2	true
5	about	_	about	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	price	_	price	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	4	APP_o	true
8	for	_	for	IN	O	_	thing	_	0	IGNORE	true
9	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	updo	_	updo	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	receptionist	_	receptionist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
15	owner	_	owner	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	own-01	()	14	APP_op2	true
16	who	_	who	WP	O	_	own-01	_	0	IGNORE	true
17	aswered	_	aswere	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
18	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
19	phone	_	phone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	refused	_	refuse	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_op2	true
21	to	_	to	TO	O	_	-	_	0	IGNORE	true
22	tell	_	tell	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	APP_op1	true
23	me,	_	me,	NN	O	_	thing	_	0	IGNORE	true
24	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	20	APP_o	true
25	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	APP_op2	true
28	me	_	I	PRP	O	_	and	_	0	IGNORE	true
29	an	_	an	DT	O	_	1	_	0	IGNORE	true
30	approximate	_	approximate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	MOD_s	true
31	price	_	price	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	32	MOD_mod	true
32	range	_	range	NN	O	(t<root> / thing  :ARG5-of (r / --LEX--))	$LEMMA$-01	()	27	APP_o	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[27@@s@@give-01, 19@@d@@phone, 20@@c@@refuse-01, 25@@p@@even, 24@@a@@or, 13@@d@@receptionist, 11@@a@@and, 22@@s@@tell-01, 30@@s@@approximate-01, 3@@a@@and, 10@@s@@updo-01, 31@@p@@price-01, 15@@e2@@own-01, 7@@t@@thing, 17@@s@@aswere-01, 32@@r@@range-01, 15@@p2@@person, 7@@c@@price-01, 1@@d@@i, 32@@t@@thing, 4@@s@@ask-01, 2@@s@@call-02, 26@@p@@just, 9@@d@@hair, 14@@a@@or]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	saddened	_	sadden	VBN	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	reviews	_	review	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	claimed	_	claim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	World_Hats_Mart	_name_	Mart	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
11	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_o	true
12	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	service	_	service	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	serve-01	(s())	9	APP_o	true
14	.	_	.	.	O	_	before	_	0	IGNORE	true

nodealignment=[10@@c@@company, 1@@d@@i, 13@@s@@serve-01, 9@@s@@claim-01, 12@@p@@poor, 3@@c@@sadden-01, 7@@d@@review, 5@@s@@see-01, 11@@s@@have-03, 10@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	husband	_	husband	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_dom	true
4	wife	_	wife	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
5	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
6	run	_	run	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	spot	_	spot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	lovely	_	lovely	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	0	ROOT	true
12	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[2@@p@@person, 3@@a@@and, 10@@p@@lovely, 11@@r@@person, 8@@d@@spot, 4@@d@@wife, 6@@s@@run-01, 2@@h@@have-rel-role-91, 2@@f@@husband, 7@@p@@this]
sentence=1	Both	both	both	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
4	sales	_	sale	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	sell-01	(mod())	5	MOD_mod	true
5	men	_	man	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	who	_	who	WP	O	_	i	_	0	IGNORE	true
7	put	_	put	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	MOD_s	true
8	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	9	APP_s	true
9	needs	_	need	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	first	_name_	first	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
11	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@p@@sell-01, 7@@b@@put-01, 5@@r@@man, 1@@d@@both, 3@@s@@excellent-02, 8@@d@@i, 9@@s@@need-01, 10@@d@@first]
sentence=1	Firstly,	firstly,	Firstly,	NFP	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	reviewer	_	reviewer	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	post-01	()	8	APP_s	true
5	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	8	MOD_s	true
6	has	_	have	VBZ	O	_	-	_	0	IGNORE	true
7	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	8	MOD_mod	true
8	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	11	APP_op1	true
9	to	_	to	IN	O	_	-	_	0	IGNORE	true
10	Nick's,	nick's,	Nick's,	NNP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_o	true
11	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
14	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
15	that	_	that	IN	O	_	-	_	0	IGNORE	true
16	Nick	_name_	Nick	NNP	O	_	i	_	0	IGNORE	true
17	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	charges	_	charge	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
19	$13	_	$13	NN	O	(d<root> / --LEX--)	_NUMBER_	()	18	APP_s	true
20	for	_	for	IN	O	_	dollar	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	haircut	_	haircut	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
23	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
24	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
25	pretty	_	pretty	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-much	(mod())	26	MOD_mod	true
26	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
27	industry	_	industry	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	standard	_	standard	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
29	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[4@@p2@@person, 5@@s@@clear-06, 4@@e2@@post-01, 17@@p@@only, 28@@p@@standard, 22@@d@@haircut-01, 7@@n@@ever, 14@@s@@know-01, 27@@p@@industry, 18@@s@@charge-01, 8@@s@@be-located-at-91, 19@@d@@_NUMBER_, 10@@d@@_NAME_, 3@@p@@other, 26@@p@@much, 11@@a@@or, 25@@p@@pretty-much]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	14	MOD_s	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	younger	_	young	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	young	(mod())	5	MOD_mod	true
5	kids	_	kid	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
6	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
7	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	there	_	there	EX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	sub	_	sub	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	par,	_	par,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	0	ROOT	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	13	APP_o	true
15	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
17	wait	_	wait	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
18	for	_	for	IN	O	_	thing	_	0	IGNORE	true
19	Nick...	nick...	nick...	XX	O	_	_NAME_	_	0	IGNORE	true
20	you'll	_	you'll	PRP	O	_	thing	_	0	IGNORE	true
21	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
22	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_o	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@include-91, 14@@s@@contrast-01, 12@@d@@sub, 11@@s@@bit, 1@@explicitanon0@@some, 4@@m@@more, 4@@f2@@young, 8@@b@@there, 22@@s@@good-02, 13@@s@@and, 17@@o@@wait-01, 7@@s@@work-01, 5@@d@@kid, 16@@d@@you]
sentence=1	Dave	_name_	Dave	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	patient	_	patient	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	methodical	_	methodical	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
7	teacher,	_	teacher,	NNS	O	_	and	_	0	IGNORE	true
8	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
9	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	ear	_	ear	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
14	sensitivity	_	sensitivity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	students'	_	students'	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	passion	_	passion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	direction	_	direction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
22	they	_	they	PRP	O	_	person	_	0	IGNORE	true
23	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
24	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
25	lessons	_	lesson	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
28	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[12@@d@@ear, 4@@s@@patient, 19@@a@@and, 1@@p@@person, 6@@d@@methodical, 18@@d@@passion, 21@@d@@direction, 17@@p@@students', 9@@s@@have-03, 13@@a@@and, 23@@s@@want-01, 14@@d@@sensitivity, 11@@p@@great, 5@@a@@and, 1@@n@@_NAME_, 27@@s@@take-01, 25@@d@@lesson]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	FUCKING	fucking	fucking	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	fuck	(mod())	3	MOD_mod	true
3	HATE	hate	hate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op1	true
4	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	PLACE	place	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	EVERY	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	3	MOD_mod	true
7	TIME	time	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	i	_	i	PRP	O	_	1	_	0	IGNORE	true
9	GO	go	go	VBP	O	(d<root> / --LEX--)	$LEMMA$-02	()	6	APP_s	true
10	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	HOT	hot	hot	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	CHICK	chick	chick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	SHOWS	shows	show	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	15	APP_o	true
14	UP	up	up	RP	O	_	cause-01	_	0	IGNORE	true
15	AND	and	and	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	26	MOD_s	true
16	i	_	i	PRP	O	_	$FORM$	_	0	IGNORE	true
17	MEAN	mean	mean	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
18	REALLY	really	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	HOT	hot	HOT	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
20	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	26	MOD_s	true
21	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	IS	is	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	26	APP_op4	true
23	LIKE	like	like	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	REAAAALLY	reaaaally	reaaaally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	complete-02	(mod())	25	MOD_mod	true
25	DUMB	dumb	dumb	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
26	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
27	THEN	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
28	THEIR	their	their	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
29	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
30	THIS	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	OTHER	other	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	CHICK	chick	CHICK	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
33	THAT	that	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
34	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
35	REALY	realy	realy	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	36	MOD_mod	true
36	UGLY	ugly	ugly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	32	MOD_s	true
37	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	contrast-01	(s())	26	APP_op2	true
38	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	IS	is	be	VBZ	O	_	cause-01	_	0	IGNORE	true
40	LIKE	like	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	26	APP_op3	true
41	SUPER	super	SUPER	NNP	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	SMART	smart	SMART	NNP	O	(d<root> / --LEX--)	$LEMMA$-06	()	40	APP_s	true
43	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
44	COULD	could	COULD	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	40	MOD_s	true
45	BE	be	be	VB	O	_	person	_	0	IGNORE	true
46	A	a	a	DT	O	_	cause-01	_	0	IGNORE	true
47	SCIENTIST,	scientist,	scientist,	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
48	BUT	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	26	MOD_s	true
49	THEN	then	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
50	THEIR	their	their	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
51	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
52	THIS	this	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
53	STONER	stoner	STONER	``	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
54	WHO	who	who	WP	O	_	-	_	0	IGNORE	true
55	ALWAYS	always	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
56	COMES	comes	come	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	53	MOD_s	true
57	HERE	here	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_o	true
58	HIGH	high	high	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-02	(mod())	56	MOD_mod	true
59	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	MOD_op1	true
60	HE	he	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
61	ALWAYS	always	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	62	MOD_mod	true
62	BRINGS	brings	bring	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	59	APP_op2	true
63	HIS	his	his	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
64	FUCKING	fucking	FUCKING	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	65	MOD_mod	true
65	DOG	dog	DOG	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	62	APP_s	true
66	WHO	who	who	WP	O	_	cause-01	_	0	IGNORE	true
67	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
68	SO	so	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	69	MOD_mod	true
69	HIGH	high	high	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	65	MOD_s	true
70	FROM	from	from	IN	O	_	cause-01	_	0	IGNORE	true
71	THE	the	the	DT	O	_	cause-01	_	0	IGNORE	true
72	SECOND	second	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	73	MOD_mod	true
73	HAND	hand	hand	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	74	MOD_mod	true
74	SMOKE	smoke	smoke	NN	O	(d<root> / --LEX--)	$LEMMA$	()	69	APP_o	true
75	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
76	THINK	think	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	65	MOD_s	true
77	HE	he	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
78	IS	is	be	VBZ	O	_	person	_	0	IGNORE	true
79	TRYING	trying	try	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	76	APP_o	true
80	TO	to	to	TO	O	_	and	_	0	IGNORE	true
81	TALK	talk	talk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	79	APP_s	true
82	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@mean-01, 24@@s@@complete-02, 48@@s@@contrast-01, 56@@g@@come-01, 40@@s@@resemble-01, 59@@a@@and, 25@@d@@dumb, 55@@n@@always, 64@@p@@FUCKING, 58@@t@@high-02, 53@@d@@STONER, 57@@d@@here, 68@@s@@so, 65@@d@@DOG, 76@@s@@think-01, 73@@p@@hand, 79@@s@@try-01, 72@@o@@ordinal-entity, 27@@n@@then, 5@@d@@place, 12@@d@@chick, 3@@s@@hate-01, 47@@d@@scientist,, 61@@n@@always, 4@@p@@this, 26@@a@@and, 22@@s@@person, 11@@s@@hot-02, 42@@d@@SMART-06, 62@@s@@bring-01, 20@@s@@contrast-01, 35@@s@@so, 31@@p@@other, 37@@s@@contrast-01, 44@@s@@possible-01, 69@@s@@high-02, 9@@d@@go-02, 10@@p@@this, 1@@d@@i, 2@@p@@fuck, 6@@r@@rate-entity-91, 30@@p@@this, 81@@d@@talk-01, 74@@d@@smoke, 41@@s@@SUPER, 36@@s@@ugly, 72@@explicitanon0@@2, 19@@s@@HOT-02, 32@@d@@CHICK, 15@@s@@and, 18@@s@@really, 23@@s@@like, 13@@s@@show-up-02]
sentence=1	Chicken	chicken	chicken	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	saltimboca	_	saltimboca	NNS	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
3	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
4	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
7	there's	_	there'	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	contrast-01	(s())	5	APP_op2	true
8	the	_	the	DT	O	_	$LEMMA$n	_	0	IGNORE	true
9	chocolate	_	chocolate	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	mousse	_	mousse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_s	true
13	straight	_	straight	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	12	MOD_s	true
14	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	heaven	_	heaven	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[2@@d@@_NAME_, 7@@s@@contrast-01, 4@@s@@excellent-02, 9@@p@@chocolate, 6@@n@@then, 15@@d@@heaven, 5@@a@@and, 13@@s@@straight-04, 12@@s@@come-03, 1@@p@@chicken, 10@@d@@mousse]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	auto	_	auto	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	mechanics	_	mechanic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
4	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
5	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
6	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	Auto_Towing	_name_	Towing	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	13	APP_op1	true
12	informative	_	informative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	11	APP_op2	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	answered	_	answer	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	question	_	question	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	true
18	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@d@@i, 7@@c@@company, 2@@p@@auto, 11@@a@@and, 16@@s@@question-01, 10@@s@@friendly-01, 3@@d@@mechanic, 5@@s@@work-01, 13@@a@@and, 9@@s@@very, 15@@p@@any, 14@@s@@answer-01, 7@@n@@_NAME_, 12@@s@@informative]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_dom	true
3	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
4	looking	_	look	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	21	MOD_mod	true
5	for	_	for	IN	O	_	or	_	0	IGNORE	true
6	towing	_	tow	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	services	_	service	NNS	O	(d<root> / --LEX--)	serve-01	()	4	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	offer	_	offer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
14	towed	_	tow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	car	_	car	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
16	service,	_	service,	NNP	O	_	and	_	0	IGNORE	true
17	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
18	Auto_Towing	_name_	Towing	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	21	MOD_mod	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	the	_	the	DT	O	_	company	_	0	IGNORE	true
21	company	_	company	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
22	for	_	for	IN	O	_	have-mod-91	_	0	IGNORE	true
23	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@good-02, 21@@r@@company, 9@@s@@possible-01, 2@@d@@you, 15@@d@@car, 14@@s@@tow-01, 7@@d@@serve-01, 10@@s@@offer-01, 4@@o@@look-01, 18@@n@@_NAME_, 6@@p@@tow-01]
sentence=1	Yes,	yes,	yes,	UH	O	_	expressive	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	6	APP_s	true
4	to	_	to	IN	O	_	obligate-01	_	0	IGNORE	true
5	wait,	_	wait,	NNS	O	_	and	_	0	IGNORE	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	ER	_name_	ER	NNP	O	(d<root> / --LEX--)	_NAME_	()	11	APP_dom	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	triage	_	triage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	system	_	system	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	most	_	most	JJS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
17	threatening	_	threaten	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	18	MOD_s	true
18	cases	_	case	NNS	O	(d<root> / --LEX--)	$LEMMA$-03	()	13	APP_o	true
19	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	13	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@threaten, 7@@d@@_NAME_, 15@@s@@most, 13@@s@@take-01, 18@@d@@case-03, 2@@d@@we, 6@@s@@contrast-01, 19@@o@@ordinal-entity, 3@@s@@obligate-01, 19@@explicitanon0@@1, 11@@r@@system, 10@@p@@triage, 16@@d@@life]
sentence=1	Coming	coming	come	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	15	MOD_s	true
2	from	_	from	IN	O	_	thing	_	0	IGNORE	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
5	who	_	who	WP	O	_	i	_	0	IGNORE	true
6	hates	_	hate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	dentist	_	dentist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	general,	_	general,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
11	Dr.	dr.	Dr.	NNP	O	_	professor	_	0	IGNORE	true
12	Taylor	_name_	Taylor	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	the	_	the	DT	O	_	company	_	0	IGNORE	true
15	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	0	ROOT	true
16	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[12@@n@@_NAME_, 15@@b2@@good-02, 12@@p@@person, 6@@s@@hate-01, 8@@d@@dentist, 4@@d@@person, 1@@s@@come-03, 15@@m@@most]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	went	_	go	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	mile	_	mile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	repair	_	repair	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	cowboy	_	cowboy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	boots--	_	boots--	NFP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	2	MOD_o	true
11	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	10	APP_s	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	APP_s	true
15	a	_	a	DT	O	_	thing	_	0	IGNORE	true
16	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	paper	_	paper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	19	MOD_s	true
22	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
23	wood	_	wood	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	grain	_	grain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
26	fix	_	fix	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	12	MOD_mod	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	heels	_	heel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@They, 23@@p@@wood, 9@@d@@cowboy, 16@@s@@special-02, 24@@d@@grain, 21@@s@@look-02, 14@@s@@have-03, 19@@d@@paper, 5@@d@@mile, 17@@p@@kind, 10@@s@@and, 12@@s@@obligate-01, 7@@s@@repair-01, 28@@d@@heel, 4@@p@@extra, 26@@i@@fix-02, 2@@s@@go-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	haven't	_	haven't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
3	been	_	be	VBN	O	_	possible-01	_	0	IGNORE	true
4	able	_	able	JJ	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	shoe	_	shoe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	repair	_	repair	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
10	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	Seattle	_name_	Seattle	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	10	MOD_mod	true
13	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
14	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
16	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_op1	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	do	_	do	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	17	APP_s	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@i, 13@@w@@since, 4@@f@@possible-01, 17@@s@@possible-01, 9@@i@@repair-01, 10@@d@@place, 8@@d@@shoe, 2@@explicitanon0@@-, 12@@n@@_NAME_, 19@@d@@do-02, 6@@s@@find-01, 12@@c@@city]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
3	want	_	want	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
4	perfectly	_	perfectly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	perfect-02	(s())	5	MOD_s	true
5	executed	_	execute	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
6	simple	_	simple	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	dishes	_	dish	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	feature	_	feature	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	exquisite	_	exquisite	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	ingredients,	_	ingredients,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
14	you'll	_	you'll	PRP	O	_	thing	_	0	IGNORE	true
15	love	_	love	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	Vetri	_name_	Vetri	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_o	true
17	.	_	.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[12@@d@@exquisite, 7@@d@@dish, 9@@s@@feature-01, 3@@m@@want-01, 5@@s@@execute-02, 16@@p@@person, 4@@s@@perfect-02, 16@@n@@_NAME_, 15@@s@@love-01, 11@@explicitanon0@@few, 6@@s@@simple-02, 2@@d@@you]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
4	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	who	_	who	WP	O	_	person	_	0	IGNORE	true
6	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	knows	_	know	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
9	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	about	_	about	IN	O	_	-	_	0	IGNORE	true
11	curtains	_	curtain	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
13	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_op2	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
15	show	_	show	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
16	me	_	I	PRP	O	_	i	_	0	IGNORE	true
17	fabric	_	fabric	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	options	_	option	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
20	give	_	give	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
21	an	_	an	DT	O	_	1	_	0	IGNORE	true
22	estimate	_	estimate	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op2	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@d@@someone, 17@@p@@fabric, 9@@d@@nothing, 13@@s@@possible-01, 12@@a@@and, 6@@s@@say-01, 11@@a@@curtain, 8@@s@@know-01, 22@@d@@estimate-01, 1@@d@@They, 2@@s@@send-01, 15@@s@@show-01, 18@@d@@option, 14@@explicitanon0@@-, 19@@a@@or]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	+	_	0	IGNORE	true
3	appreciate	_	appreciate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	reviews	_	review	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
5	from	_	from	IN	O	_	and	_	0	IGNORE	true
6	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
8	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
9	worked	_	work	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	with	_	with	IN	O	_	i	_	0	IGNORE	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	mental	_	mental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	mind	(mod())	16	MOD_mod	true
16	health	_	health	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	setting	_	setting	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
18	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[6@@d@@anyone, 15@@p@@mind, 4@@s@@review-01, 3@@s@@appreciate-02, 1@@d@@i, 12@@n@@before, 16@@p@@health, 9@@s@@work-01, 17@@b@@setting]
sentence=1	Among	among	among	IN	O	_	include-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
3	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
4	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
5	were	_	be	VBD	O	_	person	_	0	IGNORE	true
6	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	8	MOD_s	true
7	to	_	to	TO	O	_	and	_	0	IGNORE	true
8	touch	_	touch	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	pony's,	_	pony's,	NN	O	_	and	_	0	IGNORE	true
11	camels	_	camel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
13	EVEN	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	AN	an	an	DT	O	_	n$LEMMA$me	_	0	IGNORE	true
15	OSTRICH!!	ostrich!!	ostrich!!	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op3	true
16	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[12@@a@@and, 13@@p@@even, 15@@d@@ostrich!!, 8@@s@@touch-01, 11@@d@@camel, 6@@s@@available-02, 3@@d@@animal]
sentence=1	$80	_name_	$80	RB	O	(d<root> / --LEX--)	_NUMBER_	()	0	ROOT	true
2	for	_	for	IN	O	_	have-condition-91	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	dish	_	dish	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
6	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_s	true
7	about	_	about	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
8	one	_	one	CD	O	(d<root> / --LEX--)	1	()	7	APP_op1	true
9	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	lobster	_	lobster	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	tail	_	tail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	fill-01	_	0	IGNORE	true
14	full	_	full	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	4	MOD_s	true
15	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
16	filler	_	filler	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	vegetables	_	vegetable	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[1@@d@@_NUMBER_, 4@@p@@dish, 8@@d@@1, 10@@p@@lobster, 9@@p@@small, 16@@p@@filler, 6@@s@@have-03, 17@@d@@vegetable, 7@@s@@about, 11@@d@@tail, 14@@s@@full-09]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	3	MOD_mod	true
3	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	2	_	0	IGNORE	true
5	four-course	_	four-course	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	tasting	_	tasting	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	menu,	_	menu,	NNP	O	_	and	_	0	IGNORE	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	gives	_	give	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	MOD_s	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
11	plenty	_	plenty	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	range	_	range	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
15	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	satisfy	_	satisfy	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	appetite	_	appetite	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[19@@d@@appetite, 2@@s@@high, 10@@d@@you, 1@@d@@i, 15@@d@@food, 5@@p@@four-course, 13@@d@@range-01, 11@@explicitanon0@@plenty, 3@@s@@recommend-01, 14@@a@@and, 17@@i@@satisfy-01, 6@@d@@tasting-01, 9@@b@@give-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	neon	_	neon	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	lighting	_	lighting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cool-01	(s())	4	MOD_s	true
4	sign	_	sign	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	"on"	_	"on"	.	O	_	thing	_	0	IGNORE	true
8	yet	_	yet	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
11	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
12	seemed	_	seem	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
16	oldest	_	old	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	old	(mod())	10	MOD_mod	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	16	MOD_s	true
18	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
19	bunch,	_	bunch,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	10	MOD_s	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	drunkest	_	drunk	JJS	O	(d<root> / --LEX--)	weird	()	21	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
26	bunch	_	bunch	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
28	me	_	I	PRP	O	_	i	_	0	IGNORE	true
29	they'd	_	they'd	WDT	O	_	i	_	0	IGNORE	true
30	be	_	be	VB	O	_	person	_	0	IGNORE	true
31	open	_	open	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_o	true
32	tomorrow	_name_	tomorrow	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@seem-01, 23@@d@@weird, 27@@s@@tell-01, 16@@t@@old, 5@@p@@still, 10@@d@@guy, 20@@s@@more, 8@@p@@yet, 31@@d@@open-01, 16@@m@@most, 2@@p@@neon, 17@@s@@include-91, 3@@s@@cool-01, 32@@n@@tomorrow, 26@@p@@bunch, 9@@p@@some, 21@@s@@resemble-01, 6@@s@@say-01, 4@@d@@sign]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	busy	_	busy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	group	_	group	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	20	APP_s	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	hosts	_	host	NNS	O	(p<root> / person  :consist (t<mod>)  :ARG0-of (r / --LEX--))	$LEMMA$	(mod())	5	MOD_mod	true
8	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	running	_	run	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
12	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
13	restaurant,	_	restaurant,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
16	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	18	MOD_s	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	MOD_s	true
19	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
20	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	27	APP_op1	true
21	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	ask	_	ask	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	20	APP_o	true
23	for	_	for	IN	O	_	you	_	0	IGNORE	true
24	what	_	what	WP	O	_	thing	_	0	IGNORE	true
25	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
26	need,	_	need,	NNP	O	_	and	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
28	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
29	sure	_	sure	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	APP_op2	true
30	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	will	_	will	MD	O	_	thing	_	0	IGNORE	true
32	do	_	do	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	29	APP_s	true
33	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
34	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	32	APP_o	true
35	to	_	to	TO	O	_	thing	_	0	IGNORE	true
36	be	_	be	VB	O	_	person	_	0	IGNORE	true
37	hospitable	_	hospitable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@d@@you, 34@@b2@@good-02, 37@@p@@hospitable, 4@@s@@busy-01, 8@@d@@they, 16@@s@@infer-01, 34@@m@@most, 21@@p@@just, 15@@p@@also, 1@@d@@this, 18@@s@@wonderful-03, 5@@r@@group, 10@@p@@also, 29@@s@@sure-02, 22@@d@@ask-02, 7@@r@@host, 27@@a@@and, 11@@s@@run-01, 7@@p@@person, 32@@c@@do-02, 20@@s@@cause-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	family	_	family	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	suite	_	suite	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
4	was	_	be	VBD	O	_	mem$LEMMA$r	_	0	IGNORE	true
5	basically	_	basically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	basic	(mod())	7	MOD_mod	true
6	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	7	MOD_mod	true
7	rooms	_	room	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	opening	_	opening	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
12	between	_	between	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	worked	_	work	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	11	MOD_s	true
16	great	_	great	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
18	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	15	MOD_o	true
20	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
21	were	_	be	VBD	O	_	person	_	0	IGNORE	true
22	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	23	MOD_mod	true
23	families	_	family	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	traveling	_	travel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	APP_s	true
25	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@p@@family, 2@@p@@family, 16@@p@@great, 25@@p@@together, 22@@explicitanon0@@2, 11@@y@@opening-01, 12@@b@@between, 24@@s@@travel-01, 5@@p@@basic, 7@@r@@room, 6@@explicitanon0@@2, 15@@s@@work-09, 20@@d@@we, 3@@d@@suite, 19@@s@@cause-01, 10@@p@@small]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
5	raised	_	raise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	APP_op2	true
6	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
7	Toronto,	toronto,	toronto,	NN	O	_	_NAME_	_	0	IGNORE	true
8	which	_	which	WDT	O	_	name	_	0	IGNORE	true
9	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_s	true
10	a	_	a	DT	O	_	name	_	0	IGNORE	true
11	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
12	West_Indian	_name_	indian	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	15	MOD_mod	true
13	(Trinidadian,	(trinidadian,	(trinidadian,	XX	O	_	mean-01	_	0	IGNORE	true
14	Jamaican,_etc)	_name_	etc)	NNP	O	_	name	_	0	IGNORE	true
15	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
16	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[4@@a@@and, 15@@d@@population, 12@@w@@world-region, 5@@s@@raise-03, 1@@d@@i, 12@@n@@_NAME_, 11@@p@@huge, 9@@s@@have-03, 3@@s@@bear-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
3	encourage	_	encourage	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	of	_	of	IN	O	_	say-01	_	0	IGNORE	true
9	back	_	back	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	surgery,	_	surgery,	NNS	O	_	and	_	0	IGNORE	true
11	to	_	to	TO	O	_	and	_	0	IGNORE	true
12	talk	_	talk	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o2	true
13	about	_	about	IN	O	_	person	_	0	IGNORE	true
14	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	16	MOD_s	true
15	treatment	_	treatment	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	treat-03	(mod())	16	MOD_mod	true
16	options	_	option	NNS	O	(d<root> / --LEX--)	opt-01	()	12	APP_o	true
17	first	_name_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
18	with	_	with	IN	O	_	thing	_	0	IGNORE	true
19	Dr.	dr.	Dr.	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	professor	(mod())	12	MOD_mod	true
20	de_Barros	_name_	Barros	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
21	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[16@@d@@opt-01, 1@@d@@i, 3@@b@@encourage-01, 12@@s@@talk-01, 20@@n@@_NAME_, 20@@p@@person, 14@@s@@differ-02, 17@@n@@first, 9@@d@@back, 19@@p@@professor, 7@@s@@think-01, 15@@p@@treat-03, 4@@d@@anyone]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_o	true
2	am	_	be	VBP	O	_	say-01	_	0	IGNORE	true
3	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	glad	_	glad	JJ	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-02	(s(s_UNIFY_o()))	0	ROOT	true
5	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	called	_	call	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_s	true
8	in	_	in	RP	O	_	i	_	0	IGNORE	true
9	to	_	to	TO	O	_	and	_	0	IGNORE	true
10	see	_	see	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
11	Ana,	ana,	ana,	NN	O	_	and	_	0	IGNORE	true
12	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	lovely	_	lovely	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	who	_	who	WP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	4	MOD_o	true
18	showed	_	show	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	16	MOD_s	true
19	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	but	_	but	IN	O	_	except-01	_	0	IGNORE	true
21	care	_	care	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o2	true
23	compassion	_	compassion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	towards	_	towards	IN	O	_	-	_	0	IGNORE	true
25	me	_	I	PRP	O	_	i	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@i, 4@@c@@glad-02, 23@@d@@compassion, 3@@s@@so, 16@@d@@girl, 10@@i@@see-01, 7@@s@@call-02, 18@@b@@show-01, 21@@d@@care-01, 19@@d@@nothing, 17@@s@@who, 22@@a@@and, 15@@p@@lovely]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	shopped	_	shop	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
3	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	around	_	around	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	9	MOD_mod	true
9	competitive	_	competitive	JJ	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	compete-02	(s(), o())	12	APP_op1	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	pricing	_	pricing	NN	O	(d<root> / --LEX--)	price-01	()	9	APP_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_op2	true
13	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	added	_	add	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	12	APP_op2	true
15	nitrogen	_	nitrogen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	my	_	my	PRP$	O	_	product	_	0	IGNORE	true
18	tires	_	tire	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	which	_	which	WDT	O	_	i	_	0	IGNORE	true
20	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	25	MOD_s	true
21	extend	_	extend	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
25	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
26	me	_	I	PRP	O	_	i	_	0	IGNORE	true
27	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	29	MOD_s	true
28	gas	_	gas	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	mileage	_	mileage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@d@@tire, 21@@s@@extend-01, 3@@d@@it, 6@@d@@they, 23@@d@@life, 14@@s@@add-02, 5@@a@@and, 1@@d@@i, 4@@b@@around, 28@@p@@gas, 11@@d@@price-01, 12@@a@@and, 25@@s@@get-01, 9@@g@@compete-02, 24@@s@@and, 27@@m@@more, 8@@s@@extreme, 20@@s@@recommend-01, 2@@s@@shop-01, 29@@d@@mileage, 27@@b@@good-02, 15@@d@@nitrogen, 13@@p@@also]
sentence=1	Liberty	liberty	Liberty	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	construction	_	construction	NN	O	(d<root> / --LEX--)	construct-01	()	3	APP_s	true
3	shows	_	show	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	5	APP_op2	true
4	up	_	up	RP	O	(s<root> / --LEX--  :ARG1 (p<s>))	have-rel-role-91	(s())	20	MOD_s	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	MOD_op1	true
6	it's	_	it's	PRP$	O	_	and	_	0	IGNORE	true
7	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	14	MOD_mod	true
8	guys...all	_	guys...all	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	year	(mod())	10	MOD_mod	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
11	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	20	MOD_s	true
12	100%	_	100%	CD	O	_	year	_	0	IGNORE	true
13	sales	_	sale	NNS	O	(d<root> / --LEX--)	sell-01	()	14	APP_s	true
14	pitch	_	pitch	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
15	"We're	"we're	"We're	NNP	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	best...we're	_	best...we're	NNP	O	_	slash	_	0	IGNORE	true
18	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
19	50	_	50	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	18	MOD_mod	true
20	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
22	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	20	APP_o	true
23	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	20	APP_s	true
24	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	22	APP_s	true
25	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	right...look	_	right...look	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-00	(s(), o())	24	MOD_o	true
27	at	_	at	IN	O	_	name	_	0	IGNORE	true
28	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	30	MOD_mod	true
30	certificates	_	certificate	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	say	_	say	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
33	we're	_	we're	NN	O	_	person	_	0	IGNORE	true
34	great"	_	great"	ADD	O	_	and	_	0	IGNORE	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@explicitanon0@@_NUMBER_, 4@@s@@have-rel-role-91, 10@@s@@get-01, 22@@s@@obligate-01, 30@@b@@certificate, 32@@s@@say-01, 21@@d@@we, 5@@a@@and, 3@@s@@show-up-02, 18@@d@@number, 2@@d@@construct-01, 14@@r@@pitch-01, 23@@s@@person, 1@@n@@_NAME_, 28@@p@@all, 25@@d@@something, 24@@s@@do-02, 1@@p@@person, 7@@explicitanon0@@2, 20@@s@@cause-01, 11@@s@@person, 29@@p@@this, 26@@s@@right...look-00, 13@@d@@sell-01, 9@@d@@i, 8@@p@@year]
sentence=1	Find	find	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	trust	_	trust	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
5	that	_	that	WDT	O	_	i	_	0	IGNORE	true
6	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	7	MOD_s	true
7	hears	_	hear	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	MOD_s	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	wants	_	want	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	APP_o	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	right	_	right	RB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-06	(s())	12	MOD_s	true
16	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@s@@right-06, 12@@s@@do-02, 6@@s@@actual-02, 14@@d@@job, 4@@s@@trust-02, 2@@d@@someone, 3@@d@@you, 7@@s@@hear-01, 10@@c@@want-01, 1@@s@@find-01]
sentence=1	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	2	APP_s	true
2	had	_	have	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	10	APP_op1	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	call	_	call	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	2	APP_o	true
5	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	up	_	up	RB	O	_	$LEMMA$	_	0	IGNORE	true
7	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	two_hours	_name_	hour	NNS	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :op1-of (m / multiple  :quant-of (b<mod>)))	$LEMMA$	(mod())	4	MOD_mod	true
9	later	_	later	RB	O	(m<root> / more  :degree-of (l / --LEX--  :time-of (s<mod>)))	late	(mod())	4	MOD_mod	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	the	_	the	DT	O	_	year	_	0	IGNORE	true
12	lady	_	lady	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
13	(who	_	(who	NNP	O	_	person	_	0	IGNORE	true
14	claimed	_	claim	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	manager)	_	manager)	NN	O	_	_NAME_	_	0	IGNORE	true
19	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op1	true
20	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
21	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	way,	_	way,	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_op2	true
27	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	didnt	_	didnt	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	29	MOD_mod	true
29	offer	_	offer	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op2	true
30	to	_	to	TO	O	_	-	_	0	IGNORE	true
31	compensate	_	compensate	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_s	true
32	me	_	I	PRP	O	_	and	_	0	IGNORE	true
33	in	_	in	IN	O	_	i	_	0	IGNORE	true
34	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	of	_	of	IN	O	_	-	_	0	IGNORE	true
37	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@o@@obligate-01, 34@@p@@any, 35@@p@@kind, 10@@a@@and, 37@@t@@way, 8@@m@@multiple, 5@@a@@back, 26@@a@@and, 9@@m@@more, 8@@explicitanon0@@hour, 14@@s@@claim-01, 4@@s@@call-02, 29@@s@@offer-01, 28@@explicitanon0@@-, 8@@t@@temporal-quantity, 31@@d@@compensate-01, 12@@d@@lady, 9@@l@@late, 7@@b@@there, 21@@d@@food, 1@@d@@i, 19@@s@@say-01]
sentence=1	in	_	in	IN	O	_	i	_	0	IGNORE	true
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
3	opinon	_	opinon	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
6	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	14	APP_op1	true
7	be	_	be	VB	O	_	and	_	0	IGNORE	true
8	shut	_	shut	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-down-05	(s(), o())	6	APP_s	true
9	down	_	down	RP	O	_	cause-01	_	0	IGNORE	true
10	by	_	by	IN	O	_	and	_	0	IGNORE	true
11	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
12	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	inspector,	_	inspector,	NNP	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
15	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
16	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	satisfied	_	satisfied	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
21	service	_	service	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
23	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	has	_	have	VBZ	O	_	-	_	0	IGNORE	true
25	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	26	MOD_mod	true
26	eaten	_	eat	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_op2	true
27	at	_	at	IN	O	_	-	_	0	IGNORE	true
28	a	_	a	DT	O	_	-	_	0	IGNORE	true
29	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	31	MOD_s	true
30	asian	_	asian	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	31	MOD_mod	true
31	restaurant	_	restaurant	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
32	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[6@@s@@recommend-01, 22@@a@@and, 21@@d@@service, 30@@n2@@_NAME_, 29@@s@@real-04, 8@@s@@shut-down-05, 4@@p@@this, 30@@c@@continent, 18@@s@@satisfied-01, 5@@d@@place, 26@@s@@eat-01, 31@@b@@restaurant, 25@@n@@ever, 12@@d@@health, 15@@d@@anyone, 3@@b@@opinon, 23@@d@@food, 14@@a@@and]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	offer	_	offer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	sales	_	sale	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	sell-01	(s())	2	APP_o	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	aren't	_	aren't	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
6	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	11	MOD_s	true
7	sales,	_	sales,	NNP	O	_	contrast-01	_	0	IGNORE	true
8	mislabeled	_	mislabele	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	items	_	item	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_s	true
12	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
13	item	_	item	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
14	sound	_	sound	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
15	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	deal	_	deal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	isn't,	_	isn't,	VBZ	O	_	and	_	0	IGNORE	true
22	a	_	a	DT	O	_	-	_	0	IGNORE	true
23	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	24	MOD_s	true
24	attitude	_	attitude	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
25	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	return	_	return	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
27	items,	_	items,	NNS	O	_	et-cetera	_	0	IGNORE	true
28	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
29	on	_	on	RB	O	_	$LEMMA$	_	0	IGNORE	true
30	and	_	and	CC	O	_	on-$LEMMA$-on	_	0	IGNORE	true
31	on	_	on	RB	O	_	$LEMMA$	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@d@@deal, 1@@d@@They, 6@@s@@real-04, 23@@s@@bad-07, 17@@s@@good-02, 5@@explicitanon0@@-, 2@@s@@offer-01, 9@@d@@item, 24@@d@@attitude, 3@@s@@sell-01, 13@@p@@item, 11@@s@@make-02, 14@@s@@sound-01, 26@@p@@return-01, 8@@s@@mislabele-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that	_	that	WDT	O	_	event	_	0	IGNORE	true
8	happened	_	happen	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	event	(s())	6	MOD_s	true
9	outside	_	outside	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	MOD_s	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	inside	_	inside	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_o	true
14	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@s@@single-02, 6@@d@@thing, 10@@s@@resemble-01, 9@@b@@outside, 1@@d@@We, 15@@d@@room, 3@@s@@hear-01, 4@@p@@every, 8@@s@@event, 2@@s@@possible-01, 13@@o@@inside]
sentence=1	When	when	when	WRB	O	_	i	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	4	MOD_mod	true
4	found	_	find	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
5	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	desk	_	desk	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	speak	_	speak	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
12	English,	english,	English,	NFP	O	_	and	_	0	IGNORE	true
13	they	_	they	PRP	O	_	$LEMMA$	_	17	IGNORE	true
14	moved	_	move	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
15	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	room,	_	room,	NNS	O	_	and	_	0	IGNORE	true
17	but	_	but	CC	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	contrast-01	(o2(), s(), o())	0	ROOT	true
18	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o2	true
19	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
20	did	_	do	VBD	O	_	person	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
25	queen	_	queen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	had	_	have	VBD	O	_	person	_	0	IGNORE	true
28	"reserved	_	"reserve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
29	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@b@@contrast-01, 28@@s@@"reserve-01, 22@@s@@receive-01, 10@@s@@possible-01, 2@@d@@i, 18@@d@@we, 5@@d@@someone, 25@@d@@queen, 11@@s@@speak-01, 21@@explicitanon0@@-, 24@@s@@single-02, 14@@t@@move-01, 4@@t@@find-01, 15@@d@@our, 8@@b@@desk, 3@@n@@final, 19@@p@@still]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
3	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	5	MOD_mod	true
4	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
5	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	in	_	in	IN	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	after	(mod())	5	MOD_mod	true
7	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	half	_	half	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	quoted	_	quote	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
14	me	_	I	PRP	O	_	i	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	19	APP_s	true
16	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
17	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	15	APP_op2	true
18	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	19	MOD_mod	true
19	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@a@@and, 10@@n@@time, 11@@s@@quote-01, 3@@p@@and, 13@@s@@make-02, 17@@h@@have-rel-role-91, 4@@d@@work-01, 19@@s@@happy-01, 7@@p@@about, 5@@s@@do-02, 6@@b@@after, 6@@n@@now, 1@@d@@They, 17@@p@@person, 8@@p@@half, 17@@f@@wife, 18@@s@@extreme]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
4	wait	_	wait	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_s	true
5	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	2	MOD_o	true
6	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-back-19	(s(), o())	4	APP_o	true
7	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
8	to	_	to	IN	O	_	and	_	0	IGNORE	true
9	Santa_Fe	_name_	Fe	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	10	APP_op2	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	6	APP_o	true
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
13	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	B&B...especially	b&b...especially	b&b...especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	surprise-01	(mod())	5	MOD_mod	true
15	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
16	4_year	_name_	year	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	17	MOD_mod	true
17	old,	_	old,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	year	(s(), o())	2	MOD_o	true
18	who	_	who	WP	O	_	i	_	0	IGNORE	true
19	made	_	make	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-18	(o(s()))	2	MOD_s	true
20	friends	_	friend	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	be$LEMMA$-01	(s(), o())	19	APP_o	true
21	with	_	with	IN	O	_	-	_	0	IGNORE	true
22	Ms.	ms.	Ms.	NNP	O	_	have-org-role-91	_	0	IGNORE	true
23	Sue	_name_	Sue	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
25	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	ladies,	_	ladies,	NNS	O	(d<root> / --LEX--)	_NAME_	()	24	APP_op2	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
29	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
30	talked	_	talk	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op2	true
31	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	30	MOD_mod	true
34	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
35	left	_	leave	VBD	O	(d<root> / --LEX--)	$LEMMA$-15	()	33	APP_op1	true
36	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[14@@p@@surprise-01, 9@@c@@city, 3@@explicitanon0@@-, 17@@s@@year, 5@@s@@person, 1@@d@@We, 28@@a@@and, 20@@s@@befriend-01, 9@@n@@_NAME_, 25@@p@@all, 6@@g@@go-back-19, 33@@w@@since, 27@@d@@_NAME_, 16@@y@@year, 2@@s@@possible-01, 16@@t@@temporal-quantity, 23@@p@@person, 23@@n@@_NAME_, 24@@a@@and, 4@@c@@wait-01, 19@@c@@make-18, 30@@s@@talk-01, 12@@p@@this, 10@@a@@and, 35@@d@@leave-15, 34@@d@@we, 13@@p@@great]
sentence=1	None	none	none	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	will	_	will	MD	O	_	i	_	0	IGNORE	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	using	_	use	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	services	_	service	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	serve-02	(s())	6	APP_o	true
9	again,	_	again,	NNP	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
12	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
13	shame	_	shame	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
14	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@d@@they, 3@@d@@us, 1@@explicitanon0@@none, 8@@s@@serve-02, 13@@s@@shame-01, 6@@s@@use-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	6	APP_op1	true
3	next	_	next	JJ	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$-to	(op1(), mod())	6	MOD_mod	true
4	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
5	Gare_du_Nord	_name_	Nord	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	sl$LEMMA$sh	(mod())	6	MOD_mod	true
8	five_minute	_name_	minute	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	minute	(mod())	9	MOD_mod	true
9	walk	_	walk	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	6	APP_op2	true
10	to	_	to	IN	O	_	and	_	0	IGNORE	true
11	Sacre_Coeur	_name_	Coeur	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
12	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	shopping	_	shopping	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	shop-01	(mod())	14	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@y@@minute, 1@@d@@It, 9@@s@@walk-01, 5@@c@@city, 3@@b@@next-to, 2@@s@@be-located-at-91, 16@@o@@shop-01, 6@@a@@and, 14@@s@@excellent-02, 5@@n@@_NAME_, 11@@n@@_NAME_, 7@@explicitanon0@@slash, 8@@t@@temporal-quantity, 11@@c@@city]
sentence=1	All	all	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	true
2	were	_	be	VBD	O	_	and	_	0	IGNORE	true
3	awesome,	_	awesome,	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	and	(dom())	0	ROOT	true
4	&	_	&	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	3	MOD_op1	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	APP_op2	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	Dogwood_Grilled_Cheese	_name_	Cheese	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
9	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
10	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
11	enjoyable	_	enjoyable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	8	MOD_s	true
12	with	_	with	IN	O	_	i	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	fine	_	fine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	15	MOD_s	true
15	beers	_	beer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
16	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@d@@all, 5@@d@@i, 14@@s@@fine-03, 8@@p@@product, 15@@d@@beer, 8@@n@@_NAME_, 4@@a@@and, 3@@r@@and, 11@@s@@enjoyable, 6@@s@@have-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_dom	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	music	_	music	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	junkie	_	junkie	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	12	APP_op1	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-04	(s())	5	MOD_s	true
8	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	80's,	_	80's,	CD	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
14	dad	_	dad	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	15	APP_s	true
15	worked	_	work	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
16	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	record	_	record	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	label	_	label	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	in	_	in	IN	O	_	name	_	0	IGNORE	true
21	the_1960's	_name_	1960'	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@p@@music, 1@@d@@i, 11@@c@@country, 7@@s@@grow-up-04, 19@@d@@label, 15@@t@@work-01, 14@@h@@have-rel-role-91, 11@@n@@_NAME_, 14@@f@@dad, 14@@p@@person, 12@@a@@and, 21@@n@@_NAME_, 18@@p@@record, 5@@r@@junkie]
sentence=1	My	my	My	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
2	vet	_	vet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_s	true
5	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
8	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
9	fault	_	fault	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	vet	_	vet	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
15	did	_	do	VBD	O	(d<root> / --LEX--)	$LEMMA$-02	()	9	APP_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	surgery,	_	surgery,	NNS	O	_	and	_	0	IGNORE	true
18	So	so	so	RB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	cause-01	(o2(), s(), o())	0	ROOT	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	recommend	_	recommend	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
23	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
24	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	program	_	program	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	unless	_	unless	IN	O	_	cause-01	_	0	IGNORE	true
27	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	22	MOD_mod	true
29	an	_	an	DT	O	_	1	_	0	IGNORE	true
30	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	hundred	_	hundred	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	100	(mod())	32	MOD_mod	true
32	dollars	_	dollar	NNS	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	33	APP_op1	true
33	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	18	APP_o2	true
34	so	_	so	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
35	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
36	antibiotics	_	antibiotic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op1	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_o	true
38	a	_	a	DT	O	_	except-01	_	0	IGNORE	true
39	vet	_	vet	NN	O	_	$LEMMA$	_	0	IGNORE	true
40	visit	_	visit	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	37	APP_op2	true
41	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[25@@d@@program, 7@@explicitanon0@@-, 40@@d@@visit-01, 9@@s@@fault-01, 21@@explicitanon0@@-, 30@@p@@extra, 4@@s@@say-01, 23@@s@@get-01, 31@@explicitanon0@@100, 27@@d@@you, 37@@a@@and, 2@@d@@vet, 32@@m2@@monetary-quantity, 3@@p@@even, 24@@p@@that, 34@@p@@so, 18@@b@@cause-01, 32@@d2@@dollar, 15@@d@@do-02, 33@@o@@or, 22@@s@@recommend-01, 36@@d@@antibiotic, 28@@m@@have-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	recommend	_	recommend	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	to	_	to	IN	O	_	and	_	0	IGNORE	true
6	ANYONE	anyone	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o2	true
8	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
13	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
14	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	reasonable	_	reasonable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	rate	_	rate	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[2@@b@@recommend-01, 8@@d@@everyone, 7@@a@@and, 13@@s@@do-02, 17@@t@@rate, 16@@s@@reasonable-02, 11@@p@@great, 3@@p@@this, 4@@d@@company, 10@@s@@need-01, 12@@d@@work-01, 6@@d@@anyone, 1@@d@@i]
sentence=1	From	from	from	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
4	standpoint,you	_	standpoint,you	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
5	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	9	MOD_s	true
8	gonna	_	gonna	VB	O	_	$LEMMA$	_	0	IGNORE	true
9	take	_	take	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
10	2,000	_	2,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	11	MOD_mod	true
11	bucks	_	buck	NNS	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	dollar	()	9	APP_o	true
12	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
13	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	truck	_	truck	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	15	APP_o	true
21	support	_	support	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op2	true
22	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
23	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
25	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
26	know	_	know	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
27	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
28	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	a	_	a	DT	O	_	thing	_	0	IGNORE	true
30	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	scrap	_	scrap	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	33	MOD_mod	true
33	metal	_	metal	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	9	MOD_mod	true

nodealignment=[15@@s@@need-01, 11@@d2@@dollar, 17@@d@@truck, 3@@s@@moral-02, 30@@d@@piece, 4@@p@@standpoint,you, 19@@s@@work-01, 26@@t@@know-01, 20@@a@@and, 23@@d@@family, 11@@m2@@monetary-quantity, 16@@p@@that, 13@@d@@someone, 21@@s@@support-01, 7@@s@@real-04, 32@@p@@scrap-01, 9@@b@@take-01, 28@@p@@just, 10@@explicitanon0@@_NUMBER_, 33@@g@@metal, 5@@p@@guy, 34@@explicitanon0@@interrogative, 25@@d@@you]
sentence=1	I've	i've	I've	NNP	O	_	cause-01	_	0	IGNORE	true
2	spoken	_	speak	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	to	_	to	IN	O	_	and	_	0	IGNORE	true
4	vendors	_	vendor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	sell-01	()	2	APP_s	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	by	_	by	IN	O	_	and	_	0	IGNORE	true
9	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-to-do-with-04	(s(), o())	4	MOD_s	true
12	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	about	_	about	IN	O	_	and	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
20	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	15	MOD_mod	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
22	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
23	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	25	MOD_mod	true
24	were	_	be	VBD	O	_	person	_	0	IGNORE	true
25	afraid	_	afraid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fear-01	(s())	21	APP_op2	true
26	to	_	to	TO	O	_	person	_	0	IGNORE	true
27	quote	_	quote	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
28	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
29	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	them	_	they	PRP	O	_	oppose-01	_	0	IGNORE	true
31	even	_	even	RB	O	_	cause-01	_	0	IGNORE	true
32	though	_	though	IN	O	_	cause-01	_	0	IGNORE	true
33	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	openly	_	openly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-04	(s())	35	MOD_s	true
35	admitted	_	admit	VBD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	25	MOD_mod	true
36	that	_	that	IN	O	_	and	_	0	IGNORE	true
37	they	_	they	PRP	O	_	cause-01	_	0	IGNORE	true
38	felt	_	feel	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_s	true
39	Canadian	_name_	Canadian	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	40	MOD_mod	true
40	Outback	outback	Outback	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
41	was	_	be	VBD	O	_	person	_	0	IGNORE	true
42	pricing	_	price	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	49	APP_op1	true
43	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
44	entertainment	_	entertainment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_o	true
45	out	_	out	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	42	MOD_s	true
46	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
47	the	_	the	DT	O	_	person	_	0	IGNORE	true
48	market	_	market	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	38	APP_s	true
50	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	49	APP_op2	true
51	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_o	true
52	to	_	to	TO	O	_	thing	_	0	IGNORE	true
53	hurt	_	hurt	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	50	MOD_mod	true
54	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
55	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_s	true
56	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
57	help	_	help	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	53	MOD_mod	true
58	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[50@@s@@do-02, 4@@e2@@sell-01, 15@@s@@say-01, 39@@n@@_NAME_, 4@@p2@@person, 53@@i@@hurt-01, 23@@p@@in-fact, 34@@s@@open-04, 2@@s@@speak-01, 21@@a@@and, 28@@d@@event, 20@@p@@as-well, 18@@d@@company, 7@@s@@use-01, 11@@s@@have-to-do-with-04, 13@@s@@good-02, 27@@s@@quote-01, 49@@a@@and, 48@@d@@market, 45@@s@@out-06, 55@@d@@business, 12@@d@@nothing, 35@@s@@admit-01, 39@@c@@country, 57@@i@@help-01, 40@@d@@Outback, 42@@s@@price-01, 25@@s@@fear-01, 44@@d@@entertainment, 51@@d@@more, 38@@s@@feel-01]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	boyfriend	_	boyfriend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_op2	true
5	were	_	be	VBD	O	_	person	_	0	IGNORE	true
6	woken	_	wake	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-02	(s(), o())	0	ROOT	true
7	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	the_middle_of_the_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	at	_	at	IN	O	_	i	_	0	IGNORE	true
11	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	campsite	_	campsite	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
14	drunken	_	drunken	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	kids	_	kid	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
16	who'd	_	who'd	NNS	O	_	1	_	0	IGNORE	true
17	arrived	_	arrive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	around_1:00_am	_name_	be	VBP	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
20	were	_	be	VBD	O	_	person	_	0	IGNORE	true
21	drinking	_	drink	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op2	true
22	at	_	at	IN	O	_	thing	_	0	IGNORE	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	springs	_	spring	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@d@@kid, 17@@s@@arrive-01, 2@@p@@person, 9@@n@@night, 21@@d@@drink-01, 14@@p@@drunken, 2@@h@@have-rel-role-91, 4@@d@@i, 2@@f@@boyfriend, 6@@s@@wake-up-02, 19@@a@@and, 18@@n@@_NAME_, 24@@b@@spring, 3@@a@@and, 12@@b@@campsite]
sentence=1	For	for	for	IN	O	_	include-91	_	0	IGNORE	true
2	those	_	those	DT	O	_	that	_	0	IGNORE	true
3	who	_	who	WP	O	_	person	_	0	IGNORE	true
4	care,	_	care,	VBZ	O	_	name	_	0	IGNORE	true
5	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	12	MOD_mod	true
6	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	proportion	_	proportion	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	my	_	my	PRP$	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	class	_	class	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_mod	true
12	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	0	ROOT	true
13	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	4-year	_	4-year	CD	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	year	()	12	APP_o	true
16	colleges,	_	colleges,	NN	O	_	and	_	0	IGNORE	true
17	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
18	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	17	MOD_s	true
19	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	ranked	_	rank	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	top	_	top	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	50	_	50	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	20	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	US_News	_name_	News	NNP	O	(p<root> / publication  :name (n / --LEX--)  :mod-of (q<mod>))	_NAME_	(mod())	24	MOD_mod	true
27	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	12	MOD_s	true

nodealignment=[27@@s@@multi-sentence, 15@@m@@year, 11@@d@@class, 10@@p@@my, 17@@explicitanon0@@many, 6@@s@@good-02, 23@@d@@top, 18@@s@@include-91, 7@@explicitanon0@@proportion, 26@@n@@_NAME_, 26@@p@@publication, 5@@explicitanon0@@1, 20@@s@@rank-01, 15@@t@@temporal-quantity, 12@@g@@go-02, 24@@explicitanon0@@_NUMBER_]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	bake	_	bake	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op1	true
3	bread	_	bread	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
5	daily,	_	daily,	NNS	O	_	and	_	0	IGNORE	true
6	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	press	_	press	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
9	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	sandwiches	_	sandwich	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
15	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	true
16	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
17	it,	_	it,	PRP	O	_	thing	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
19	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
20	meat	_	meat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_op3	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@press-01, 10@@d@@sandwich, 15@@d@@i, 20@@d@@meat, 1@@d@@They, 2@@s@@bake-01, 22@@n@@always, 16@@s@@like-01, 4@@s@@fresh-02, 3@@d@@bread, 7@@explicitanon0@@-, 23@@s@@fresh-02, 18@@a@@and, 14@@t@@way]
sentence=1	Very	very	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	frustrating	_	frustrating	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	frustrate-01	(s())	63	APP_snt1	true
3	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
4	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
5	restaurant	_	restaurant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_s	true
8	1	_	1	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
9	rosette	_	rosette	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	63	MOD_s	true
12	supposedly	_	supposedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	suppose-01	(s())	13	MOD_s	true
13	renowned	_	renowned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
14	for	_	for	IN	O	_	name	_	0	IGNORE	true
15	the	_	the	DT	O	_	expressive	_	0	IGNORE	true
16	service...	_	service...	XX	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	expressive	(mod())	63	MOD_mod	true
17	hmm	_	hmm	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
18	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
21	canape's	_	canape's	NN	O	(d<root> / --LEX--)	relation-03	()	22	APP_op1	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_o	true
23	amuse	_	amuse	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
24	to	_	to	TO	O	_	and	_	0	IGNORE	true
25	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_s	true
26	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	occupied,	_	occupied,	NNPS	O	_	and	_	0	IGNORE	true
28	once	_	once	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_snt3	true
30	complained	_	complain	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	35	MOD_mod	true
31	about	_	about	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	multi-sentence	_	0	IGNORE	true
33	wait	_	wait	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_s	true
34	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
35	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
36	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o	true
38	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
39	nibble	_	nibble	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	MOD_s	true
40	on	_	on	IN	O	_	and	_	0	IGNORE	true
41	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	contrast-01	(s())	63	APP_snt2	true
42	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
43	took	_	take	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	55	APP_op1	true
44	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
45	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	49	APP_op1	true
46	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
47	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
48	chairs	_	chair	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	43	APP_s	true
50	wondering	_	wonder	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_op2	true
51	round	_	round	RB	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_s	true
52	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
53	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
54	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
55	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	41	APP_s	true
56	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
57	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
58	impossible	_	impossible	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	possible-01	(s())	55	APP_op2	true
59	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
60	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	58	MOD_s	true
61	anyones	_	anyone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	62	APP_s	true
62	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	attend-02	(s())	58	APP_s	true
63	.	_	.	.	O	(m<root> / --LEX--  :snt2 (s<snt2>)  :snt3 (c2<snt3>)  :snt1 (c<snt1>))	multi-sentence	(snt2(), snt1(), snt3())	0	ROOT	true

nodealignment=[16@@explicitanon0@@expressive, 58@@p@@possible-01, 21@@d@@relation-03, 62@@s@@attend-02, 17@@p@@hmm, 63@@m@@multi-sentence, 20@@explicitanon0@@-, 11@@s@@person, 8@@explicitanon0@@_NUMBER_, 35@@s@@take-01, 41@@s@@contrast-01, 30@@v@@complain-01, 39@@s@@nibble-01, 34@@d@@they, 22@@a@@or, 25@@s@@keep-02, 58@@explicitanon0@@-, 49@@a@@and, 37@@d@@something, 13@@s@@renowned-01, 9@@d@@rosette, 45@@s@@get-05, 2@@s@@frustrate-01, 48@@d@@chair, 33@@d@@wait-01, 43@@s@@take-01, 5@@d@@restaurant, 60@@s@@get-01, 61@@d@@anyone, 55@@a@@and, 1@@s@@very, 50@@s@@wonder-01, 51@@d@@round, 29@@d@@we, 7@@s@@have-03, 23@@d@@amuse-01, 12@@s@@suppose-01]
sentence=1	Every	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	6	MOD_mod	true
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	1	APP_s	true
5	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	to	_	to	TO	O	_	and	_	0	IGNORE	true
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_s	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	11	MOD_s	true
11	ingredient	_	ingredient	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
13	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	12	APP_op2	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	keeps	_	keep	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
16	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	interesting	_	interesting	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	15	APP_o	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@ingredient, 16@@d@@thing, 13@@t@@thing, 17@@s@@interesting, 12@@a@@or, 6@@s@@seem-01, 4@@s@@go-02, 5@@d@@they, 1@@r@@rate-entity-91, 13@@explicitanon0@@2, 10@@s@@differ-02, 3@@d@@we, 8@@s@@have-03, 15@@s@@keep-02]
sentence=1	Before	before	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	treatment,	_	treatment,	NNP	O	_	-	_	0	IGNORE	true
3	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
4	food	_	food	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	cravings	_	craving	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	"out	_	"out	NNP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-06	(s())	11	APP_s	true
8	of	_	of	IN	O	_	-	_	0	IGNORE	true
9	control"	_	control"	NN	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	caused	_	cause	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	me	_	I	PRP	O	_	cause-01	_	0	IGNORE	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	be	_	be	VB	O	_	i	_	0	IGNORE	true
15	stressed	_	stress	VBN	O	(d<root> / --LEX--)	$LEMMA$-out-03	()	11	APP_o	true
16	out	_	out	RP	O	_	i	_	0	IGNORE	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@"out-06, 11@@s@@cause-01, 4@@p@@food, 5@@d@@craving, 15@@d@@stress-out-03, 1@@n@@before]
sentence=1	The	the	the	DT	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
2	theatre	_	theatre	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
4	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
5	an	_	an	DT	O	_	1	_	0	IGNORE	true
6	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	brick	_	brick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	warehouse,	_	warehouse,	CD	O	_	include-91	_	0	IGNORE	true
9	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	12	MOD_mod	true
12	block	_	block	NN	O	(d2<root> / distance-quantity  :unit (m2 / --LEX--)  :quant-of (r / relative-position  :op1 (c2<op1>)  :location-of (w<mod>)))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
13	away	_	away	RB	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
14	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	relative-position	_	0	IGNORE	true
16	Flying_Squirrels	_name_	Squirrels	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	stadium	_	stadium	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
18	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[6@@p@@old, 11@@explicitanon0@@1, 16@@n@@_NAME_, 12@@d2@@distance-quantity, 2@@d@@theatre, 3@@s@@be-located-at-91, 13@@b@@away, 12@@r@@relative-position, 7@@d@@brick, 12@@m2@@block, 17@@d@@stadium]
sentence=1	There's	there's	There's	NNP	O	(d<root> / --LEX--)	-	()	5	APP_s	true
2	plenty	_	plenty	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	of	_	of	IN	O	_	$LEMMA$	_	5	IGNORE	true
4	parking,	_	parking,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	have-03	(s())	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	I've	i've	I've	NNP	O	_	-	_	0	IGNORE	true
7	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	10	MOD_mod	true
8	had	_	have	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$-03	(mod())	5	MOD_mod	true
9	an	_	an	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
10	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	APP_op2	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	audience	_	audience	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	10	APP_o	true
14	who	_	who	WP	O	_	-	_	0	IGNORE	true
15	won't	_	won't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	stop	_	stop	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	13	MOD_s	true
17	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	16	APP_o	true
19	answering	_	answer	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	18	APP_op2	true
20	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
21	cellphones	_	cellphone	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	19	APP_o	true
22	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[16@@c@@stop-01, 10@@s@@issue-02, 15@@explicitanon0@@-, 8@@explicitanon0@@have-03, 12@@d@@audience, 2@@explicitanon0@@plenty, 1@@d@@-, 4@@s@@have-03, 19@@l@@answer-01, 21@@m@@cellphone, 5@@a@@and, 13@@h@@have-org-role-91, 13@@p@@person, 17@@s@@talk-01, 7@@n@@ever, 13@@o@@member, 9@@explicitanon0@@-, 18@@a@@or]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
2	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-off-18	(s(), o())	8	APP_op1	true
3	the_weekend	_name_	weekend	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	in	_	in	RP	O	_	i	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	5	APP_op1	true
9	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	APP_op2	true
10	for	_	for	IN	O	_	you	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	manager	_	manager	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	manage-01	(s())	9	APP_o	true
13	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	Jeff	_name_	Jeff	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
16	and	_	and	CC	O	_	$LEMMA$	_	5	IGNORE	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	remembered	_	remember	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op3	true
19	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
22	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	remembered	_	remember	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_s	true
24	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	dog,	_	dog,	NN	O	(d<root> / --LEX--)	and	()	5	APP_op2	true
26	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
27	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	cause-01	(s(), o())	5	MOD_o	true
28	a	_	a	DT	O	_	thing	_	0	IGNORE	true
29	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	shocked	_	shocked	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_o	true
31	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
33	would	_	would	MD	O	_	person	_	0	IGNORE	true
34	pay	_	pay	VB	O	_	person	_	0	IGNORE	true
35	that	_	that	DT	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-10	(s())	37	MOD_s	true
37	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	attend-02	(s())	30	APP_s	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@s@@cause-01, 36@@s@@close-10, 3@@d@@weekend, 15@@n@@_NAME_, 32@@d@@someone, 2@@s@@take-off-18, 9@@s@@ask-02, 15@@p@@person, 20@@p@@right, 23@@d@@remember-01, 37@@s@@attend-02, 18@@s@@remember-01, 29@@s@@bit, 35@@s@@that, 22@@p@@even, 6@@s@@come-01, 30@@s@@shocked-01, 5@@a@@and, 8@@a@@and, 1@@d@@i, 25@@d@@and, 12@@s@@manage-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	rent	_	rent	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	machine	_	machine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	like	_	like	UH	O	(a<root> / --LEX--  :op1 (t<op1>)  :duration-of (r<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
8	$60	_	$60	NN	O	(d<root> / --LEX--)	_NUMBER_	()	7	APP_op1	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	give	_	give	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	finished	_	finished	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	look	_	look	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	11	APP_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@possible-01, 3@@s@@rent-01, 15@@d@@look-02, 1@@d@@i, 11@@s@@give-01, 8@@d@@_NUMBER_, 14@@s@@finished-01, 4@@p@@another, 7@@a@@like, 5@@d@@machine]
sentence=1	In	in	in	IN	O	_	after	_	0	IGNORE	true
2	this_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	its	_	its	PRP$	O	_	cause-01	_	0	IGNORE	true
4	rare	_	rare	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
7	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_s	true
10	who	_	who	WP	O	_	and	_	0	IGNORE	true
11	CARE	_name_	care	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	,	_	,	,	O	_	and	_	0	IGNORE	true
13	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
17	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	to	_	to	TO	O	_	person	_	0	IGNORE	true
19	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	17	APP_o	true
20	cash	_	cash	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@d@@cash, 6@@s@@find-01, 7@@s@@such, 11@@s@@care-01, 13@@explicitanon0@@-, 8@@s@@wonderful-03, 15@@d@@kind, 17@@s@@want-01, 4@@s@@rare-02, 2@@n@@day, 9@@d@@person, 16@@s@@contrast-01, 19@@s@@make-05]
sentence=1	The	the	the	DT	O	_	product	_	0	IGNORE	true
2	sweet	_	sweet	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	potato	_	potato	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	tempura	_	tempura	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	roll	_	roll	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_dom	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	12	MOD_s	true
8	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	surprise:	_	surprise:	NN	O	_	and	_	0	IGNORE	true
11	cheap	_	cheap	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	12	APP_op1	true
12	and	_	and	CC	O	(o<root> / --LEX--  :op1 (g<op1>)  :op2 (b<op2>)  :domain (a<dom>))	$LEMMA$	(op2(), op1(), dom())	0	ROOT	true
13	delicious,	_	delicious,	NNS	O	_	and	_	0	IGNORE	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	tried	_	try	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	true
21	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
22	say	_	say	VB	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
23	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
24	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	worth	_	worth	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	27	APP_op1	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	22	APP_o	true
28	a	_	a	DT	O	_	thing	_	0	IGNORE	true
29	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	value	_	value	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op2	true
31	(and	_	(and	NN	O	_	-	_	0	IGNORE	true
32	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
33	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	34	MOD_mod	true
34	get	_	get	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op3	true
35	vegetarian	_	vegetarian	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
36	rolls)	_	rolls)	NNP	O	_	-	_	0	IGNORE	true
37	.	_	.	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	multi-sentence	(s())	12	APP_op2	true

nodealignment=[33@@n@@ever, 9@@p@@great, 15@@p@@only, 17@@d@@we, 18@@s@@try-01, 2@@s@@sweet-02, 22@@c2@@say-01, 4@@p@@tempura, 12@@o@@and, 35@@d@@vegetarian, 11@@d@@cheap-02, 20@@d@@i, 24@@p@@well, 29@@p@@great, 25@@d@@worth-02, 34@@s@@get-01, 7@@s@@actual-02, 30@@d@@value-01, 37@@s@@multi-sentence, 27@@a@@and, 5@@d@@roll, 16@@d@@thing, 3@@p@@potato]
sentence=1	Linda	_name_	Linda	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	-	_	0	IGNORE	true
4	rudest	_	rude	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	little	(mod())	5	MOD_mod	true
5	person	_	person	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	will	_	will	MD	O	_	person	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	talk	_	talk	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	sticks	_	stick	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	11	APP_op2	true
14	up	_	up	RP	O	_	thing	_	0	IGNORE	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	trashy,	_	trashy,	NNP	O	_	thing	_	0	IGNORE	true
20	rude	_	rude	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	13	APP_s	true
22	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
23	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	there,	_	there,	NNS	O	_	person	_	0	IGNORE	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	31	MOD_mod	true
26	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>))	contrast-01	(s())	11	MOD_s	true
27	nice	_	nice	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
28	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	31	MOD_s	true
31	give	_	give	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-16	(o2(), s(), o())	21	MOD_s	true
32	a	_	a	DT	O	_	person	_	0	IGNORE	true
33	crap	_	crap	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_o	true
34	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	respecting	_	respect	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o2	true
36	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@t@@little, 31@@b@@give-16, 4@@m@@most, 21@@d@@person, 26@@s@@contrast-01, 8@@n@@ever, 11@@a@@and, 30@@s@@actual-02, 33@@d@@crap-01, 9@@t@@talk-01, 27@@s@@nice-01, 16@@p@@all, 20@@p@@rude, 1@@n@@_NAME_, 35@@s@@respect-01, 6@@d@@you, 13@@s@@stick-up-02, 25@@explicitanon0@@-, 1@@p@@person, 5@@r@@person, 36@@d@@other, 23@@s@@live-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	referred	_	refer	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
4	to	_	to	IN	O	_	have-rel-role-91	_	0	IGNORE	true
5	me	_	I	PRP	O	_	i	_	0	IGNORE	true
6	by	_	by	IN	O	_	i	_	0	IGNORE	true
7	a	_	a	DT	O	_	i	_	0	IGNORE	true
8	friend,	_	friend,	NNS	O	(d<root> / --LEX--)	and	()	17	APP_s	true
9	who	_	who	WP	O	_	-	_	0	IGNORE	true
10	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
11	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	14	MOD_s	true
14	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	Ted,	ted,	ted,	NN	O	_	and	_	0	IGNORE	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
18	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
19	that	_	that	IN	O	_	thing	_	0	IGNORE	true
20	Ted	_name_	Ted	NNP	O	_	person	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	APP_s	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-16	(s())	22	APP_s	true
25	up	_	up	RP	O	_	thing	_	0	IGNORE	true
26	for	_	for	IN	O	_	thing	_	0	IGNORE	true
27	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
28	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
29	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
30	preparedness	_	preparedness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	end	_	end	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@make-up-16, 33@@n@@end-01, 10@@explicitanon0@@-, 13@@b2@@good-02, 13@@m@@most, 1@@d@@He, 22@@s@@possible-01, 30@@d@@preparedness, 28@@s@@lack-01, 3@@s@@refer-01, 8@@d@@and, 17@@s@@contrast-01, 18@@s@@say-01, 14@@s@@experience-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	brought	_	bring	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	fabric	_	fabric	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
4	books,	_	books,	NNS	O	_	and	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
6	pictures	_	picture	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	APP_op2	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	furniture	_	furniture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	only,	_	only,	NNS	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
13	way	_	way	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	over	_	over	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	budget	_	budget	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@a@@and, 6@@s@@picture, 1@@d@@He, 11@@p@@all, 12@@s@@come-01, 13@@s@@way, 8@@d@@furniture, 15@@d@@budget-01, 14@@s@@over, 3@@d@@fabric, 2@@s@@bring-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	one	_	one	CD	O	_	1	_	0	IGNORE	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
5	emails	_	email	NNS	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	attached	_	attach	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
12	Vet's	_name_	vet'	NNS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
13	that	_	that	WDT	O	_	name	_	0	IGNORE	true
14	expressed	_	express	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
16	sympathy,	_	sympathy,	NNS	O	_	i	_	0	IGNORE	true
17	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	hotel	_	hotel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	APP_o	true
20	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@i, 5@@l@@email, 14@@s@@express-01, 9@@d@@letter, 17@@p@@this, 20@@d@@nothing, 12@@n@@_NAME_, 7@@s@@attach-01, 18@@d@@hotel, 19@@s@@do-02]
sentence=1	Ok	ok	ok	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$ay-01	(mod())	15	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_dom	true
3	am	_	be	VBP	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	name	_	0	IGNORE	true
5	New	new	New	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	Yorker	yorker	Yorker	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	0	ROOT	true
7	who	_	who	WP	O	_	name	_	0	IGNORE	true
8	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
9	been	_	be	VBN	O	_	person	_	0	IGNORE	true
10	going	_	go	VBG	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	5	MOD_s	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	Oxford,_England	_name_	England	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	10	MOD_mod	true
15	.	_	.	.	O	(b<root> / --LEX--  :location-of (h<mod>))	multi-sentence	(mod())	6	MOD_mod	true

nodealignment=[12@@d@@school, 14@@c@@country, 5@@c@@country, 2@@d@@i, 5@@n@@_NAME_, 10@@g@@go-02, 14@@n@@_NAME_, 6@@r@@_NAME_, 15@@b@@multi-sentence, 1@@p@@okay-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	went	_	go	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
5	go	_	go	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-05	(o(s()))	3	APP_o	true
6	check	_	check	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_o	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	manager,	_	manager,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
10	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	sitting	_	sit	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
13	at	_	at	IN	O	_	person	_	0	IGNORE	true
14	a	_	a	DT	O	_	person	_	0	IGNORE	true
15	table	_	table	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	chatting	_	chat	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
17	with	_	with	IN	O	_	and	_	0	IGNORE	true
18	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_o	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	were	_	be	VBD	O	_	person	_	0	IGNORE	true
22	eating	_	eat	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	MOD_s	true
23	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@check-01, 5@@c@@go-05, 19@@p@@person, 9@@p@@_NAME_, 12@@s@@sit-01, 2@@d@@person, 19@@f@@friend, 19@@h@@have-rel-role-91, 16@@l@@chat-01, 15@@d@@table, 22@@s@@eat-01, 3@@c@@go-02]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
6	food	_	food	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	9	MOD_mod	true
9	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
10	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
11	management	_	management	NN	O	(d<root> / --LEX--)	manage-01	()	9	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	values	_	value	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
16	employees	_	employee	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	employ-01	()	15	APP_op2	true
17	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
19	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[14@@d@@customer, 16@@p@@person, 17@@s@@much, 18@@s@@more, 11@@d@@manage-01, 15@@a@@and, 6@@p@@food, 16@@l@@employ-01, 3@@p@@other, 4@@d@@place, 9@@s@@good-02, 8@@s@@equal, 13@@s@@value-01, 7@@p@@just]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
2	HAD	had	have	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	11	APP_op1	true
3	TO	to	to	TO	O	_	cause-01	_	0	IGNORE	true
4	ASK	ask	ask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	THE	the	the	DT	O	_	he	_	0	IGNORE	true
6	GIRL	girl	GIRL	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	WHO	who	who	WP	O	_	amr-unknown	_	0	IGNORE	true
8	BROUGHT	brought	bring	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	MY	my	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
10	FOOD	food	FOOD	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	AND	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	SHE	she	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	NEVER	never	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	14	MOD_mod	true
14	CAME	came	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
15	BACK	back	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	TO	to	to	TO	O	_	-	_	0	IGNORE	true
17	LET	let	let	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	14	MOD_mod	true
18	ME	me	me	PRP	O	_	i	_	0	IGNORE	true
19	KNOW	know	know	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@come-01, 1@@d@@i, 10@@d@@FOOD, 4@@s@@ask-01, 17@@s@@let-01, 11@@a@@and, 8@@s@@bring-01, 19@@d@@know-01, 15@@a@@back, 2@@o@@obligate-01, 13@@n@@ever, 6@@d@@GIRL]
sentence=1	Fair	fair	fair	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
2	give	_	give	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
4	take	_	take	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_op2	true
5	on	_	on	RP	O	_	you	_	0	IGNORE	true
6	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	sides	_	side	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	agreed	_	agree	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
11	on	_	on	IN	O	_	thing	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	deal	_	deal	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
16	within	_	within	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	13	MOD_s	true
17	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
18	parameters	_	parameter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	was	_	be	VBD	O	_	person	_	0	IGNORE	true
21	fair	_	fair	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
22	to	_	to	IN	O	_	and	_	0	IGNORE	true
23	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	sides	_	side	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[1@@s@@fair-01, 2@@d@@give-01, 24@@d@@side, 4@@d@@take-01, 18@@d@@parameter, 6@@p@@both, 13@@d@@deal-01, 8@@w@@until, 23@@p@@both, 10@@s@@agree-01, 21@@s@@fair-01, 16@@s@@within, 9@@d@@we, 3@@a@@and, 7@@b@@side]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	5	MOD_s	true
5	female	_	female	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	use	_	use	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	office	_	office	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@s@@black-05, 5@@d@@female, 9@@s@@work-01, 12@@b@@office]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	stole	_	steal	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	to	_	to	IN	O	_	you	_	0	IGNORE	true
9	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
12	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	10	MOD_s	true
13	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
16	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[9@@p@@another, 2@@s@@steal-01, 15@@s@@work-01, 12@@s@@do-02, 10@@d@@guy, 5@@a@@and, 4@@d@@information, 13@@p@@all, 6@@s@@give-01, 1@@d@@She]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	lived	_	live	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	one	_	one	CD	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	face	_	face	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	parking	_	parking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	11	MOD_mod	true
11	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@-, 10@@p@@parking-01, 11@@d@@lot, 8@@s@@face-01, 1@@d@@i, 4@@b@@one, 2@@s@@live-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
2	tracked	_	track	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-down-02	(s(), o())	15	APP_op1	true
3	down	_	down	RP	O	_	cause-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	tire	_	tire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	that	_	that	WDT	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
8	fit	_	fit	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	6	MOD_s	true
9	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
10	BMW330i	bmw330i	BMW330i	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	in	_	in	IN	O	_	after	_	0	IGNORE	true
12	Murfreesboro	_name_	Murfreesboro	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
13	within	_	within	IN	O	(m<root> / --LEX--  :unit-of (a<mod>))	after	(mod())	2	MOD_mod	true
14	minutes	_name_	minute	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	7	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
16	secured	_	secure	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
17	it,	_	it,	NNS	O	_	and	_	0	IGNORE	true
18	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	they	_	they	PRP	O	_	$LEMMA$	_	15	IGNORE	true
20	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	42	MOD_s	true
21	out,	_	out,	RB	O	_	and	_	0	IGNORE	true
22	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-off-07	(s(), o())	42	APP_op2	true
23	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
24	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
25	tire	_	tire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	(it	_	(it	EX	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	a	_	a	DT	O	_	thing	_	0	IGNORE	true
29	runflat	_	runflat	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	22	APP_o	true
30	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
31	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	15	MOD_s	true
32	runflats	_	runflat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_dom	true
33	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	34	MOD_mod	true
34	do	_	do	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	42	APP_op1	true
35	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o2	true
36	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	good	_	good	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	34	APP_o	true
38	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
39	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
40	blow	_	blow	VBP	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	34	MOD_mod	true
41	out),	_name_	out),	NNP	O	_	and	_	0	IGNORE	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	31	APP_o	true
43	brought	_	bring	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	42	APP_op3	true
44	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
45	to	_	to	IN	O	_	thing	_	0	IGNORE	true
46	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
47	shop	_	shop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
48	to	_	to	TO	O	_	thing	_	0	IGNORE	true
49	change	_	change	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	43	MOD_mod	true
50	the	_	the	DT	O	_	thing	_	0	IGNORE	true
51	tire	_	tire	NN	O	_	$LEMMA$	_	0	IGNORE	true
52	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[47@@d@@shop, 43@@s@@bring-01, 18@@n@@then, 29@@r@@runflat, 34@@b@@do-02, 16@@s@@secure-01, 14@@t@@temporal-quantity, 36@@p@@any, 31@@s@@contrast-01, 10@@d@@BMW330i, 42@@a@@and, 20@@s@@come-01, 5@@p@@only, 32@@d@@runflat, 40@@h@@blow-01, 15@@a@@and, 8@@s@@fit-06, 37@@d@@good-02, 6@@d@@tire, 22@@s@@take-off-07, 2@@s@@track-down-02, 33@@explicitanon0@@-, 26@@d@@(it, 25@@d@@tire, 1@@d@@They, 7@@b@@that, 12@@c@@city, 13@@m@@after, 14@@m@@minute, 12@@n@@_NAME_, 35@@d@@you, 49@@i@@change-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	4	MOD_mod	true
4	considered	_	consider	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	19	APP_o	true
5	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
6	a	_	a	DT	O	_	-	_	0	IGNORE	true
7	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	8	MOD_s	true
8	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	4	APP_o	true
9	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	travel	_	travel	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
12	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	kids	_	kid	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	9	APP_s	true
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	APP_op2	true
16	fend	_	fend	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	myself,	_	myself,	NNS	O	(d<root> / --LEX--)	and	()	16	APP_s	true
19	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
20	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
21	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	had	_	have	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	38	APP_op1	true
23	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
24	listen	_	listen	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
25	to	_	to	IN	O	_	and	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	(non-violent)	_	(non-violent)	CD	O	_	and	_	0	IGNORE	true
28	domestic	_	domestic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	fight	_	fight	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	lasted	_	last	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
32	from	_	from	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	19	MOD_mod	true
33	1_AM_to_5_AM	_name_	am	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
34	during	_	during	IN	O	_	i	_	0	IGNORE	true
35	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	stay	_	stay	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	40	MOD_mod	true
38	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	9	MOD_mod	true
39	I	i	I	PRP	O	_	1	_	0	IGNORE	true
40	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	38	APP_op2	true
41	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
42	that	_	that	IN	O	_	and	_	0	IGNORE	true
43	the	_	the	DT	O	_	person	_	0	IGNORE	true
44	front	_	front	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	desk	_	desk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_s	true
46	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
47	unmanned	_	unmanned	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	man-01	(s())	40	APP_s	true
48	during	_	during	IN	O	_	i	_	0	IGNORE	true
49	night	_name_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
50	hours,	_	hours,	NFP	O	_	$LEMMA$	_	0	IGNORE	true
51	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
52	choice	_	choice	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	choose-01	(s())	71	MOD_s	true
53	was	_	be	VBD	O	_	person	_	0	IGNORE	true
54	to	_	to	IN	O	_	thing	_	0	IGNORE	true
55	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
56	waste	_	waste	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	71	APP_op1	true
57	tax	_	tax	NN	O	(d<root> / --LEX--)	$LEMMA$	()	58	APP_s	true
58	payers	_	payer	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	pay-01	(s())	59	APP_poss	true
59	money	_	money	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	56	APP_s	true
60	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
61	calling	_	call	VBG	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	56	MOD_mod	true
62	for	_	for	IN	O	_	and	_	0	IGNORE	true
63	a	_	a	DT	O	_	thing	_	0	IGNORE	true
64	yet	_	yet	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	65	MOD_mod	true
65	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	67	MOD_mod	true
66	police	_	police	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	67	MOD_mod	true
67	dispatch	_	dispatch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	61	APP_o	true
68	to	_	to	IN	O	_	thing	_	0	IGNORE	true
69	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	70	MOD_mod	true
70	hotel,	_	hotel,	NN	O	(d<root> / --LEX--)	and	()	19	APP_s	true
71	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	APP_o	true
72	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
73	get	_	get	VB	O	(d<root> / --LEX--)	$LEMMA$-by-17	()	71	APP_op2	true
74	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
75	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
76	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@y@@kid, 14@@a@@and, 16@@s@@fend-01, 61@@s@@call-02, 64@@p@@yet, 66@@p@@police, 37@@n@@stay-01, 59@@m@@money, 3@@n@@ever, 67@@d@@dispatch, 52@@s@@choose-01, 73@@d@@get-by-17, 12@@explicitanon0@@-, 56@@s@@waste-01, 47@@p@@man-01, 49@@d@@date-entity, 9@@s@@cause-01, 22@@s@@obligate-01, 70@@d@@and, 65@@p@@another, 47@@explicitanon0@@-, 36@@p@@last, 32@@w@@from, 28@@p@@domestic, 33@@d@@am, 44@@p@@front, 5@@d@@this, 31@@s@@last-01, 49@@m@@night, 29@@d@@fight-01, 71@@a@@or, 38@@d@@and, 72@@p@@just, 7@@s@@real-04, 58@@w@@pay-01, 69@@p@@this, 8@@r@@problem, 40@@s@@find-out-03, 15@@s@@possible-01, 4@@s@@consider-02, 1@@d@@i, 45@@d@@desk, 18@@d@@and, 58@@p@@person, 11@@s@@travel-01, 57@@d@@tax, 19@@s@@contrast-01, 24@@s@@listen-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_o	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
7	purpose	_	purpose	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
11	simple	_	simple	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	request	_	request	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
13	for	_	for	IN	O	_	i	_	0	IGNORE	true
14	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	slice	_	slice	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	12	APP_s	true
16	of	_	of	IN	O	_	name	_	0	IGNORE	true
17	grandma	_	grandma	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	15	APP_poss	true
18	that	_	that	WDT	O	_	i	_	0	IGNORE	true
19	wasn't	_	wasn't	PRP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
20	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	well-done	_	well-done	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	MOD_s	true
22	(actually,	_	(actually,	.	O	_	-	_	0	IGNORE	true
23	burnt)	_	burnt)	NNS	O	_	and	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@it, 20@@s@@so, 17@@f@@grandma, 2@@s@@think-01, 14@@p@@another, 15@@h@@slice, 8@@s@@cause-01, 4@@s@@do-02, 7@@t@@purpose, 17@@h@@have-rel-role-91, 1@@d@@i, 17@@p@@person, 3@@d@@he, 12@@s@@request-01, 11@@s@@simple-02, 21@@s@@well-done, 19@@explicitanon0@@-]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
4	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
5	thinks	_	think	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	MOD_s	true
6	he	_	he	PRP	O	_	say-01	_	0	IGNORE	true
7	invented	_	invent	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	pizza	_	pizza	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	can	_	can	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	possible-01	(s(), o())	0	ROOT	true
10	kiss	_	kiss	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
11	my	_	my	PRP$	O	(d<root> / --LEX--)	i	()	9	APP_s	true
12	*ss	_	*ss	UH	O	_	$LEMMA$	_	0	IGNORE	true
13	.	_	.	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[11@@d@@i, 10@@s@@kiss-01, 7@@s@@invent-01, 5@@c@@think-01, 8@@d@@pizza, 3@@d@@man, 9@@s@@possible-01, 2@@p@@little, 1@@p@@that]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
3	have	_	have	VBP	O	_	person	_	0	IGNORE	true
4	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-through-12	(s())	12	APP_op1	true
5	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	ordering,	_	ordering,	NNS	O	_	and	_	0	IGNORE	true
7	dealing	_	deal	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	12	APP_s	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	rude	_	rude	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
12	and	_	and	CC	O	(o<root> / --LEX--  :op2 (e2<op2>)  :op1 (i<op1>)  :condition-of (h<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	22	MOD_mod	true
13	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	followed	_	follow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	APP_op2	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	dumb	_	dumb	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	rules,	_	rules,	NN	O	_	and	_	0	IGNORE	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
21	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	22	MOD_mod	true
22	presented	_	present	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	32	APP_s	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	what	_	what	WP	O	_	thing	_	0	IGNORE	true
25	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
27	for..some	_	for..some	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	tacos	_	taco	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
30	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
31	"ok,"	_	"ok,"	NNP	O	_	mean-01	_	0	IGNORE	true
32	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
33	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	35	MOD_mod	true
34	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	true
35	worth	_	worth	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	32	APP_o	true
36	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-11	(s())	35	APP_s	true
37	up	_	up	RP	O	_	thing	_	0	IGNORE	true
38	with	_	with	IN	O	_	-	_	0	IGNORE	true
39	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
40	the	_	the	DT	O	_	more	_	0	IGNORE	true
41	hassle	_	hassle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@s@@present-01, 34@@explicitanon0@@-, 2@@d@@you, 35@@s@@worth-02, 32@@s@@contrast-01, 17@@p@@dumb, 27@@p@@for..some, 39@@p@@all, 21@@p@@final, 10@@p@@rude, 4@@s@@get-through-12, 11@@d@@staff, 12@@o@@and, 41@@d@@hassle, 28@@d@@taco, 33@@p@@definite, 7@@s@@deal-01, 36@@s@@put-up-11, 26@@s@@come-01, 15@@s@@follow-02]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	introduced	_	introduce	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	name	_	0	IGNORE	true
5	Bistro_Tallulah	_name_	Tallulah	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o2	true
6	by	_	by	IN	O	_	i	_	0	IGNORE	true
7	traveler-professional	_	traveler-professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	diner	_	diner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	happens	_	happen	VBZ	O	_	$LEMMA$-02	_	0	IGNORE	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	own	_	own	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
13	the_Adelphi_Hotel	_name_	Hotel	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	12	APP_o	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	travels	_	travel	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	world--	_	world--	NNP	O	_	$LEMMA$	_	0	IGNORE	true
18	and	_	and	CC	O	_	$LEMMA$	_	3	IGNORE	true
19	residing	_	reside	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	Paris,London,	paris,london,	Paris,London,	``	O	_	$LEMMA$	_	0	IGNORE	true
22	New_York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
23	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	rest	_	rest	NN	O	(r<root> / --LEX--  :part-of (c4<poss>)  :duration-of (p2<mod>))	$LEMMA$	(mod(), poss())	19	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the_year	_name_	year	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	24	APP_poss	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@c@@company, 5@@n@@_NAME_, 15@@s@@travel-01, 26@@n@@_NAME_, 5@@p@@person, 3@@b@@introduce-01, 1@@d@@We, 8@@d@@diner, 26@@e@@event, 22@@n@@_NAME_, 19@@s@@reside-01, 24@@r@@rest, 22@@c@@city, 12@@s@@own-01, 13@@n@@_NAME_, 7@@p@@traveler-professional]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
7	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
8	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	annoying	_	annoying	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	annoy-01	(s())	5	MOD_s	true
10	about	_	about	IN	O	_	thing	_	0	IGNORE	true
11	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	offices	_	office	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@They, 11@@p@@other, 9@@s@@annoy-01, 5@@d@@thing, 3@@s@@do-02, 2@@explicitanon0@@-, 12@@b@@office, 4@@p@@certain, 8@@s@@really]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
3	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	7	MOD_o	true
4	in	_	in	RB	O	_	i	_	0	IGNORE	true
5	for	_	for	IN	O	_	say-01	_	0	IGNORE	true
6	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
7	treat	_	treat	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
9	I	i	I	PRP	O	_	1	_	0	IGNORE	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	greeted	_	greet	VBN	O	(b<root> / --LEX--  :ARG0 (h<o>)  :ARG1 (s<s>)  :time-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
12	by	_	by	IN	O	_	ordinal-entity	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	friendly	_	friendly	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
16	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	counter	_	counter	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
20	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
21	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
22	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
23	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	24	APP_op2	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	27	APP_s	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	would	_	would	MD	O	_	person	_	0	IGNORE	true
27	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	20	APP_o	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	sit	_	sit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	APP_o	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	"new"	_	"new"	JJ	O	_	and	_	0	IGNORE	true
33	dining	_	dining	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@p@@dining, 20@@s@@ask-01, 23@@f@@wife, 18@@b@@counter, 14@@s@@friendly-01, 27@@c@@like-02, 11@@b@@greet-01, 3@@s@@be-located-at-91, 15@@d@@girl, 24@@a@@and, 23@@h@@have-rel-role-91, 29@@s@@sit-01, 34@@d@@room, 23@@p@@person, 1@@p@@well, 2@@d@@i, 7@@s@@treat-01]
sentence=1	It's	it's	it's	PRP	O	_	and	_	0	IGNORE	true
2	nice	_	nice	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	to	_	to	TO	O	_	request-confirmation-91	_	0	IGNORE	true
4	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
5	that	_	that	IN	O	_	request-confirmation-91	_	0	IGNORE	true
6	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	economy	_	economy	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	APP_s	true
12	eat	_	eat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	14	MOD_s	true
17	upscale	_	upscale	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
18	service,	_	service,	NNP	O	_	and	_	0	IGNORE	true
19	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	14	MOD_s	true
20	atmosphere,	_	atmosphere,	NNS	O	_	et-cetera	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
22	Incredible	incredible	incredible	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	food,	_	food,	NNS	O	_	and	_	0	IGNORE	true
24	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	break	_	break	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-18	(s())	24	APP_o	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	bank	_	bank	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
30	enjoying	_	enjoy	VBG	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	26	MOD_mod	true
31	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[25@@explicitanon0@@-, 30@@o@@enjoy-01, 19@@s@@amaze-01, 6@@p@@even, 21@@a@@and, 28@@d@@bank, 11@@s@@possible-01, 17@@d@@upscale, 14@@d@@place, 26@@s@@break-18, 9@@b@@economy, 16@@s@@have-03, 12@@s@@eat-01, 22@@d@@incredible, 2@@s@@nice-01, 4@@s@@see-01, 10@@d@@we, 24@@s@@contrast-01]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	have	_	have	VBP	O	_	person	_	0	IGNORE	true
4	been	_	be	VBN	O	_	person	_	0	IGNORE	true
5	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
6	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
7	Ulistic	_name_	Ulistic	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
8	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	1.5	_	1.5	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
10	months,	_	months,	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	before	(mod())	5	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
12	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	20	APP_op1	true
13	100	_	100	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	15	APP_s	true
15	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_op2	true
16	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	Facebook,	_name_	facebook,	ADD	O	_	$LEMMA$	_	0	IGNORE	true
20	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
21	our	_	our	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
22	web	_	web	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
23	site,	_	site,	NNP	O	_	mean-01	_	0	IGNORE	true
24	www.designofashion.com	_	www.designofashion.com	ADD	O	(e<root> / email-address-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	26	APP_s	true
25	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
26	seen	_	see	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	20	APP_op2	true
27	a	_	a	DT	O	_	thing	_	0	IGNORE	true
28	3	_	3	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
29	fold	_	fold	NN	O	(d<root> / --LEX--)	product-of	()	11	APP_op3	true
30	increase	_	increase	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
31	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
32	traffic,	_	traffic,	NNP	O	_	and	_	0	IGNORE	true
33	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
34	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
35	significantly	_	significantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	significant-02	(s())	36	MOD_s	true
36	beating	_	beat	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
37	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
38	expectations	_	expectation	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	expect-01	()	36	APP_o	true
39	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
40	SEO	seo	seo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
41	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
42	a	_	a	DT	O	_	1	_	0	IGNORE	true
43	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	47	APP_op1	true
44	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
45	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	43	MOD_s	true
46	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	55	APP_s	true
48	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
49	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	54	APP_dom	true
50	results	_	result	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	49	APP_s	true
51	this	_	this	DT	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	52	MOD_mod	true
52	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	49	MOD_s	true
53	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
54	exceptional	_	exceptional	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	47	APP_op2	true
55	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	11	MOD_o	true

nodealignment=[26@@c@@see-01, 47@@a@@and, 49@@s@@get-01, 55@@s@@multi-sentence, 24@@explicitanon0@@_NAME_, 28@@explicitanon0@@_NUMBER_, 11@@a@@and, 50@@d@@result-01, 5@@s@@work-01, 46@@d@@time, 12@@d@@have-03, 7@@c@@company, 51@@s@@this, 20@@b@@and, 45@@s@@take-10, 29@@d@@product-of, 14@@d@@person, 38@@d@@expect-01, 22@@p@@web, 13@@explicitanon0@@_NUMBER_, 10@@explicitanon0@@before, 9@@explicitanon0@@_NUMBER_, 2@@d@@we, 36@@s@@beat-01, 24@@e@@email-address-entity, 17@@d@@site, 35@@s@@significant-02, 7@@n@@_NAME_, 1@@p@@well, 52@@s@@quick-02, 43@@s@@process-02, 38@@t@@thing, 40@@d@@seo, 54@@r@@exceptional, 15@@s@@follow-02, 30@@s@@increase-01]
sentence=1	Lo	_name_	Lo	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	and	_	and	CC	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
3	behold,	_name_	behold,	NNPS	O	_	and	_	0	IGNORE	true
4	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
5	replaced	_	replace	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
6	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
7	screen	_	screen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	(which	_	(which	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
9	had	_	have	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	5	MOD_s	true
10	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
11	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	ordered)	_	ordered)	NN	O	_	-	_	0	IGNORE	true
13	yesterday	_name_	yesterday	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	charge	_	charge	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_op2	true
17	me	_	I	PRP	O	_	i	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	dime	_	dime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@d@@they, 7@@d@@screen, 16@@s@@charge-01, 5@@s@@replace-01, 13@@n@@yesterday, 19@@d@@dime, 2@@explicitanon0@@and, 9@@s@@obligate-01, 14@@a@@and, 15@@explicitanon0@@-]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	ALL	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-to-do-with-04	(s(), o())	0	ROOT	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
6	with	_	with	IN	O	_	-	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	sales	_	sale	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	sell-01	(mod())	9	MOD_mod	true
9	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
10	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
11	was	_	be	VBD	O	_	2	_	0	IGNORE	true
12	a_young	_name_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
13	22_year_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	9	MOD_mod	true
14	who	_	who	WP	O	_	dear	_	0	IGNORE	true
15	had	_	have	VBD	O	_	person	_	0	IGNORE	true
16	admittedly	_	admittedly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	surprise-01	(mod())	19	MOD_mod	true
17	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	been	_	be	VBN	O	_	person	_	0	IGNORE	true
19	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
20	for	_	for	IN	O	_	and	_	0	IGNORE	true
21	2_weeks	_name_	week	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@y@@year, 12@@p@@_NAME_, 13@@t@@temporal-quantity, 17@@p@@only, 21@@b@@_NAME_, 2@@p@@all, 8@@p@@sell-01, 16@@p@@surprise-01, 1@@d@@It, 19@@s@@work-01, 3@@s@@have-to-do-with-04, 9@@d@@guy]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	instance	_	instance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	exemplify-01	(s())	8	MOD_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
5	who	_	who	WP	O	(d<root> / --LEX--)	amr-unknown	()	8	APP_o	true
6	owned	_	own	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	Mazda	_name_	Mazda	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (o<op1>)  :op2 (i<op2>))	$LEMMA$	(op2(o()), op1(o()))	0	ROOT	true
9	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op2	true
11	with	_	with	IN	O	_	thing	_	0	IGNORE	true
12	confidence	_	confidence	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	GM,	gm,	GM,	NNP	O	_	_NAME_	_	0	IGNORE	true
16	which	_	which	WDT	O	_	i	_	0	IGNORE	true
17	isn't	_	isn't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
19	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[7@@c@@company, 4@@s@@ask-01, 5@@d@@amr-unknown, 3@@d@@i, 17@@explicitanon0@@-, 9@@d@@he, 6@@s@@own-01, 18@@s@@true-01, 8@@a@@and, 2@@s@@exemplify-01, 10@@s@@say-01, 12@@t@@confidence, 7@@n@@_NAME_]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	abrasive	_	abrasive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
5	rude	_	rude	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_op2	true
6	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
7	when	_	when	WRB	O	_	he	_	0	IGNORE	true
8	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
12	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
13	messed	_	mess	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	4	MOD_s	true
14	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@everything, 13@@s@@mess-up-02, 5@@s@@rude-01, 1@@d@@They, 4@@a@@and, 3@@s@@abrasive]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
4	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
5	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
6	edible	_	edible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	MOD_s	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	steamed	_	steam	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	rice	_	rice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(o<root> / --LEX--  :op1 (g<op1>)  :op2 (b<op2>)  :domain (a<dom>))	$LEMMA$	(op2(), op1(), dom())	0	ROOT	true
12	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
13	vegetable	_	vegetable	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	lo	_	lo	FW	O	_	$LEMMA$	_	0	IGNORE	true
15	mein	_	mein	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
16	was	_	be	VBD	O	_	possible-01	_	0	IGNORE	true
17	barely	_	barely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	bare	(mod())	18	MOD_mod	true
18	tolerable	_	tolerable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	understand-01	(s())	11	APP_op2	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@d@@mein, 9@@s@@steam-01, 18@@s@@understand-01, 6@@s@@edible, 10@@d@@rice, 11@@o@@and, 2@@p@@only, 17@@s@@bare, 13@@p@@vegetable, 3@@d@@thing]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
2	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	receipt	_	receipt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	metal	_	metal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	fit	_	fit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	7	MOD_s	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
13	asked	_	ask	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	12	APP_op2	true
14	Pomper	_name_	Pomper	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_o2	true
15	for	_	for	IN	O	_	thing	_	0	IGNORE	true
16	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
17	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@fit-06, 18@@p@@back, 4@@d@@receipt, 1@@d@@i, 2@@s@@take-01, 12@@a@@and, 5@@a@@and, 7@@d@@metal, 17@@d@@money, 13@@b@@ask-02, 14@@n@@_NAME_, 10@@explicitanon0@@-, 14@@p@@person]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_s	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
9	business	_	business	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
10	to	_	to	TO	O	_	and	_	0	IGNORE	true
11	have	_	have	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	7	MOD_s	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-12	(s(), o())	11	APP_o	true
14	up	_	up	RP	O	_	thing	_	0	IGNORE	true
15	with	_	with	IN	O	_	i	_	0	IGNORE	true
16	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	unfair	_	unfair	JJ	O	(p<root> / --LEX--  :polarity (explicitanon0 / -))	fair-01	()	13	APP_o	true
18	treatment!!!!	_	treatment!!!!	NN	O	_	shit	_	0	IGNORE	true
19	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[5@@d@@person, 13@@s@@put-up-12, 11@@o@@obligate-01, 17@@explicitanon0@@-, 9@@m@@business, 16@@p@@this, 7@@s@@need-01, 17@@p@@fair-01, 4@@explicitanon0@@many, 8@@d@@our]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	signed	_	sign	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	0	ROOT	true
3	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
4	with	_	with	IN	O	_	-	_	0	IGNORE	true
5	one	_	one	CD	O	(d<root> / --LEX--)	1	()	2	APP_o	true
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	5	MOD_s	true
7	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
8	staff	_	staff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	pleasant	_	pleasant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
15	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[12@@s@@pleasant-01, 5@@d@@1, 14@@p@@professional, 1@@d@@i, 8@@d@@staff, 11@@s@@very, 6@@s@@include-91, 2@@s@@sign-up-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	APP_s	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	cancel	_	cancel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
10	paying	_	pay	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op1	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	$50	_	$50	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
13	fee	_	fee	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	(which	_	(which	NFP	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	staff	_	staff	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	signed	_	sign	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-up-03	(s())	17	MOD_s	true
20	me	_	I	PRP	O	_	i	_	0	IGNORE	true
21	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
22	stated	_	state	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_o	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	would	_	would	MD	O	_	i	_	0	IGNORE	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	have	_	have	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	22	APP_o	true
27	to	_	to	TO	O	_	and	_	0	IGNORE	true
28	pay	_	pay	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	APP_o	true
29	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
30	I	i	I	PRP	O	_	1	_	0	IGNORE	true
31	had	_	have	VBD	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-03	(mod(), s())	26	MOD_mod	true
32	proof	_	proof	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	of	_	of	IN	O	_	prove-01	_	0	IGNORE	true
34	moving)	_	moving)	NN	O	_	$LEMMA$	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	31	APP_s	true
36	being	_	be	VBG	O	_	person	_	0	IGNORE	true
37	spoken	_	speak	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_op2	true
38	to	_	to	IN	O	_	-	_	0	IGNORE	true
39	in	_	in	IN	O	_	i	_	0	IGNORE	true
40	a	_	a	DT	O	_	thing	_	0	IGNORE	true
41	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	belittling	_	belittling	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	37	MOD_s	true
43	manner	_	manner	NN	O	_	$LEMMA$	_	0	IGNORE	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[42@@s@@belittling-01, 37@@d@@speak-01, 25@@explicitanon0@@-, 8@@p@@only, 7@@s@@contrast-01, 5@@s@@cancel-01, 28@@s@@pay-01, 1@@d@@i, 3@@s@@possible-01, 26@@o@@obligate-01, 6@@d@@it, 16@@p@@staff, 35@@a@@and, 10@@s@@pay-01, 31@@o@@have-03, 13@@d@@fee, 41@@s@@very, 22@@c@@state-01, 9@@w@@after, 17@@d@@person, 12@@explicitanon0@@_NUMBER_, 19@@s@@sign-up-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_op1	true
3	to	_	to	TO	O	_	and	_	0	IGNORE	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	blonde	_	blonde	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-of-91	(s())	10	MOD_s	true
9	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	pulled	_	pull	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op2	true
11	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
12	root	_	root	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	color	_	color	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	throughout	_	throughout	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
15	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
16	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
18	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
21	gross	_	gross	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	mousey	_	mousey	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	brown	_	brown	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@p@@gross, 22@@p@@mousey, 1@@d@@i, 16@@p@@whole, 5@@s@@very, 7@@a@@and, 14@@b@@throughout, 17@@d@@hair, 23@@p@@brown, 12@@p@@root, 2@@c@@want-01, 13@@d@@color, 9@@d@@he, 6@@s@@blonde, 10@@s@@pull-01, 8@@s@@instead-of-91]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	cutting	_	cut	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	me	_	I	PRP	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	deals	_	deal	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
9	and	_	and	CC	O	_	$LEMMA$	_	2	IGNORE	true
10	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	furniture	_	furniture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	quickly,	_	quickly,	NNP	O	_	$LEMMA$-01	_	0	IGNORE	true
15	Ahmed,	ahmed,	Ahmed,	NNP	O	_	_NAME_	_	0	IGNORE	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	nice	_	nice	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op2	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
19	mostly	_	mostly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	most	(mod())	21	MOD_mod	true
20	professional,	_	professional,	NNS	O	_	include-91	_	0	IGNORE	true
21	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
22	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
23	semi-sketchiness	_	semi-sketchiness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@d@@nice-01, 19@@s@@most, 18@@a@@and, 5@@s@@cut-01, 8@@d@@deal-01, 10@@s@@get-01, 13@@d@@furniture, 21@@s@@except-01, 23@@d@@semi-sketchiness, 2@@d@@guy]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	has	_	have	VBZ	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
3	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	9	MOD_s	true
4	3_weeks	_name_	week	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
7	STILL	still	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	have	_	have	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-03	(o(poss_UNIFY_s()))	5	APP_op2	true
10	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
11	table	_	table	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	APP_o	true
12	(which	_	(which	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
13	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
14	NOT	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
15	cheap,	_	cheap,	NNP	O	_	-	_	0	IGNORE	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	MOD_s	true
18	add)	_	add)	NNP	O	_	and	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@i, 17@@s@@possible-01, 11@@m@@table, 7@@p@@still, 4@@d@@week, 9@@l@@have-03, 14@@explicitanon0@@-, 5@@a@@and, 12@@s@@(which, 8@@explicitanon0@@-, 3@@s@@be-located-at-91]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	spent	_	spend	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	$2300	_	$2300	NNP	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	2	APP_o	true
4	on	_	on	IN	O	_	monetary-quantity	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	bedroom	_	bedroom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
7	suite,	_	suite,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
10	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
13	condition	_	condition	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
14	on	_	on	IN	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	showroom	_	showroom	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	floor	_	floor	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[17@@b@@floor, 6@@d@@bedroom, 3@@explicitanon0@@_NUMBER_, 12@@s@@excellent-02, 3@@m2@@monetary-quantity, 10@@s@@complete-02, 2@@t@@spend-01, 13@@p@@condition, 16@@p@@showroom, 1@@d@@i]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
3	PA	pa	pa	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	10	APP_s	true
4	i	_	i	PRP	O	(d<root> / --LEX--)	$FORM$	()	5	APP_s	true
5	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	3	MOD_o	true
6	to	_	to	IN	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	day	_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	"it	_	"it	.	O	(d<root> / --LEX--)	cause-01	()	12	APP_s	true
12	must	_	must	MD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	infer-01	(o(s()))	10	APP_o	true
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
14	comforting	_	comfort	VBG	O	(a2<root> / --LEX--  :ARG0 (c<s>)  :concession-of (a<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
17	gone	_	go	VBN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	12	APP_o	true
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	surgeon	_	surgeon	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	17	APP_o	true
22	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	21	MOD_s	true
23	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
25	will	_	will	MD	O	_	thing	_	0	IGNORE	true
26	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	21	MOD_s	true
27	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
28	for	_	for	IN	O	_	i	_	0	IGNORE	true
29	you"	_	you"	NNP	O	_	and	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@cause-01, 21@@s@@surgeon, 5@@g@@go-02, 1@@p@@even, 26@@s@@do-02, 3@@p@@person, 12@@c@@infer-01, 14@@a2@@comfort-01, 17@@g@@go-02, 4@@d@@i, 10@@s@@say-01, 3@@f@@pa, 27@@d@@nothing, 3@@h@@have-rel-role-91, 20@@d@@heart, 8@@p@@other, 22@@s@@resemble-01, 9@@n@@day]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	0	ROOT	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_s	true
3	want	_	want	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
4	a	_	a	DT	O	_	or	_	0	IGNORE	true
5	doctor	_	doctor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	who	_	who	WP	O	_	i	_	0	IGNORE	true
7	will	_	will	MD	O	_	person	_	0	IGNORE	true
8	lie	_	lie	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-08	(s(), o())	5	MOD_s	true
9	to	_	to	IN	O	_	-	_	0	IGNORE	true
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	will	_	will	MD	O	_	person	_	0	IGNORE	true
15	operate	_	operate	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
16	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
17	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	change	_	change	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
19	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	mind,	_	mind,	NNS	O	_	and	_	0	IGNORE	true
21	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
24	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
25	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
27	talking	_	talk	VBG	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	23	APP_s	true
28	about	_	about	IN	O	_	thing	_	0	IGNORE	true
29	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
30	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	recommends	_	recommend	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_op1	true
32	procedures	_	procedure	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
33	at	_	at	IN	O	_	thing	_	0	IGNORE	true
34	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	hospitals	_	hospital	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	27	MOD_mod	true
37	says	_	say	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	36	APP_op2	true
38	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	are	_	be	VBP	O	_	person	_	0	IGNORE	true
40	what	_	what	WP	O	_	thing	_	0	IGNORE	true
41	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	need,	_	need,	NNP	O	_	thing	_	0	IGNORE	true
43	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
44	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
45	will	_	will	MD	O	_	thing	_	0	IGNORE	true
46	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	47	MOD_mod	true
47	work	_	work	VB	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-09	(mod(), s())	50	MOD_mod	true
48	for	_	for	IN	O	_	thing	_	0	IGNORE	true
49	you,	_	you,	NNS	O	_	and	_	0	IGNORE	true
50	go	_	go	VBP	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	59	APP_s	true
51	to	_	to	IN	O	_	person	_	0	IGNORE	true
52	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
53	doctor...he	_	doctor...he	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
54	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
55	the	_	the	DT	O	_	he	_	0	IGNORE	true
56	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
57	for	_	for	IN	O	_	have-mod-91	_	0	IGNORE	true
58	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
59	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	1	MOD_o	true

nodealignment=[1@@s@@have-condition-91, 16@@d@@and, 34@@p@@other, 52@@p@@this, 31@@s@@recommend-01, 3@@m@@want-01, 17@@n@@then, 27@@d@@talk-01, 23@@s@@know-01, 8@@s@@lie-08, 5@@d@@doctor, 27@@t@@thing, 50@@p@@go-02, 47@@v@@work-09, 59@@s@@multi-sentence, 2@@d@@you, 36@@a@@and, 32@@d@@procedure, 37@@d@@say-01, 35@@b@@hospital, 56@@d@@one, 22@@explicitanon0@@-, 15@@d@@operate-01, 12@@s@@say-01, 18@@s@@change-01, 46@@explicitanon0@@-, 53@@p@@doctor...he]
sentence=1	Workers	workers	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	6	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	do	_	do	VBP	O	_	person	_	0	IGNORE	true
4	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	5	MOD_mod	true
5	introductions	_	introduction	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	introduce-01	(s())	1	MOD_s	true
6	look	_	look	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
7	at	_	at	IN	O	_	describe-01	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	interaction	_	interaction	NN	O	(d<root> / --LEX--)	interact-01	()	6	APP_o	true
10	objectively;	_	objectively;	NNP	O	_	and	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
12	it's	_	it's	PRP$	O	_	and	_	0	IGNORE	true
13	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	APP_op2	true
14	to	_	to	TO	O	_	request-confirmation-91	_	0	IGNORE	true
15	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
16	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op3	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	able	_	able	JJ	O	(d<root> / --LEX--)	possible-01	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
20	willing	_	willing	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	will-02	(s())	19	APP_op2	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_s	true
23	no	_	no	UH	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
24	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
25	they	_	they	PRP	O	_	person	_	0	IGNORE	true
26	feel	_	feel	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-02	(mod(), s())	22	MOD_mod	true
27	there	_	there	EX	O	_	person	_	0	IGNORE	true
28	would	_	would	MD	O	_	person	_	0	IGNORE	true
29	be	_	be	VB	O	_	person	_	0	IGNORE	true
30	a	_	a	DT	O	_	event	_	0	IGNORE	true
31	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@d@@no, 6@@s@@look-01, 5@@s@@introduce-01, 15@@s@@see-01, 19@@a@@and, 1@@e2@@work-01, 13@@s@@good-02, 18@@d@@possible-01, 16@@d@@they, 4@@p@@this, 31@@d@@problem, 22@@s@@say-01, 9@@d@@interact-01, 11@@a@@and, 1@@p2@@person, 26@@o@@feel-02, 20@@s@@will-02]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	4	MOD_s	true
4	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
5	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	alternative	_	alternative	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	APP_s	true
7	by	_	by	IN	O	_	thing	_	0	IGNORE	true
8	Second	_name_	Second	NNP	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	4	MOD_mod	true
9	Home,	home,	Home,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
10	to	_	to	TO	O	_	person	_	0	IGNORE	true
11	board	_	board	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
12	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
16	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
17	given	_	give	VBN	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	4	MOD_s	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	dog	_	dog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o2	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	chance	_	chance	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	17	APP_o	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	21	APP_o	true
25	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	24	APP_op2	true
26	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	Second	_name_	Second	NNP	O	_	2	_	0	IGNORE	true
28	Home	home	Home	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	couple	_	couple	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
31	times,	_	times,	NFP	O	_	and	_	0	IGNORE	true
32	getting	_	get	VBG	O	_	$LEMMA$-03	_	0	IGNORE	true
33	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	37	APP_op1	true
34	to	_	to	IN	O	_	and	_	0	IGNORE	true
35	the	_	the	DT	O	_	he	_	0	IGNORE	true
36	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
37	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
38	maybe	_	maybe	RB	O	_	possible-01	_	0	IGNORE	true
39	facilitating	_	facilitate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op2	true
40	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	attempt	_	attempt	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
42	to	_	to	TO	O	_	thing	_	0	IGNORE	true
43	get	_	get	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-05	(s())	41	APP_s	true
44	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
45	daycare	_	daycare	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
46	later	_	later	RB	O	(m<root> / more  :degree-of (l / --LEX--  :time-of (s<mod>)))	late	(mod())	43	MOD_mod	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@a@@and, 41@@s@@attempt-01, 40@@p@@another, 8@@explicitanon0@@2, 1@@d@@You, 33@@s@@use-02, 23@@s@@come-01, 15@@s@@possible-01, 36@@d@@place, 17@@w@@give-01, 25@@s@@go-02, 39@@s@@facilitate-01, 37@@s@@and, 30@@explicitanon0@@couple, 46@@l@@late, 11@@i@@board-01, 3@@s@@clear-06, 45@@d@@daycare, 5@@p@@another, 4@@s@@give-01, 6@@s@@alternative, 46@@m@@more, 8@@o@@ordinal-entity, 21@@c@@chance-02, 43@@s@@get-05, 19@@d@@dog]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	called	_	call	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
3	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	representative	_	representative	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	represent-01	()	2	APP_o	true
5	who	_	who	WP	O	_	i	_	0	IGNORE	true
6	assured	_	assure	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	me	_	I	PRP	O	_	i	_	0	IGNORE	true
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	would	_	would	MD	O	_	person	_	0	IGNORE	true
10	call	_	call	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_op1	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
14	have	_	have	VB	O	_	$LEMMA$-04	_	0	IGNORE	true
15	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
16	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
17	care	_	care	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	13	APP_op2	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@b@@call-02, 10@@s@@call-02, 15@@d@@it, 1@@d@@We, 12@@d@@office, 6@@t@@assure-01, 16@@s@@take-01, 13@@a@@and, 4@@p2@@person, 4@@e2@@represent-01, 17@@d@@care-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	5	APP_op1	true
4	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	5	MOD_s	true
7	told	_	tell	VBN	O	(r<root> / --LEX--  :ARG1 (c<o>)  :ARG2 (t<s>))	$LEMMA$-01	(o(s()))	5	APP_op2	true
8	that	_	that	IN	O	_	contrast-01	_	0	IGNORE	true
9	workmanship,	_	workmanship,	NNS	O	_	contrast-01	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
11	wood,	_	wood,	NNP	O	_	and	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	guaranteed	_	guarantee	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
14	for	_	for	IN	O	_	and	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	year-	_	year-	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
20	opinion-	_	opinion-	NN	O	_	and	_	0	IGNORE	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	wood	_	wood	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	split	_	split	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
24	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	23	MOD_o	true
25	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	nail	_	nail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
28	which	_	which	WDT	O	_	i	_	0	IGNORE	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	part	_	part	NN	O	_	have-$LEMMA$-91	_	0	IGNORE	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	workmanship	_	workmanship	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	!	_	!	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[27@@d@@nail, 22@@d@@wood, 23@@s@@split-01, 17@@p@@well, 24@@s@@cause-01, 2@@p@@just, 3@@s@@call-02, 1@@d@@i, 13@@s@@guarantee-01, 6@@s@@person, 10@@explicitanon0@@-, 4@@p@@again, 5@@a@@and, 7@@r@@tell-01]
sentence=1	Snacks:	_name_	snacks:	JJ	O	_	and	_	0	IGNORE	true
2	uninspired	_	uninspired	JJ	O	(d<root> / --LEX--)	deserve-01	()	6	APP_op1	true
3	bread,	_	bread,	NNPS	O	_	and	_	0	IGNORE	true
4	tea	_	tea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
5	backs,	_	backs,	NNS	O	_	and	_	0	IGNORE	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
7	individual	_	individual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	coffee	_	coffee	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op3	true
10	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
11	a	_	a	DT	O	_	i	_	0	IGNORE	true
12	machine	_	machine	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	exist	_	exist	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
16	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[4@@d@@tea, 7@@p@@individual, 12@@o@@machine, 6@@a@@and, 15@@s@@exist-01, 8@@p@@coffee, 14@@explicitanon0@@-, 9@@d@@thing, 2@@d@@deserve-01]
sentence=1	Room	room	room	NN	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	clean,	_	clean,	CD	O	_	have-concession-91	_	0	IGNORE	true
4	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
5	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	APP_o	true
6	a	_	a	DT	O	_	more	_	0	IGNORE	true
7	weird,	_	weird,	CD	O	_	center-01	_	0	IGNORE	true
8	dated,	_	dated,	NNP	O	_	center-01	_	0	IGNORE	true
9	sink/stove	_	sink/stove	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	combo	_	combo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	10	MOD_s	true
14	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[4@@s@@contrast-01, 1@@d@@room, 5@@s@@have-03, 12@@explicitanon0@@-, 13@@s@@work-09, 9@@p@@sink/stove, 10@@d@@combo]
sentence=1	Bath	bath	bath	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	was	_	be	VBD	O	_	and	_	0	IGNORE	true
3	clean	_	clean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
4	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
5	shower	_	shower	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	stall	_	stall	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	which	_	which	WDT	O	_	i	_	0	IGNORE	true
8	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	MOD_s	true
9	mildew	_	mildew	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@bath, 4@@s@@except-01, 3@@s@@clean-02, 6@@d@@stall, 5@@p@@shower, 9@@p@@mildew-01, 10@@d@@problem, 8@@s@@have-03]
sentence=1	The	the	the	DT	O	_	-	_	0	IGNORE	true
2	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-04	(s())	5	MOD_s	true
3	thing	_	thing	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
6	happen	_	happen	VB	O	_	event	_	0	IGNORE	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	restaurant	_	restaurant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
10	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	13	MOD_s	true
11	Zahav	_name_	Zahav	NNP	O	(p3<root> / person  :name (n2 / --LEX--)  :example-of (p<mod>))	_NAME_	(mod())	10	MOD_mod	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	5	MOD_o	true
14	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	APP_s	true
15	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	18	APP_s	true
18	write	_	write	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
19	hyperbolic	_	hyperbolic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	reviews	_	review	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	making	_	make	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
22	claims	_	claim	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
23	that	_	that	IN	O	_	and	_	0	IGNORE	true
24	"everyone"	_	"everyone"	NNP	O	_	and	_	0	IGNORE	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	going	_	go	VBG	O	_	name	_	0	IGNORE	true
27	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
28	"love"	_	"love"	XX	O	_	-	_	0	IGNORE	true
29	the	_	the	DT	O	_	he	_	0	IGNORE	true
30	food,	_	food,	NNS	O	_	i	_	0	IGNORE	true
31	decor	_	decor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_o	true
33	service	_	service	NN	O	(d<root> / --LEX--)	serve-01	()	32	APP_op2	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@a@@and, 10@@s@@resemble-01, 22@@s@@claim-01, 9@@d@@restaurant, 16@@explicitanon0@@many, 2@@m@@most, 33@@d@@serve-01, 19@@p@@hyperbolic, 8@@p@@any, 11@@n2@@_NAME_, 17@@d@@person, 11@@p3@@person, 14@@s@@have-03, 20@@d@@review, 5@@s@@possible-01, 13@@s@@and, 2@@b2@@bad-04, 18@@s@@write-01, 15@@s@@too, 31@@d@@decor]
sentence=1	Then	then	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	again,	_	again,	NNP	O	_	and	_	0	IGNORE	true
3	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	5	MOD_s	true
7	us	_	us	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
8	who	_	who	WP	O	_	person	_	0	IGNORE	true
9	dined	_	dine	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_s	true
10	together,	_	together,	NNP	O	_	person	_	0	IGNORE	true
11	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	12	MOD_mod	true
12	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	flatbread	_	flatbread	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	27	APP_op1	true
16	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	fighting	_	fighting	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op1	true
18	for	_	for	IN	O	_	and	_	0	IGNORE	true
19	more,	_	more,	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
21	licking	_	lick	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op2	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	hummus	_	hummus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	from	_	from	IN	O	_	and	_	0	IGNORE	true
25	our	_	our	PRP$	O	_	cause-01	_	0	IGNORE	true
26	fingers	_	finger	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
27	(and	_	(and	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
28	yes,	_	yes,	RB	O	_	expressive	_	0	IGNORE	true
29	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	27	MOD_mod	true
30	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	31	MOD_mod	true
31	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
32	of	_	of	IN	O	_	person	_	0	IGNORE	true
33	flatbread	_	flatbread	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
34	did	_	do	VBD	O	_	person	_	0	IGNORE	true
35	represent	_	represent	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_op2	true
36	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	27	MOD_mod	true
37	three-person	_	three-person	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o	true
38	order)	_	order)	NN	O	_	and	_	0	IGNORE	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@d@@fighting-01, 27@@a@@(and, 12@@d@@piece, 15@@s@@leave-02, 30@@explicitanon0@@2, 14@@g@@flatbread, 31@@d@@piece, 33@@g@@flatbread, 37@@d@@three-person, 6@@s@@include-91, 11@@explicitanon0@@2, 19@@o@@more,, 26@@s@@finger, 7@@p@@us, 23@@d@@hummus, 35@@s@@represent-01, 9@@s@@dine-01, 29@@p@@that, 21@@s@@lick-01, 36@@explicitanon0@@2, 5@@explicitanon0@@3, 20@@a@@and]
sentence=1	Unless	unless	unless	IN	O	_	-	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	want	_	want	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
4	to	_	to	TO	O	_	have-condition-91	_	0	IGNORE	true
5	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
6	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	mean-01	(s())	16	APP_op2	true
7	"tell	_	"tell	XX	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
10	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
11	wrong	_	wrong	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	7	APP_o	true
12	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	APP_o	true
15	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	APP_op2	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	force	_	force	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	dress	_	dress	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
22	she's	_	she's	NN	O	_	include-91	_	0	IGNORE	true
23	obviously	_	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	30	MOD_s	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
25	loving"	_	loving"	:	O	_	and	_	0	IGNORE	true
26	approach	_	approach	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	APP_o	true
27	which	_	which	WDT	O	_	i	_	0	IGNORE	true
28	will	_	will	MD	O	_	thing	_	0	IGNORE	true
29	likely	_	likely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	26	MOD_s	true
31	you...	_	you...	NFP	O	_	expressive	_	0	IGNORE	true
32	uh...	_	uh...	RB	O	_	-	_	0	IGNORE	true
33	nowhere	_	nowhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@you, 16@@a@@and, 3@@m@@want-01, 29@@s@@likely-01, 5@@s@@take-01, 12@@d@@she, 9@@d@@customer, 21@@d@@dress, 30@@s@@get-04, 33@@d@@nowhere, 23@@s@@obvious-01, 17@@s@@force-01, 26@@s@@approach-02, 7@@s@@"tell-01, 24@@explicitanon0@@-, 11@@d@@wrong-02, 6@@s@@mean-01, 14@@a@@and, 15@@c@@try-01]
sentence=1	Not	not	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
2	owners	_	owner	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	own-01	(s())	0	ROOT	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
5	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
6	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	APP_op1	true
8	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
9	to	_	to	TO	O	_	-	_	0	IGNORE	true
10	hide	_	hide	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_s	true
12	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
13	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	about	_	about	IN	O	_	thing	_	0	IGNORE	true
15	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	courtesy	_	courtesy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
18	customer	_	customer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	service	_	service	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	serve-01	(s())	17	APP_op2	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@p@@common, 10@@s@@hide-01, 4@@s@@seem-01, 7@@s@@have-03, 11@@o@@and, 16@@d@@courtesy, 17@@a@@and, 19@@s@@serve-01, 18@@d@@customer, 12@@s@@know-01, 1@@explicitanon0@@-, 8@@d@@something, 2@@s@@own-01, 13@@d@@nothing]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	following	_	follow	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
3	Friday,	friday,	friday,	CD	O	_	$LEMMA$	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	returned	_	return	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	with	_	with	IN	O	_	i	_	0	IGNORE	true
7	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
8	car	_	car	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	to	_	to	TO	O	_	and	_	0	IGNORE	true
10	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-06	(s(), o())	12	APP_op1	true
11	ahead	_	ahead	RB	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (h<op2>)  :op1 (d<op1>)  :purpose-of (s2<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	5	MOD_mod	true
13	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	3	_	3	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	13	APP_o	true
17	tires,	_	tires,	NNS	O	_	and	_	0	IGNORE	true
18	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
19	were	_	be	VBD	O	_	person	_	0	IGNORE	true
20	worn	_	wear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
21	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@return-01, 15@@p@@other, 4@@d@@i, 16@@t@@thing, 8@@m@@car, 13@@s@@replace-01, 12@@a@@and, 2@@p@@follow-01, 10@@g@@go-06, 20@@s@@wear-01, 11@@d@@ahead, 16@@explicitanon0@@_NUMBER_]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	Monday	_name_	Monday	NNP	O	(t<root> / --LEX--  :weekday-of (d / date-entity  :time-of (v<mod>)))	$REPL$	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	called	_	call	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
7	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
10	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	to-do	_	to-do	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	find	_	find	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
14	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
15	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
16	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
17	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
18	about	_	about	IN	O	_	cause-01	_	0	IGNORE	true
19	it	_	it	PRP	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@date-entity, 17@@d@@anything, 10@@p@@big, 13@@i@@find-01, 5@@a@@and, 4@@s@@call-02, 3@@d@@i, 11@@d@@to-do, 16@@s@@know-01, 19@@a@@it, 2@@t@@_name_, 6@@p@@again, 14@@d@@anyone]

