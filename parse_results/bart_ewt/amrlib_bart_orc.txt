# ::snt Some 2,000 junior officers of the old Baath army have been recalled to duty in recent months, something Chalabi would have blocked if he could have .
(r / recall-01
      :ARG1 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (a / army
                        :mod (o / old)
                        :poss (p2 / person
                              :name (n / name
                                    :op1 "Chalabi")))
                  :ARG2 (o2 / officer
                        :mod (j / junior)))
            :quant (s / some
                  :op1 2000))
      :ARG2 (d / duty)
      :time (m / month
            :mod (r2 / recent))
      :ARG1-of (b / block-01
            :ARG0 p2
            :condition (p3 / possible-01)
            :ARG1-of p3))

# ::snt And there is nothing we can do about it really, people who are suggesting that we go out and fight them are living in dream land .
(a / and
      :op2 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (w / we)
                  :ARG1 (n / nothing)
                  :ARG2 (ii / it))
            :ARG1-of (r / real-04)
            :ARG1-of (c / cause-01
                  :ARG0 (l / live-01
                        :ARG0 (p2 / person
                              :ARG0-of (s / suggest-01
                                    :ARG1 (a2 / and
                                          :op1 (g / go-out-17
                                                :ARG0 w)
                                          :op2 (f / fight-01
                                                :ARG0 w
                                                :ARG1 (t / they)))
                                    :ARG2 w))
                        :location (l2 / land
                              :mod (d2 / dream-01))))))

# ::snt "They are targetting ambulances", "American snipers are shooting children and pregnant women", and "They are using cluster bombs against civilians" is all you get to hear from him .
(a / all
      :ARG1-of (h / hear-01
            :ARG0 (y / you)
            :ARG2 (h2 / he))
      :domain (a2 / and
            :op1 (t / target-01
                  :ARG0 (t2 / they)
                  :ARG1 (a3 / ambulance))
            :op2 (s / shoot-02
                  :ARG0 (s2 / sniper
                        :mod (c / country
                              :name (n / name
                                    :op1 "America")))
                  :ARG1 (a4 / and
                        :op1 (c2 / child)
                        :op2 (w / woman
                              :ARG1-of (ii / impregnate-01))))
            :op3 (u / use-01
                  :ARG0 t2
                  :ARG1 (b / bomb
                        :mod (c3 / cluster))
                  :ARG2 (c4 / counter-01
                        :ARG1 (c5 / civilian)
                        :ARG2 b))))

# ::snt The urge to protect and gather them all in is almost overwhelming, and makes me more grateful for the blessings I have .
(a / and
      :op1 (o / overwhelm-01
            :ARG0 (u / urge-01
                  :ARG1 (ii / i)
                  :ARG2 (a2 / and
                        :op1 (p / protect-01
                              :ARG0 ii
                              :ARG1 (t / they
                                    :mod (a3 / all)))
                        :op2 (g / gather-01
                              :ARG0 ii
                              :ARG1 t)))
            :mod (a4 / almost))
      :op2 (m / make-02
            :ARG0 u
            :ARG1 (a5 / appreciate-02
                  :ARG0 ii
                  :ARG1 (t2 / thing
                        :ARG1-of (b / bless-01
                              :ARG2 ii))
                  :ARG2-of (h / have-degree-91
                        :ARG1 ii
                        :ARG3 (m2 / more)))))

# ::snt The biggest threat Israel faces is not from conventional armies but from the asymmetrical tactics of Palestinian national liberation movements .
(t / threaten-01
      :ARG0 (t2 / tactic
            :mod (s / symmetric
                  :polarity -)
            :poss (m / movement-07
                  :ARG0 (c / country
                        :name (n / name
                              :op1 "Palestine"))
                  :ARG1 (l / liberate-01
                        :ARG1 (n2 / nation))))
      :ARG2 (c2 / country
            :name (n3 / name
                  :op1 "Israel"))
      :ARG1-of (ii / instead-of-91
            :ARG2 (t3 / threaten-01
                  :ARG0 (a / army
                        :mod (c3 / conventional))
                  :ARG2 c2))
      :ARG1-of (h / have-degree-91
            :ARG2 (b / big)
            :ARG3 (m2 / most)))

# ::snt Despite Sept. 11, the United States still supports the Kashmir groups that back jihad as part of the price Washington is paying to keep Pervez Musharraf happy .
(s / support-01
      :ARG0 (c / country
            :name (n / name
                  :op1 "United"
                  :op2 "States"))
      :ARG1 (g / group
            :mod (w / world-region
                  :name (n2 / name
                        :op1 "Kashmir"))
            :ARG0-of (b / back-01
                  :ARG1 (j / jihad
                        :part-of (p / price-01
                              :ARG1-of (p2 / pay-01
                                    :ARG0 (g2 / government-organization
                                          :name (n3 / name
                                                :op1 "Washington"))
                                    :ARG3 (k / keep-02
                                          :ARG0 g2
                                          :ARG1 (h / happy-01
                                                :ARG1 (p3 / person
                                                      :name (n4 / name
                                                            :op1 "Pervez"
                                                            :op2 "Musharraf")))))))))
      :mod (s2 / still)
      :concession (ii / incident
            :name (n5 / name
                  :op1 "September"
                  :op2 11)))

# ::snt There is no doubt that many Iraqis regard the date of 30 January as a day of renewed hope, one they have been awaiting all their lives, but at the same time, many others are already dreading it .
(d / doubt-01
      :polarity -
      :ARG1 (r / regard-01
            :ARG0 (p / person
                  :mod (c / country
                        :name (n / name
                              :op1 "Iraq"))
                  :quant (m / many))
            :ARG1 (d2 / date-entity
                  :month 1
                  :day 30)
            :ARG2 (d3 / day
                  :time-of (h / hopeful-03
                        :ARG1-of (r2 / renew-01)
                        :ARG1-of (a / await-01
                              :ARG2 p
                              :duration (l / life
                                    :poss p
                                    :mod (a2 / all)))))
            :concession-of (d4 / dread-01
                  :ARG0 (p2 / person
                        :mod (o / other
                              :quant (m2 / many)))
                  :ARG1 d2
                  :time (a3 / already)
                  :time (t / time
                        :ARG1-of (s / same-01)))))

# ::snt He should have taken a cue from another bomber some pesky dark-skinned foreigners want extradited, CIA operative Michael Meiring .
(r / recommend-01
      :ARG1 (t / take-01
            :ARG0 (h / he)
            :ARG1 (c / cue)
            :ARG2 (p / person
                  :name (n / name
                        :op1 "Michael"
                        :op2 "Meiring")
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (g / government-organization
                              :name (n2 / name
                                    :op1 "CIA"))
                        :ARG2 (o / operative))
                  :ARG0-of (b / bomb-01)
                  :mod (a / another)))
      :ARG2 (p2 / person
            :mod (f / foreign)
            :mod (p3 / pesky)
            :ARG1-of (e / extradite-01
                  :ARG1-of (w / want-01
                        :ARG0 (p4 / person
                              :mod (s / some)
                              :ARG1-of (d / dark-02))))))

# ::snt For weeks, reporters scoured Alabama in search of pilots or anyone who might have remembered seeing Mr. Bush at the time he was serving in the National Guard there .
(s / scour-02
      :ARG0 (p / person
            :ARG0-of (r / report-01))
      :ARG1 (s2 / state
            :name (n / name
                  :op1 "Alabama"))
      :purpose (s3 / search-01
            :ARG0 p
            :ARG2 (o / or
                  :op1 (p2 / person
                        :ARG0-of (p3 / pilot-01))
                  :op2 (a / anyone
                        :ARG0-of (r2 / remember-01
                              :ARG1 (s4 / see-01
                                    :ARG0 a
                                    :ARG1 (p4 / person
                                          :name (n2 / name
                                                :op1 "Mr."
                                                :op2 "Bush"))
                                    :time (s5 / serve-01
                                          :ARG0 p4
                                          :ARG1 (m / military
                                                :name (n3 / name
                                                      :op1 "National"
                                                      :op2 "Guard"))
                                          :location s2))
                              :ARG1-of (p5 / possible-01)))))
      :duration (m2 / multiple
            :op1 (t / temporal-quantity
                  :quant 1
                  :unit (w / week))))

# ::snt In fact, he left the house he rented in such disrepair--with damage to the walls and a chandelier destroyed--that the Montgomery family who owned it still grumble about the unpaid repair bill .
(l / leave-15
      :ARG0 (h / he)
      :ARG1 (h2 / house
            :ARG1-of (r / rent-01
                  :ARG0 h)
            :ARG0-of (h3 / have-03
                  :ARG1 (a / and
                        :op1 (d / damage-01
                              :ARG1 (w / wall))
                        :op2 (d2 / destroy-01
                              :ARG1 (c / chandelier)))
                  :ARG0-of (c2 / cause-01
                        :ARG1 (g / grumble-01
                              :ARG0 (f / family
                                    :name (n / name
                                          :op1 "Montgomery")
                                    :ARG0-of (o / own-01
                                          :ARG1 h2))
                              :ARG1 (b / bill-01
                                    :ARG3 (r2 / repair-01)
                                    :ARG1-of (p / pay-01
                                          :polarity -))
                              :mod (s / still)))))
      :mod (ii / in-fact))

# ::snt Archibald says Mr. Bush would come into the office and, in a friendly way, offer up stories about the drinking he'd done the night before, kind of as a conversation starter .
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 "Archibald"))
      :ARG1 (a / and
            :op1 (c / come-01
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 "Mr."
                              :op2 "Bush"))
                  :ARG4 (o / office))
            :op2 (o2 / offer-up-03
                  :ARG0 p2
                  :ARG1 (s2 / story
                        :topic (d / drink-01
                              :ARG0 p2
                              :time (b / before
                                    :op1 (n3 / now)
                                    :dayperiod (n4 / night))))
                  :manner (f / friendly-01)
                  :purpose (s3 / start-01
                        :ARG0 p2
                        :ARG1 (c2 / converse-01)
                        :mod (k / kind)))))

# ::snt But that means nothing, since they weren't the sort of things guys like Bush told the "girls" .
(c / contrast-01
      :ARG2 (m / mean-01
            :ARG1 (t / that)
            :ARG2 (n / nothing)
            :ARG1-of (c2 / cause-01
                  :ARG0 (t2 / thing
                        :polarity -
                        :mod (s / sort)
                        :ARG1-of (t3 / tell-01
                              :ARG0 (g / guy
                                    :ARG1-of (r / resemble-01
                                          :ARG2 (p / person
                                                :name (n2 / name
                                                      :op1 "Bush"))))
                              :ARG2 (g2 / girl))
                        :domain (t4 / they)))))

# ::snt Some 200,000 guns the US sent to Iraqi security forces may have been smuggled to terrorists, it was feared yesterday .
(f / fear-01
      :ARG1 (p / possible-01
            :ARG1 (s / smuggle-01
                  :ARG1 (g / gun
                        :quant (s2 / some
                              :op1 200000)
                        :ARG1-of (s3 / send-01
                              :ARG0 (c / country
                                    :name (n / name
                                          :op1 "US"))
                              :ARG2 (f2 / force
                                    :mod (s4 / security)
                                    :mod (c2 / country
                                          :name (n2 / name
                                                :op1 "Iraq")))))
                  :ARG3 (t / terrorist)))
      :time (y / yesterday))

# ::snt It's always a bang-your-head-against-the-wall moment, reading again the play the incompetence theory receives, even from some of the Administration's harshest mainstream critics .
(m / moment
      :domain (r / read-01
            :ARG1 (p / play-11
                  :ARG1-of (r2 / receive-01
                        :ARG0 (t / theory
                              :topic (c / competent-01
                                    :polarity -))
                        :ARG2 (p2 / person
                              :ARG1-of (ii / include-91
                                    :ARG2 (p3 / person
                                          :ARG0-of (c2 / criticize-01
                                                :ARG1 (g / government-organization
                                                      :ARG0-of (a / administrate-01)))
                                          :ARG1-of (m2 / mainstream-02)
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (h2 / harsh-02
                                                      :ARG1 c2)
                                                :ARG3 (m3 / most))))
                              :mod (e / even))))
            :mod (a2 / again))
      :time (a3 / always)
      :mod (b / bang-02
            :ARG1 (h3 / head
                  :part-of (y / you))
            :ARG2 (a4 / against
                  :op1 (w / wall))))

# ::snt An editorial in the church-owned Deseret Morning News in Salt Lake City earlier this year acknowledged that "the state's history, a conservative belief in free choice, and an unwillingness to stir up a hornet's nest in the national media have likely all contributed to the kid-glove approach lawmakers and law-enforcement officers have taken when dealing with polygamous communities. "
(a / acknowledge-01
      :ARG0 (e / editorial
            :location (n / newspaper
                  :name (n2 / name
                        :op1 "Deseret"
                        :op2 "Morning"
                        :op3 "News")
                  :ARG1-of (o / own-01
                        :ARG0 (c / church))
                  :location (c2 / city
                        :name (n3 / name
                              :op1 "Salt"
                              :op2 "Lake"
                              :op3 "City"))))
      :ARG1 (c3 / contribute-01
            :ARG0 (a2 / and
                  :op1 (h / history
                        :poss (s / state))
                  :op2 (b / believe-01
                        :ARG0 (c4 / conservative)
                        :ARG1 (c5 / choose-01
                              :ARG3-of (f / free-04)))
                  :op3 (w / will-02
                        :polarity -
                        :ARG1 (s2 / stir-up-04
                              :ARG1 (n4 / nest
                                    :consist-of (h2 / hornet))
                              :medium (m / media
                                    :mod (n5 / nation))))
                  :mod (a3 / all))
            :ARG2 (a4 / approach-02
                  :ARG0 (a5 / and
                        :op1 (p / person
                              :ARG0-of (l / legislate-01))
                        :op2 (p2 / person
                              :ARG0-of (h3 / have-org-role-91
                                    :ARG2 (o2 / officer
                                          :ARG0-of (e2 / enforce-01
                                                :ARG1 (l2 / law))))))
                  :time (d / deal-01
                        :ARG0 a5
                        :ARG2 (c6 / community
                              :mod (p3 / polygamy)))
                  :manner (g / glove
                        :part-of (k / kid)))
            :ARG1-of (l3 / likely-01))
      :time (b2 / before)
      :time (y / year
            :mod (t / this)))

# ::snt A country deserves the leaders it has, my friends.. .
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (d / deserve-01
            :ARG0 (c / country)
            :ARG1 (p / person
                  :ARG0-of (l / lead-02)
                  :ARG1-of (h / have-03
                        :ARG0 c)))
      :ARG2 p
      :ARG0-of (h2 / have-rel-role-91
            :ARG1 ii
            :ARG2 (f / friend)))

# ::snt Most of the girls I was meeting had grown up in Mujahedeen schools in Ashraf, where they lived separated from their parents .
(g / grow-up-04
      :ARG1 (g2 / girl
            :ARG1-of (ii / include-91
                  :ARG2 (g3 / girl
                        :ARG1-of (m / meet-02
                              :ARG0 (ii2 / i)))
                  :ARG3 (m2 / most)))
      :location (s / school
            :mod (o / organization
                  :name (n / name
                        :op1 "Mujahedeen"))
            :location (c / city
                  :name (n2 / name
                        :op1 "Ashraf"))
            :location-of (l / live-01
                  :ARG0 g2
                  :manner (s2 / separate-01
                        :ARG1 g2
                        :ARG2 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 g2
                                    :ARG2 (p2 / parent)))))))

# ::snt That's all I know; I've had nothing to do with it .
(a / and
      :op1 (a2 / all
            :ARG1-of (k / know-01
                  :ARG0 (ii / i))
            :consist-of (t / that))
      :op2 (h / have-to-do-with-04
            :ARG0 ii
            :ARG1 (ii2 / it)
            :ARG2 (n / nothing)))

# ::snt Everything they claim is a lie, and this above all .
(a / and
      :op1 (l / lie-08
            :ARG1 (e / everything
                  :ARG1-of (c / claim-01
                        :ARG0 (t / they))))
      :op2 (t2 / this
            :mod (a2 / above
                  :op1 (a3 / all))))

# ::snt I was amazed at the spiel they delivered .
(a / amaze-01
      :ARG0 (s / spiel
            :ARG1-of (d / deliver-01
                  :ARG0 (t / they)))
      :ARG1 (ii / i))

# ::snt The fact that the US government and media are having a hissy fit over Venezuela wanting to buy guns, and then 200,000 of the guns Chavez wants to buy go missing on their way to Iraq is definitely sus .
(s / suspicious-03
      :ARG1 (a / and
            :op1 (f / fit-03
                  :ARG1 (a2 / and
                        :op1 (g / government-organization
                              :ARG0-of (g2 / govern-01
                                    :ARG1 (c / country
                                          :name (n / name
                                                :op1 "US"))))
                        :op2 (m / media
                              :mod c))
                  :ARG2 (w / want-01
                        :ARG0 (c2 / country
                              :name (n2 / name
                                    :op1 "Venezuela"))
                        :ARG1 (b / buy-01
                              :ARG0 c2
                              :ARG1 (g3 / gun)))
                  :mod (h / hissy))
            :op2 (m2 / miss-01
                  :ARG1 (g4 / gun
                        :quant 200000
                        :ARG1-of (b2 / buy-01
                              :ARG0 (p / person
                                    :name (n3 / name
                                          :op1 "Chavez"))
                              :ARG1-of (w2 / want-01
                                    :ARG0 p)))
                  :time (g5 / go-02
                        :ARG0 a2
                        :ARG4 (c3 / country
                              :name (n4 / name
                                    :op1 "Iraq")))))
      :mod (d / definite))

# ::snt The picture I described here is not pretty .
(p / pretty
      :polarity -
      :domain (p2 / picture
            :ARG1-of (d / describe-01
                  :ARG0 (ii / i)
                  :location (h / here))))

# ::snt According to Director of Central Intelligence George Tenet, al Qaeda’s ability to conduct an anthrax attack is one of the most immediate threats the United States is likely to face. "
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 "George"
                  :op2 "Tenet")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (g / government-organization
                        :name (n2 / name
                              :op1 "Central"
                              :op2 "Intelligence"))
                  :ARG2 (d / director)))
      :ARG1 (l / likely-01
            :ARG1 (ii / include-91
                  :ARG1 (c / capable-01
                        :ARG1 (c2 / criminal-organization
                              :name (n3 / name
                                    :op1 "al"
                                    :op2 "Qaeda"))
                        :ARG2 (a / attack-01
                              :ARG0 c2
                              :instrument (a2 / anthrax)))
                  :ARG2 (t / threaten-01
                        :ARG2 (c3 / country
                              :name (n4 / name
                                    :op1 "United"
                                    :op2 "States"))
                        :ARG1-of (f / face-01
                              :ARG0 c3)
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (ii2 / immediate)
                              :ARG3 (m / most))))))

# ::snt "The Prophet's guidance," says Michael Scheuer, an al-Qaeda analyst who recently retired from the CIA and once headed its Bin Laden unit, "was always, Before you attack someone, warn them very clearly..." The anthrax mailings followed the pattern of letters they sent in January 1997 to newspaper branches in Washington, D.C. and New York City, as well as symbolic targets .
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 "Michael"
                        :op2 "Scheuer")
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / criminal-organization
                              :name (n2 / name
                                    :op1 "al-Qaeda"))
                        :ARG2 (p2 / person
                              :ARG0-of (a / analyze-01)))
                  :ARG0-of (r / retire-01
                        :ARG1 (g / government-organization
                              :name (n3 / name
                                    :op1 "CIA"))
                        :time (r2 / recent))
                  :ARG0-of (h2 / head-01
                        :ARG1 (u / unit
                              :poss c
                              :mod (p3 / person
                                    :name (n4 / name
                                          :op1 "Bin"
                                          :op2 "Laden")))
                        :time (o / once)))
            :ARG1 (g2 / guide-01
                  :ARG0 (p4 / person
                        :name (n5 / name
                              :op1 "Prophet"))
                  :ARG1 p
                  :ARG2 (w / warn-01
                        :ARG0 p
                        :ARG2 (s2 / someone)
                        :time (b / before
                              :op1 (a2 / attack-01
                                    :ARG0 p
                                    :ARG1 s2))
                        :ARG1-of (c2 / clear-06
                              :degree (v / very)))
                  :time (a3 / always)))
      :snt2 (f / follow-01
            :ARG1 (m2 / mail-01
                  :mod (a4 / anthrax))
            :ARG2 (p5 / pattern-01
                  :ARG1 (l / letter
                        :ARG1-of (s3 / send-01
                              :ARG0 (t / they)
                              :ARG2 (a5 / and
                                    :op1 (b2 / branch
                                          :part-of (n6 / newspaper)
                                          :location (c3 / city
                                                :name (n7 / name
                                                      :op1 "Washington"
                                                      :op2 "D.C.")))
                                    :op2 (c4 / city
                                          :name (n8 / name
                                                :op1 "New"
                                                :op2 "York"
                                                :op3 "City"))
                                    :op3 (t2 / target
                                          :ARG1-of (s4 / symbolize-01)))
                              :time (d / date-entity
                                    :month 1
                                    :year 1997))))))

# ::snt Wherever he is, authorities need to focus on the traceable connection between him and those he or Atef recruited .
(n / need-01
      :ARG0 (a / authority)
      :ARG1 (f / focus-01
            :ARG0 a
            :ARG1 (c / connect-01
                  :ARG1 (h / he)
                  :ARG2 (p / person
                        :ARG1-of (r / recruit-01
                              :ARG0 h
                              :ARG2 (o / or
                                    :op1 h
                                    :op2 (p2 / person
                                          :name (n2 / name
                                                :op1 "Atef")))))
                  :ARG1-of (t / trace-02
                        :ARG1-of (p3 / possible-01))))
      :location (t2 / thing
            :location-of h))

# ::snt In October 2001, did the FBI profilers know of the draft message Khalid Mohammed had on the seized laptop (from 1995) that was signed "Khalid Sheik Bojinka" ?
(k / know-01
      :ARG0 (p / person
            :ARG0-of (p2 / profile-01)
            :ARG0-of (h / have-org-role-91
                  :ARG1 (g / government-organization
                        :name (n / name
                              :op1 "FBI"))))
      :ARG1 (m / message-01
            :ARG1-of (d / draft-01)
            :ARG1-of (s / sign-01
                  :ARG2 (p3 / person
                        :name (n2 / name
                              :op1 "Khalid"
                              :op2 "Sheik"
                              :op3 "Bojinka")))
            :ARG1-of (h2 / have-03
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 "Khalid"
                              :op2 "Mohammed")))
            :location (l / laptop
                  :ARG1-of (s2 / seize-01)
                  :time (d2 / date-entity
                        :year 1995)))
      :polarity (a / amr-unknown)
      :time (d3 / date-entity
            :month 10
            :year 2001))

# ::snt Even Zawahiri's attorney in 1999 said that Bin Laden and Zawahiri were likely to resort to the biological and chemical agents they possessed given the extradition pressure senior Al Qaeda leaders faced .
(s / say-01
      :ARG0 (a / attorney
            :poss (p / person
                  :name (n / name
                        :op1 "Zawahiri")))
      :ARG1 (l / likely-01
            :ARG1 (r / resort-01
                  :ARG0 (a2 / and
                        :op1 (p2 / person
                              :name (n2 / name
                                    :op1 "Bin"
                                    :op2 "Laden"))
                        :op2 p)
                  :ARG1 (a3 / and
                        :op1 (a4 / agent
                              :mod (b / biology))
                        :op2 (a5 / agent
                              :mod (c / chemical))
                        :ARG1-of (p3 / possess-01
                              :ARG0 a2)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p4 / pressure-01
                        :ARG1 (p5 / person
                              :ARG0-of (l2 / lead-02
                                    :ARG1 (c3 / criminal-organization
                                          :name (n3 / name
                                                :op1 "Al"
                                                :op2 "Qaeda")))
                              :mod (s2 / senior))
                        :mod (e / extradite-01)
                        :ARG1-of (f / face-01
                              :ARG0 a2))))
      :time (d / date-entity
            :year 1999)
      :mod (e2 / even))

# ::snt It is reasonable to credit his statement that he got the lesion after bumping into a suitcase he was carrying at a camp in Afghanistan .
(r / reasonable-02
      :ARG1 (c / credit-01
            :ARG1 (h / he)
            :ARG2 (s / state-01
                  :ARG0 h
                  :ARG1 (g / get-01
                        :ARG0 h
                        :ARG1 (l / lesion)
                        :time (a / after
                              :op1 (b / bump-02
                                    :ARG0 h
                                    :ARG1 (s2 / suitcase
                                          :ARG1-of (c2 / carry-01
                                                :ARG0 h))
                                    :location (c3 / camp
                                          :location (c4 / country
                                                :name (n / name
                                                      :op1 "Afghanistan")))))))))

# ::snt According to a post she made on the internet, Aafia Siddiqui expressed the same sentiment in connection with US appropriations sought in exchange for the extradition of WTC 1993 plotter Ramzi Yousef from Pakistan .
(s / say-01
      :ARG0 (p / post-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 "Aafia"
                        :op2 "Siddiqui"))
            :medium (ii / internet))
      :ARG1 (e / express-01
            :ARG0 p2
            :ARG1 (s2 / sentiment
                  :ARG1-of (s3 / same-01))
            :ARG1-of (c / connect-01
                  :ARG2 (t / thing
                        :ARG1-of (a / appropriate-01
                              :ARG0 (c2 / country
                                    :name (n2 / name
                                          :op1 "US")))
                        :ARG1-of (s4 / seek-01)
                        :ARG1-of (e2 / exchange-01
                              :ARG3 (e3 / extradite-01
                                    :ARG1 (p3 / person
                                          :name (n3 / name
                                                :op1 "Ramzi"
                                                :op2 "Yousef")
                                          :ARG0-of (p4 / plot-01
                                                :ARG1 (ii2 / incident
                                                      :name (n4 / name
                                                            :op1 "World"
                                                            :op2 "Trade"
                                                            :op3 "Center")
                                                      :time (d / date-entity
                                                            :year 1993))))
                                    :ARG2 (c3 / country
                                          :name (n5 / name
                                                :op1 "Pakistan"))))))))

# ::snt We save $21,000 in real money this way, the cash refund Sun is giving Enron for our other server, using a box that wasn't being used by anyone .
(s / save-01
      :ARG0 (w / we)
      :ARG1 (m / monetary-quantity
            :quant 21000
            :unit (d / dollar)
            :ARG1-of (r / real-04))
      :ARG3 (r2 / refund-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 "Sun"))
            :ARG1 (c2 / cash)
            :ARG2 (c3 / company
                  :name (n2 / name
                        :op1 "Enron"))
            :purpose (s2 / server
                  :poss w
                  :mod (o / other)))
      :manner (u / use-01
            :ARG0 w
            :ARG1 (b / box
                  :ARG1-of (u2 / use-01
                        :polarity -
                        :ARG0 (a / anyone))))
      :manner (w2 / way
            :mod (t / this)))

# ::snt I would like that ability in order to hedge some exposure I have of unexercised vested options .
(l / like-02
      :ARG0 (ii / i)
      :ARG1 (p / possible-01
            :mod (t / that))
      :purpose (h / hedge-01
            :ARG0 ii
            :ARG1 (e / expose-01
                  :ARG1 ii
                  :ARG2 (o / option
                        :ARG1-of (v / vest-01)
                        :ARG1-of (e2 / exercise-01
                              :polarity -))
                  :quant (s / some))))

# ::snt I was looking at the recent pullback in ENE and thinking it might be an opportunity to buy back the calls you sold .
(a / and
      :op1 (l / look-01
            :ARG0 (ii / i)
            :ARG1 (p / pull-back-06
                  :ARG1 (c / company
                        :name (n / name
                              :op1 "ENE"))
                  :time (r / recent)))
      :op2 (t / think-01
            :ARG0 ii
            :ARG1 (p2 / possible-01
                  :ARG1 (o / opportunity
                        :purpose (b / buy-back-04
                              :ARG0 ii
                              :ARG1 (c2 / call-02
                                    :ARG1-of (s / sell-01
                                          :ARG0 (y / you))))))))

# ::snt Also I am still thinking about the Matisse we discussed before but as you can see, I have a lot of other artists I am interested in and it may remain on the back burner because we already have one .
(c / contrast-01
      :ARG1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (w / work-of-art
                  :name (n / name
                        :op1 "Matisse")
                  :ARG1-of (d / discuss-01
                        :ARG0 (w2 / we)
                        :time (b / before)))
            :mod (s / still)
            :mod (a / also))
      :ARG2 (a2 / and
            :op1 (h / have-03
                  :ARG0 ii
                  :ARG1 (a3 / artist
                        :quant (l / lot)
                        :mod (o / other)
                        :ARG1-of (ii2 / interest-01
                              :ARG2 ii)))
            :op2 (p / possible-01
                  :ARG1 (r / remain-01
                        :ARG1 w
                        :location (t2 / thing
                              :ARG0-of (b2 / burn-01)
                              :mod (b3 / back))
                        :ARG1-of (c2 / cause-01
                              :ARG0 (h2 / have-03
                                    :ARG0 w2
                                    :ARG1 t2
                                    :time (a4 / already)))))
            :ARG1-of (s2 / see-01
                  :ARG0 (y / you)
                  :ARG1-of p)))

# ::snt The only difference we had was for package V02 .
(d / differ-02
      :ARG1 (p / package
            :name (n / name
                  :op1 "V02"))
      :ARG3 (w / we)
      :mod (o / only))

# ::snt The only difference we had was for package V02 .
(d / differ-02
      :ARG1 (p / package
            :name (n / name
                  :op1 "V02"))
      :ARG3 (w / we)
      :mod (o / only))

# ::snt The only difference we had was for package V02 .
(d / differ-02
      :ARG1 (p / package
            :name (n / name
                  :op1 "V02"))
      :ARG3 (w / we)
      :mod (o / only))

# ::snt This document has been modified with the changes that were in the mark-up you faxed to Toni Donohue here a few hours ago .
(m / modify-01
      :ARG1 (d / document
            :mod (t / this))
      :manner (c / change-01
            :location (m2 / mark-up-03
                  :ARG1-of (f / fax-01
                        :ARG0 (y / you)
                        :ARG2 (p / person
                              :name (n / name
                                    :op1 "Toni"
                                    :op2 "Donohue"))
                        :location (h / here)
                        :time (b / before
                              :op1 (n2 / now)
                              :quant (f2 / few
                                    :op1 (t2 / temporal-quantity
                                          :quant 1
                                          :unit (h2 / hour))))))))

# ::snt Is this related to the problems he is having getting around (circulatory?) ?
(r / relate-01
      :polarity (a / amr-unknown)
      :ARG1 (t / this)
      :ARG2 (p / problem
            :ARG1-of (h / have-06
                  :ARG0 (h2 / he))
            :topic (g / get-05
                  :ARG1 h2
                  :direction (a2 / around))
            :ARG1-of (m / mean-01
                  :ARG2 (c / circulatory))))

# ::snt Please use this new file as opposed to the one I sent earlier .
(u / use-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (f / file
            :mod (t / this)
            :ARG1-of (n / new-01)
            :ARG1-of (ii / instead-of-91
                  :ARG2 (f2 / file
                        :ARG1-of (s / send-01
                              :ARG0 (ii2 / i)
                              :time (b / before))))))

# ::snt Meanwhile, Arthur Levitt has agreed to meet with us in September to brainstorm on the ideas we've generated and also to give us a sense of some of the issues as he sees them .
(a / agree-01
      :ARG0 (p / person
            :name (n / name
                  :op1 "Arthur"
                  :op2 "Levitt"))
      :ARG1 (m / meet-03
            :ARG0 p
            :ARG1 (w / we)
            :time (d / date-entity
                  :month 9)
            :purpose (a2 / and
                  :op1 (b / brainstorm-00
                        :ARG0 p
                        :ARG1 (ii / idea
                              :ARG1-of (g / generate-01
                                    :ARG0 w)))
                  :op2 (g2 / give-01
                        :ARG0 p
                        :ARG1 (s / sense-01
                              :ARG0 w
                              :ARG1 (s2 / some
                                    :ARG1-of (ii2 / include-91
                                          :ARG2 (ii3 / issue-02)))
                              :manner (s3 / see-01
                                    :ARG0 p
                                    :ARG1 s2))
                        :ARG2 w
                        :mod (a3 / also))))
      :time (m2 / meanwhile))

# ::snt I know that we address audit rights in the LLC agreement so this may not matter anyway if this is a right they already have .
(k / know-01
      :ARG0 (ii / i)
      :ARG1 (a / address-02
            :ARG0 (w / we)
            :ARG1 (r / right-05
                  :ARG2 (a2 / audit-01))
            :location (a3 / agree-01
                  :ARG0 w
                  :ARG1 (c / company
                        :name (n / name
                              :op1 "LLC"))))
      :ARG0-of (c2 / cause-01
            :ARG1 (p / possible-01
                  :ARG1 (m / matter-01
                        :polarity -
                        :ARG1 (t / this)
                        :mod (a4 / anyway)
                        :condition (r2 / right-05
                              :ARG1 c
                              :ARG2 a2
                              :time (a5 / already))))))

# ::snt I know that we address audit rights in the LLC agreement so this may not matter anyway if this is a right they already have .
(k / know-01
      :ARG0 (ii / i)
      :ARG1 (a / address-02
            :ARG0 (w / we)
            :ARG1 (r / right-05
                  :ARG2 (a2 / audit-01))
            :location (a3 / agree-01
                  :ARG0 w
                  :ARG1 (c / company
                        :name (n / name
                              :op1 "LLC"))))
      :ARG0-of (c2 / cause-01
            :ARG1 (p / possible-01
                  :ARG1 (m / matter-01
                        :polarity -
                        :ARG1 (t / this)
                        :mod (a4 / anyway)
                        :condition (r2 / right-05
                              :ARG1 c
                              :ARG2 a2
                              :time (a5 / already))))))

# ::snt I know that we address audit rights in the LLC agreement so this may not matter anyway if this is a right they already have .
(k / know-01
      :ARG0 (ii / i)
      :ARG1 (a / address-02
            :ARG0 (w / we)
            :ARG1 (r / right-05
                  :ARG2 (a2 / audit-01))
            :location (a3 / agree-01
                  :ARG0 w
                  :ARG1 (c / company
                        :name (n / name
                              :op1 "LLC"))))
      :ARG0-of (c2 / cause-01
            :ARG1 (p / possible-01
                  :ARG1 (m / matter-01
                        :polarity -
                        :ARG1 (t / this)
                        :mod (a4 / anyway)
                        :condition (r2 / right-05
                              :ARG1 c
                              :ARG2 a2
                              :time (a5 / already))))))

# ::snt Chris and Ben did a marvelous job for Thanksgiving, I can testify that it was one of the best Thanksgiv8ing Dinners I've ever had (I not gonna tell them that, I don't want them getting swell heads) .
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 "Chris"))
                  :op2 (p2 / person
                        :name (n2 / name
                              :op1 "Ben")))
            :ARG1 (j / job
                  :mod (m2 / marvelous))
            :ARG2 (f / festival
                  :name (n3 / name
                        :op1 "Thanksgiving")))
      :snt2 (p3 / possible-01
            :ARG1 (t / testify-01
                  :ARG0 (ii / i)
                  :ARG1 (h / have-degree-91
                        :ARG1 (ii2 / it)
                        :ARG2 (g / good-02
                              :ARG1 ii2)
                        :ARG3 (m3 / most)
                        :ARG5 (d2 / dinner
                              :time f
                              :ARG1-of (h2 / have-06
                                    :ARG0 ii
                                    :time (e / ever)))))
            :concession (t2 / tell-01
                  :polarity -
                  :ARG0 ii
                  :ARG1 h
                  :ARG2 (t3 / they)
                  :ARG1-of (c / cause-01
                        :ARG0 (w / want-01
                              :polarity -
                              :ARG0 ii
                              :ARG1 (g2 / get-02
                                    :ARG0 t3
                                    :ARG1 (h3 / head
                                          :mod (s / swell))))))))

# ::snt Maybe you should ignore the sentiment of the quote I sent earlier.. .
(p / possible-01
      :ARG1 (r / recommend-01
            :ARG1 (ii / ignore-01
                  :ARG0 (y / you)
                  :ARG1 (s / sentiment
                        :source (q / quote-01
                              :ARG1-of (s2 / send-01
                                    :ARG0 (ii2 / i)
                                    :time (b / before)))))
            :ARG2 y))

# ::snt The least we can do is pass this news along .
(t / thing
      :ARG1-of (d / do-02
            :ARG0 (w / we)
            :ARG1-of (p / possible-01))
      :mod (l / least)
      :domain (p2 / pass-on-09
            :ARG0 w
            :ARG1 (n / news
                  :mod (t2 / this))))

# ::snt Is there anyone else we should tell ?
(a / anyone
      :polarity (a2 / amr-unknown)
      :mod (e / else)
      :ARG1-of (t / tell-01
            :ARG0 (w / we)
            :ARG1-of (r / recommend-01)))

# ::snt Days away: Sept. 21 through Oct. 3 (assuming you work on the day we leave and go back to work the day after we return )
(m / multi-sentence
      :snt1 (a / away
            :domain (d / date-interval
                  :op1 (d2 / date-entity
                        :month 9
                        :day 21)
                  :op2 (d3 / date-entity
                        :month 10
                        :day 3)))
      :snt2 (a2 / assume-02
            :ARG1 (a3 / and
                  :op1 (w / work-01
                        :ARG0 (y / you)
                        :time (d4 / day
                              :time-of (l / leave-11
                                    :ARG0 (w2 / we))))
                  :op2 (g / go-back-19
                        :ARG1 y
                        :ARG2 (w3 / work-01
                              :ARG0 y)
                        :time (a4 / after
                              :op1 (r / return-01
                                    :ARG1 w2)
                              :quant (t / temporal-quantity
                                    :quant 1
                                    :unit (d5 / day)))))))

# ::snt I believe the message you forwarded to me belongs to the Mark Taylor at EI (based in London) .
(b / believe-01
      :ARG0 (ii / i)
      :ARG1 (b2 / belong-01
            :ARG0 (t / thing
                  :ARG1-of (m / message-01)
                  :ARG1-of (f / forward-01
                        :ARG0 (y / you)
                        :ARG2 ii))
            :ARG1 (p / person
                  :name (n / name
                        :op1 "Mark"
                        :op2 "Taylor")
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (o / organization
                              :name (n2 / name
                                    :op1 "EI")
                              :ARG1-of (b3 / base-01
                                    :location (c / city
                                          :name (n3 / name
                                                :op1 "London"))))))))

# ::snt I looked at the UEComm Master and had some comments--such as our name is wrong, the cross default threshold for us should be US $ and not AUD, and there were a few other questions I had .
(a / and
      :op1 (l / look-01
            :ARG0 (ii / i)
            :ARG1 (m / master
                  :mod (c / company
                        :name (n / name
                              :op1 "UEComm"))))
      :op2 (c2 / comment-01
            :ARG0 ii
            :ARG1 (a2 / and
                  :op1 (w / wrong-04
                        :ARG1 (n2 / name
                              :poss (w2 / we)))
                  :op2 (r / recommend-01
                        :ARG1 (a3 / and
                              :op1 (d / dollar
                                    :mod (c3 / country
                                          :name (n3 / name
                                                :op1 "US")))
                              :op2 (d2 / dollar
                                    :polarity -
                                    :mod (c4 / country
                                          :name (n4 / name
                                                :op1 "Australia")))
                              :domain (t / threshold
                                    :mod (d3 / default)
                                    :ARG0-of (c5 / cross-02)
                                    :poss w2)))
                  :op3 (q / question-01
                        :ARG0 ii
                        :mod (o / other)
                        :quant (f / few)))))

# ::snt Attached are the fax cover pages for each of the Nylon and Polykron Deemed ISDAs I just sent you .
(p / page
      :ARG2-of (c / cover-01)
      :mod (f / fax-01)
      :ARG1-of (ii / include-91
            :ARG2 (a / and
                  :op1 (p2 / product
                        :name (n / name
                              :op1 "Nylon")
                        :ARG1-of (d / deem-01
                              :ARG0 (c2 / company
                                    :name (n2 / name
                                          :op1 "Polykron"))))
                  :op2 (p3 / product
                        :name (n3 / name
                              :op1 "ISDAs")
                        :ARG1-of (d2 / deem-01
                              :ARG0 (c3 / company
                                    :name (n4 / name
                                          :op1 "Polykron"))))))
      :ARG1-of (a2 / attach-01)
      :ARG1-of (s / send-01
            :ARG0 (ii2 / i)
            :ARG2 (y / you)
            :mod (j / just)))

# ::snt I propose we have a conference call with Bob Fagan on Fri July 20 at 1:00 pm Calgary time to discuss any areas of concern/confusion you may have .
(p / propose-01
      :ARG0 (ii / i)
      :ARG1 (c / call-02
            :ARG0 (w / we)
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 "Bob"
                        :op2 "Fagan"))
            :mod (c2 / conference)
            :time (d / date-entity
                  :day 20
                  :month 7
                  :time "14:00"
                  :timezone (c3 / city
                        :name (n2 / name
                              :op1 "Calgary"))
                  :weekday (f / friday))
            :purpose (d2 / discuss-01
                  :ARG0 w
                  :ARG1 (a / area
                        :ARG0-of (c4 / concern-01)
                        :ARG1-of (c5 / confuse-01)
                        :mod (a2 / any)
                        :ARG1-of (h / have-03
                              :ARG0 (y / you)
                              :ARG1-of (p3 / possible-01)))
                  :ARG2 p2)))

# ::snt Attached is the letter I originally sent to you on May 10 in this regard .
(l / letter
      :ARG1-of (s / send-01
            :ARG0 (ii / i)
            :ARG2 (y / you)
            :mod (o / original)
            :time (d / date-entity
                  :day 10
                  :month 5))
      :topic (t / this)
      :ARG1-of (a / attach-01))

# ::snt This draft reflects the changes we discussed during our call the other day .
(r / reflect-01
      :ARG1 (t / thing
            :ARG1-of (d / draft-01)
            :mod (t2 / this))
      :ARG2 (c / change-01
            :ARG1-of (d2 / discuss-01
                  :ARG0 (w / we)
                  :time (c2 / call-02
                        :ARG0 w
                        :time (d3 / day
                              :mod (o / other))))))

# ::snt I'm glad they want to follow-up with Steve (I've been pushing it) and I've got some follow-up as well based on chats I had in the afternoon on Friday with folks post-call .
(a / and
      :op1 (g / glad-02
            :ARG0 (w / want-01
                  :ARG0 (t / they)
                  :ARG1 (f / follow-up-03
                        :ARG0 t
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 "Steve")))
                  :ARG1-of (p2 / push-02
                        :ARG0 (ii / i)))
            :ARG1 ii)
      :op2 (h / have-03
            :ARG0 ii
            :ARG1 (f2 / follow-up-03
                  :quant (s / some)
                  :ARG1-of (b / base-02
                        :ARG2 (c / chat-01
                              :ARG0 ii
                              :ARG2 (f3 / folk)
                              :time (a2 / after
                                    :op1 (c2 / call-02))
                              :time (d / date-entity
                                    :weekday (f4 / friday)
                                    :dayperiod (a3 / afternoon)))))
            :mod (a4 / as-well)))

# ::snt We'll need to update the numbers for the offer we made to S.D. last week .
(n / need-01
      :ARG0 (w / we)
      :ARG1 (u / update-01
            :ARG0 w
            :ARG1 (n2 / number
                  :poss (o / offer-01
                        :ARG0 w
                        :ARG3 (p / person
                              :name (n3 / name
                                    :op1 "S.D."))
                        :time (w2 / week
                              :mod (l / last))))))

# ::snt Let us know and we can add it, and make any other changes you'd like to make at this end .
(a / and
      :op1 (l / let-know-07
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (w / we))
      :op2 (p / possible-01
            :ARG1 (a2 / and
                  :op1 (a3 / add-01
                        :ARG0 w
                        :ARG1 (ii / it))
                  :op2 (c / change-01
                        :ARG0 y
                        :ARG1 (t / thing
                              :mod (a4 / any)
                              :mod (o / other))
                        :ARG1-of (l2 / like-02
                              :ARG0 y)
                        :time (e / end
                              :mod (t2 / this))))))

# ::snt If you think of anything else I can do to strengthen my overall application file for next year, please let me know .
(l / let-know-07
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :ARG2 (a / anything
            :mod (e / else)
            :ARG1-of (d / do-02
                  :ARG0 ii
                  :ARG2 (s / strengthen-01
                        :ARG0 ii
                        :ARG1 (f / file
                              :mod (a2 / application)
                              :mod (o / overall)
                              :poss ii
                              :time (y2 / year
                                    :mod (n / next)))
                        :ARG1-of (p / possible-01))))
      :condition (t / think-01
            :ARG0 y
            :ARG1 a))

# ::snt Also, if you can think of anything else I can do to strengthen my overall application file for next year, please let me know .
(l / let-know-07
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :ARG2 (p / possible-01
            :ARG1 (t / think-01
                  :ARG0 y
                  :ARG1 (a / anything
                        :mod (e / else)
                        :ARG1-of (d / do-02
                              :ARG0 ii
                              :ARG2 (s / strengthen-01
                                    :ARG0 ii
                                    :ARG1 (f / file
                                          :mod (a2 / application)
                                          :mod (o / overall)
                                          :poss ii
                                          :time (y2 / year
                                                :mod (n / next)))
                                    :ARG1-of (p2 / possible-01))))))
      :mod (a3 / also))

# ::snt Also, if you think of anything else I can do to strengthen my overall application file for next year, please let me know .
(l / let-know-07
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :ARG2 (a / anything
            :mod (e / else)
            :ARG1-of (d / do-02
                  :ARG0 ii
                  :ARG2 (s / strengthen-01
                        :ARG0 ii
                        :ARG1 (f / file
                              :mod (a2 / application)
                              :mod (o / overall)
                              :poss ii
                              :time (y2 / year
                                    :mod (n / next)))
                        :ARG1-of (p / possible-01))))
      :mod (a3 / also)
      :condition (t / think-01
            :ARG0 y
            :ARG1 a))

# ::snt After discussions with the commercial group I propose that that redlined language be added to the attached Dynegy agreement and to the 4 other negotiated rate agreements we've done .
(p / propose-01
      :ARG0 (ii / i)
      :ARG1 (a / add-02
            :ARG1 (l / language
                  :ARG1-of (r / redline-01)
                  :mod (t / that))
            :ARG2 (a2 / and
                  :op1 (a3 / agree-01
                        :ARG0 (c / company
                              :name (n / name
                                    :op1 "Dynegy"))
                        :ARG1-of (a4 / attach-01))
                  :op2 (a5 / agree-01
                        :quant 4
                        :ARG1 (r2 / rate)
                        :ARG1-of (n2 / negotiate-01
                              :ARG0 (w / we))
                        :mod (o / other))))
      :time (a6 / after
            :op1 (d / discuss-01
                  :ARG0 ii
                  :ARG2 (g / group
                        :mod (c2 / commerce)))))

# ::snt Please disregard and destroy the form you received on July 2, as well as any blank forms retrieved from the PEP system prior to that date .
(a / and
      :op1 (d / disregard-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (a2 / and
                  :op1 (f / form
                        :ARG1-of (r / receive-01
                              :ARG0 y
                              :time (d2 / date-entity
                                    :day 2
                                    :month 7)))
                  :op2 (f2 / form
                        :mod (b / blank)
                        :mod (a3 / any)
                        :ARG1-of (r2 / retrieve-01
                              :ARG2 (s / system
                                    :mod (o / organization
                                          :name (n / name
                                                :op1 "PEP")))
                              :time (p / prior
                                    :op1 d2)))))
      :op2 (d3 / destroy-01
            :mode imperative
            :polite +
            :ARG0 y
            :ARG1 a2))

# ::snt As an outgrowth of the meeting Leslie and I had with Scott and Hunter a couple of weeks ago, we have begun work to develop an electronic tool that would allow us to provide ongoing summaries of FERC gas activities, and possibly electric activities, in a format that can be linked to the Fundamentals intranet site used by the traders .
(b / begin-01
      :ARG0 (w / we)
      :ARG1 (w2 / work-01
            :ARG0 w
            :ARG1 (d / develop-02
                  :ARG0 w
                  :ARG1 (t / tool
                        :mod (e / electronic)
                        :ARG0-of (a / allow-01
                              :ARG1 (p / provide-01
                                    :ARG0 w
                                    :ARG1 (s / summarize-01
                                          :ARG1 (a2 / and
                                                :op1 (a3 / activity-06
                                                      :ARG0 (g / government-organization
                                                            :name (n / name
                                                                  :op1 "FERC"))
                                                      :mod (g2 / gas))
                                                :op2 (a4 / activity-06
                                                      :ARG0 g
                                                      :mod (e2 / electric)
                                                      :ARG1-of (p2 / possible-01)))
                                          :ARG1-of (g3 / go-on-15))
                                    :manner (f / format
                                          :ARG1-of (l / link-01
                                                :ARG2 (s2 / site
                                                      :mod (ii / intranet)
                                                      :mod (f2 / fundamental)
                                                      :ARG1-of (u / use-01
                                                            :ARG0 (p3 / person
                                                                  :ARG0-of (t2 / trade-01))))
                                                :ARG1-of (p4 / possible-01))))))))
      :ARG1-of (g4 / grow-01
            :ARG2 (m / meet-03
                  :ARG0 (a5 / and
                        :op1 (p5 / person
                              :name (n2 / name
                                    :op1 "Leslie"))
                        :op2 (ii2 / i))
                  :ARG1 (a6 / and
                        :op1 (p6 / person
                              :name (n3 / name
                                    :op1 "Scott"))
                        :op2 (p7 / person
                              :name (n4 / name
                                    :op1 "Hunter")))
                  :time (b2 / before
                        :op1 (n5 / now)
                        :quant (c / couple
                              :op1 (t3 / temporal-quantity
                                    :quant 1
                                    :unit (w3 / week)))))))

# ::snt This would replace the paper copies you and your people are currently getting .
(r / replace-01
      :ARG0 (t / this)
      :ARG1 (c / copy-01
            :medium (p / paper)
            :ARG1-of (g / get-01
                  :ARG0 (a / and
                        :op1 (y / you)
                        :op2 (p2 / person
                              :poss y))
                  :time (c2 / current))))

# ::snt Anything you could do to help further my goals would be appreciated .
(a / appreciate-02
      :ARG1 (a2 / anything
            :ARG1-of (d / do-02
                  :ARG0 (y / you)
                  :ARG2 (h / help-01
                        :ARG0 y
                        :ARG1 (f / further-01
                              :ARG1 (g / goal
                                    :poss (ii / i))))
                  :ARG1-of (p / possible-01))))

# ::snt Anything you could do to help further my goals would be appreciated .
(a / appreciate-02
      :ARG1 (a2 / anything
            :ARG1-of (d / do-02
                  :ARG0 (y / you)
                  :ARG2 (h / help-01
                        :ARG0 y
                        :ARG1 (f / further-01
                              :ARG1 (g / goal
                                    :poss (ii / i))))
                  :ARG1-of (p / possible-01))))

# ::snt Do you also have a SSD we can use ?
(h / have-03
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (d / drive-01
            :ARG1 (c / computer)
            :ARG1-of (s / solid-02)
            :ARG1-of (u / use-01
                  :ARG0 (w / we)
                  :ARG1-of (p / possible-01)))
      :mod (a2 / also))

# ::snt I have a copy of the document I can give to you tomorrow .
(h / have-03
      :ARG0 (ii / i)
      :ARG1 (d / document
            :ARG1-of (c / copy-01)
            :ARG1-of (g / give-01
                  :ARG0 ii
                  :ARG2 (y / you)
                  :ARG1-of (p / possible-01)
                  :time (t / tomorrow))))

# ::snt The draft you received has been approved by Dan .
(a / approve-01
      :ARG0 (p / person
            :name (n / name
                  :op1 "Dan"))
      :ARG1 (t / thing
            :ARG1-of (d / draft-01)
            :ARG1-of (r / receive-01
                  :ARG0 (y / you))))

# ::snt Sara, here are the trader guidelines I developed for UK gas, UK power and Nordic power .
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (g / guideline
            :ARG1-of (d / develop-02
                  :ARG0 ii
                  :ARG3 (a / and
                        :op1 (g2 / gas
                              :mod (c / country
                                    :name (n / name
                                          :op1 "UK")))
                        :op2 (p / power
                              :mod c)
                        :op3 (p2 / power
                              :mod (w / world-region
                                    :name (n2 / name
                                          :op1 "Nordics")))))
            :beneficiary (p3 / person
                  :ARG0-of (t / trade-01))
            :location (h / here))
      :ARG2 p3
      :name (n3 / name
            :op1 "Sara"))

# ::snt We believe it addresses many of the issues and concerns you have raised in the workshops .
(b / believe-01
      :ARG0 (w / we)
      :ARG1 (a / address-02
            :ARG0 (ii / it)
            :ARG1 (a2 / and
                  :op1 (ii2 / issue-02)
                  :op2 (c / concern-01)
                  :quant (m / many)
                  :ARG1-of (r / raise-01
                        :ARG0 (y / you)
                        :location (w2 / workshop)))))

# ::snt On my panel, Loretta Lynch asked Reliant and Duke to supply her with the details of the contracts they cut to sell their power forward to marketers .
(a / ask-02
      :ARG0 (p / person
            :name (n / name
                  :op1 "Loretta"
                  :op2 "Lynch"))
      :ARG1 (s / supply-01
            :ARG0 (a2 / and
                  :op1 (c / company
                        :name (n2 / name
                              :op1 "Reliant"))
                  :op2 (c2 / company
                        :name (n3 / name
                              :op1 "Duke")))
            :ARG1 (d / detail
                  :topic (c3 / contract-02
                        :ARG1-of (c4 / cut-02
                              :ARG0 a2
                              :purpose (s2 / sell-01
                                    :ARG0 a2
                                    :ARG1 (p2 / power
                                          :poss a2)
                                    :ARG2 (p3 / person
                                          :ARG0-of (m / market-01))
                                    :direction (f / forward)))))
            :ARG2 p)
      :ARG2 a2
      :location (p4 / panel
            :poss p))

# ::snt These numbers are slightly different from the ones you put together a few weeks ago .
(d / differ-02
      :ARG1 (n / number
            :mod (t / this))
      :ARG2 (n2 / number
            :ARG1-of (p / put-01
                  :ARG0 (y / you)
                  :ARG2 (t2 / together)
                  :time (b / before
                        :op1 (n3 / now)
                        :quant (f / few
                              :op1 (t3 / temporal-quantity
                                    :quant 1
                                    :unit (w / week))))))
      :degree (s / slight))

# ::snt Here is the Job Description and the Operational Accountabilities for the position I mentioned to you last Sunday .
(b / be-located-at-91
      :ARG1 (a / and
            :op1 (d / describe-01
                  :ARG1 (j / job))
            :op2 (r / responsible-03
                  :ARG1 (o / operate-01))
            :topic (p / position
                  :ARG1-of (m / mention-01
                        :ARG0 (ii / i)
                        :ARG2 (y / you)
                        :time (d2 / date-entity
                              :weekday (s / sunday)
                              :mod (l / last)))))
      :ARG2 (h / here))

# ::snt The central question behind the palace coup is whether Terry Winter, the president of the Independent System Operator, acted alone when he took steps to remove key price caps designed to limit the amount power generators could charge .
(q / question-01
      :ARG1 (t / truth-value
            :polarity-of (a / act-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 "Terry"
                              :op2 "Winter")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (o / organization
                                    :name (n2 / name
                                          :op1 "Independent"
                                          :op2 "System"
                                          :op3 "Operator"))
                              :ARG2 (p2 / president)))
                  :manner (a2 / alone)
                  :time (s / step-01
                        :ARG1 p
                        :ARG2 (r / remove-01
                              :ARG0 p
                              :ARG1 (c / cap-01
                                    :ARG1 (m / monetary-quantity
                                          :ARG2-of (p3 / price-01))
                                    :ARG1-of (d / design-01
                                          :ARG3 (l / limit-01
                                                :ARG0 c
                                                :ARG1 (a3 / amount
                                                      :ARG3-of (c2 / charge-01
                                                            :ARG0 (p4 / person
                                                                  :ARG0-of (g / generate-01
                                                                        :ARG1 (p5 / power)))
                                                            :ARG1-of (p6 / possible-01)))))
                                    :ARG1-of (k / key-02))))))
      :mod (c3 / central)
      :location (c4 / coup-01
            :mod (p7 / palace)))

# ::snt What became known as the palace coup began on Oct. 26 when ISO board members voted for severe restrictions on the amount of money electricity producers could charge for power .
(b / begin-01
      :ARG1 (t / thing
            :ARG1-of (k / know-02
                  :ARG2 (c / coup-01
                        :location (p / palace))
                  :ARG2-of (b2 / become-01)))
      :time (d / date-entity
            :day 26
            :month 10
            :time-of (v / vote-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (o / organization
                                    :name (n / name
                                          :op1 "ISO"
                                          :op2 "Board"))
                              :ARG2 (m / member)))
                  :ARG1 (r / restrict-01
                        :ARG1 (a / amount
                              :quant-of (m2 / money
                                    :ARG1-of (c2 / charge-01
                                          :ARG0 (p3 / person
                                                :ARG0-of (p4 / produce-01
                                                      :ARG1 (e / electricity)))
                                          :ARG3 (p5 / power)
                                          :ARG1-of (p6 / possible-01))))
                        :mod (s / severe)))))

# ::snt "We believe the action we took addressed a severe concern,'' Robinson said .
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 "Robinson"))
      :ARG1 (b / believe-01
            :ARG0 (w / we)
            :ARG1 (a / address-02
                  :ARG0 (a2 / act-02
                        :ARG0 w)
                  :ARG1 (c / concern-01
                        :mod (s2 / severe)))))

# ::snt Some board members pushed to have Winter removed, but there were concerns such action would lead to more chaos, the governor's spokesman Maviglio said .
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 "Maviglio")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (g / governor)
                  :ARG2 (s2 / spokesman)))
      :ARG1 (c / contrast-01
            :ARG1 (p2 / push-02
                  :ARG0 (p3 / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (b / board)
                              :ARG2 (m / member))
                        :quant (s3 / some))
                  :ARG2 (r / remove-01
                        :ARG1 (p4 / person
                              :name (n2 / name
                                    :op1 "Winter"))))
            :ARG2 (c2 / concern-01
                  :ARG0 (l / lead-03
                        :ARG0 r
                        :ARG2 (c3 / chaos
                              :quant (m2 / more))))))

# ::snt Accordingly, the only issue left for arbitration is whether our IP (the only one and therefore the one they have to choose) is or is not an economic hardship under the contract .
(c / cause-01
      :ARG1 (ii / issue-02
            :ARG0 (t / truth-value
                  :polarity-of (h / hardship
                        :mod (e / economy)
                        :domain (p / product
                              :name (n / name
                                    :op1 "IP")
                              :poss (w / we)
                              :mod (o / one
                                    :mod (o2 / only))
                              :ARG1-of (c2 / choose-01
                                    :ARG0 (t2 / they)
                                    :ARG2-of (o3 / obligate-01
                                          :ARG1 t2)
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 o
                                          :mod (o4 / only)))))
                  :prep-under (c4 / contract-02)))
      :ARG1-of (l / leave-17
            :ARG2 (a / arbitrate-01))
      :mod (o5 / only))

# ::snt By Friday December 1st, could you please tell me the percentages/amount of time you spent on East Coast Power during the months of October and November .
(p / possible-01
      :polarity (a / amr-unknown)
      :polite +
      :ARG1 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (s / slash
                  :op1 (p2 / percentage
                        :quant-of (t2 / time
                              :ARG1-of (s2 / spend-02
                                    :ARG0 y
                                    :ARG2 (c / company
                                          :name (n / name
                                                :op1 "East"
                                                :op2 "Coast"
                                                :op3 "Power"))
                                    :time (a2 / and
                                          :op1 (d / date-entity
                                                :month 10)
                                          :op2 (d2 / date-entity
                                                :month 11)))))
                  :op2 (a3 / amount
                        :quant-of t2))
            :ARG2 (ii / i))
      :time (b / by
            :op1 (d3 / date-entity
                  :month 12
                  :day 1
                  :weekday (f / friday))))

# ::snt Justin, I have no knowledge of any bad faith actins Enron has pending inTexas but I will call Richard Sanders who manages domestic litgation here .
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (c / contrast-01
            :ARG1 (k / know-01
                  :polarity -
                  :ARG0 ii
                  :ARG1 (a / actin
                        :mod (f / faith
                              :ARG1-of (b / bad-07))
                        :mod (a2 / any)
                        :ARG1-of (p / pend-01
                              :ARG2 (c2 / company
                                    :name (n / name
                                          :op1 "Enron"))
                              :location (s2 / state
                                    :name (n2 / name
                                          :op1 "Texas")))))
            :ARG2 (c3 / call-02
                  :ARG0 ii
                  :ARG1 (p2 / person
                        :name (n3 / name
                              :op1 "Richard"
                              :op2 "Sanders")
                        :ARG0-of (m / manage-01
                              :ARG1 (l / litigate-01
                                    :mod (d / domestic))
                              :location (h / here)))))
      :ARG2 (p3 / person
            :name (n4 / name
                  :op1 "Justin")))

# ::snt I've read the materials you sent and agree we need to address these allegations appropriately .
(a / and
      :op1 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (m / material
                  :ARG1-of (s / send-01
                        :ARG0 (y / you))))
      :op2 (a2 / agree-01
            :ARG0 ii
            :ARG1 (n / need-01
                  :ARG0 (w / we)
                  :ARG1 (a3 / address-02
                        :ARG0 w
                        :ARG1 (t / thing
                              :ARG1-of (a4 / allege-01)
                              :mod (t2 / this))
                        :ARG1-of (a5 / appropriate-02)))))

# ::snt Richard do you have any bad faith litigation pending against any insurers in Texas or are you aware of any Enron has filed? ?
(a / ask-01
      :ARG0 (ii / i)
      :ARG1 (o / or
            :op1 (h / have-03
                  :ARG0 (p / person
                        :name (n / name
                              :op1 "Richard"))
                  :ARG1 (p2 / pend-01
                        :ARG1 (s / sue-02
                              :ARG1 (c / company
                                    :ARG0-of (ii2 / insure-02)
                                    :mod (a2 / any)
                                    :location (s2 / state
                                          :name (n2 / name
                                                :op1 "Texas")))
                              :mod (f / faith
                                    :ARG1-of (b / bad-07)))))
            :op2 (r / realize-01
                  :ARG0 p
                  :ARG1 (f2 / file-01
                        :ARG0 (c2 / company
                              :name (n3 / name
                                    :op1 "Enron"))
                        :ARG1 (a3 / any)))
            :polarity (a4 / amr-unknown))
      :ARG2 p)

# ::snt (c) Are you happy with the draft letter to Beachcrofts I sent you ?
(h / happy-01
      :li "c"
      :ARG0 (l / letter
            :ARG1-of (d / draft-01)
            :ARG1-of (s / send-01
                  :ARG0 (ii / i)
                  :ARG2 (p / person
                        :name (n / name
                              :op1 "Beachcrofts"))))
      :ARG1 p
      :polarity (a / amr-unknown))

# ::snt I passed along to Liz Austin your request regarding pleadings A&K has filed setting forth the Trustee's position in connection with the enforcement/nonenforcement of the power contracts and what remedies the Trustee is seeking .
(p / pass-on-09
      :ARG0 (ii / i)
      :ARG1 (r / request-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 "Liz"
                        :op2 "Austin"))
            :ARG1 (p3 / plead-01
                  :ARG1-of (f / file-01
                        :ARG0 (c / company
                              :name (n2 / name
                                    :op1 "A"
                                    :op2 "&"
                                    :op3 "K")))
                  :ARG0-of (s / set-forth-00
                        :ARG1 (p4 / position-02
                              :ARG0 (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (t / trustee)))
                              :ARG1-of (c2 / connect-01
                                    :ARG2 (a / and
                                          :op1 (a2 / and
                                                :op1 (e / enforce-01
                                                      :ARG1 (c3 / contract
                                                            :mod (p6 / power)))
                                                :op2 (e2 / enforce-01
                                                      :polarity -
                                                      :ARG1 c3))
                                          :op2 (t2 / thing
                                                :ARG3-of (r2 / remedy-01)
                                                :ARG1-of (s2 / seek-01
                                                      :ARG0 p5))))))))
      :ARG2 p2)

# ::snt I have my paralegal gathering the pleadings Enron requested .
(h / have-04
      :ARG0 (ii / i)
      :ARG1 (g / gather-01
            :ARG0 (p / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (p2 / paralegal)))
            :ARG1 (p3 / plead-01
                  :ARG1-of (r / request-01
                        :ARG0 (c / company
                              :name (n / name
                                    :op1 "Enron"))))))

# ::snt We have had enthusiastic responses from companies such as AT&T, Duke Energy, Pitney Bowes and DaimlerChrysler, and I would be pleased to answer any questions you may have about this focal point for our educational efforts. ?
(a / and
      :op1 (h / have-03
            :ARG0 (w / we)
            :ARG1 (r / respond-01
                  :ARG0 (c / company
                        :example (a2 / and
                              :op1 (c2 / company
                                    :name (n / name
                                          :op1 "AT&T"))
                              :op2 (c3 / company
                                    :name (n2 / name
                                          :op1 "Duke"
                                          :op2 "Energy"))
                              :op3 (c4 / company
                                    :name (n3 / name
                                          :op1 "Pitney"
                                          :op2 "Bees"))
                              :op4 (c5 / company
                                    :name (n4 / name
                                          :op1 "DaimlerChrysler"))))
                  :ARG0-of (e / enthusiastic-03)))
      :op2 (p / please-01
            :ARG0 (a3 / answer-01
                  :ARG0 (ii / i)
                  :ARG1 (q / question-01
                        :ARG0 (y / you)
                        :ARG1 (p2 / point
                              :ARG2-of (f / focus-01
                                    :ARG1 (e2 / effort-01
                                          :ARG0 w
                                          :ARG1 (e3 / educate-01)))
                              :mod (t / this))
                        :mod (a4 / any)
                        :ARG1-of (p3 / possible-01)))
            :ARG1 ii
            :polarity (a5 / amr-unknown)))

# ::snt The real purpose of my call, however, is related to the services we will provide to support the aspirational statements of the Protocol .
(c / contrast-01
      :ARG2 (h / have-purpose-91
            :ARG1 (c2 / call-02
                  :ARG0 (ii / i))
            :ARG2 (r / relate-01
                  :ARG1 c2
                  :ARG2 (s / serve-01
                        :ARG1-of (p / provide-01
                              :ARG0 (w / we)
                              :purpose (s2 / support-01
                                    :ARG0 w
                                    :ARG1 (s3 / state-01
                                          :ARG0 (p2 / protocol)
                                          :ARG1-of (a / aspire-01))))))
            :ARG1-of (r2 / real-04)))

# ::snt These are the kids who will destroy society, because of the crapfest the American family has become under the post hippie culture, you heard again .
(h / hear-01
      :ARG0 (y / you)
      :ARG1 (c / cause-01
            :ARG0 (b / become-01
                  :ARG1 (f / family
                        :mod (c2 / country
                              :name (n / name
                                    :op1 "America")))
                  :ARG2 (f2 / festival
                        :mod (c3 / crapfest))
                  :prep-under (c4 / culture
                        :time (a / after
                              :op1 (h2 / hippie))))
            :ARG1 (k / kid
                  :domain (t / this)
                  :ARG0-of (d / destroy-01
                        :ARG1 (s / society))))
      :mod (a2 / again))

# ::snt This is the insidious conspiracy I call "Mommism" .
(c / conspire-01
      :mod (ii / insidious)
      :domain (t / this)
      :ARG1-of (c2 / call-01
            :ARG0 (ii2 / i)
            :ARG2 (t2 / thing
                  :name (n / name
                        :op1 "Mommism"))))

# ::snt One is a special tool to detect damage to the thermal-protective tile while in orbit - something the Columbia crew would have welcomed .
(t / tool
      :domain (o / one)
      :ARG1-of (s / special-02)
      :purpose (d / detect-01
            :ARG0 (c / crew
                  :poss (s2 / spaceship
                        :name (n / name
                              :op1 "Columbia")))
            :ARG1 (d2 / damage-01
                  :ARG1 (t2 / tile
                        :ARG0-of (p / protect-01
                              :ARG2 (t3 / thermal))))
            :time (o2 / orbit-01
                  :ARG0 c)
            :ARG1-of (w / welcome-01
                  :ARG0 c)))

# ::snt "All of the research and all of the preparation I did leading up to the trip gave no indication that there were bears in the Soper [River] valley where we were canoeing," Dr. Fortier said .
(s / say-01
      :ARG0 (d / doctor
            :name (n / name
                  :op1 "Fortier"))
      :ARG1 (ii / indicate-01
            :polarity -
            :ARG0 (a / and
                  :op1 (r / research-01)
                  :op2 (p / prepare-02
                        :ARG0 d
                        :ARG1-of (l / lead-up-05
                              :ARG2 (t / trip-03)))
                  :mod (a2 / all))
            :ARG1 (b / be-located-at-91
                  :ARG1 (b2 / bear)
                  :ARG2 (v / valley
                        :name (n2 / name
                              :op1 "Soper"
                              :op2 "River")
                        :location-of (c / canoe-01
                              :ARG0 (w / we))))))

# ::snt The name started as a joke boasting about the amount of information the search-engine would be able to search .
(s / start-01
      :ARG1 (n / name)
      :ARG2 (j / joke-01
            :ARG2 (b / boast-01
                  :ARG1 (a / amount
                        :quant-of (ii / information)
                        :ARG1-of (s2 / search-01
                              :ARG0 (s3 / search-engine)
                              :ARG1-of (p / possible-01))))))

# ::snt Bill Hewlett and Dave Packard tossed a coin to decidewhether the company they founded would be called Hewlett-Packard or Packard-Hewlett .
(t / toss-01
      :ARG0 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 "Bill"
                        :op2 "Hewlett"))
            :op2 (p2 / person
                  :name (n2 / name
                        :op1 "Dave"
                        :op2 "Packard")))
      :ARG1 (c / coin)
      :purpose (d / decide-01
            :ARG0 a
            :ARG1 (n3 / name-01
                  :ARG1 (c2 / company
                        :ARG1-of (f / found-01
                              :ARG0 a))
                  :ARG2 (o / or
                        :op1 (c3 / company
                              :name (n4 / name
                                    :op1 "Hewlett-Packard"))
                        :op2 (c4 / company
                              :name (n5 / name
                                    :op1 "Packard-Hewlett"))))))

# ::snt The graphics are without a doubt the amoung the best graphics I have ever seen for any game and I have been gaming since the MUD days .
(a / and
      :op1 (d / doubt-01
            :polarity -
            :ARG1 (g / graphics
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g2 / good-02
                              :ARG1 g)
                        :ARG3 (m / most)
                        :ARG5 (g3 / graphics
                              :ARG1-of (s / see-01
                                    :ARG0 (ii / i)
                                    :time (e / ever))
                              :topic (g4 / game
                                    :mod (a2 / any)
                                    :op2-of a)))))
      :ARG1-of (p / play-01
            :ARG0 ii)
      :time (s2 / since
            :op1 (d2 / day
                  :mod (t / thing
                        :name (n / name
                              :op1 "MUD")))))

# ::snt Also, please pass this along to everyone you know, and all of your email contacts .
(p / pass-05
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / this)
      :ARG2 (a / and
            :op1 (e / everyone
                  :ARG1-of (k / know-02
                        :ARG0 y))
            :op2 (c / contact
                  :mod (e2 / email)
                  :mod (a2 / all)
                  :poss y))
      :mod (a3 / also))

# ::snt Here are some emails we have sent, along with the flyer for the Benefit fund raiser we are holding in June, just for your information .
(b / be-located-at-91
      :ARG1 (a / and
            :op1 (e / email-01
                  :ARG0 (w / we)
                  :quant (s / some)
                  :ARG1-of (s2 / send-01
                        :ARG0 w))
            :op2 (f / flyer
                  :purpose (r / raise-02
                        :ARG1 (f2 / fund
                              :mod (b2 / benefit))
                        :ARG1-of (h / hold-04
                              :ARG0 w
                              :time (d / date-entity
                                    :month 6)))))
      :ARG2 (h2 / here)
      :purpose (ii / information
            :poss (y / you)
            :mod (j / just)))

# ::snt If you can pass this info along, and ask everyone you know to forward it to their contacts, etc, we may have a shot at pulling this off .
(p / possible-01
      :ARG1 (h / have-03
            :ARG0 (w / we)
            :ARG1 (s / shoot-01
                  :ARG0 w
                  :ARG2 (p2 / pull-off-03
                        :ARG0 w
                        :ARG1 (t / this))))
      :condition (p3 / possible-01
            :ARG1 (a / and
                  :op1 (p4 / pass-05
                        :ARG0 (y / you)
                        :ARG1 (ii / information
                              :mod (t2 / this))
                        :path (a2 / along))
                  :op2 (a3 / ask-02
                        :ARG0 y
                        :ARG1 (f / forward-01
                              :ARG0 (e / everyone
                                    :ARG1-of (k / know-02
                                          :ARG0 y))
                              :ARG1 ii
                              :ARG2 (p5 / person
                                    :ARG1-of (c / contact-01
                                          :ARG0 e)))
                        :ARG2 e)
                  :op3 (e2 / et-cetera))))

# ::snt I will attach the letter explaining the benefit we are sponsoring .
(a / attach-01
      :ARG0 (ii / i)
      :ARG1 (l / letter
            :ARG0-of (e / explain-01
                  :ARG1 (b / benefit-01
                        :ARG1-of (s / sponsor-01
                              :ARG0 (w / we))))))

# ::snt Her grant for the life saving treatments she needs has run out, and we need to help her to continue to receive these treatments .
(a / and
      :op1 (r / run-out-05
            :ARG1 (g / grant-01
                  :ARG2 (s / she)
                  :ARG3 (t / treat-03
                        :ARG1 s
                        :ARG0-of (s2 / save-02
                              :ARG1 (l / life))
                        :ARG1-of (n / need-01
                              :ARG0 s))))
      :op2 (n2 / need-01
            :ARG0 (w / we)
            :ARG1 (h / help-01
                  :ARG0 w
                  :ARG1 (c / continue-01
                        :ARG0 s
                        :ARG1 (r2 / receive-01
                              :ARG0 s
                              :ARG1 (t2 / treat-03
                                    :ARG1 s
                                    :mod (t3 / this))))
                  :ARG2 s)))

# ::snt This is an event you don't want to miss! !
(e / event
      :domain (t / this)
      :ARG1-of (m / miss-02
            :ARG0 (y / you)
            :ARG1-of (w / want-01
                  :polarity -
                  :ARG0 y)))

# ::snt Another thing you can try .
(p / possible-01
      :ARG1 (t / try-01
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :mod (a / another))))

# ::snt Yes, it is true that some people don't like the way they think he will vote on the Supreme Court .
(t / true-01
      :ARG1 (d / dislike-01
            :ARG0 (p / person
                  :mod (s / some))
            :ARG1 (t2 / think-01
                  :ARG0 p
                  :ARG1 (v / vote-01
                        :ARG0 (h / he)
                        :ARG1 (g / government-organization
                              :name (n / name
                                    :op1 "Supreme"
                                    :op2 "Court"))))))

# ::snt But other people do like the way they think he will vote, and the ones who favor him seem to outnumber the ones who oppose him .
(c / contrast-01
      :ARG2 (a / and
            :op1 (l / like-01
                  :ARG0 (p / person
                        :mod (o / other))
                  :ARG1 (w / way
                        :manner-of (t / think-01
                              :ARG0 p
                              :ARG1 (v / vote-01
                                    :ARG0 (h / he)))))
            :op2 (s / seem-01
                  :ARG1 (o2 / outnumber-01
                        :ARG1 (p2 / person
                              :ARG0-of (f / favor-01
                                    :ARG1 h))
                        :ARG2 (p3 / person
                              :ARG0-of (o3 / oppose-01
                                    :ARG1 h))))))

# ::snt And the basic idea behind the Checks and Balances we have is that if one branch of the Government goes crazy, the other two can hold it down .
(a / and
      :op2 (ii / idea
            :mod (b / basic)
            :location (b2 / behind
                  :op1 (a2 / and
                        :op1 (c / check-07)
                        :op2 (b3 / balance-01)
                        :ARG1-of (h / have-03
                              :ARG0 (w / we))))
            :domain (p / possible-01
                  :ARG1 (h2 / hold-01
                        :ARG0 (b4 / branch
                              :quant 2
                              :mod (o / other))
                        :ARG1 (c2 / crazy-03
                              :ARG1 (b5 / branch
                                    :quant 1
                                    :part-of (g / government-organization
                                          :ARG0-of (g2 / govern-01))))
                        :direction (d / down))
                  :condition c2)))

# ::snt If you want to help, please send them to everyone you know who needs to read them .
(s / send-01
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / they)
      :ARG2 (e / everyone
            :ARG1-of (k / know-02
                  :ARG0 y)
            :ARG0-of (n / need-01
                  :ARG1 (r / read-01
                        :ARG0 e
                        :ARG1 t)))
      :condition (w / want-01
            :ARG0 y
            :ARG1 (h / help-01
                  :ARG0 y)))

# ::snt Below I pasted the email text, and it has a link to a website that automatically plays this song the author of the email created .
(a / and
      :op1 (p / paste-01
            :ARG0 (ii / i)
            :ARG1 (t / text
                  :mod (e / email))
            :location (b / below))
      :op2 (h / have-03
            :ARG0 t
            :ARG1 (l / link-01
                  :ARG2 (w / website
                        :ARG0-of (p2 / play-11
                              :ARG1 (s / song
                                    :mod (t2 / this))
                              :manner (a2 / automatic)))))
      :op3 (p3 / person
            :ARG0-of (a3 / author-01
                  :ARG1 (e2 / email
                        :ARG1-of (c / create-01
                              :ARG0 p3)))))

# ::snt I read the Civet Cat story from a little while ago, and tonight, when my Mom emailed me about it, I re-read it, and went to the website with the song the author of the email created .
(a / and
      :op1 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (s / story
                  :name (n / name
                        :op1 "Civet"
                        :op2 "Cat")
                  :time (b / before
                        :op1 (n2 / now)
                        :quant (w / while
                              :mod (l / little))))
            :mod (a2 / again))
      :op2 (g / go-02
            :ARG0 ii
            :ARG4 (w2 / website
                  :accompanier (s2 / song
                        :ARG1-of (c / create-01
                              :ARG0 (p / person
                                    :ARG0-of (a3 / author-01
                                          :ARG1 (e / email-01))))))
            :time (d / date-entity
                  :dayperiod (n3 / night)
                  :mod (t / today))
            :time (e2 / email-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (m / mom)))
                  :ARG2 ii
                  :topic s)))

# ::snt This is my first time posting to the list, so I feel somewhat embarrassed by "promoting" a song I wrote, but I think it is fitting because it is directly tied to extreme animal suffering as a result of human lack of empathy, but an abundance of human greed .
(c / cause-01
      :ARG0 (p / post-01
            :ARG0 (ii / i)
            :ARG2 (t / thing
                  :ARG2-of (l / list-01))
            :ord (o / ordinal-entity
                  :value 1)
            :domain (t2 / this))
      :ARG1 (f / feel-01
            :ARG0 ii
            :ARG1 (e / embarrass-01
                  :ARG0 (p2 / promote-02
                        :ARG0 ii
                        :ARG1 (s / song
                              :ARG1-of (w / write-01
                                    :ARG0 ii)))
                  :ARG1 ii
                  :degree (s2 / somewhat))
            :concession-of (t3 / think-01
                  :ARG0 ii
                  :ARG1 (f2 / fit-06
                        :ARG1 s
                        :ARG1-of (c2 / cause-01
                              :ARG0 (t4 / tie-01
                                    :ARG1 s
                                    :ARG2 (s3 / suffer-01
                                          :ARG0 (a / animal)
                                          :mod (e2 / extreme)
                                          :ARG2-of (r / result-01
                                                :ARG1 (c3 / contrast-01
                                                      :ARG1 (l2 / lack-01
                                                            :ARG0 (h / human)
                                                            :ARG1 (e3 / empathy))
                                                      :ARG2 (g / greed
                                                            :mod h
                                                            :quant (a2 / abundance)))))
                                    :ARG1-of (d / direct-02)))))))

# ::snt To promote one of the most trivial interests we have, thousands of animals are tormented for their whole lives. "
(t / torture-01
      :ARG1 (a / animal
            :quant (m / multiple
                  :op1 1000))
      :duration (l / life
            :poss a
            :mod (w / whole))
      :purpose (p / promote-02
            :ARG1 (ii / interest
                  :ARG1-of (ii2 / include-91
                        :ARG2 (ii3 / interest
                              :ARG1-of (h / have-03
                                    :ARG0 (w2 / we))
                              :mod (t2 / trivial
                                    :ARG2-of (h2 / have-degree-91
                                          :ARG1 ii3
                                          :ARG3 (m2 / most))))))))

# ::snt I found this on a bulletin board and decided to try it: I don't care about the useless pre-fabricated crap this message usually says .
(m / multi-sentence
      :snt1 (a / and
            :op1 (f / find-01
                  :ARG0 (ii / i)
                  :ARG1 (t / this)
                  :location (b / board
                        :mod (b2 / bulletin)))
            :op2 (d / decide-01
                  :ARG0 ii
                  :ARG1 (t2 / try-01
                        :ARG0 ii
                        :ARG1 (ii2 / it))))
      :snt2 (c / care-01
            :polarity -
            :ARG0 (ii3 / i)
            :ARG1 (t3 / thing
                  :ARG1-of (c2 / crap-01)
                  :ARG1-of (f2 / fabricate-01
                        :time (b3 / before))
                  :ARG1-of (u / use-01
                        :ARG1-of (p / possible-01
                              :polarity -))
                  :ARG1-of (s / say-01
                        :ARG0 (m2 / message
                              :mod (t4 / this))
                        :mod (u2 / usual)))))

# ::snt All I say is, it works .
(t / thing
      :ARG1-of (s / say-01
            :ARG0 (ii / i))
      :mod (a / all)
      :domain (w / work-09
            :ARG1 (ii2 / it)))

# ::snt Change anything you need to but try to keep this article as close to original as possible .
(h / have-concession-91
      :ARG1 (c / change-01
            :ARG0 (y / you)
            :ARG1 (a / anything
                  :ARG1-of (n / need-01
                        :ARG0 y)))
      :ARG2 (t / try-01
            :ARG0 y
            :ARG1 (k / keep-02
                  :ARG0 y
                  :ARG1 (a2 / article
                        :mod (t2 / this))
                  :ARG2 (c2 / close-10
                        :ARG1 a2
                        :ARG2 (o / original)
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 a2
                              :ARG3 (e / equal)
                              :ARG4 (p / possible-01
                                    :ARG1 c2))))))

# ::snt All you need is 200, but remember, the more you post, the more money you make! !
(c / contrast-01
      :ARG1 (n / need-01
            :ARG0 (y / you)
            :ARG1 (m / monetary-quantity
                  :quant 200
                  :unit (d / dollar))
            :mod (a / all))
      :ARG2 (r / remember-01
            :mode imperative
            :ARG0 y
            :ARG1 (c2 / correlate-91
                  :ARG1 (m2 / more
                        :ARG3-of (h / have-quant-91
                              :ARG1 (p / post-01
                                    :ARG0 y)))
                  :ARG2 (m3 / more
                        :ARG3-of (h2 / have-quant-91
                              :ARG1 (m4 / money
                                    :ARG1-of (m5 / make-05
                                          :ARG0 y)))))))

# ::snt NOTE: You may want to retain every name and address sent to you, either on a computer or hard copy and keep the notes people send you .
(n / note-01
      :ARG1 (p / possible-01
            :ARG1 (w / want-01
                  :ARG0 (y / you)
                  :ARG1 (a / and
                        :op1 (r / retain-01
                              :ARG0 y
                              :ARG1 (a2 / and
                                    :op1 (n2 / name)
                                    :op2 (a3 / address)
                                    :mod (e / every)
                                    :ARG1-of (s / send-01
                                          :ARG2 y)
                                    :medium (o / or
                                          :op1 (c / computer)
                                          :op2 (t / thing
                                                :ARG2-of (c2 / copy-01)
                                                :ARG1-of (h / hard-04)))))
                        :op2 (k / keep-01
                              :ARG0 y
                              :ARG1 (n3 / note-01
                                    :ARG1-of (s2 / send-01
                                          :ARG0 (p2 / person)
                                          :ARG2 y)))))))

# ::snt All you have to do, and It Really works!! !
(a / and
      :op1 (t / thing
            :mod (a2 / all)
            :ARG1-of (d / do-02
                  :ARG0 (y / you)
                  :ARG2-of (o / obligate-01
                        :ARG1 y)))
      :op2 (w / work-09
            :ARG1 (ii / it)
            :ARG1-of (r / real-04)))

# ::snt "All you have to do is look at the photographs," Ed Bangs, wolf recovery coordinator for the U.S. Fish and Wildlife Service, told UPI's Blue Planet ,
(t / tell-01
      :ARG0 (p / person
            :name (n / name
                  :op1 "Ed"
                  :op2 "Bangs")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (g / government-organization
                        :name (n2 / name
                              :op1 "U.S."
                              :op2 "Fish"
                              :op3 "and"
                              :op4 "Wildlife"
                              :op5 "Service"))
                  :ARG2 (c / coordinate-01
                        :ARG0 p
                        :ARG1 (r / recover-01
                              :ARG1 (w / wolf)))))
      :ARG1 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (l / look-01
                  :ARG0 y
                  :ARG1 (p2 / photograph-01))
            :mod (a / all))
      :ARG2 (p3 / publication
            :name (n3 / name
                  :op1 "Blue"
                  :op2 "Planet")
            :poss (p4 / publication
                  :name (n4 / name
                        :op1 "UPI"))))

# ::snt He said after 10 years of DNA testing on northern Rockies wolves, scientists have not found a single strain that did not belong to one of the wolves the agency released -- or their descendants .
(s / say-01
      :ARG0 (h / he)
      :ARG1 (f / find-01
            :polarity -
            :ARG0 (s2 / scientist)
            :ARG1 (s3 / strain
                  :ARG1-of (s4 / single-02)
                  :ARG0-of (b / belong-01
                        :polarity -
                        :ARG1 (o / or
                              :op1 (w / wolf
                                    :quant 1
                                    :ARG1-of (ii / include-91
                                          :ARG2 (w2 / wolf
                                                :ARG1-of (r / release-01
                                                      :ARG0 (a / agency)))))
                              :op2 (p / person
                                    :ARG0-of (d / descend-01
                                          :ARG1 w)))))
            :time (a2 / after
                  :op1 (t / test-01
                        :ARG1 (n / nucleic-acid
                              :name (n2 / name
                                    :op1 "DNA"))
                        :ARG2 w2
                        :duration (t2 / temporal-quantity
                              :quant 10
                              :unit (y / year))
                        :location (m / mountain
                              :name (n3 / name
                                    :op1 "Northern"
                                    :op2 "Rockies"))))))

# ::snt Scientists can argue all they want about how many degrees Celsius -- or Fahrenheit -- the planet is warming and what the trend portends, but meanwhile Earth's plants, insects and animals are not waiting for the outcome .
(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (a / argue-02
                  :ARG0 (s / scientist)
                  :ARG1 (a2 / and
                        :op1 (n / number
                              :quant-of (d / degree
                                    :mod (c2 / celsius))
                              :ARG2-of (w / warm-01
                                    :ARG1 (p2 / planet
                                          :name (n2 / name
                                                :op1 "Earth"))))
                        :op2 (t / thing
                              :ARG1-of (p3 / portend-01
                                    :ARG0 (t2 / trend-01))))
                  :ARG1-of (w2 / want-01
                        :ARG0 s
                        :degree (a3 / all))))
      :ARG2 (w3 / wait-01
            :polarity -
            :ARG1 (a4 / and
                  :op1 (p4 / plant)
                  :op2 (ii / insect)
                  :op3 (a5 / animal)
                  :poss p2)
            :ARG2 (o / outcome)
            :time (m / meanwhile)))

# ::snt Half of the 300 phenophases Leopold tracked showed a response consistent with warming .
(s / show-01
      :ARG0 (h / half
            :ARG1-of (ii / include-91
                  :ARG2 (e / enzyme
                        :quant 300
                        :name (n / name
                              :op1 "phenophase")
                        :ARG1-of (t / track-01
                              :ARG0 (p / person
                                    :name (n2 / name
                                          :op1 "Leopold"))))))
      :ARG1 (r / respond-01
            :ARG1-of (c / consistent-01
                  :ARG2 (w / warm-01))))

# ::snt In the world press, commentators predict that Katrina will make a profound change in the way the US is perceived at home and abroad, especially following the scenes of poverty and racial divisions they believe the disaster has revealed .
(p / predict-01
      :ARG0 (p2 / person
            :ARG0-of (c / comment-01))
      :ARG1 (c2 / change-01
            :ARG0 (n / natural-disaster
                  :name (n2 / name
                        :op1 "Katrina"))
            :ARG1 (t / thing
                  :ARG2-of (p3 / perceive-01
                        :ARG1 (c3 / country
                              :name (n3 / name
                                    :op1 "US"))
                        :location (a / and
                              :op1 (h / home)
                              :op2 (a2 / abroad))))
            :mod (p4 / profound)
            :ARG1-of (f / follow-01
                  :ARG2 (s / scene
                        :mod (a3 / and
                              :op1 (p5 / poor)
                              :op2 (d / divide-02
                                    :ARG3 (r / race)))
                        :ARG1-of (r2 / reveal-01
                              :ARG0 n
                              :ARG1-of (b / believe-01
                                    :ARG0 p2)))
                  :mod (e / especially)))
      :medium (p6 / press
            :mod (w / world)))

# ::snt It is always interesting what spin the press will take .
(ii / interest-01
      :ARG2 (s / spin-03
            :ARG1-of (t / take-01
                  :ARG0 (p / press)))
      :time (a / always))

# ::snt These are some of the things I've been wondering.. .
(t / thing
      :ARG1-of (ii / include-91
            :ARG2 (t2 / thing
                  :ARG1-of (w / wonder-01
                        :ARG0 (ii2 / i))))
      :quant (s / some)
      :domain (t3 / this))

# ::snt Ironically he almost burst out laughing and it was all he could do to keep his mirth down to a barely controlled smirk .
(a / and
      :op1 (b / burst-out-04
            :ARG0 (h / he)
            :ARG1 (l / laugh-01
                  :ARG0 h)
            :mod (ii / ironic)
            :mod (a2 / almost))
      :op2 (a3 / all
            :ARG1-of (d / do-02
                  :ARG0 h
                  :ARG2 (k / keep-02
                        :ARG0 h
                        :ARG1 (m / mirth
                              :poss h)
                        :ARG3 (s / smirk-01
                              :ARG0 h
                              :ARG1-of (c / control-01
                                    :ARG0 h
                                    :degree (b2 / barely))))
                  :ARG1-of (p / possible-01))))

# ::snt This is the year you'll want to take stock of your career and ask yourself if you're doing the work you want to do for the rest of your life .
(y / year
      :domain (t / this)
      :time-of (w / want-01
            :ARG0 (y2 / you)
            :ARG1 (a / and
                  :op1 (t2 / take-stock-09
                        :ARG0 y2
                        :ARG1 (c / career
                              :poss y2))
                  :op2 (a2 / ask-01
                        :ARG0 y2
                        :ARG1 (t3 / truth-value
                              :polarity-of (w2 / work-01
                                    :ARG0 y2
                                    :ARG1-of (w3 / want-01
                                          :ARG0 y2)
                                    :duration (r / rest
                                          :part-of (l / live-01
                                                :ARG0 y2))))
                        :ARG2 y2))))

# ::snt Your cycle of learning through the school of hard knocks has come to an end, Gemini, and now you're going to start reaping the rewards these "lessons" have left in their wake .
(s / say-01
      :ARG1 (a / and
            :op1 (c / come-04
                  :ARG1 (c2 / cycle-02
                        :ARG1 (l / learn-01
                              :ARG0 (p / person
                                    :name (n / name
                                          :op1 "Geminis"))
                              :location (s2 / school
                                    :mod (h / hard-04))))
                  :ARG2 (e / end-01
                        :ARG1 c2))
            :op2 (s3 / start-01
                  :ARG0 p
                  :ARG1 (r / reap-01
                        :ARG0 p
                        :ARG1 (r2 / reward-01
                              :ARG1-of (l2 / leave-12
                                    :ARG0 (l3 / lesson
                                          :mod (t / this))
                                    :location (w / wake
                                          :poss l3))))
                  :time (n2 / now)))
      :ARG2 p)

# ::snt Yet, this is no comparison to the advancements you'll make overall, and by the end of 2005, you'll look back in sheer wonder and happiness .
(h / have-concession-91
      :ARG1 (a / and
            :op1 (c / compare-01
                  :polarity -
                  :ARG1 (t / this)
                  :ARG2 (a2 / advance-01
                        :ARG1 (y / you)
                        :mod (o / overall)))
            :op2 (l / look-01
                  :ARG0 y
                  :direction (b / back)
                  :manner (a3 / and
                        :op1 (w / wonder-02
                              :ARG0 y
                              :mod (s / sheer))
                        :op2 (h2 / happy-01
                              :ARG1 y))
                  :time (b2 / by
                        :op1 (e / end-01
                              :ARG1 (d / date-entity
                                    :year 2005))))))

# ::snt And, a relationship you begin now will last a very long time - like, for the rest of your life .
(a / and
      :op2 (l / last-01
            :ARG1 (r / relation-03
                  :ARG0 (y / you)
                  :ARG1-of (b / begin-01
                        :ARG0 y
                        :time (n / now)))
            :ARG2 (t / time
                  :ARG1-of (l2 / long-03
                        :degree (v / very))
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (r3 / rest
                              :part-of (l3 / live-01
                                    :ARG0 y))))))

# ::snt Overall, 2005 is sure to be a year you won't forget .
(s / sure-02
      :ARG1 (y / year
            :domain (d / date-entity
                  :year 2005)
            :ARG1-of (f / forget-01
                  :polarity -
                  :ARG0 (y2 / you)))
      :mod (o / overall))

# ::snt The long awaited relief you've needed in your love life is around the corner, and by the end of the year you will feel much clearer about your partnerships in general .
(a / and
      :op1 (b / be-located-at-91
            :ARG1 (r / relieve-01
                  :ARG1 (l / life
                        :mod (l2 / love-01)
                        :poss (y / you))
                  :ARG1-of (n / need-01
                        :ARG0 y)
                  :ARG1-of (a2 / await-01
                        :ARG1-of (l3 / long-03)))
            :ARG2 (a3 / around
                  :op1 (c / corner)))
      :op2 (f / feel-01
            :ARG0 y
            :ARG1 (c2 / clear-06
                  :ARG1 (p / partnership
                        :poss y
                        :ARG1-of (g / general-02))
                  :ARG2-of (h / have-degree-91
                        :ARG1 y
                        :ARG3 (m / more
                              :quant (m2 / much))))
            :time (b2 / by
                  :op1 (e / end-01
                        :ARG1 (y2 / year)))))

# ::snt It is easy to note the uneasiness of McCartney when he sings: "I've got a feeling, a feeling I can't hide..." in front of Yoko in the film .
(e / easy-05
      :ARG1 (n / note-01
            :ARG1 (u / uneasiness
                  :poss (p / person
                        :name (n2 / name
                              :op1 "McCartney")))
            :time (s / sing-01
                  :ARG0 p
                  :ARG1 (f / feel-01
                        :ARG0 p
                        :ARG1 (p2 / possible-01
                              :polarity -
                              :ARG1 (h / hide-01
                                    :ARG0 p)))
                  :location (ii / in-front-of
                        :op1 (p3 / person
                              :name (n3 / name
                                    :op1 "Yoko")))
                  :subevent-of (f2 / film))))

# ::snt Because of the trauma that his homosexual relation with Brian Epstein had left him, he made lyrics such as: "You can wear a collar and a tie, one thing you can't hide is when you're crippled inside" and gave declarations to the "Rolling Stone" magazine saying that "sometimes he wore Texan boots to feel more secure as a man" .
(a / and
      :op1 (m / make-01
            :ARG0 (h / he)
            :ARG1 (l / lyric
                  :example (a2 / and
                        :op1 (p / possible-01
                              :ARG1 (w / wear-01
                                    :ARG0 (y / you)
                                    :ARG1 (a3 / and
                                          :op1 (c / collar)
                                          :op2 (t / tie))))
                        :op2 (p2 / possible-01
                              :polarity -
                              :ARG1 (h2 / hide-01
                                    :ARG0 y
                                    :ARG1 (t2 / thing
                                          :quant 1
                                          :ARG1-of (ii / include-91
                                                :ARG2 (c2 / cripple-01
                                                      :ARG1 y
                                                      :location (ii2 / inside)))))))))
      :op2 (d / declare-02
            :ARG0 h
            :ARG1 (s / say-01
                  :ARG0 h
                  :ARG1 (w2 / wear-01
                        :ARG0 h
                        :ARG1 (b / boot
                              :mod (s2 / state
                                    :name (n / name
                                          :op1 "Texas")))
                        :frequency (s3 / sometimes)
                        :purpose (f / feel-01
                              :ARG0 h
                              :ARG1 (s4 / secure-02
                                    :ARG1 h
                                    :manner (m2 / man
                                          :domain h)
                                    :ARG2-of (h3 / have-degree-91
                                          :ARG1 h
                                          :ARG3 (m3 / more)))))
                  :ARG2 (m4 / magazine
                        :name (n2 / name
                              :op1 "Rolling"
                              :op2 "Stone"))))
      :ARG1-of (c3 / cause-01
            :ARG0 (t3 / traumatize-01
                  :ARG0 (r / relation-03
                        :ARG0 h
                        :ARG1 (h4 / homosexual)
                        :ARG2 (p3 / person
                              :name (n3 / name
                                    :op1 "Brian"
                                    :op2 "Epstein")))
                  :ARG1 h)))

# ::snt The result will be a dramatic escalation in US and civilian casualties, US forces will be required to bunker themselves further into their bases, and US forces will find themselves required to fight the very government they just finished helping into power .
(r / result-01
      :ARG2 (a / and
            :op1 (e / escalate-01
                  :ARG1 (c / casualty
                        :mod (a2 / and
                              :op1 (c2 / country
                                    :name (n / name
                                          :op1 "US"))
                              :op2 (c3 / civilian)))
                  :manner (d / dramatic))
            :op2 (r2 / require-01
                  :ARG1 (b / bunker-01
                        :ARG0 (f / force
                              :mod c2
                              :ARG1-of b)
                        :degree (f2 / further)
                        :location (b2 / base
                              :poss f))
                  :ARG2 f)
            :op3 (f3 / find-01
                  :ARG0 f
                  :ARG1 (r3 / require-01
                        :ARG1 (f4 / fight-01
                              :ARG0 f
                              :ARG1 (g / government-organization
                                    :ARG0-of (g2 / govern-01)
                                    :mod (v / very)
                                    :ARG1-of (h / help-01
                                          :ARG0 f
                                          :ARG2 (p / power)
                                          :ARG1-of (f5 / finish-01
                                                :ARG0 f
                                                :time (j / just)))))
                        :ARG2 f))))

# ::snt 14 - Percentage carbon dioxide emissions will increase over the next 10 years under Bush's own global-warming plan (an increase of 30 per cent above their 1990 levels) .
(ii / increase-01
      :li 14
      :ARG1 (e / emit-01
            :ARG1 (s / small-molecule
                  :name (n / name
                        :op1 "carbon"
                        :op2 "dioxide"))
            :quant (p / percentage-entity))
      :ARG2 (ii2 / increase-01
            :ARG2 (p2 / percentage-entity
                  :value 30)
            :ARG4 (a / above
                  :op1 (l / level
                        :time (d / date-entity
                              :year 1990))))
      :time (a2 / after
            :op1 (n2 / now)
            :duration (t / temporal-quantity
                  :quant 10
                  :unit (y / year)))
      :prep-under (p3 / plan-01
            :ARG0 (p4 / person
                  :name (n3 / name
                        :op1 "Bush"))
            :ARG1 (w / warm-01
                  :ARG1 (g / globe))))

# ::snt $44m- Amount the Bush-Cheney 2000 campaign and the Republican National Committee received in contributions from the fossil fuel, chemical, timber, and mining industries .
(a / amount
      :quant 44000000
      :ARG1-of (c / contribute-01
            :ARG0 (a2 / and
                  :op1 (ii / industry
                        :mod (f / fuel
                              :mod (f2 / fossil)))
                  :op2 (ii2 / industry
                        :mod (c2 / chemical))
                  :op3 (ii3 / industry
                        :mod (t / timber))
                  :op4 (ii4 / industry
                        :mod (m / mine-01))))
      :ARG1-of (r / receive-01
            :ARG0 (a3 / and
                  :op1 (c3 / campaign-01
                        :ARG0 (a4 / and
                              :op1 (p / person
                                    :name (n / name
                                          :op1 "Bush"))
                              :op2 (p2 / person
                                    :name (n2 / name
                                          :op1 "Cheney")))
                        :time (d / date-entity
                              :year 2000))
                  :op2 (p3 / political-party
                        :name (n3 / name
                              :op1 "Republican"
                              :op2 "National"
                              :op3 "Committee")))))

# ::snt 63 - Percentage of oil the United States imported in 2003, a record high .
(p / percentage-entity
      :value 63
      :quant-of (o / oil
            :ARG1-of (ii / import-01
                  :ARG0 (c / country
                        :name (n / name
                              :op1 "United"
                              :op2 "States"))
                  :time (d / date-entity
                        :year 2003)))
      :ARG1-of (h / high-02
            :mod (r / record)))

# ::snt 750,000 - Tons of toxic waste the US military, the world's biggest polluter, generates around the world each year .
(g / generate-01
      :ARG0 (m / military
            :mod (c / country
                  :name (n / name
                        :op1 "US"))
            :ARG0-of (p / pollute-01
                  :ARG1-of (h / have-degree-91
                        :ARG2 (b / big)
                        :ARG3 (m2 / most)
                        :ARG5 (p2 / pollute-01
                              :location (w / world)))))
      :ARG1 (r / rate-entity-91
            :ARG1 (w2 / waste
                  :mod (t / toxic)
                  :quant (b2 / between
                        :op1 (m3 / mass-quantity
                              :quant 750000
                              :unit (t2 / ton))
                        :op2 (m4 / mass-quantity
                              :quant 750000
                              :unit (t3 / ton))))
            :ARG2 (t4 / temporal-quantity
                  :quant 1
                  :unit (y / year)))
      :location (a / around
            :op1 (w3 / world)))

# ::snt $1m - Estimated value of a painting the Bush Presidential Library in College Station, Texas, received from Prince Bandar, Saudi Arabia's ambassador to the United States and Bush family friend .
(v / value-01
      :ARG1 (t / thing
            :ARG1-of (p / paint-02)
            :ARG1-of (r / receive-01
                  :ARG2 (p2 / prince
                        :name (n / name
                              :op1 "Bandar")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / country
                                    :name (n2 / name
                                          :op1 "Saudi"
                                          :op2 "Arabia"))
                              :ARG2 (a / ambassador
                                    :location (c2 / country
                                          :name (n3 / name
                                                :op1 "United"
                                                :op2 "States"))))
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 (f / family
                                    :name (n4 / name
                                          :op1 "Bush"))
                              :ARG2 (f2 / friend))))
            :ARG2-of h
            :ARG1 (f3 / facility
                  :name (n5 / name
                        :op1 "Bush"
                        :op2 "Presidential"
                        :op3 "Library")
                  :location (c3 / city
                        :name (n6 / name
                              :op1 "College"
                              :op2 "Station")
                        :location (s / state
                              :name (n7 / name
                                    :op1 "Texas")))))
      :ARG2 (m / monetary-quantity
            :quant 1000000
            :unit (d / dollar))
      :ARG1-of (e / estimate-01))

# ::snt $10m- Amount Bush cut from the INS's existing terrorism budget .
(a / amount
      :ARG1-of (c / cut-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 "Bush"))
            :source (b / budget-01
                  :ARG0 (g / government-organization
                        :name (n2 / name
                              :op1 "INS"))
                  :ARG2 (t / terrorism)
                  :ARG1-of (e / exist-01)))
      :domain (m / monetary-quantity
            :quant 10000000
            :unit (d / dollar)))

# ::snt $3,500 - Reward a group of veterans offered in 2000 for anyone who could confirm Bush's Alabama guard service .
(r / reward-01
      :ARG1 (g / group
            :consist-of (v / veteran)
            :ARG1-of (o / offer-01
                  :ARG3 (a / anyone
                        :ARG0-of (c / confirm-01
                              :ARG1 (s / serve-01
                                    :ARG0 (p / person
                                          :name (n / name
                                                :op1 "Bush"))
                                    :ARG1 (g2 / guard)
                                    :ARG2 (s2 / state
                                          :name (n2 / name
                                                :op1 "Alabama")))
                              :ARG1-of (p2 / possible-01)))
                  :time (d / date-entity
                        :year 2000)))
      :ARG3 (m / monetary-quantity
            :quant 3000
            :unit (d2 / dollar)))

# ::snt $80,000 - Amount an Iraqi firm spent (using Saddam's confiscated funds) to build the same factory, after delays prevented the American firm from starting it .
(a / amount
      :quant 80000
      :ARG3-of (s / spend-01
            :ARG0 (f / firm
                  :mod (c / country
                        :name (n / name
                              :op1 "Iraq")))
            :ARG1 (b / build-01
                  :ARG0 f
                  :ARG1 (f2 / factory
                        :ARG1-of (s2 / same-01)))
            :manner (u / use-01
                  :ARG0 f
                  :ARG1 (f3 / fund
                        :ARG1-of (c2 / confiscate-01
                              :ARG0 (p / person
                                    :name (n2 / name
                                          :op1 "Saddam")))))
            :time (a2 / after
                  :op1 (p2 / prevent-01
                        :ARG0 (d / delay-01)
                        :ARG1 (s3 / start-01
                              :ARG0 (f4 / firm
                                    :mod (c3 / country
                                          :name (n3 / name
                                                :op1 "America")))
                              :ARG1 f2)))))

# ::snt 37 - Death toll of US soldiers in Iraq in May 2003, the month combat operations "officially" ended .
(t / toll
      :quant 37
      :mod (d / die-01
            :ARG1 (s / soldier
                  :mod (c / country
                        :name (n / name
                              :op1 "US")))
            :location (c2 / country
                  :name (n2 / name
                        :op1 "Iraq")))
      :time (d2 / date-entity
            :month 5
            :year 2003
            :time-of (e / end-01
                  :ARG1 (o / operation
                        :mod (c3 / combat-01))
                  :mod (o2 / official))))

# ::snt $0 - Amount Bush allocated for port security in 2003 .
(a / amount
      :ARG1-of (a2 / allocate-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 "Bush"))
            :ARG2 (s / secure-02
                  :ARG1 (p2 / port))
            :time (d / date-entity
                  :year 2003))
      :domain (m / monetary-quantity
            :quant 0
            :unit (d2 / dollar)))

# ::snt $42,000 - Average savings members of Bush's cabinet received in 2003 as a result of cuts in capital gains and dividends taxes .
(m / monetary-quantity
      :quant 42000
      :unit (d / dollar)
      :ARG1-of (a / average-04)
      :ARG1-of (r / receive-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / cabinet
                              :poss (p2 / person
                                    :name (n / name
                                          :op1 "Bush")))
                        :ARG2 (m2 / member)))
            :time (d2 / date-entity
                  :year 2003))
      :ARG2-of (r2 / result-01
            :ARG1 (c2 / cut-02
                  :ARG1 (a2 / and
                        :op1 (t / tax-01
                              :ARG3 (g / gain-01
                                    :mod (c3 / capital)))
                        :op2 (t2 / tax-01
                              :ARG3 (d3 / dividend))))))

# ::snt $113m - Amount of total hard money the Bush-Cheney 2000 campaign received, a record .
(a / amount
      :quant-of (m / money
            :ARG1-of (h / hard-04)
            :ARG1-of (t / total-01)
            :ARG1-of (r / receive-01
                  :ARG0 (c / campaign-01
                        :ARG0 (a2 / and
                              :op1 (p / person
                                    :name (n / name
                                          :op1 "Bush"))
                              :op2 (p2 / person
                                    :name (n2 / name
                                          :op1 "Cheney")))
                        :time (d / date-entity
                              :year 2000))))
      :domain (m2 / monetary-quantity
            :quant 900000000
            :unit (d2 / dollar))
      :ARG1-of (r2 / record-01))

# ::snt $30,858 - Amount Bush himself saved in taxes in 2003 .
(a / amount
      :quant 320058
      :ARG1-of (s / save-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 "Bush"))
            :ARG3 (t / tax-01)
            :time (d / date-entity
                  :year 2003))
      :unit (d2 / dollar))

# ::snt $205m - Amount Enron CEO Kenneth Lay earned from stock option profits over a four-year period .
(a / amount
      :ARG1-of (e / earn-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 "Kenneth"
                        :op2 "Lay")
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / company
                              :name (n2 / name
                                    :op1 "Enron"))
                        :ARG2 (o / officer
                              :mod (c2 / chief)
                              :mod (e2 / executive))))
            :ARG2 (p2 / profit-01
                  :ARG1 (o2 / option
                        :mod (s / stock)))
            :duration (t / temporal-quantity
                  :quant 4
                  :unit (y / year)))
      :domain (m / monetary-quantity
            :quant 205000000
            :unit (d / dollar)))

# ::snt $101m - Amount Lay made from selling his Enron shares just before the company went bankrupt .
(a / amount
      :ARG1-of (m / make-05
            :ARG0 (p / person
                  :name (n / name
                        :op1 "Lay"))
            :ARG2 (s / sell-01
                  :ARG0 p
                  :ARG1 (s2 / share
                        :poss p
                        :mod (c / company
                              :name (n2 / name
                                    :op1 "Enron"))))
            :time (b / before
                  :op1 (b2 / bankrupt-01
                        :ARG1 c)
                  :mod (j / just)))
      :domain (m2 / monetary-quantity
            :quant 101000000
            :unit (d / dollar)))

# ::snt 15 - Average number of minutes Bush spent reviewing capital punishment cases while governor of Texas .
(n / number
      :value 15
      :ARG2-of (a / average-01)
      :quant-of (t / temporal-quantity
            :unit (m / minute)
            :ARG1-of (s / spend-02
                  :ARG0 (p / person
                        :name (n2 / name
                              :op1 "Bush"))
                  :ARG2 (r / review-01
                        :ARG0 p
                        :ARG1 (c / case-03
                              :ARG1 (p2 / punish-01
                                    :mod (c2 / capital))))
                  :time (h / have-org-role-91
                        :ARG0 p
                        :ARG1 (s2 / state
                              :name (n3 / name
                                    :op1 "Texas"))
                        :ARG2 (g / governor)))))

# ::snt $66b - Amount the United States spent on international aid and diplomacy in 1949 .
(a / amount
      :ARG3-of (s / spend-01
            :ARG0 (c / country
                  :name (n / name
                        :op1 "United"
                        :op2 "States"))
            :ARG1 (a2 / and
                  :op1 (a3 / aid-01
                        :mod (ii / international))
                  :op2 (d / diplomacy))
            :time (d2 / date-entity
                  :year 1949))
      :domain (m / monetary-quantity
            :quant 66000000000
            :unit (d3 / dollar)))

# ::snt $23.8b - Amount the United States spent on international aid and diplomacy in 2002 .
(a / amount
      :ARG3-of (s / spend-01
            :ARG0 (c / country
                  :name (n / name
                        :op1 "United"
                        :op2 "States"))
            :ARG1 (a2 / and
                  :op1 (a3 / aid-01
                        :mod (ii / international))
                  :op2 (d / diplomacy))
            :time (d2 / date-entity
                  :year 2002))
      :domain (m / monetary-quantity
            :quant 2300000000
            :unit (d3 / dollar)))

# ::snt 28 - Number of vacation days Bush took in August 2003, the second-longest vacation of any president in US history .
(n / number
      :quant-of (d / day
            :duration-of (v / vacation-01
                  :ARG0 (p / person
                        :name (n2 / name
                              :op1 "Bush")))
            :time (d2 / date-entity
                  :month 8
                  :year 2003))
      :domain (v2 / vacation-01
            :ARG0 p
            :ARG1-of (h / have-degree-91
                  :ARG2 (l / long-03)
                  :ARG3 (m / most
                        :ord (o / ordinal-entity
                              :value 2))
                  :ARG5 (v3 / vacation-01
                        :ARG0 (p2 / person
                              :ARG0-of (h2 / have-org-role-91
                                    :ARG2 (p3 / president))
                              :mod (a / any)
                              :time (h3 / history
                                    :mod (c / country
                                          :name (n3 / name
                                                :op1 "US"))))))))

# ::snt 13 - Number of vacation days the average American receives each Year .
(n / number
      :value 13
      :quant-of (d / day
            :purpose (v / vacation-01)
            :ARG1-of (r / receive-01
                  :ARG0 (p / person
                        :mod (c / country
                              :name (n2 / name
                                    :op1 "America"))
                        :ARG1-of (a / average-04))
                  :frequency (t / temporal-quantity
                        :quant 1
                        :unit (y / year)
                        :mod (e / each)))))

# ::snt 28 - Number of vacation days Bush took in August 2001, the month he received a 6 August Presidential Daily Briefing headed "Osama bin Laden Determined to Strike US Targets. "
(n / number
      :quant-of (d / day
            :duration-of (v / vacation-01
                  :ARG0 (p / person
                        :name (n2 / name
                              :op1 "Bush"))
                  :time (d2 / date-entity
                        :month 8
                        :year 2001
                        :time-of (r / receive-01
                              :ARG0 p
                              :ARG1 (b / brief-01
                                    :ARG0 (p2 / president)
                                    :ARG2 (d3 / determined-02
                                          :ARG0 (p3 / person
                                                :name (n3 / name
                                                      :op1 "Osama"
                                                      :op2 "bin"
                                                      :op3 "Laden"))
                                          :ARG1 (s / strike-01
                                                :ARG0 p3
                                                :ARG1 (t / target
                                                      :mod (c / country
                                                            :name (n4 / name
                                                                  :op1 "US")))))
                                    :mod (d4 / daily)
                                    :ARG1-of (h / head-01))
                              :time (d5 / date-entity
                                    :day 6
                                    :month 8)))))
      :ord (o / ordinal-entity
            :value 28))

# ::snt $64.2m - The Amount Pioneers and Rangers had raised for Bush-Cheney as of March 2004 .
(m / monetary-quantity
      :quant 64200000
      :unit (d / dollar)
      :ARG1-of (r / raise-02
            :ARG0 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 "Pioneers"))
                  :op2 (p2 / person
                        :name (n2 / name
                              :op1 "Ranger")))
            :ARG3 a
            :op1 (p3 / person
                  :name (n3 / name
                        :op1 "Bush-Cheney"))
            :op2 (p4 / person
                  :name (n4 / name
                        :op1 "Rangers")))
      :time (a2 / as-of
            :op1 (d2 / date-entity
                  :month 3
                  :year 2004)))

# ::snt Go onto the UCAS website, go onto course search and search for the courses you want to do .
(a / and
      :op1 (g / go-02
            :mode imperative
            :ARG0 (y / you)
            :ARG4 (w / website
                  :mod (o / organization
                        :name (n / name
                              :op1 "UCAS"))))
      :op2 (g2 / go-02
            :mode imperative
            :ARG0 y
            :ARG4 (s / search-01
                  :ARG0 y
                  :ARG2 (c / course)))
      :op3 (s2 / search-01
            :mode imperative
            :ARG0 y
            :ARG2 (c2 / course
                  :ARG1-of (d / do-02
                        :ARG0 y
                        :ARG1-of (w2 / want-01
                              :ARG0 y)))))

# ::snt They'll give you a comprehensive list of all the universities that do the courses you want, plus all the information you need to apply .
(g / give-01
      :ARG0 (t / they)
      :ARG1 (a / and
            :op1 (l / list
                  :consist-of (u / university
                        :mod (a2 / all)
                        :ARG0-of (d / do-02
                              :ARG1 (c / course
                                    :ARG1-of (w / want-01
                                          :ARG0 (y / you)))))
                  :mod (c2 / comprehensive))
            :op2 (ii / information
                  :mod (a3 / all)
                  :ARG1-of (n / need-01
                        :ARG0 y
                        :purpose (a4 / apply-01
                              :ARG0 y))))
      :ARG2 y)

# ::snt In fact Philippines is famous to accept people like these people i mentioned whose not filipinos but helping the Philippines to plunge in the pit as they are the rot of the country .
(f / fame-01
      :ARG1 (c / country
            :name (n / name
                  :op1 "Philippines"))
      :ARG2 (a / accept-01
            :ARG0 c
            :ARG1 (p / person
                  :ARG1-of (r / resemble-01
                        :ARG2 (p2 / person
                              :mod (t / this)
                              :ARG1-of (m / mention-01
                                    :ARG0 (ii / i))
                              :mod c
                              :ARG1-of (c2 / contrast-01
                                    :ARG2 (h / help-01
                                          :ARG0 p2
                                          :ARG1 (p3 / plunge-01
                                                :ARG1 c
                                                :ARG4 (p4 / pit))
                                          :ARG2 c
                                          :ARG1-of (c3 / cause-01
                                                :ARG0 (r2 / rot
                                                      :poss c
                                                      :domain p))))))))
      :mod (ii2 / in-fact))

# ::snt My myTouch 4G crashes with most custom ROMs I install .
(c / crash-01
      :ARG1 (p / product
            :name (n / name
                  :op1 "MyTouch"
                  :op2 "4G")
            :poss (ii / i))
      :ARG1-of (c2 / cause-01
            :ARG0 (m / mod
                  :ARG1-of (c3 / custom-02)
                  :quant (m2 / most)
                  :ARG1-of (ii2 / install-01
                        :ARG0 ii))))

# ::snt Take a photo of a very light plain subject close to the lens using long exposure and smallest aperture you have - over expose by a couple of stop s
(p / photograph-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / subject
            :ARG1-of (l / light-07
                  :degree (v / very))
            :mod (p2 / plain)
            :ARG1-of (c / close-10
                  :ARG2 (l2 / lens)))
      :manner (u / use-01
            :ARG0 y
            :ARG1 (a / and
                  :op1 (e / expose-01
                        :ARG1-of (l3 / long-03))
                  :op2 (h / have-degree-91
                        :ARG1 (a2 / aperture
                              :ARG1-of (h2 / have-03
                                    :ARG0 y))
                        :ARG2 (s2 / small)
                        :ARG3 (m / most)))
            :ARG1-of (m2 / mean-01
                  :ARG2 (e2 / expose-01
                        :ARG0 y
                        :mod (o / over)
                        :quant (c2 / couple
                              :op1 (s3 / stop-quantity
                                    :quant 1))))))

# ::snt But he was an inside/outside cat (only one I owned - rest have been 100 0nside cats) .
(c / contrast-01
      :ARG2 (c2 / cat
            :mod (s / slash
                  :op1 (ii / inside)
                  :op2 (o / outside))
            :domain (h / he)
            :ARG1-of (o2 / own-01
                  :ARG0 (ii2 / i)
                  :ARG1-of (m / mean-01
                        :ARG2 (c3 / cat
                              :quant 100
                              :mod (s2 / side)
                              :domain (r / rest))))))

# ::snt http://www.solutions.com/jump.jsp?itemID=1361&itemType=PRODUCT&path=1%2C3%2C477&iProductID=1361 If anything you use has a strong or lingering fragrance it can bother or potentially injure the bird .
(m / multi-sentence
      :snt1 (u / url-entity
            :value "http://www.solutions.com/jump.jsp?itemID=1361&itemType=PRODUCT&path=1%2C3%2C477&iProductID=1361")
      :snt2 (p / possible-01
            :ARG1 (o / or
                  :op1 (b / bother-01
                        :ARG0 (a / anything
                              :ARG1-of (u2 / use-01
                                    :ARG0 (y / you)))
                        :ARG1 (b2 / bird))
                  :op2 (ii / injure-01
                        :ARG0 a
                        :ARG1 b2
                        :mod (p2 / potential)))
            :condition (o2 / or
                  :op1 (h / have-03
                        :ARG0 a
                        :ARG1 (s / scent-02
                              :ARG1 a
                              :ARG1-of (s2 / strong-02)))
                  :op2 (h2 / have-03
                        :ARG0 a
                        :ARG1 s
                        :ARG1-of (l / linger-01)))))

# ::snt i want to buy a laptop for my girlfriend in ireland,would she be able to just use the dongle she uses for her pc and put it straight in the laptop and it work like normall ?
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (ii / i)
            :ARG1 (b / buy-01
                  :ARG0 ii
                  :ARG1 (l / laptop)
                  :ARG4 (p / person
                        :location (c / country
                              :name (n / name
                                    :op1 "Ireland"))
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (g / girlfriend)))))
      :snt2 (p2 / possible-01
            :ARG1 (a / and
                  :op1 (u / use-01
                        :ARG0 p
                        :ARG1 (d / dongle
                              :ARG1-of (u2 / use-01
                                    :ARG0 p
                                    :ARG2 (c2 / computer
                                          :poss p)))
                        :mod (j / just))
                  :op2 (p3 / put-01
                        :ARG0 p
                        :ARG1 d
                        :ARG2 l
                        :ARG1-of (s / straight-04))
                  :op3 (w2 / work-09
                        :ARG1 d
                        :ARG1-of (r / resemble-01
                              :ARG2 (n2 / normall))))
            :polarity (a2 / amr-unknown)))

# ::snt When most of the food or drinks I got only included two !
(ii / include-01
      :ARG1 (t / thing
            :quant 2
            :ARG1-of (g / get-01
                  :ARG0 (ii2 / i)))
      :ARG2 (t2 / thing
            :ARG1-of (ii3 / include-91
                  :ARG2 (o / or
                        :op1 (f / food)
                        :op2 (d / drink)))
            :quant (m / most))
      :mod (o2 / only))

# ::snt So can somebody please list ALL of the food that includes the game pieces, and the number of game pieces you get with THAT FOOD !
(p / possible-01
      :polarity (a / amr-unknown)
      :polite +
      :ARG1 (l / list-01
            :ARG0 (s / somebody)
            :ARG1 (a2 / and
                  :op1 (f / food
                        :mod (a3 / all)
                        :ARG2-of (ii / include-01
                              :ARG1 (p2 / piece
                                    :mod (g / game))))
                  :op2 (n / number
                        :quant-of (p3 / piece
                              :mod (g2 / game)
                              :ARG1-of (g3 / get-01
                                    :ARG0 (y / you)
                                    :ARG2 f))))))

# ::snt scroll down and this website shows each thing you can buy ( :
(a / and
      :op1 (s / scroll-01
            :ARG0 (y / you)
            :direction (d / down))
      :op2 (s2 / show-01
            :ARG0 (w / website
                  :mod (t / this))
            :ARG1 (t2 / thing
                  :mod (e / each)
                  :ARG1-of (b / buy-01
                        :ARG0 y
                        :ARG1-of (p / possible-01)))))

# ::snt I'm quite sure , you don't even have to buy another , all you need to do , is to pour some oil on the wheel , or even put some rubber on it's edges , the part that is making the noise .
(s / sure-02
      :ARG0 (ii / i)
      :ARG1 (o / obligate-01
            :polarity -
            :ARG1 (y / you)
            :ARG2 (b / buy-01
                  :ARG0 y
                  :ARG1 (a / another))
            :mod (e / even)
            :ARG1-of (c / cause-01
                  :ARG1 y
                  :ARG2 (d / do-02
                        :ARG0 y
                        :ARG1 (o2 / or
                              :op1 (p / pour-01
                                    :ARG0 y
                                    :ARG1 (o3 / oil
                                          :mod (s2 / some))
                                    :ARG2 (w / wheel
                                          :part (e2 / edge
                                                :mod (p2 / part
                                                      :ARG0-of (m / make-01
                                                            :ARG1 (n / noise))))))
                              :op2 (p3 / put-01
                                    :ARG0 y
                                    :ARG1 (r / rubber
                                          :mod (s3 / some))
                                    :ARG2 e2
                                    :mod (e3 / even)))
                        :mod (a2 / all)))
            :ARG0-of c)
      :degree (q / quite))

# ::snt How can I change my boarding station against the ticket I booked a month back from counter ?
(p / possible-01
      :ARG1 (c / change-01
            :ARG0 (ii / i)
            :ARG1 (s / station
                  :location-of (b / board-01
                        :ARG0 ii))
            :ARG2 (t / ticket
                  :ARG1-of (b2 / book-03
                        :ARG0 ii
                        :time (b3 / before
                              :op1 (n / now)
                              :quant (t2 / temporal-quantity
                                    :quant 1
                                    :unit (m / month)))
                        :source (c2 / counter)))
            :manner (a / amr-unknown)))

# ::snt This is the cage I have whhich is pretty much IMPOSSIBLE to escape from :
(c / cage
      :ARG1-of (h / have-03
            :ARG0 (ii / i))
      :ARG1-of (e / escape-01
            :ARG1-of (p / possible-01
                  :polarity -
                  :degree (p2 / pretty-much)))
      :domain (t / this))

# ::snt Please only reviews on the three I mentioned earlier .
(r / review-02
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thing
            :quant 3
            :ARG1-of (m / mention-01
                  :ARG0 (ii / i)
                  :time (b / before)))
      :mod (o / only))

# ::snt I have never eaten at the ones you have listed nor do I know of anyone who has .
(a / and
      :op1 (e / eat-01
            :polarity -
            :ARG0 (ii / i)
            :location (o / one
                  :ARG1-of (l / list-01
                        :ARG0 (y / you)))
            :time (e2 / ever))
      :op2 (k / know-02
            :polarity -
            :ARG0 ii
            :ARG1 (a2 / anyone
                  :ARG0-of (e3 / eat-01
                        :ARG1 o))))

# ::snt You will also have to be wary of mold forming on any toys or hide-aways he may have .
(o / obligate-01
      :ARG1 (y / you)
      :ARG2 (w / wary
            :domain y
            :topic (f / form-01
                  :ARG1 (m / mold)
                  :location (o2 / or
                        :op1 (t / toy)
                        :op2 (h / hide-away
                              :ARG1-of (h2 / have-03
                                    :ARG0 (h3 / he)
                                    :ARG1-of (p / possible-01)))
                        :mod (a / any))))
      :mod (a2 / also))

# ::snt Overall, it is not a good solution, but you can keep him healthy and pull it off if you take the time to give him the extra care he will need because of it .
(c / contrast-01
      :ARG1 (s / solve-01
            :ARG2 (ii / it)
            :ARG1-of (g / good-02
                  :polarity -
                  :mod (o / overall)))
      :ARG2 (p / possible-01
            :ARG1 (a / and
                  :op1 (k / keep-01
                        :ARG0 (y / you)
                        :ARG1 (h / healthy
                              :domain (h2 / he)))
                  :op2 (p2 / pull-off-03
                        :ARG0 y
                        :ARG1 ii))
            :condition (t / take-01
                  :ARG0 y
                  :ARG1 (t2 / time)
                  :purpose (g2 / give-01
                        :ARG0 y
                        :ARG1 (c2 / care-03
                              :ARG1 h2
                              :mod (e / extra)
                              :ARG1-of (n / need-01
                                    :ARG0 h2
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 ii)))
                        :ARG2 h2))))

# ::snt (Because apparently my mom is very picky, she says the bird might get sick if it doesn't eat the right food) IS there any specific food I might find at any pet shop ?
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (p / picky
                  :degree (v / very)
                  :domain (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (m2 / mom)))
                  :ARG1-of (a / appear-02))
            :ARG1 (s / say-01
                  :ARG0 p2
                  :ARG1 (p3 / possible-01
                        :ARG1 (s2 / sick-05
                              :ARG1 (b / bird)
                              :condition (e / eat-01
                                    :polarity -
                                    :ARG0 b
                                    :ARG1 (f / food
                                          :ARG1-of (r / right-03)))))))
      :snt2 (f2 / find-01
            :ARG0 (ii2 / i)
            :ARG1 (f3 / food
                  :ARG1-of (s3 / specific-02)
                  :mod (a2 / any))
            :ARG1-of (p4 / possible-01)
            :location (s4 / shop
                  :mod (p5 / pet)
                  :mod a2)
            :polarity (a3 / amr-unknown)))

# ::snt If you knew what kind of "meat" they put in canned cat food you'd understand this .
(u / understand-01
      :ARG0 (y / you)
      :ARG1 (t / this)
      :condition (k / know-01
            :ARG0 y
            :ARG1 (k2 / kind
                  :mod (m / meat)
                  :ARG1-of (p / put-01
                        :ARG0 (t2 / they)
                        :ARG2 (f / food
                              :ARG1-of (c / can-01)
                              :beneficiary (c2 / cat))))))

# ::snt Some of the major differences I see is the HD video, longer battery life, and faster processor that the NOOK Tablet boasts .
(d / differ-02
      :ARG3 (a / and
            :op1 (v / video
                  :mod (h / high-definition))
            :op2 (h2 / have-degree-91
                  :ARG1 (l / life
                        :mod (b / battery))
                  :ARG2 (l2 / long-03
                        :ARG1 l)
                  :ARG3 (m / more))
            :op3 (h3 / have-degree-91
                  :ARG1 (p / processor)
                  :ARG2 (f / fast-02
                        :ARG1 p)
                  :ARG3 (m2 / more))
            :ARG1-of (b2 / boast-01
                  :ARG0 (p2 / product
                        :name (n / name
                              :op1 "NOOK"
                              :op2 "Tablet"))))
      :ARG1-of (m3 / major-02)
      :ARG1-of (s / see-01
            :ARG0 (ii / i))
      :mod (s2 / some))

# ::snt Add aquasafe with the water you put in it .
(a / add-02
      :ARG1 (w / water
            :ARG1-of (p / put-01
                  :ARG0 (y / you)
                  :ARG2 (ii / it)))
      :ARG2 (a2 / aquaafe))

# ::snt ... Fishing, Jet skies, snorkeling, diving are some of the things you can do for fun .
(p / possible-01
      :ARG1 (d / do-02
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :example (a / and
                        :op1 (f / fish-01)
                        :op2 (s / sky
                              :mod (j / jet))
                        :op3 (s2 / snorkel-01)
                        :op4 (d2 / dive-01)
                        :quant (s3 / some)))
            :ARG2 (f2 / fun-01
                  :ARG0 y)))

# ::snt Unless you have a particular skill they need - and firm job offer before going - I would think twice about it !
(t / think-01
      :frequency 2
      :ARG0 (ii / i)
      :ARG1 (ii2 / it)
      :condition (h / have-03
            :polarity -
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (s / skill
                        :ARG1-of (n / need-01
                              :ARG0 (t2 / they))
                        :mod (p / particular))
                  :op2 (o / offer-01
                        :ARG1 (j / job)
                        :ARG3 y
                        :ARG1-of (f / firm-03)))
            :time (b / before
                  :op1 (g / go-02
                        :ARG0 y))))

# ::snt Ive had cats for 35 years and the oldest cat I've ever had was a 23 year old female and she was exceptional .
(a / and
      :op1 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (c / cat)
            :duration (t / temporal-quantity
                  :quant 35
                  :unit (y / year)))
      :op2 (h2 / have-degree-91
            :ARG1 (c2 / cat
                  :mod (f / female)
                  :age (t2 / temporal-quantity
                        :quant 23
                        :unit (y2 / year))
                  :ARG1-of (h3 / have-03
                        :ARG0 ii
                        :time (e / ever)))
            :ARG2 (o / old)
            :ARG3 (m / most)
            :ARG5 c)
      :op3 (e2 / exceptional
            :domain c2))

# ::snt i was reading the package for a tank heater i bought for my 40 gallon tank for my snake and it said it can be put under the tank or on the side .
(a / and
      :op1 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (p / package-01
                  :ARG1 (t / thing
                        :ARG0-of (h / heat-01
                              :ARG1 (t2 / tank))
                        :ARG1-of (b / buy-01
                              :ARG0 ii
                              :purpose (t3 / tank
                                    :mod (v / volume-quantity
                                          :quant 40
                                          :unit (g / gallon))
                                    :poss ii
                                    :purpose (s / snake
                                          :poss ii))))))
      :op2 (s2 / say-01
            :ARG0 p
            :ARG1 (p2 / possible-01
                  :ARG1 (p3 / put-01
                        :ARG1 t
                        :ARG2 (o / or
                              :op1 (u / under
                                    :op1 (t4 / tank))
                              :op2 (s3 / side))))))

# ::snt I was gonna have a dinner party that night but my cousin is having Having her bridal shower so brunch is it but the only places I know are denny's and ihop .
(c / contrast-01
      :ARG1 (h / have-06
            :ARG0 (ii / i)
            :ARG1 (p / party
                  :mod (d / dinner))
            :time (d2 / date-entity
                  :dayperiod (n / night)
                  :mod (t / that)))
      :ARG2 (h2 / have-06
            :ARG0 (p2 / person
                  :ARG0-of (h3 / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (c2 / cousin)))
            :ARG1 (s / shower-01
                  :ARG1 p2
                  :mod (b / bridal))
            :ARG0-of (c3 / cause-01
                  :ARG1 (b2 / be-temporally-at-91
                        :ARG1 p
                        :ARG2 (b3 / brunch))))
      :ARG1-of (c4 / contrast-01
            :ARG2 (p3 / place
                  :ARG1-of (k / know-02
                        :ARG0 ii)
                  :mod (o / only)
                  :domain (a / and
                        :op1 (d3 / denny's)
                        :op2 (ii2 / ihop)))))

# ::snt What are some fun things I could do while in Japan ?
(p / possible-01
      :ARG1 (d / do-02
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (f / fun-01)
                  :quant (s / some)
                  :domain (a / amr-unknown))
            :time (b / be-located-at-91
                  :ARG1 ii
                  :ARG2 (c / country
                        :name (n / name
                              :op1 "Japan")))))

# ::snt I'll be in Okinawa for about a week so I was wondering what are some fun things I could do ?
(c / cause-01
      :ARG0 (b / be-located-at-91
            :ARG1 (ii / i)
            :ARG2 (ii2 / island
                  :name (n / name
                        :op1 "Okinawa"))
            :duration (a / about
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (w / week))))
      :ARG1 (w2 / wonder-01
            :ARG0 ii
            :ARG1 (t2 / thing
                  :ARG1-of (d / do-02
                        :ARG0 ii
                        :ARG1-of (p / possible-01))
                  :ARG1-of (f / fun-01)
                  :quant (s / some))))

# ::snt The best thing you can do in Okinawa is to go to a beach .
(t / thing
      :ARG1-of (g / good-02)
      :domain (g2 / go-02
            :ARG0 (y / you)
            :ARG4 (b / beach))
      :ARG1-of (d / do-02
            :ARG0 y
            :location (ii / island
                  :name (n / name
                        :op1 "Okinawa"))
            :ARG1-of (p / possible-01))
      :ARG2-of (h / have-degree-91
            :ARG1 g2
            :ARG3 (m / most)))

# ::snt The main thing people do there is go to the beach .
(g / go-02
      :ARG0 (p / person)
      :ARG4 (b / beach)
      :mod (m / main)
      :location (t / there))

# ::snt The screw-up was the kind of things you have happen when you have bean-counters (and McNamara was nothing if not a bean-counter) instead of soldiers in charge of the military .
(s / screw-up-01
      :mod (k / kind
            :domain (t / thing
                  :ARG1-of (h / have-06
                        :ARG0 (y / you)
                        :time (a / and
                              :op1 (h2 / have-06
                                    :ARG0 y
                                    :ARG1 (c / counter-01
                                          :ARG1 (b / bean)))
                              :op2 (n / nothing-if
                                    :op1 (c2 / counter-01
                                          :ARG1 (b2 / bean)
                                          :domain (p / person
                                                :name (n2 / name
                                                      :op1 "McNamara"))))
                              :ARG1-of (ii / instead-of-91
                                    :ARG2 (s2 / soldier
                                          :ARG1-of (c3 / charge-08
                                                :ARG2 (m / military)))))))))

# ::snt A taller horse doesn't always mean a horse you can't handle .
(m / mean-01
      :polarity -
      :ARG1 (h / horse
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (t / tall)
                  :ARG3 (m2 / more)))
      :ARG2 (h3 / horse
            :ARG1-of (h4 / handle-01
                  :ARG0 (y / you)
                  :ARG1-of (p / possible-01
                        :polarity -)))
      :time (a / always))

# ::snt The two lay their eggs inside the cave you made for them .
(l / lay-01
      :ARG0 (p / person
            :quant 2)
      :ARG1 (e / egg
            :poss p)
      :location (ii / inside
            :op1 (c / cave
                  :ARG1-of (m / make-01
                        :ARG0 (y / you)
                        :ARG3 p))))

# ::snt I know you are very worried, but getting her to the vet is the best thing you can do for her .
(h / have-concession-91
      :ARG1 (g / get-05
            :ARG0 (y / you)
            :ARG1 (s / she)
            :ARG2 (v / vet)
            :ARG1-of (d / do-02
                  :ARG0 y
                  :ARG2 s
                  :ARG1-of (p / possible-01)
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g2 / good-02
                              :ARG1 g)
                        :ARG3 (m / most))))
      :ARG2 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (w / worry-02
                  :ARG0 y
                  :degree (v2 / very))))

# ::snt I've had a few great shots ruined myself because there was something in the background I didn't notice at first .
(r / ruin-01
      :ARG0 (s / shot
            :quant (f / few)
            :mod (g / great))
      :ARG1 (ii / i)
      :ARG1-of (c / cause-01
            :ARG0 (n / notice-01
                  :polarity -
                  :ARG0 ii
                  :ARG1 (s2 / something
                        :location (b / background))
                  :time (a / at-first))))

# ::snt The only notable difference I have noticed is that in the south of Ireland one night of the wake is often held in the chapel the night before the funeral, this tradition started after the civil war .
(n / notice-01
      :ARG0 (ii / i)
      :ARG1 (d / differ-02
            :ARG1 (h / hold-04
                  :ARG1 (w / wake-02
                        :time (d2 / date-entity
                              :dayperiod (n2 / night)))
                  :location (c / chapel)
                  :frequency (o / often)
                  :time (d3 / date-entity
                        :dayperiod (n3 / night)
                        :time (b / before
                              :op1 (f / funeral)))
                  :location (s / south
                        :part-of (c2 / country
                              :name (n4 / name
                                    :op1 "Ireland")))
                  :ARG1-of (s2 / start-01
                        :time (a / after
                              :op1 (w2 / war
                                    :name (n5 / name
                                          :op1 "Civil"
                                          :op2 "War")))))
            :ARG1-of (n6 / notable-04)
            :mod (o2 / only)))

# ::snt the irish customs we have in our family are; we make sinnel cake for easter ,barn brack and col-cannon for Halloween .
(c / custom
      :mod (c2 / country
            :name (n / name
                  :op1 "Ireland"))
      :ARG1-of (h / have-03
            :ARG0 (w / we)
            :prep-in (f / family
                  :poss w))
      :example (m / make-01
            :ARG0 w
            :ARG1 (a / and
                  :op1 (c3 / cake
                        :mod (s / sinnel)
                        :purpose (f2 / festival
                              :name (n2 / name
                                    :op1 "Easter")))
                  :op2 (b / brack
                        :mod (b2 / barn)
                        :purpose (f3 / festival
                              :name (n3 / name
                                    :op1 "Halloween")))
                  :op3 (c4 / col-cannon
                        :purpose f3))))

# ::snt All horses I've had delivered to me since then are happy and healthy when they arrive .
(a / and
      :op1 (h / happy-01
            :ARG1 (h2 / horse
                  :mod (a2 / all)
                  :ARG1-of (d / deliver-01
                        :ARG0 (ii / i)
                        :ARG2 ii
                        :time (s / since
                              :op1 (t / then)))))
      :op2 (h3 / healthy
            :domain h2)
      :time (a3 / arrive-01
            :ARG1 h2))

# ::snt Make sure the trailer service you use is bonded/insured and knows something about first aid .
(e / ensure-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (s / slash
                  :op1 (b / bond-01
                        :ARG1 (s2 / service-05
                              :ARG1 (t / trailer)
                              :ARG1-of (u / use-01
                                    :ARG0 y)))
                  :op2 (ii / insure-02
                        :ARG3 s2))
            :op2 (k / know-01
                  :ARG0 s2
                  :ARG1 (s3 / something
                        :topic (a2 / aid-01
                              :mod (f / first))))))

# ::snt so any price you find, DOUBLE IT figure, $40K at least .
(d / double-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p / price-01
            :ARG1-of (f / find-01
                  :ARG0 y)
            :mod (a / any))
      :ARG4 (a2 / at-least
            :op1 (m / monetary-quantity
                  :quant 40000
                  :unit (d2 / dollar)))
      :mod (f2 / figure))

# ::snt Yes,but be sure that your chickens are all hens(I mean not roosters),Roosters may attack rabbits or anything they see moving,so be aware of that,hens are friendly with almost all kinds of pets !
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (e / ensure-01
                  :ARG0 (y / you)
                  :ARG1 (h / have-mod-91
                        :ARG1 (c2 / chicken
                              :poss y)
                        :ARG2 (h2 / hen
                              :mod (a / all))
                        :ARG1-of (m2 / mean-01
                              :ARG0 (ii / i)
                              :ARG2 (r / rooster
                                    :polarity -)))))
      :snt2 (p / possible-01
            :ARG1 (a2 / attack-01
                  :ARG0 (r2 / rooster)
                  :ARG1 (o / or
                        :op1 (b / bunny)
                        :op2 (a3 / anything
                              :ARG1-of (s / see-01
                                    :ARG0 r2
                                    :ARG2 (m3 / move-01
                                          :ARG1 a3)))))
            :ARG0-of (c3 / cause-01
                  :ARG1 (r3 / realize-01
                        :ARG0 y
                        :ARG1 p)))
      :snt3 (f / friendly-01
            :mode expressive
            :ARG1 (h3 / hen)
            :ARG2 (p2 / pet
                  :mod (k / kind
                        :mod (a4 / all
                              :mod (a5 / almost))))))

# ::snt I have melted small amounts of bronze in a crucible with a large propane torch (much larger than the plumbers torch, but it can be run of those propane cylinders you can buy for a gas grill) .
(m / melt-01
      :ARG0 (ii / i)
      :ARG1 (b / bronze
            :quant (a / amount
                  :mod (s / small)))
      :location (c / crucible)
      :instrument (t / torch
            :mod (l / large)
            :mod (p / propane)
            :ARG1-of (h / have-degree-91
                  :ARG2 l)
            :ARG3 (m2 / more
                  :quant (m3 / much))
            :ARG4 (t2 / torch
                  :mod (p2 / person
                        :ARG0-of (p3 / plumb-04)))
            :concession (p4 / possible-01
                  :ARG1 (r / run-10
                        :ARG1 t
                        :ARG2 (c2 / cylinder
                              :mod (p5 / propane)
                              :ARG1-of (b2 / buy-01
                                    :ARG0 (y / you)
                                    :purpose (g / grill
                                          :mod (g2 / gas))
                                    :ARG1-of (p6 / possible-01)))))))

# ::snt I use propane with a blower and a burner I built http://www.mikegigi.com/meltmetl.htm and http://www.mikegigi.com/firehole.ht m
(u / use-01
      :ARG0 (ii / i)
      :ARG1 (p / propane
            :accompanier (a / and
                  :op1 (t / thing
                        :ARG0-of (b / blow-01))
                  :op2 (t2 / thing
                        :ARG0-of (b2 / burn-01))
                  :ARG1-of (b3 / build-01
                        :ARG0 ii)))
      :medium a
      :op1 (u2 / url-entity
            :value "http://www.mikegigi.com/meltmetl.htm")
      :op2 (u3 / url-entity
            :value "http://www.mikegigi.com/firehole.ht"))

# ::snt He is really excited about anybody he see .
(e / excite-01
      :ARG0 (h / he)
      :ARG1 (a / anybody
            :ARG1-of (s / see-01
                  :ARG0 h))
      :degree (r / really))

# ::snt This would be on a walk-in basis as we want to have the freedom of finding a place that looks good (Not relying on pictures from the internet) and is in a spot we like .
(c / cause-01
      :ARG0 (w / want-01
            :ARG0 (w2 / we)
            :ARG1 (f / free-04
                  :ARG1 w2
                  :ARG3 (f2 / find-01
                        :ARG0 w2
                        :ARG1 (p / place
                              :ARG0-of (l / look-02
                                    :ARG1 (g / good-02))
                              :ARG0-of (r / rely-01
                                    :polarity -
                                    :ARG1 (p2 / picture
                                          :source (ii / internet)))
                              :location (s / spot
                                    :ARG1-of (l2 / like-01
                                          :ARG0 w2))))))
      :ARG1 (h / have-manner-91
            :ARG1 (t / this)
            :ARG2 (b / basis
                  :mod (w3 / walk-01))))

# ::snt In Agra I've stayed in a place fellow travellers recommended, they found it in the Rough Guide .
(s / stay-01
      :ARG1 (ii / i)
      :location (c / city
            :name (n / name
                  :op1 "Agra"))
      :location (p / place
            :ARG1-of (r / recommend-01
                  :ARG0 (p2 / person
                        :ARG0-of (t / travel-01)
                        :mod (f / fellow)))
            :ARG1-of (f2 / find-01
                  :ARG0 p2
                  :location (b / book
                        :name (n2 / name
                              :op1 "Rough"
                              :op2 "Guide")))))

# ::snt You may find a normal budget hotel for Rs 1000 per night in the cities you mentioned, the links below may help you to find good hotels in Delhi and Agra .
(a / and
      :op1 (p / possible-01
            :ARG1 (f / find-01
                  :ARG0 (y / you)
                  :ARG1 (h / hotel
                        :mod (b / budget
                              :ARG1-of (n / normal-02))
                        :ARG1-of (c / cost-01
                              :ARG2 (r / rate-entity-91
                                    :ARG1 (m / monetary-quantity
                                          :quant 1000
                                          :unit (r2 / rupee))
                                    :ARG2 (t / temporal-quantity
                                          :quant 1
                                          :unit (n2 / night)))))
                  :location (c2 / city
                        :ARG1-of (m2 / mention-01
                              :ARG0 y))))
      :op2 (p2 / possible-01
            :ARG1 (h2 / help-01
                  :ARG0 (l / link
                        :location (b2 / below))
                  :ARG1 (f2 / find-01
                        :ARG0 y
                        :ARG1 (h3 / hotel
                              :ARG1-of (g / good-02)
                              :location (a2 / and
                                    :op1 (c3 / city
                                          :name (n3 / name
                                                :op1 "Delhi"))
                                    :op2 (c4 / city
                                          :name (n4 / name
                                                :op1 "Agra")))))
                  :ARG2 y)))

# ::snt Also depends on the space you have, how much time you can handle the pet, how much money you can spend, etc .
(d / depend-01
      :ARG1 (a / and
            :op1 (s / space
                  :ARG1-of (h / have-03
                        :ARG0 (y / you)))
            :op2 (p / possible-01
                  :ARG1 (h2 / handle-01
                        :ARG0 y
                        :ARG1 (p2 / pet)
                        :duration (t / time)))
            :op3 (p3 / possible-01
                  :ARG1 (s2 / spend-01
                        :ARG0 y
                        :ARG3 (m / money)))
            :op4 (e / et-cetera))
      :mod (a2 / also))

# ::snt Get plenty of sleep and make sure you take time out to do some things you enjoy .
(a / and
      :op1 (s / sleep-01
            :mode imperative
            :ARG0 (y / you)
            :mod (p / plenty))
      :op2 (e / ensure-01
            :mode imperative
            :ARG0 y
            :ARG1 (t / take-01
                  :ARG0 y
                  :ARG1 (t2 / time
                        :mod (o / out))
                  :purpose (d / do-02
                        :ARG0 y
                        :ARG1 (t3 / thing
                              :quant (s2 / some)
                              :ARG1-of (e2 / enjoy-01
                                    :ARG0 y))))))

# ::snt None, just walk in to the service office and present all the identification you have to prove your identity .
(m / multi-sentence
      :snt1 (n / none)
      :snt2 (a / and
            :op1 (w / walk-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG2 (o / office
                        :mod (s / service))
                  :mod (j / just))
            :op2 (p / present-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 (t / thing
                        :ARG2-of (ii / identify-01
                              :ARG1 y)
                        :mod (a2 / all)
                        :ARG1-of (o2 / obligate-01))
                  :purpose (p2 / prove-01
                        :ARG0 y
                        :ARG1 (ii2 / identify-01
                              :ARG1 y)))))

# ::snt -AND JUST MORE STUFF YOU LIKED OVERAL L
(a / and
      :op2 (s / stuff
            :ARG1-of (l / like-01
                  :ARG0 (y / you)
                  :degree (o / over-average))
            :mod (m / more)
            :mod (j / just)))

# ::snt remember to give him the time he needs to feel that the room is his - rush it, and he will be afraid of the whole house for a long time .
(h / have-condition-91
      :ARG1 (a / and
            :op1 (r / remember-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (g / give-01
                        :ARG0 y
                        :ARG1 (t / time
                              :ARG1-of (n / need-01
                                    :ARG0 (h2 / he)
                                    :purpose (f / feel-01
                                          :ARG0 h2
                                          :ARG1 (b / belong-01
                                                :ARG0 h2
                                                :ARG1 (r2 / room)))))
                        :ARG2 h2))
            :op2 (r3 / rush-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 h2
                  :ARG2 r2))
      :ARG2 (f2 / fear-01
            :ARG0 h2
            :ARG1 (h3 / house
                  :mod (w / whole))
            :ARG1-of (l / long-03)))

# ::snt ...but basically, what I do is the same thing I did with my puppy...lots of patience, lots of time, lots of praise, lots of treats, and lots of repition....Right ?
(c / contrast-01
      :ARG2 (s / same-01
            :ARG1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 (ii / i)
                        :ARG3 (p / puppy
                              :poss ii)))
            :ARG2 (t2 / thing
                  :ARG1-of (d2 / do-02
                        :ARG0 ii
                        :ARG3 p)
                  :consist-of (a / and
                        :op1 (p2 / patient-01
                              :quant (l / lot))
                        :op2 (t3 / time
                              :quant (l2 / lot))
                        :op3 (p3 / praise-01
                              :quant (l3 / lot))
                        :op4 (t4 / treat-01
                              :quant (l4 / lot))
                        :op5 (r / repition-01
                              :quant (l5 / lot))))
            :mod (b / basic))
      :ARG1-of (r2 / request-confirmation-91))

# ::snt Is there any tricks I could use ?
(p / possible-01
      :ARG1 (u / use-01
            :ARG0 (ii / i)
            :ARG1 (t / trick-01
                  :mod (a / any)))
      :polarity (a2 / amr-unknown))

# ::snt If I wait, would the tours I find there for less money be the same quality type tours ?
(t / tour
      :polarity (a / amr-unknown)
      :mod (t2 / type
            :ARG1-of (s / same-01)
            :mod (q / quality))
      :domain (t3 / tour
            :ARG1-of (f / find-01
                  :ARG0 (ii / i)
                  :location (t4 / there)
                  :purpose (m / money
                        :mod (l / less))))
      :condition (w / wait-01
            :ARG1 ii))

# ::snt I have done Yoga for riders for a while, a 20 minute routine I found on YouTube (I think its called "Yoga for horse back riding" hosted by a man) It helped with noticing slight differences in my balance and weight distribution but not really for the way I use my legs and back .
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (ii / i)
            :ARG1 (y / yoga
                  :beneficiary (p / person
                        :ARG0-of (r / ride-01))
                  :mod (r2 / routine
                        :duration (t / temporal-quantity
                              :quant 20
                              :unit (m2 / minute))
                        :ARG1-of (f / find-01
                              :ARG0 ii
                              :medium (p2 / publication
                                    :name (n / name
                                          :op1 "YouTube")))
                        :ARG1-of (c / call-01
                              :ARG2 (y2 / yoga
                                    :beneficiary (r3 / ride-01
                                          :ARG1 (h / horse)
                                          :location (b / back))
                                    :ARG1-of (h2 / host-01
                                          :ARG0 (m3 / man)))
                              :ARG1-of (t2 / think-01
                                    :ARG0 ii)))
                  :duration (w / while))
            :snt2 (c2 / contrast-01
                  :ARG1 (h3 / help-01
                        :ARG0 (ii2 / it)
                        :ARG1 (n2 / notice-01
                              :ARG0 ii
                              :ARG1 (d2 / differ-02
                                    :ARG1 (a / and
                                          :op1 (b2 / balance-01
                                                :ARG1 (ii3 / i
                                                      :part (l / leg)
                                                      :part (b3 / back)))
                                          :op2 (d3 / distribute-01
                                                :ARG1 (w2 / weight)))
                                    :degree (s / slight))))
                  :ARG2 (h4 / help-01
                        :polarity -
                        :ARG0 ii2
                        :ARG1 (w3 / way
                              :manner-of (u / use-01
                                    :ARG0 ii3
                                    :ARG1 (a2 / and
                                          :op1 l
                                          :op2 b3)))
                        :ARG1-of (r4 / real-04)))))

# ::snt But the articles I read seemed to say the contrary .
(c / contrast-01
      :ARG2 (s / seem-01
            :ARG1 (s2 / say-01
                  :ARG0 (a / article
                        :ARG1-of (r / read-01
                              :ARG0 (ii / i)))
                  :ARG1 (c2 / contrary-01))))

# ::snt Everybody I know at university intends to stay at uni for as long as possible until there are actually jobs available .
(ii / intend-01
      :ARG0 (e / everybody
            :ARG1-of (k / know-02
                  :ARG0 (ii2 / i)
                  :location (u / university)))
      :ARG1 (s / stay-01
            :ARG1 e
            :location u
            :duration (l / long-03
                  :ARG2-of (h / have-degree-91
                        :ARG1 s
                        :ARG3 (e2 / equal)
                        :ARG4 (p / possible-01
                              :ARG1 s)))
            :time (u2 / until
                  :op1 (a / available-02
                        :ARG2 (j / job)
                        :ARG1-of (a2 / actual-02)))))

# ::snt your male is hurting her to put her in her place - biting her scruff is dominance and biting the belly is a move cats use when hunting - to pull the guts out of their prey .
(a / and
      :op1 (h / hurt-01
            :ARG0 (m / male
                  :poss (y / you))
            :ARG1 (s / she
                  :part (s2 / scruff))
            :purpose (p / put-01
                  :ARG0 m
                  :ARG1 s
                  :ARG2 (p2 / place
                        :poss s)))
      :op2 (d / dominate-01
            :ARG0 (b / bite-01
                  :ARG1 s2))
      :op3 (u / use-01
            :ARG0 (c / cat)
            :ARG1 (b2 / bite-01
                  :ARG1 (b3 / belly))
            :ARG2 (p3 / pull-out-02
                  :ARG0 c
                  :ARG1 (g / gut)
                  :ARG2 (t / thing
                        :ARG1-of (p4 / prey-01
                              :ARG0 c)))
            :time (h2 / hunt-01
                  :ARG0 c)))

# ::snt He did not give them the number of troops they requested .
(g / give-01
      :polarity -
      :ARG0 (h / he)
      :ARG1 (n / number
            :quant-of (t / troop
                  :ARG1-of (r / request-01
                        :ARG0 (t2 / they))))
      :ARG2 t2)

# ::snt All he had to do for a complete victory was allow the military to go into Laos and Cambodia and finish off the shattered Communist forces .
(o / obligate-01
      :ARG1 (h / he)
      :ARG2 (a / allow-01
            :ARG0 h
            :ARG1 (a2 / and
                  :op1 (g / go-02
                        :ARG0 (m / military)
                        :ARG4 (a3 / and
                              :op1 (c / country
                                    :name (n / name
                                          :op1 "Laos"))
                              :op2 (c2 / country
                                    :name (n2 / name
                                          :op1 "Cambodia"))))
                  :op2 (f / finish-off-05
                        :ARG0 m
                        :ARG1 (f2 / force
                              :mod (p / political-movement
                                    :name (n3 / name
                                          :op1 "communism"))
                              :ARG1-of (s / shatter-01)))))
      :purpose (w / win-01
            :ARG1-of (c3 / complete-02))
      :mod (a4 / all))

# ::snt The American people were NOT having any of it, and elected Richard Nixon to fix the mess LBJ had made (not to surrender like the antiwar movement was demanding) .
(a / and
      :op1 (h / have-06
            :polarity -
            :ARG0 (p / person
                  :mod (c / country
                        :name (n / name
                              :op1 "America")))
            :ARG1 (a2 / any
                  :part-of (ii / it)))
      :op2 (e / elect-01
            :ARG0 p
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 "Richard"
                        :op2 "Nixon"))
            :ARG2 (f / fix-02
                  :ARG0 p2
                  :ARG1 (m / mess-up-02
                        :ARG1-of (m2 / make-01
                              :ARG0 (p3 / person
                                    :name (n3 / name
                                          :op1 "Lyndon"
                                          :op2 "B."
                                          :op3 "Johnson"))))
                  :concession (s / surrender-01
                        :polarity -
                        :ARG0 p2
                        :ARG1-of (d / demand-01
                              :ARG0 (m3 / movement-07
                                    :ARG1 (o / oppose-01
                                          :ARG1 (w / war-01))))))))

# ::snt My question is does that mean it gives him not only the heat, but the "sun rays" he needs ?
(q / question-01
      :ARG0 (ii / i)
      :ARG1 (t / truth-value
            :polarity-of (m / mean-01
                  :ARG1 (t2 / that)
                  :ARG2 (g / give-01
                        :ARG0 t2
                        :ARG1 (a / and
                              :op1 (h / heat)
                              :op2 (r / ray
                                    :source (s / sun)
                                    :ARG1-of (n / need-01
                                          :ARG0 (h2 / he))))
                        :ARG2 h2))))

# ::snt These are the steps I used .
(s / step-01
      :mod (t / this)
      :ARG1-of (u / use-01
            :ARG0 (ii / i)))

# ::snt Disney cruises offer 24-hour room services, and the crews are ready to serve you the way you like .
(a / and
      :op1 (o / offer-01
            :ARG0 (c / cruise-01
                  :mod (c2 / company
                        :name (n / name
                              :op1 "Disney")))
            :ARG1 (s / serve-01
                  :ARG0 c
                  :ARG2 (y / you)
                  :location (r / room)
                  :duration (t / temporal-quantity
                        :quant 24
                        :unit (h / hour))))
      :op2 (r2 / ready-02
            :ARG1 (c3 / crew)
            :ARG2 (s2 / serve-01
                  :ARG0 c3
                  :ARG2 y
                  :manner (l / like-02
                        :ARG0 y))))

# ::snt Will be getting a copy of the blood results the owner has already ran as well .
(g / get-01
      :ARG1 (t / thing
            :ARG2-of (c / copy-01
                  :ARG1 (r / result-01
                        :ARG1 (b / blood)
                        :ARG1-of (r2 / run-01
                              :ARG0 (p / person
                                    :ARG0-of (o / own-01))
                              :time (a / already)))))
      :mod (a2 / as-well))

# ::snt I am not going to go pick up a horse I can't afford .
(g / go-02
      :polarity -
      :ARG0 (ii / i)
      :ARG4 (p / pick-up-04
            :ARG0 ii
            :ARG1 (h / horse
                  :ARG1-of (a / afford-01
                        :ARG0 ii
                        :ARG1-of (p2 / possible-01
                              :polarity -)))))

# ::snt The only difference we noticed is that the EPM horses seemed to do worse on the smaller tracks after .
(n / notice-01
      :ARG0 (w / we)
      :ARG1 (s / seem-01
            :ARG1 (h / have-degree-91
                  :ARG1 (h2 / horse
                        :ARG0-of (h3 / have-03
                              :ARG1 (m / malnourished-01
                                    :ARG1-of (m2 / moderate-03))))
                  :ARG2 (b / bad-07
                        :ARG1 h2)
                  :ARG3 (m3 / more)
                  :location (t / track
                        :ARG2 (s2 / small)
                        :ARG3 m3)
                  :ARG1 t))
      :time (a / after)
      :ARG1-of (d / differ-02
            :mod (o / only)))

# ::snt I would rate Fran pcs an A+ because the price was lower than everyone else, i got my computer back the next day, and the professionalism he showed was great .
(r / rate-01
      :ARG0 (ii / i)
      :ARG1 (c / company
            :name (n / name
                  :op1 "Fran"
                  :op2 "Pcs"))
      :ARG2 (s / score-on-scale-91
            :ARG1 "A+")
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (p / price-01
                        :ARG1-of (h / have-degree-91
                              :ARG2 (l / low-04
                                    :ARG1 p)
                              :ARG3 (m / more)
                              :ARG4 (e / everyone
                                    :mod (e2 / else))))
                  :op2 (g / get-back-09
                        :ARG0 ii
                        :ARG1 (c3 / computer
                              :poss ii)
                        :time (d / day
                              :mod (n2 / next)))
                  :op3 (p2 / professionalism
                        :ARG1-of (s2 / show-01
                              :ARG0 (h2 / he))
                        :mod (g2 / great)))))

# ::snt I've referred everyone i know here and they all feel the same way! !
(a / and
      :op1 (r / refer-02
            :ARG0 (ii / i)
            :ARG1 (e / everyone
                  :ARG1-of (k / know-02
                        :ARG0 ii
                        :location (h / here))))
      :op2 (f / feel-01
            :ARG0 e
            :ARG1 (w / way
                  :ARG1-of (s / same-01))))

# ::snt I have been here 3 to 4 times and every time food they served seems warmed up not cooked after you order it .
(a / and
      :op1 (b / be-located-at-91
            :ARG1 (ii / i)
            :ARG2 (h / here)
            :frequency (b2 / between
                  :op1 3
                  :op2 4))
      :op2 (s / seem-01
            :ARG1 (c / contrast-01
                  :ARG1 (w / warm-up-02
                        :ARG1 (f / food
                              :ARG1-of (s2 / serve-01
                                    :ARG0 (t / they))))
                  :ARG2 (c2 / cook-01
                        :polarity -
                        :ARG1 f
                        :time (a2 / after
                              :op1 (o / order-02
                                    :ARG0 (y / you)
                                    :ARG1 f))))
            :frequency (t2 / time
                  :mod (e / every))))

# ::snt He was less than half of the price of the cheapest quote we got, and his work was top notch .
(a / and
      :op1 (p / price-01
            :ARG1 (h / he)
            :ARG2 (l / less-than
                  :op1 (h2 / half)
                  :ARG3-of (ii / include-91
                        :ARG2 (p2 / price-01
                              :ARG1 (t / thing
                                    :ARG1-of (q / quote-01)
                                    :ARG1-of (g / get-01
                                          :ARG0 (w / we))
                                    :ARG1-of (h3 / have-degree-91
                                          :ARG2 (c / cheap-02
                                                :ARG1 t)
                                          :ARG3 (m / most)))))))
      :op2 (w2 / work-01
            :ARG0 h
            :mod (n / notch
                  :mod (t2 / top))))

# ::snt This is car number 3 we've purchased through them .
(c / car
      :ord (o / ordinal-entity
            :value 3)
      :ARG1-of (p / purchase-01
            :ARG0 (w / we)
            :ARG2 (t / they))
      :domain (t2 / this))

# ::snt The salespeople are never available, the lines are always too long, and all the people want is a sale .
(a / and
      :op1 (a2 / available-02
            :polarity -
            :ARG2 (p / person
                  :ARG0-of (s / sell-01))
            :time (e / ever))
      :op2 (h / have-degree-91
            :ARG1 (l / line)
            :ARG2 (l2 / long-03
                  :ARG1 l)
            :ARG3 (t / too)
            :time (a3 / always))
      :op3 (w / want-01
            :ARG0 (p2 / person)
            :ARG1 (s2 / sell-01
                  :ARG0 p2)
            :mod (a4 / all)))

# ::snt But this location has the worst weekend staff I've seen EVER .
(c / contrast-01
      :ARG2 (h / have-03
            :ARG0 (l / location
                  :mod (t / this))
            :ARG1 (p / person
                  :ARG2-of (s / staff-01)
                  :time (w / weekend)
                  :ARG1-of (s2 / see-01
                        :ARG0 (ii / i)
                        :time (e / ever))
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (b / bad-02
                              :ARG1 p)
                        :ARG3 (m / most)))))

# ::snt It's the best meal for the money you will find in all of metro Atlanta .
(h / have-degree-91
      :ARG1 (m / meal)
      :ARG2 (g / good-02
            :ARG1 m
            :ARG2 (m2 / money))
      :ARG3 (m3 / most)
      :ARG5 (f / find-01
            :ARG0 (y / you)
            :location (c / city
                  :name (n / name
                        :op1 "Atlanta")
                  :mod (a / all))))

# ::snt All I can say is that I am glad I went in !
(p / possible-01
      :ARG1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (g / glad-02
                  :ARG0 (g2 / go-02
                        :ARG0 ii
                        :ARG4 (ii2 / inside))
                  :ARG1 ii)
            :mod (a / all)))

# ::snt I just like the fact that he was able to do the specific type of repair I wanted (a reball) and give me the longest warranty and even a lower price .
(l / like-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (p / possible-01
                  :ARG1 (d / do-02
                        :ARG0 (h / he)
                        :ARG1 (t / type-03
                              :ARG1 (r / repair-01)
                              :ARG1-of (s / specific-02)
                              :ARG1-of (w / want-01
                                    :ARG0 ii)
                              :ARG1-of (m / mean-01
                                    :ARG2 (r2 / reball)))))
            :op2 (g / give-01
                  :ARG0 h
                  :ARG1 (a2 / and
                        :op1 (h2 / have-degree-91
                              :ARG1 (t2 / thing
                                    :ARG2-of (w2 / warranty-02))
                              :ARG2 (l2 / long-03
                                    :ARG1 t2)
                              :ARG3 (m2 / most))
                        :op2 (h3 / have-degree-91
                              :ARG1 (t3 / thing
                                    :ARG2-of (p2 / price-01))
                              :ARG2 (l3 / low-04
                                    :ARG1 t3)
                              :ARG3 (m3 / more)
                              :mod (e / even)))
                  :ARG2 ii))
      :mod (j / just))

# ::snt Someone else I found that said they could do it but wanted to charge me more and give me less warranty .
(f / find-01
      :ARG0 (ii / i)
      :ARG1 (s / someone
            :mod (e / else)
            :ARG0-of (s2 / say-01
                  :ARG1 (p / possible-01
                        :ARG1 (d / do-02
                              :ARG0 s
                              :ARG1 (ii2 / it))
                        :ARG1-of (c / contrast-01
                              :ARG2 (w / want-01
                                    :ARG0 s
                                    :ARG1 (a / and
                                          :op1 (c2 / charge-01
                                                :ARG0 s
                                                :ARG1 (m / more)
                                                :ARG2 ii)
                                          :op2 (g / give-01
                                                :ARG0 s
                                                :ARG1 (w2 / warranty
                                                      :quant (l / less))
                                                :ARG2 ii))))))))

# ::snt I think they may even be better than the pair I have been using this past year !
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (p / possible-01
            :ARG1 (h / have-degree-91
                  :ARG1 (t2 / they)
                  :ARG2 (g / good-02
                        :ARG1 t2
                        :mod (e / even))
                  :ARG3 (m / more)
                  :ARG4 (p2 / pair
                        :ARG1-of (u / use-01
                              :ARG0 ii
                              :time (y / year
                                    :mod (p3 / past)))))))

# ::snt They also have the best tea I ever had, not at all like the junk you get at the grocery stores, I stock up when ever there because they are closed in the winter .
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (t / they)
            :ARG1 (t2 / tea
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 t2)
                        :ARG3 (m2 / most)
                        :ARG5 h
                        :ARG0 (ii / i)
                        :time (e / ever)))
            :ARG1-of (r / resemble-01
                  :polarity -
                  :ARG2 (j / junk
                        :ARG1-of (g2 / get-01
                              :ARG0 (y / you)
                              :location (s / store
                                    :mod (g3 / grocery))))
                  :degree (a / at-all)))
      :mod (a2 / also)
      :snt2 (s2 / stock-up-02
            :ARG0 (ii2 / i)
            :time e)
      :ARG1-of (c / cause-01
            :ARG0 (c2 / close-01
                  :ARG1 (t3 / they)
                  :time (d / date-entity
                        :season (w / winter)))))

# ::snt I visited their huge Chicago lighting showroom and all I have to say is WOW! !
(a / and
      :op1 (v / visit-01
            :ARG0 (ii / i)
            :ARG1 (s / showroom
                  :mod (h / huge)
                  :poss (t / they)
                  :location (c / city
                        :name (n / name
                              :op1 "Chicago"))
                  :purpose (l / light-04)))
      :op2 (t2 / thing
            :ARG1-of (s2 / say-01
                  :ARG0 ii)
            :mod (a2 / all)
            :domain (w / wow-01
                  :mode expressive)))

# ::snt Everything we ordered was prepared to perfection, and was presented perfectly .
(a / and
      :op1 (p / prepare-01
            :ARG1 (e / everything
                  :ARG1-of (o / order-02
                        :ARG0 (w / we)))
            :manner (p2 / perfection))
      :op2 (p3 / present-01
            :ARG1 e
            :manner (p4 / perfect)))

# ::snt The asparagus, seared tuna, and lobster tail were the best we ever had .
(h / have-degree-91
      :ARG1 (a / and
            :op1 (a2 / asparagus)
            :op2 (t / tuna
                  :ARG1-of (s / sear-01))
            :op3 (t2 / tail
                  :part-of (l / lobster)))
      :ARG2 (g / good-02)
      :ARG3 (m / most)
      :ARG5 (t3 / thing
            :ARG1-of (h2 / have-03
                  :ARG0 (w / we)
                  :time (e / ever))))

# ::snt Then the desserts came, and they were hands down the best dessert we ever had .
(a / and
      :op1 (c / come-01
            :ARG1 (d / dessert)
            :time (t / then))
      :op2 (h / have-degree-91
            :ARG1 (d2 / dessert
                  :domain d)
            :ARG2 (g / good-02
                  :ARG1 d2)
            :ARG3 (m / most)
            :ARG5 (d3 / dessert
                  :ARG1-of (h2 / have-06
                        :ARG0 (w / we)
                        :time (e / ever)))
            :mod (h3 / hands-down)))

# ::snt It was the best Chinese food I have ever had .
(h / have-degree-91
      :ARG1 (f / food
            :mod (c / country
                  :name (n / name
                        :op1 "China"))
            :domain (ii / it))
      :ARG2 (g / good-02
            :ARG1 f)
      :ARG3 (m / most)
      :ARG5 (h2 / have-03
            :ARG0 (ii2 / i)
            :time (e / ever)))

# ::snt I much preferred the one-on-one service here to the experiences I've had with bigger offices and firms .
(p / prefer-01
      :ARG0 (ii / i)
      :ARG1 (s / service
            :mod (o / one-on-one)
            :location (h / here))
      :ARG2 (e / experience-01
            :ARG0 ii
            :ARG1 (a / and
                  :op1 (o2 / office)
                  :op2 (f / firm)
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (b / big)
                        :ARG3 (m / more))))
      :degree (m2 / much))

# ::snt The pizza is usually pretty good, the only bad one we got was on a Friday night and it just needed to be cooked a little more, but it was still good .
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (p / pizza)
            :mod (u / usual)
            :degree (p2 / pretty))
      :snt2 (a / and
            :op1 (g2 / get-01
                  :ARG0 (w / we)
                  :ARG1 (p3 / pizza
                        :ARG1-of (b / bad-07)
                        :mod (o / only))
                  :time (d / date-entity
                        :weekday (f / friday)
                        :dayperiod (n / night)))
            :op2 (n2 / need-01
                  :ARG0 p3
                  :ARG1 (c / cook-01
                        :ARG1 p3
                        :ARG1-of (h / have-quant-91
                              :ARG3 (m2 / more
                                    :quant (l / little))))
                  :mod (j / just))
            :concession-of (g3 / good-02
                  :ARG1 p3
                  :mod (s / still))))

# ::snt Their BBQ chicken pizza is one of the better ones I have ever had .
(ii / include-91
      :ARG1 (p / pizza
            :mod (c / chicken)
            :mod (b / barbecue-01)
            :poss (t / they))
      :ARG2 (p2 / pizza
            :ARG1-of (h / have-degree-91
                  :ARG2 (g / good-02)
                  :ARG3 (m / more)
                  :ARG4 (p3 / pizza
                        :ARG1-of (h2 / have-06
                              :ARG0 (ii2 / i)
                              :time (e / ever))))))

# ::snt IT IS NOT A HIGH END STEAK HOUSE, MORE OF THE CUISINE BRETT ENJOYS IN MISSISSIPPI .
(c / contrast-01
      :ARG1 (h / house
            :polarity -
            :mod (s / steak)
            :mod (h2 / high-end)
            :domain (ii / it))
      :ARG2 (ii2 / invite-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 "Brett")
                  :mod (b / beer)
                  :mod (m / more))
            :ARG2 (s2 / state
                  :name (n2 / name
                        :op1 "Mississippi"))))

# ::snt They interviewed me, gave me tests in the software I included on my resume, and placed me in a position that I kept for several years .
(a / and
      :op1 (ii / interview-01
            :ARG0 (t / they)
            :ARG1 (ii2 / i))
      :op2 (t2 / test-01
            :ARG0 t
            :ARG1 ii2
            :ARG2 (s / software
                  :ARG1-of (ii3 / include-01
                        :ARG0 ii2
                        :ARG2 (r / resume
                              :poss ii2))))
      :op3 (p / place-01
            :ARG0 t
            :ARG1 ii2
            :ARG2 (p2 / position
                  :ARG1-of (k / keep-01
                        :ARG0 ii2
                        :duration (s2 / several
                              :op1 (t3 / temporal-quantity
                                    :quant 1
                                    :unit (y / year)))))))

# ::snt The staff was very helpful in finding the right dog for me and the care my pup received was outstanding .
(a / and
      :op1 (h / helpful-04
            :ARG0 (s / staff)
            :ARG1 (f / find-01
                  :ARG0 s
                  :ARG1 (d / dog
                        :ARG1-of (r / right-03
                              :ARG2 (ii / i))))
            :degree (v / very))
      :op2 (o / outstanding
            :domain (c / care-03
                  :ARG1 (p / pup
                        :poss ii))))

# ::snt Dr. Chao you are the best dentist I have ever had .
(h / have-degree-91
      :ARG1 (p / person
            :name (n / name
                  :op1 "Dr."
                  :op2 "Chao"))
      :ARG2 (g / good-03
            :ARG1 p
            :ARG2 (d / dentist))
      :ARG3 (m / most)
      :ARG5 (h2 / have-03
            :ARG0 (ii / i)
            :time (e / ever)))

# ::snt A lack of organisation, coupled with the distain for its customers, makes this the worst rental agency I have used .
(m / make-02
      :ARG0 (c / couple-01
            :ARG1 (l / lack-01
                  :ARG1 (o / organize-01))
            :ARG2 (d / distain-00
                  :ARG1 (c2 / customer
                        :poss (a / agency
                              :purpose (r / rent-01)
                              :ARG1-of (u / use-01
                                    :ARG0 (ii / i))
                              :domain (t / this)))))
      :ARG1 (h / have-degree-91
            :ARG1 a
            :ARG2 (b / bad-02
                  :ARG1 a)
            :ARG3 (m2 / most)))

# ::snt I found my initial selection satisfactory but the wine flight we chose to be poorly composed .
(c / contrast-01
      :ARG1 (f / find-02
            :ARG0 (ii / i)
            :ARG1 (s / satisfactory-03
                  :ARG0 (t / thing
                        :ARG1-of (s2 / select-01
                              :ARG0 ii)
                        :mod (ii2 / initial))))
      :ARG2 (c2 / choose-01
            :ARG0 (w / we)
            :ARG1 (c3 / compose-01
                  :ARG1 (f2 / fly-01
                        :ARG1 (w2 / wine))
                  :manner (p / poor))))

# ::snt This has to be some of the worst pizza I have ever had the misfortune of ordering .
(ii / infer-01
      :ARG1 (h / have-degree-91
            :ARG1 (p / pizza
                  :mod (t / this))
            :ARG2 (b / bad-07
                  :ARG1 p)
            :ARG3 (m / most)
            :ARG5 (p2 / pizza
                  :ARG1-of (o / order-02
                        :ARG0 (ii2 / i)
                        :ARG2-of (h2 / have-06
                              :ARG0 ii2
                              :ARG1 (m2 / misfortune))
                        :time (e / ever)))))

# ::snt Easiest Time I ever had purchasing a car !
(h / have-degree-91
      :mode expressive
      :ARG1 (t / time
            :time-of (p / purchase-01
                  :ARG0 (ii / i)
                  :ARG1 (c / car))
            :time (e / ever))
      :ARG2 (e2 / easy-05
            :ARG1 t)
      :ARG3 (m / most))

# ::snt Excellent service, Not only did they get the exact car I wanted win in 48 hours but the sales man also took me out to lunch .
(m / multi-sentence
      :snt1 (s / serve-01
            :ARG1-of (e / excellent-02))
      :snt2 (a / and
            :op1 (g / get-01
                  :ARG0 (t / they)
                  :ARG1 (c / car
                        :mod (e2 / exact)
                        :ARG1-of (w / want-01
                              :ARG0 (ii / i)))
                  :mod (o / only
                        :polarity -)
                  :time (a2 / after
                        :op1 (n / now)
                        :quant (t2 / temporal-quantity
                              :quant 48
                              :unit (h / hour))))
            :op2 (t3 / take-out-11
                  :ARG0 (m2 / man
                        :ARG0-of (s2 / sell-01))
                  :ARG1 ii
                  :ARG2 (l / lunch)
                  :mod (a3 / also))))

# ::snt I also never have to wait long for a yearly inspection sticker...and never get the usual excuses other shops always gave me..."the inspection guy isn't here today"....for example .
(a / and
      :op1 (o / obligate-01
            :polarity -
            :ARG1 (ii / i)
            :ARG2 (w / wait-01
                  :ARG1 ii
                  :ARG2 (s / sticker
                        :purpose (ii2 / inspect-01)
                        :frequency (r / rate-entity-91
                              :ARG3 (t / temporal-quantity
                                    :quant 1
                                    :unit (y / year))))
                  :ARG1-of (l / long-03))
            :time (e / ever)
            :mod (a2 / also))
      :op2 (g / get-01
            :polarity -
            :ARG0 ii
            :ARG1 (e2 / excuse-02
                  :ARG0 (s2 / shop
                        :mod (o2 / other))
                  :ARG1 ii
                  :ARG2 (t2 / thing
                        :example (b / be-located-at-91
                              :polarity -
                              :ARG1 (g2 / guy
                                    :ARG0-of (ii3 / inspect-01))
                              :ARG2 (h / here)
                              :time (t3 / today)))
                  :mod (u / usual))
            :time (e3 / ever)))

# ::snt The best value I've found from a Chinese restaurant .
(t / thing
      :ARG2-of (v / value-01)
      :ARG1-of (f / find-01
            :ARG0 (ii / i)
            :location (r / restaurant
                  :mod (c / country
                        :name (n / name
                              :op1 "China"))))
      :ARG1-of (h / have-degree-91
            :ARG2 (g / good-02
                  :ARG1 t)
            :ARG3 (m / most)))

# ::snt I would reccomend anyone to go see Jana Kueck and Robin Talley to see all the many procedures they have to offer .
(r / recommend-01
      :ARG0 (ii / i)
      :ARG1 (g / go-05
            :ARG0 (a / anyone)
            :ARG1 (s / see-01
                  :ARG0 a
                  :ARG1 (a2 / and
                        :op1 (p / person
                              :name (n / name
                                    :op1 "Jana"
                                    :op2 "Kueck"))
                        :op2 (p2 / person
                              :name (n2 / name
                                    :op1 "Robin"
                                    :op2 "Talley")))
                  :purpose (s2 / see-01
                        :ARG0 a
                        :ARG1 (p3 / procedure
                              :quant (m / many)
                              :mod (a3 / all)
                              :ARG1-of (o / offer-01
                                    :ARG0 a2
                                    :ARG1-of (p4 / possible-01))))))
      :ARG2 a)

# ::snt Dave is a patient and methodical teacher, who has a great ear and sensitivity for his students' passion and the direction they want their lessons to take .
(p / person
      :name (n / name
            :op1 "Dave")
      :ARG0-of (t / teach-01)
      :ARG1-of (p2 / patient-01)
      :mod (m / methodical)
      :ARG0-of (h / have-03
            :ARG1 (a / and
                  :op1 (e / ear
                        :mod (g / great))
                  :op2 (s / sensitive-03
                        :ARG0 p
                        :ARG1 (a2 / and
                              :op1 (p3 / passion
                                    :poss (p4 / person
                                          :ARG0-of (s2 / study-01
                                                :ARG1 p)))
                              :op2 (d / direction
                                    :ARG1-of (t2 / take-01
                                          :ARG0 (l / lesson
                                                :poss p4)
                                          :ARG1-of (w / want-01
                                                :ARG0 p4))))))))

# ::snt We would like to thank you for the roofing job you did on our home .
(l / like-02
      :ARG0 (w / we)
      :ARG1 (t / thank-01
            :ARG0 w
            :ARG1 (y / you)
            :ARG2 (j / job
                  :topic (r / roof-01)
                  :ARG1-of (d / do-02
                        :ARG0 y
                        :ARG2 (h / home
                              :poss w)))))

# ::snt Their Food was better then anything I had ever tasted .
(g / good-02
      :ARG1 (f / food
            :poss (t / they))
      :ARG2-of (h / have-degree-91
            :ARG1 f
            :ARG3 (m / more)
            :ARG4 (a / anything
                  :ARG1-of (t2 / taste-01
                        :ARG0 (ii / i)
                        :time (e / ever)))))

# ::snt Even though they still charge you the days you booked but won't use, it is worth the get the hell out of this crap hole .
(w / worth-02
      :ARG1 (ii / it)
      :ARG2 (g / get-05
            :ARG2 (o / out-06
                  :ARG2 (h / hole
                        :ARG1-of (c / crap-01)
                        :mod (t / this)))
            :mod (h2 / hell))
      :concession (c2 / charge-01
            :ARG0 (t2 / they)
            :ARG2 (y / you)
            :ARG3 (d / day
                  :ARG1-of (b / book-03
                        :ARG0 y
                        :ARG1-of (c3 / contrast-01
                              :ARG2 (u / use-01
                                    :polarity -
                                    :ARG0 y))))
            :mod (s / still)))

# ::snt Auto Towing is one of the best towing services I have used .
(ii / include-91
      :ARG1 (t / tow-01
            :mod (a / auto))
      :ARG2 (s / service-05
            :ARG2 (t2 / tow-01)
            :ARG1-of (g / good-02
                  :ARG2-of (h / have-degree-91
                        :ARG1 s
                        :ARG3 (m / most)))
            :ARG1-of (u / use-01
                  :ARG0 (ii2 / i))))

# ::snt The first time I used them they arrived on time and towed car for me to the destination I needed .
(a / and
      :op1 (a2 / arrive-01
            :ARG1 (t / they)
            :manner (o / on-time))
      :op2 (t2 / tow-01
            :ARG0 t
            :ARG1 (c / car)
            :purpose (d / destination
                  :ARG1-of (n / need-01
                        :ARG0 (ii / i))))
      :time (u / use-01
            :ARG0 ii
            :ARG1 t
            :ord (o2 / ordinal-entity
                  :value 1)))

# ::snt The auto mechanics that work for Auto Towing are very friendly and informative and answered any question I had .
(a / and
      :op1 (f / friendly-01
            :ARG1 (m / mechanic
                  :mod (a2 / auto)
                  :ARG0-of (w / work-01
                        :ARG2 (c / company
                              :name (n / name
                                    :op1 "Auto"
                                    :op2 "Towing"))))
            :degree (v / very))
      :op2 (ii / inform-01
            :ARG0 m
            :degree v)
      :op3 (a3 / answer-01
            :ARG0 m
            :ARG1 (q / question-01
                  :ARG0 (ii2 / i)
                  :mod (a4 / any))))

# ::snt Mike one of owners was awesome, he explained the detailed plan, and executed on time, I am always going use them and refer them to many friends I can because of the great job they did me .
(a / and
      :op1 (a2 / awesome-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 "Mike")
                  :ARG1-of (ii / include-91
                        :ARG2 (p2 / person
                              :ARG0-of (o / own-01))))
            :ARG1 (a3 / and
                  :op1 (e / explain-01
                        :ARG0 p
                        :ARG1 (p3 / plan
                              :ARG1-of (d / detail-01)))
                  :op2 (e2 / execute-02
                        :ARG0 p
                        :ARG1 p3
                        :mod (o2 / on-time))))
      :op2 (a4 / and
            :op1 (u / use-01
                  :ARG0 (ii2 / i)
                  :ARG1 (t / they)
                  :time (a5 / always))
            :op2 (r / refer-02
                  :ARG0 ii2
                  :ARG1 t
                  :ARG2 (p4 / person
                        :quant (m / many)
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii2
                              :ARG2 (f / friend)))
                  :ARG1-of (p5 / possible-01))
            :ARG1-of (c / cause-01
                  :ARG0 (d2 / do-02
                        :ARG0 t
                        :ARG1 (j / job
                              :mod (g / great))
                        :ARG2 ii2))))

# ::snt Not only was it a good cut but my wife and friends comment on my hair every time I leave...saying it's the best look I've ever had .
(a / and
      :op1 (c / cut-02
            :ARG1-of (g / good-02)
            :domain (ii / it)
            :mod (o / only
                  :polarity -))
      :op2 (c2 / comment-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (ii2 / i
                                    :part (h2 / hair))
                              :ARG2 (w / wife)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 ii2
                              :ARG2 (f / friend))))
            :ARG3 h2
            :frequency (r / rate-entity-91
                  :ARG4 (l / leave-11
                        :ARG0 ii2))
            :manner (s / say-01
                  :ARG0 a2
                  :ARG1 (l2 / look-02
                        :ARG1 ii2
                        :ARG1-of (h4 / have-degree-91
                              :ARG2 (g2 / good-02
                                    :ARG1 l2)
                              :ARG3 (m / most)
                              :ARG5 (h5 / have-03
                                    :ARG0 ii2
                                    :time (e / ever)))))))

# ::snt He was incredibly informative about the options I had, giving me opinions on different treatments to choose from .
(a / and
      :op1 (ii / inform-01
            :ARG0 (h / he)
            :ARG1 (ii2 / i)
            :ARG2 (o / option
                  :ARG1-of (h2 / have-03
                        :ARG0 ii2))
            :degree (ii3 / incredible))
      :op2 (g / give-01
            :ARG0 h
            :ARG1 (t / thing
                  :ARG1-of (o2 / opine-01
                        :ARG0 h)
                  :topic (t2 / treat-03
                        :ARG1-of (d / differ-02)
                        :ARG2-of (c / choose-01
                              :ARG0 ii2)))
            :ARG2 ii2))

# ::snt We both kept trying to find something we liked .
(k / keep-02
      :ARG0 (w / we
            :mod (b / both))
      :ARG1 (t / try-01
            :ARG0 w
            :ARG1 (f / find-01
                  :ARG0 w
                  :ARG1 (s / something
                        :ARG1-of (l / like-01
                              :ARG0 w)))))

# ::snt The only thing I found edible were the potato wedges, I finally gave up, he kept trying - he found the fried wantons to be OK - His Mongolian bowl was awful .
(m / multi-sentence
      :snt1 (f / find-01
            :ARG0 (ii / i)
            :ARG1 (e / edible
                  :domain (w / wedgie
                        :mod (p / potato))
                  :mod (o / only)))
      :snt2 (a / and
            :op1 (g / give-up-07
                  :ARG0 ii
                  :time (f2 / final))
            :op2 (k / keep-02
                  :ARG0 (h / he)
                  :ARG1 (t / try-01
                        :ARG0 h))
            :op3 (f3 / find-01
                  :ARG0 (h2 / he)
                  :ARG1 (o2 / okay-04
                        :ARG1 (w2 / wanton
                              :ARG1-of (f4 / fry-01))))
            :op4 (a2 / awful
                  :domain (b / bowl
                        :mod (c / country
                              :name (n / name
                                    :op1 "Mongolia"))
                        :poss h2))))

# ::snt The kind of support they provide is simply great!! !
(g / great
      :domain (s / support-01
            :ARG0 (t / they)
            :mod (k / kind))
      :ARG1-of (s2 / simple-02))

# ::snt Hands-down the best pasta and gnocchi I've ever eaten (and I've eaten a lot) .
(a / and
      :op1 (h / have-degree-91
            :ARG1 (a2 / and
                  :op1 (p / pasta)
                  :op2 (g / gnocchi)
                  :ARG1-of (e / eat-01
                        :ARG0 (ii / i)
                        :time (e2 / ever)))
            :ARG2 (g2 / good-02
                  :ARG1 a2)
            :ARG3 (m / most))
      :op2 (e3 / eat-01
            :ARG0 ii
            :quant (l / lot))
      :mod (h2 / hands-down))

# ::snt I have been extremely pleased with the signs and pop-up banners she has supplied to me over the years - a truly first class family business run by Tina and her husband Chris .
(p / please-01
      :ARG0 (a / and
            :op1 (s / sign)
            :op2 (b / banner
                  :ARG1-of (p2 / pop-up-03))
            :ARG1-of (s2 / supply-01
                  :ARG0 (s3 / she)
                  :ARG2 (ii / i)
                  :duration (o / over
                        :op1 (m / multiple
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (y / year)))))
            :domain (b2 / business
                  :mod (f / family)
                  :mod (c / class
                        :ord (o2 / ordinal-entity
                              :value 1
                              :degree (t2 / truly)))
                  :ARG1-of (r / run-01
                        :ARG0 (a2 / and
                              :op1 (p3 / person
                                    :name (n / name
                                          :op1 "Tina"))
                              :op2 (p4 / person
                                    :name (n2 / name
                                          :op1 "Chris")
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 p3
                                          :ARG2 (h2 / husband)))))))
      :ARG1 ii
      :degree (e / extreme))

# ::snt I can't say enough good things about Karla and the wonderful things she has done for me and my dog Gracee .
(p / possible-01
      :polarity -
      :ARG1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (g / good-02)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (e / enough))
                  :topic (a / and
                        :op1 (p2 / person
                              :name (n / name
                                    :op1 "Karla"))
                        :op2 (t2 / thing
                              :ARG1-of (w / wonderful-03)
                              :ARG1-of (d / do-02
                                    :ARG0 p2
                                    :ARG2 (a2 / and
                                          :op1 ii
                                          :op2 (d2 / dog
                                                :name (n2 / name
                                                      :op1 "Gracee")
                                                :poss ii))))))))

# ::snt Worst Service I've Ever Experience d
(h / have-degree-91
      :ARG1 (s / serve-01)
      :ARG2 (b / bad-02
            :ARG1 s)
      :ARG3 (m / most)
      :ARG5 (e / experience-01
            :ARG0 (ii / i)
            :time (e2 / ever)))

# ::snt The atmosphere alone deserves 4 stars but, the food was not up to par with the price tag and the reputation the restaurant carries .
(c / contrast-01
      :ARG1 (d / deserve-01
            :ARG0 (a / atmosphere
                  :mod (a2 / alone))
            :ARG1 (s / star
                  :quant 4))
      :ARG2 (u / up-to-par
            :polarity -
            :domain (f / food)
            :prep-with (a3 / and
                  :op1 (t / tag
                        :mod (m / monetary-quantity
                              :ARG2-of (p / price-01)))
                  :op2 (r / reputation
                        :ARG1-of (c2 / carry-01
                              :ARG0 (r2 / restaurant))))))

# ::snt The server we had was knowledgeable but he was not as proper as he should have been, acting like he was talking to his friends rather than his customers .
(c / contrast-01
      :ARG1 (k / know-01
            :ARG0 (s / server
                  :ARG1-of (h / have-03
                        :ARG0 (w / we))))
      :ARG2 (h2 / have-degree-91
            :polarity -
            :ARG1 s
            :ARG2 (p / proper)
            :ARG3 (e / equal)
            :ARG4 (r / recommend-01
                  :ARG1 p)
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / act-01
                        :ARG0 s
                        :ARG1 (t / talk-01
                              :ARG0 s
                              :ARG2 (p2 / person
                                    :ARG0-of (h3 / have-rel-role-91
                                          :ARG1 s
                                          :ARG2 (f / friend)))
                              :ARG1-of (ii / instead-of-91
                                    :ARG2 (t2 / talk-01
                                          :ARG0 s
                                          :ARG2 (p3 / person
                                                :ARG0-of (h4 / have-rel-role-91
                                                      :ARG1 s
                                                      :ARG2 (c3 / customer))))))))))

# ::snt While it's not cheap, Alto will give you an experience you'll never forget .
(g / give-01
      :ARG0 (f / facility
            :name (n / name
                  :op1 "Alto"))
      :ARG1 (e / experience-01
            :ARG0 (y / you)
            :ARG1-of (f2 / forget-01
                  :polarity -
                  :ARG0 y
                  :time (e2 / ever)))
      :ARG2 y
      :concession (c / cheap-02
            :ARG1 f))

# ::snt The crew at The Creative Workshop went over and above the call of duty and gave me back a car I can drive anywhere and finally enjoy owning .
(a / and
      :op1 (g / go-over-and-over
            :op1 (c / call-10
                  :ARG1 (d / duty)))
      :op2 (a2 / above
            :op1 c)
      :op3 (g2 / give-back-03
            :ARG0 (c2 / crew
                  :part-of (o / organization
                        :name (n / name
                              :op1 "The"
                              :op2 "Creative"
                              :op3 "Workshop")))
            :ARG1 (c3 / car
                  :ARG1-of (o2 / own-01
                        :ARG0 (ii / i)
                        :ARG1-of (p / possible-01
                              :ARG1 (d2 / drive-01
                                    :ARG0 ii
                                    :location (a3 / anywhere)))
                        :ARG1-of (e / enjoy-01
                              :ARG0 ii
                              :time (f / final))))
            :ARG2 ii))

# ::snt It had listed that there was a hot breakfast but all this meant is that they added a waffle maker to the common continental affair at most cheap hotels .
(c / contrast-01
      :ARG1 (l / list-01
            :ARG0 (ii / it)
            :ARG1 (b / breakfast
                  :ARG1-of (h / hot-05)))
      :ARG2 (m / mean-01
            :ARG1 l
            :ARG2 (a / add-02
                  :ARG0 (t / they)
                  :ARG1 (t2 / thing
                        :ARG0-of (m2 / make-01
                              :ARG1 (w / waffle)))
                  :ARG2 (a2 / affair-02
                        :mod (c2 / common)
                        :mod (c3 / continent))
                  :location (h2 / hotel
                        :ARG1-of (c4 / cheap-02
                              :mod (m3 / most))))
            :mod (a3 / all)))

# ::snt All you have to do to make it authentic Jamaican food, is add a whole lot of pepper .
(a / add-02
      :ARG0 (y / you)
      :ARG1 (p / pepper
            :quant (l / lot
                  :mod (w / whole)))
      :ARG1-of (d / do-02
            :ARG0 y
            :ARG2-of (o / obligate-01)
            :purpose (m / make-02
                  :ARG0 y
                  :ARG1 (f / food
                        :mod (c / country
                              :name (n / name
                                    :op1 "Jamaica"))
                        :ARG1-of (a2 / authentic-02))
                  :ARG2 (ii / it))))

# ::snt The finest Christmas Trees i've ever seen .
(h / have-degree-91
      :ARG1 (t / tree
            :mod (f / festival
                  :name (n / name
                        :op1 "Christmas")))
      :ARG2 (f2 / fine-03
            :ARG1 t)
      :ARG3 (m / most)
      :ARG5 (s / see-01
            :ARG0 (ii / i)
            :time (e / ever)))

# ::snt Eagle Transmission determined that much of the work the dealer said needed to be done was unneccesary and what needed to be fixed was only $400! !
(d / determine-01
      :ARG0 (c / company
            :name (n / name
                  :op1 "Eagle"
                  :op2 "Transmission"))
      :ARG1 (a / and
            :op1 (n2 / need-01
                  :polarity -
                  :ARG1 (w / work-01
                        :quant (m / much)
                        :ARG1-of (ii / include-91
                              :ARG2 (w2 / work-01
                                    :ARG1-of (d2 / do-02
                                          :ARG1-of (n3 / need-01
                                                :ARG1-of (s / say-01
                                                      :ARG0 (p / person
                                                            :ARG0-of (d3 / deal-01)))))))))
            :op2 (n4 / need-01
                  :ARG1 (f / fix-02
                        :ARG1 (m2 / monetary-quantity
                              :quant 400
                              :unit (d4 / dollar)
                              :mod (o / only))))))

# ::snt I have finally found a mechanic I trust! !
(f / find-01
      :mode expressive
      :ARG0 (ii / i)
      :ARG1 (m / mechanic
            :ARG1-of (t / trust-02
                  :ARG0 ii))
      :mod (f2 / final))

# ::snt The flowers were all that I hoped they would be, I have attended several funerals of late unfortunately and the flowers I recieved from Ana outshone them all .
(a / and
      :op1 (f / flower
            :mod (a2 / all
                  :ARG1-of (h / hope-01
                        :ARG0 (ii / i))))
      :op2 (a3 / attend-01
            :ARG0 ii
            :ARG1 (f2 / funeral
                  :quant (s / several))
            :ARG2-of (f3 / fortunate-01
                  :polarity -)
            :time (r / recent))
      :op3 (o / outshine-01
            :ARG0 (f4 / flower
                  :ARG1-of (r2 / receive-01
                        :ARG0 ii
                        :ARG2 (p / person
                              :name (n / name
                                    :op1 "Ana"))))
            :ARG1 f2))

# ::snt I'm 22, and my hairdresser was great (and not "old" like one of the reviews says) - she really listened to what I wanted and gave me tons of tips on how to style my hair so I could get it to look the way I wanted it to .
(a / and
      :op1 (a2 / age-01
            :ARG1 (ii / i
                  :part (h / hair))
            :ARG2 (t / temporal-quantity
                  :quant 22
                  :unit (y / year)))
      :op2 (a3 / and
            :op1 (g / great
                  :domain (p / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (h3 / hairdresser))))
            :op2 (o / old
                  :polarity -
                  :ARG1-of (r / resemble-01
                        :ARG2 (s / say-01
                              :ARG0 (p2 / person
                                    :ARG1-of (r2 / review-01))))))
      :op3 (a4 / and
            :op1 (l / listen-01
                  :ARG0 p
                  :ARG1 (t2 / thing
                        :ARG1-of (w / want-01
                              :ARG0 ii))
                  :ARG1-of (r3 / real-04))
            :op2 (g2 / give-01
                  :ARG0 p
                  :ARG1 (t3 / tip-05
                        :ARG0 p
                        :ARG1 ii
                        :ARG2 (s2 / style-01
                              :ARG0 ii
                              :ARG1 h
                              :purpose (p3 / possible-01
                                    :ARG1 (g3 / get-04
                                          :ARG0 ii
                                          :ARG1 (l2 / look-02
                                                :ARG0 h
                                                :ARG1 (w2 / way
                                                      :manner-of (l3 / look-02
                                                            :ARG0 h
                                                            :ARG1-of (w3 / want-01
                                                                  :ARG0 ii)))))))
                        :quant (t4 / ton))
                  :ARG2 ii)))

# ::snt Whether they pay me or not, if their parents get into an accident, stuck in traffic, etc. THE LAST THING I WOULD DO IS LET A CHILD GET RAPED BECAUSE I WASN'T PAID .
(m / multi-sentence
      :snt1 (r / regardless-91
            :ARG2 (o / or
                  :op1 (p / pay-01
                        :ARG0 (t / they)
                        :ARG2 (ii / i))
                  :op2 (p2 / pay-01
                        :polarity -
                        :ARG0 t
                        :ARG2 ii)))
      :snt2 (d / do-02
            :ARG0 (ii2 / i)
            :ARG1 (t2 / thing
                  :mod (l / last)
                  :domain (l2 / let-01
                        :ARG0 ii2
                        :ARG1 (r2 / rape-01
                              :ARG1 (c / child)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (p3 / pay-01
                                          :polarity -
                                          :ARG2 ii2)))))
            :condition o
            :op1 (g / get-05
                  :ARG1 (p4 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 t)
                        :ARG2 (p5 / parent)))
            :ARG2 (a / accident))
      :op2 (s / stick-01
            :ARG1 p4
            :ARG2 (t3 / traffic))
      :op3 (e / et-cetera))

# ::snt I came in for alterations (free, by the way) and told her about a stain I had on my new leather purse .
(a / and
      :op1 (c / come-in-07
            :ARG1 (ii / i)
            :purpose (a2 / alter-01
                  :ARG1 ii
                  :ARG1-of (f / free-03
                        :mod (b / by-the-way))))
      :op2 (t / tell-01
            :ARG0 ii
            :ARG1 (s / stain-01
                  :ARG1 (p / purse
                        :mod (l / leather)
                        :ARG1-of (n / new-01)
                        :poss ii))
            :ARG2 (s2 / she)))

# ::snt There must be a reason so many people like it there .
(ii / infer-01
      :ARG1 (c / cause-01
            :ARG0 (r / reason)
            :ARG1 (l / like-01
                  :ARG0 (p / person
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m / many)
                              :ARG3 (s / so)))
                  :ARG1 (ii2 / it)
                  :location (t / there))))

# ::snt after finding the car i wanted they took the time to go over each step and making it as painless as possible .
(w / want-01
      :ARG0 (ii / i)
      :ARG1 (t / take-01
            :ARG0 (t2 / they)
            :ARG1 (t3 / time)
            :purpose (a / and
                  :op1 (g / go-over-26
                        :ARG0 t2
                        :ARG1 (s / step-01
                              :mod (e / each)))
                  :op2 (m / make-02
                        :ARG0 t2
                        :ARG1 (p / pain-01
                              :ARG0 (c / car)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c
                                    :ARG3 (e2 / equal)
                                    :ARG4 (p2 / possible-01
                                          :ARG1 p)))))
            :time (a2 / after
                  :op1 (f / find-01
                        :ARG0 ii
                        :ARG1 c))))

# ::snt Liberty construction shows up and it's two guys...all I get is 100% sales pitch "We're the best...we're number 50 so we must be doing something right...look at all these certificates that say we're great" .
(a / and
      :op1 (s / show-up-02
            :ARG1 (c / company
                  :name (n / name
                        :op1 "Liberty"
                        :op2 "Construction")))
      :op2 (g / guy
            :quant 2)
      :op3 (g2 / get-01
            :ARG0 (ii / i)
            :ARG1 (p / pitch-06
                  :ARG0 c
                  :ARG1 (a2 / and
                        :op1 (h / have-degree-91
                              :ARG1 c
                              :ARG2 (g3 / good-03
                                    :ARG1 c)
                              :ARG3 (m / most))
                        :op2 (n2 / number
                              :value 50
                              :poss c
                              :ARG0-of (c2 / cause-01
                                    :ARG1 (ii2 / infer-01
                                          :ARG1 (d / do-02
                                                :ARG0 c
                                                :ARG1 (s2 / something
                                                      :ARG2-of (r / right-06))))))
                        :op3 (l / look-01
                              :mode imperative
                              :ARG0 (y / you)
                              :ARG1 (c3 / certificate
                                    :mod (a3 / all)
                                    :mod (t / this)
                                    :ARG0-of (s3 / say-01
                                          :ARG1 (g4 / great
                                                :domain c)))))
                  :mod (s4 / sell-01)
                  :mod (p2 / percentage-entity
                        :value 100))
            :mod a3))

# ::snt Find someone you trust that actually hears you and wants to do the job right .
(f / find-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / someone
            :ARG1-of (t / trust-02
                  :ARG0 y)
            :ARG0-of (h / hear-01
                  :ARG2 y
                  :ARG1-of (a / actual-02))
            :ARG0-of (w / want-01
                  :ARG1 (d / do-02
                        :ARG0 s
                        :ARG1 (j / job)
                        :ARG1-of (r / right-02)))))

# ::snt The owner warned me that it was the best salsa I would ever had, and he was right .
(a / and
      :op1 (w / warn-01
            :ARG0 (p / person
                  :ARG0-of (o / own-01))
            :ARG1 (h / have-degree-91
                  :ARG1 (s / salsa)
                  :ARG2 (g / good-02
                        :ARG1 s)
                  :ARG3 (m / most)
                  :ARG5 (h2 / have-03
                        :ARG0 (ii / i)
                        :time (e / ever)))
            :ARG2 ii)
      :op2 (r / right-06
            :ARG1 p
            :ARG2 h))

# ::snt We arrived Sunday at about 230 and found a do we really liked .
(a / and
      :op1 (a2 / arrive-01
            :ARG1 (w / we)
            :time (d / date-entity
                  :weekday (s / sunday))
            :quant (a3 / about
                  :op1 230))
      :op2 (f / find-01
            :ARG0 w
            :ARG1 (t / thing
                  :ARG1-of (l / like-01
                        :ARG0 w
                        :degree (r / really)))))

# ::snt This is the only place I have ever eaten and been told to leave because other people were waiting .
(a / and
      :op1 (p / place
            :mod (o / only)
            :domain (t / this)
            :location-of (e / eat-01
                  :ARG0 (ii / i)
                  :time (e2 / ever)))
      :op2 (t2 / tell-01
            :ARG1 (l / leave-11
                  :ARG0 ii
                  :ARG1 p
                  :ARG1-of (c / cause-01
                        :ARG0 (w / wait-01
                              :ARG1 (p2 / person
                                    :mod (o2 / other))
                              :ARG2 l)))
            :ARG2 ii))

# ::snt When I finally found someone at the desk who could speak English, they moved our room, but we still did not receive the single queen we had "reserved "
(h / have-concession-91
      :ARG1 (m / move-01
            :ARG0 (t / they)
            :ARG1 (r / room
                  :poss (w / we))
            :time (f / find-01
                  :ARG0 (ii / i)
                  :ARG1 (s / someone
                        :location (d / desk)
                        :ARG0-of (s2 / speak-01
                              :ARG3 (l / language
                                    :name (n / name
                                          :op1 "English"))
                              :ARG1-of (p / possible-01)))
                  :mod (f2 / final)))
      :ARG2 (r2 / receive-01
            :polarity -
            :ARG0 w
            :ARG1 (q / queen
                  :ARG1-of (s3 / single-02)
                  :ARG1-of (r3 / reserve-01
                        :ARG0 w))
            :mod (s4 / still)))

# ::snt I called a few different businesses in the area to get estimates , they weren't the cheapest I found but very reasonable .
(a / and
      :op1 (c / call-02
            :ARG0 (ii / i)
            :ARG1 (b / business
                  :ARG1-of (d / differ-02)
                  :location (a2 / area)
                  :quant (f / few))
            :purpose (g / get-01
                  :ARG0 ii
                  :ARG1 (e / estimate-01)))
      :op2 (c2 / contrast-01
            :ARG1 (c3 / cheap-02
                  :polarity -
                  :ARG1 (t / they)
                  :ARG2-of (h / have-degree-91
                        :ARG1 t
                        :ARG3 (m / most)
                        :ARG5 (f2 / find-01
                              :ARG0 ii)))
            :ARG2 (r / reasonable-02
                  :ARG1 t
                  :degree (v / very))))

# ::snt The best part is I got my whole bathroom remodeled for about the same price the other company's were quoting just to fix the shower tile and fixtures .
(h / have-degree-91
      :ARG1 (p / part
            :domain (r / remodel-01
                  :ARG1 (b / bathroom
                        :poss (ii / i)
                        :mod (w / whole))
                  :ARG3 (p2 / price
                        :ARG1-of (s / same-01
                              :ARG2 (p3 / price
                                    :ARG1-of (q / quote-01
                                          :ARG0 (c / company
                                                :mod (o / other))))
                              :mod (a / about)))
                  :purpose (f / fix-02
                        :ARG1 (a2 / and
                              :op1 (t / tile
                                    :mod (s2 / shower))
                              :op2 (f2 / fixture
                                    :mod s2))
                        :mod (j / just))))
      :ARG2 (g / good-02
            :ARG1 p)
      :ARG3 (m / most))

# ::snt Best money I've spent on remodeling ever .
(h / have-degree-91
      :ARG1 (m / money
            :ARG3-of (s / spend-01
                  :ARG0 (ii / i)
                  :ARG1 (r / remodel-01
                        :ARG0 ii)
                  :time (e / ever)))
      :ARG2 (g / good-02
            :ARG1 m)
      :ARG3 (m2 / most))

# ::snt My dental surgeon, Dr. Lucy Nichols is clearly a dental perfectionist and clearly proud both of the work she does and the reputation she has established .
(a / and
      :op1 (p / perfectionist
            :mod (t / tooth)
            :domain (p2 / person
                  :name (n / name
                        :op1 "Dr."
                        :op2 "Lucy"
                        :op3 "Nichols")
                  :ARG0-of (s / surgery-01
                        :ARG1 (ii / i)
                        :ARG2 t))
            :ARG1-of (c / clear-06))
      :op2 (p3 / pride-01
            :ARG0 p2
            :ARG2 (a2 / and
                  :op1 (w / work-01
                        :ARG0 p2
                        :ARG1-of (d / do-02
                              :ARG0 p2))
                  :op2 (e / establish-01
                        :ARG0 p2
                        :ARG1 (r / reputation)))
            :ARG1-of (c2 / clear-06)))

# ::snt There was not one ounce of caring involved and anyone I can warn about the complete lack of service will be warned .
(a / and
      :op1 (ii / involve-01
            :polarity -
            :ARG1 (c / care-03
                  :quant (m / mass-quantity
                        :quant 1
                        :unit (o / ounce))))
      :op2 (w / warn-01
            :ARG1 (a2 / anyone
                  :ARG1-of (w2 / warn-01
                        :ARG0 (ii2 / i)
                        :ARG1-of (p / possible-01))
                  :topic (l / lack-01
                        :ARG1 (s / service)
                        :ARG1-of (c2 / complete-02)))))

# ::snt The only negative I have abou this place is the parking !
(n / negative-03
      :mode expressive
      :ARG0 (ii / i)
      :ARG1 (p / parking)
      :ARG2 (p2 / place
            :mod (t / this))
      :mod (o / only))

# ::snt I could only take it as they would seat the people they know first .
(p / possible-01
      :ARG1 (t / take-02
            :ARG0 (ii / i)
            :ARG1 (ii2 / it)
            :mod (o / only))
      :ARG1-of (c / cause-01
            :ARG0 (s / seat-01
                  :ARG0 (t2 / they)
                  :ARG1 (p2 / person
                        :ARG1-of (k / know-02
                              :ARG0 t2
                              :ord (o2 / ordinal-entity
                                    :value 1))))))

# ::snt Well, not much I can say except I'm very disappointed with this experience .
(p / possible-01
      :polarity -
      :ARG1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (m / much
                  :ARG2-of (e / except-01
                        :ARG1 (d / disappoint-01
                              :ARG0 (e2 / experience-01
                                    :ARG0 ii
                                    :mod (t / this))
                              :ARG1 ii
                              :degree (v / very)))))
      :mod (w / well))

# ::snt I don't want to waste my time on routes set for children, but I don't want to take on something I can't handle just to strain myself to exhaustion .
(c / contrast-01
      :ARG1 (w / want-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (w2 / waste-01
                  :ARG0 ii
                  :ARG1 (t / time
                        :poss ii)
                  :ARG2 (r / route
                        :ARG1-of (s / set-02
                              :ARG2 (c2 / child)))))
      :ARG2 (w3 / want-01
            :polarity -
            :ARG0 ii
            :ARG1 (t2 / take-on-21
                  :ARG0 ii
                  :ARG1 (s2 / something
                        :ARG1-of (h / handle-01
                              :ARG0 ii
                              :ARG1-of (p / possible-01
                                    :polarity -)))
                  :purpose (s3 / strain-01
                        :ARG0 ii
                        :ARG1 ii
                        :degree (e / exhaust-01
                              :ARG1 ii)
                        :mod (j / just)))))

# ::snt It took all the courage I could muster to make an appointment .
(t / take-10
      :ARG0 (m / make-01
            :ARG0 (ii / i)
            :ARG1 (a / appointment-02
                  :ARG0 ii))
      :ARG1 (c / courage
            :mod (a2 / all)
            :ARG1-of (m2 / muster-01
                  :ARG0 ii
                  :ARG1-of (p / possible-01))))

# ::snt Not only am I being bilked for money I do not owe, the office staff is rude to boot .
(a / and
      :op1 (b / bilk-01
            :ARG1 (ii / i)
            :ARG2 (m / money
                  :ARG1-of (o / owe-01
                        :polarity -
                        :ARG0 ii)))
      :op2 (r / rude-01
            :ARG1 (p / person
                  :ARG2-of (s / staff-01
                        :ARG1 (o2 / office)))
            :mod (b2 / boot-02)))

# ::snt Grimy work you guys do .
(w / work-01
      :ARG0 (y / you
            :mod (g / guy))
      :mod (g2 / grimy))

# ::snt I've stayed at this fabulous little motel two years running, and I have to say it's one of the best lodging experiences I've ever had on the coast...and I'm even comparing it to the big resorts I've stayed at !
(a / and
      :op1 (s / stay-01
            :ARG1 (ii / i)
            :ARG2 (m / motel
                  :mod (t / this)
                  :mod (l / little)
                  :ARG1-of (f / fabulous-02))
            :duration (t2 / temporal-quantity
                  :quant 2
                  :unit (y / year)))
      :op2 (o / obligate-01
            :ARG1 ii
            :ARG2 (s2 / say-01
                  :ARG0 ii
                  :ARG1 (a2 / and
                        :op1 (e / experience-01
                              :ARG0 ii
                              :ARG1 m
                              :ARG1-of (ii2 / include-91
                                    :ARG2 (e2 / experience-01
                                          :ARG0 ii
                                          :ARG1 (l2 / lodge-01)
                                          :location (c / coast)
                                          :time (e3 / ever)))
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (g / good-02
                                          :ARG1 e)
                                    :ARG3 (m2 / most)))
                        :op2 (c2 / compare-01
                              :ARG0 ii
                              :ARG1 m
                              :ARG2 (r / resort
                                    :mod (b / big)
                                    :ARG4-of (s3 / stay-01
                                          :ARG1 ii))
                              :mod (e4 / even))))))

# ::snt I cant speak for them but any tests or appointments they recommend are probably in the best interests of us (the patient) and you have the ability to decline anything that they suggest to you .
(c / contrast-01
      :ARG1 (p / possible-01
            :polarity -
            :ARG1 (s / speak-01
                  :ARG0 (ii / i)
                  :beneficiary (t / they)))
      :ARG2 (a / and
            :op1 (ii2 / interest-01
                  :ARG1 (w / we
                        :ARG1-of (m / mean-01
                              :ARG2 (p2 / patient)))
                  :ARG2 (o / or
                        :op1 (t2 / test-01)
                        :op2 (a2 / appointment-02)
                        :mod (a3 / any)
                        :ARG1-of (r / recommend-01
                              :ARG0 t))
                  :mod (p3 / probable)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g / good-04
                              :ARG1 ii2)
                        :ARG3 (m2 / most)))
            :op2 (p4 / possible-01
                  :ARG1 (d / decline-02
                        :ARG0 (y / you)
                        :ARG1 (a4 / anything
                              :ARG1-of (s2 / suggest-01
                                    :ARG0 t
                                    :ARG2 y))))))

# ::snt We got to talking and he got me set up and I test drove with Craig and I fell head over heels for this car all I kept saying, " was I gotta have it! "
(a / and
      :op1 (g / get-22
            :ARG0 (w / we)
            :ARG1 (t / talk-01
                  :ARG0 w))
      :op2 (s / set-up-03
            :ARG0 (h / he)
            :ARG1 (ii / i))
      :op3 (t2 / test-drive-01
            :ARG0 ii
            :accompanier (p / person
                  :name (n / name
                        :op1 "Craig")))
      :op4 (f / fall-10
            :ARG1 ii
            :ARG2 (h2 / head-over-heaven)
            :ARG3 (c / car
                  :mod (t3 / this))
            :ARG1-of (c2 / cause-01
                  :ARG0 (s2 / say-01
                        :ARG0 ii
                        :ARG1 (o / obligate-01
                              :mode expressive
                              :ARG2 (h3 / have-03
                                    :ARG0 ii
                                    :ARG1 c))
                        :mod (a2 / all)))))

# ::snt When having your car worked on you have to trust the mechanic & this Midas is truly someone you can trust !
(a / and
      :op1 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (t / trust-02
                  :ARG0 y
                  :ARG1 (m / mechanic))
            :time (w / work-10
                  :ARG1 (c / car
                        :poss y)
                  :ARG2 y))
      :op2 (p / possible-01
            :ARG1 (t2 / trust-02
                  :ARG0 y
                  :ARG1 (s / someone
                        :domain (p2 / person
                              :name (n / name
                                    :op1 "Midas")
                              :mod (t3 / this)))
                  :ARG1-of (t4 / true-01))))

# ::snt The sweet potato tempura roll was actually a great surprise: cheap and delicious, the only thing we tried that I would say was well worth it and a great value (and I never get vegetarian rolls) .
(s / surprise-01
      :ARG0 (r / roll
            :mod (t / tempura)
            :consist-of (p / potato
                  :ARG1-of (s2 / sweet-04))
            :ARG1-of (c / cheap-02)
            :mod (d / delicious)
            :ARG1-of (t2 / try-01
                  :ARG0 (w / we)
                  :ARG1 (t3 / thing
                        :mod (o / only)
                        :ARG1-of (w2 / worth-02
                              :ARG2 (ii / it)
                              :degree (w3 / well)
                              :ARG1-of (s3 / say-01
                                    :ARG0 (ii2 / i)))
                        :ARG1-of (v / value-01
                              :mod (g / great)
                              :concession (a / and
                                    :op1 (g2 / get-01
                                          :polarity -
                                          :ARG0 ii2
                                          :ARG1 (r2 / roll
                                                :mod (v2 / vegetarian))
                                          :time (e / ever)))))))
      :mod g
      :ARG1-of (a2 / actual-02))

# ::snt The poor quality starts at the receptionist desk, where the staff is very impatient and lack the efficiency I once loved about the office .
(s / start-01
      :ARG1 (q / quality
            :mod (p / poor))
      :location (d / desk
            :mod (r / receptionist)
            :location-of (a / and
                  :op1 (p2 / patient-01
                        :polarity -
                        :ARG1 (p3 / person
                              :ARG2-of (s2 / staff-01))
                        :degree (v / very))
                  :op2 (l / lack-01
                        :ARG0 p3
                        :ARG1 (e / efficient-01
                              :ARG1-of (l2 / love-01
                                    :ARG0 (ii / i)
                                    :time (o / once)
                                    :topic (o2 / office)))))))

# ::snt When the guys arrived (2 hours later than agreed) they told that you have to pay all the tolls they payed coming from Brooklyn and extra $100 for them to drive back from your destination .
(t / tell-01
      :ARG0 (g / guy)
      :ARG1 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (p / pay-01
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (t2 / toll
                              :mod (a2 / all)
                              :ARG1-of (p2 / pay-01
                                    :ARG0 g
                                    :time (c / come-01
                                          :ARG1 g
                                          :ARG3 (c2 / city-district
                                                :name (n / name
                                                      :op1 "Brooklyn")))))
                        :op2 (m / monetary-quantity
                              :quant 100
                              :unit (d / dollar)
                              :mod (e / extra)
                              :purpose (d2 / drive-01
                                    :ARG0 g
                                    :ARG1 (d3 / destination
                                          :poss y)
                                    :direction (b / back))))))
      :time (a3 / arrive-01
            :ARG1 g
            :time (a4 / after
                  :op1 (a5 / agree-01)
                  :quant (t3 / temporal-quantity
                        :quant 2
                        :unit (h / hour)))))

# ::snt It's without a doubt, the best service experience I've ever had and just to be clear, the price he charged me was the same as my tire guy in Nashville's price for putting on the other rear tire .
(a / and
      :op1 (e / experience-01
            :ARG0 (ii / i)
            :ARG1 (s / serve-01)
            :ARG1-of (d / doubt-01
                  :polarity -)
            :ARG1-of (h / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 e)
                  :ARG3 (m / most))
            :time (e2 / ever))
      :op2 (p / price-01
            :ARG1 (t / thing
                  :ARG1-of (c / charge-01
                        :ARG0 (h2 / he)
                        :ARG2 ii))
            :ARG1-of (s2 / same-01
                  :ARG2 (t2 / thing
                        :ARG2-of (p2 / price-01
                              :ARG0 (g2 / guy
                                    :mod (t3 / tire)
                                    :poss ii)
                              :ARG1 (p3 / put-on-08
                                    :ARG0 g2
                                    :ARG1 (t4 / tire
                                          :mod (r / rear)
                                          :mod (o / other)))
                              :location (c2 / city
                                    :name (n / name
                                          :op1 "Nashville"))))
                  :purpose (c3 / clear-06
                        :mod (j / just)))))

# ::snt The first thing you notice when you arrive on location is that the waiting line literally goes out the door and spills into the parking lot .
(n / notice-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g / go-01
                  :ARG1 (l / line
                        :mod (w / wait-01))
                  :direction (o / out
                        :op1 (d / door))
                  :mod (l2 / literal))
            :op2 (s / spill-over-02
                  :ARG1 l
                  :ARG2 (l3 / lot
                        :purpose (p / park-01))))
      :time (a2 / arrive-01
            :ARG1 y
            :ARG4 (l4 / location))
      :ord (o2 / ordinal-entity
            :value 1))

# ::snt After looking at the menu and seeing the new menu items they had, we knew we were in for a treat !
(k / know-01
      :ARG0 (w / we)
      :ARG1 (b / be-destined-for-91
            :ARG1 w
            :ARG2 (t / treat))
      :time (a / after
            :op1 (a2 / and
                  :op1 (l / look-01
                        :ARG0 w
                        :ARG1 (m / menu))
                  :op2 (s / see-01
                        :ARG0 w
                        :ARG1 (ii / item
                              :ARG1-of (n / new-01)
                              :mod (m2 / menu)
                              :ARG1-of (h / have-03
                                    :ARG0 (t2 / they)))))))

# ::snt The price was actually lower than what I had anticipated and used to compared to other places, plus he showed me the work he did when I came into pick up the car .
(a / and
      :op1 (l / low-04
            :ARG1 (m / monetary-quantity
                  :ARG2-of (p / price-01))
            :ARG1-of (a2 / actual-02)
            :ARG2-of (h / have-degree-91
                  :ARG1 m
                  :ARG3 (m2 / more)
                  :ARG4 (a3 / and
                        :op1 (m3 / monetary-quantity
                              :ARG2-of (p2 / price-01)
                              :ARG1-of (a4 / anticipate-01
                                    :ARG0 (ii / i)))
                        :op2 (m4 / monetary-quantity
                              :ARG2-of (p3 / price-01)
                              :ARG1-of (u / use-02
                                    :ARG0 ii))))
            :ARG1-of (c / compare-01
                  :ARG2 (p4 / place
                        :mod (o / other))))
      :op2 (s / show-01
            :ARG0 (h2 / he)
            :ARG1 (w / work-01
                  :ARG0 h2
                  :time (c2 / come-01
                        :ARG1 ii
                        :purpose (p5 / pick-up-04
                              :ARG0 ii
                              :ARG1 (c3 / car))))
            :ARG2 ii))

# ::snt In the second room it took 3 tries to get all the towels and linens we requested .
(t / take-10
      :ARG0 (g / get-01
            :ARG1 (a / and
                  :op1 (t2 / towel)
                  :op2 (l / linen)
                  :mod (a2 / all)
                  :ARG1-of (r / request-01
                        :ARG0 (w / we))))
      :ARG1 (t3 / try-01
            :quant 3)
      :location (r2 / room
            :ord (o / ordinal-entity
                  :value 2)))

# ::snt The Worst Chinese I've Ever Ha d
(p / person
      :mod (c / country
            :name (n / name
                  :op1 "China"))
      :ARG1-of (h / have-degree-91
            :ARG2 (b / bad-07
                  :ARG1 p)
            :ARG3 (m / most)
            :ARG5 (p2 / person
                  :ARG1-of (h2 / ha-02
                        :ARG0 (ii / i)
                        :time (e / ever)))))

# ::snt This is by far the worst chinese food I have ever had .
(h / have-degree-91
      :ARG1 (f / food
            :mod (c / country
                  :name (n / name
                        :op1 "China"))
            :domain (t / this))
      :ARG2 (b / bad-07
            :ARG1 f)
      :ARG3 (m / most
            :quant (f2 / far))
      :ARG5 (h2 / have-06
            :ARG0 (ii / i)
            :time (e / ever)))

# ::snt One of the worst experiences I've ever had with a auto repair shop .
(e / experience-01
      :ARG1-of (ii / include-91
            :ARG2 (e2 / experience-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s / shop
                        :ARG0-of (r / repair-01
                              :ARG1 (a / auto)))
                  :time (e3 / ever)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (b / bad-07
                              :ARG1 e2)
                        :ARG3 (m / most)))))

# ::snt Well, unless of course the third compressor he put in the car goes out .
(h / have-condition-91
      :ARG2 (g / go-out-17
            :ARG1 (c / compressor
                  :ord (o / ordinal-entity
                        :value 3)
                  :ARG1-of (p / put-01
                        :ARG0 (h2 / he)
                        :ARG2 (c2 / car)))
            :mod (o2 / of-course))
      :mod (w / well))

# ::snt They said it would be made exactly like the one I needed to replace .
(s / say-01
      :ARG0 (t / they)
      :ARG1 (m / make-01
            :ARG1 (ii / it
                  :ARG1-of (r / resemble-01
                        :ARG2 (o / one
                              :ARG1-of (r2 / replace-01
                                    :ARG0 (ii2 / i)
                                    :ARG1-of (n / need-01
                                          :ARG0 ii2)))
                        :mod (e / exact)))))

# ::snt She told me she could not use the piece I was returning and the company would only put it in the trash so I could not return it .
(t / tell-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (p / possible-01
                  :polarity -
                  :ARG1 (u / use-01
                        :ARG0 s
                        :ARG1 (p2 / piece
                              :ARG1-of (r / return-02
                                    :ARG0 (ii / i)))))
            :op2 (p3 / put-01
                  :ARG0 (c / company)
                  :ARG1 p2
                  :ARG2 (t2 / trash)
                  :mod (o / only)
                  :purpose (p4 / possible-01
                        :polarity -
                        :ARG1 (r2 / return-02
                              :ARG0 ii
                              :ARG1 p2))))
      :ARG2 ii)

# ::snt I bought about half of the furniture I own from this place .
(b / buy-01
      :ARG0 (ii / i)
      :ARG1 (a / about
            :op1 (h / half
                  :ARG3-of (ii2 / include-91
                        :ARG2 (f / furniture
                              :ARG1-of (o / own-01
                                    :ARG0 ii)))))
      :ARG2 (p / place
            :mod (t / this)))

# ::snt I came back with the receipt Ahmed had provided upon my purchase, and the guy took forever to copy it but said that he would take care of the situation .
(a / and
      :op1 (c / come-01
            :ARG1 (ii / i)
            :direction (b / back)
            :accompanier (r / receipt
                  :ARG1-of (p / provide-01
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 "Ahmed"))
                        :time (p3 / purchase-01
                              :ARG0 ii))))
      :op2 (c2 / contrast-01
            :ARG1 (t / take-10
                  :ARG0 (c3 / copy-01
                        :ARG0 (g / guy)
                        :ARG1 r)
                  :ARG1 (f / forever))
            :ARG2 (s / say-01
                  :ARG0 g
                  :ARG1 (c4 / care-03
                        :ARG0 g
                        :ARG1 (s2 / situation)))))

# ::snt I trust you and believe that you'll be able to handle this and all you have to do is to reciprocate !
(a / and
      :op1 (a2 / and
            :op1 (t / trust-01
                  :ARG0 (ii / i)
                  :ARG1 (c / capable-01
                        :ARG1 (y / you)
                        :ARG2 (h / handle-01
                              :ARG0 y
                              :ARG1 (t2 / this))))
            :op2 (b / believe-01
                  :ARG0 ii
                  :ARG1 c))
      :op2 (o / obligate-01
            :ARG1 y
            :ARG2 (d / do-02
                  :ARG0 y
                  :ARG1 (r / reciprocate-01
                        :ARG0 y)
                  :mod (a3 / all))))

# ::snt Everything we have gotten there has been more authentic and better tasting than any other Chinese restaurant in the San Antonio area we have been to--and trust me we have been to a lot of them .
(a / and
      :op1 (h / have-degree-91
            :ARG1 (e / everything
                  :ARG1-of (g / get-01
                        :ARG0 (w / we)
                        :location (t / there)))
            :ARG2 (a2 / and
                  :op1 (a3 / authentic-02
                        :ARG1 e)
                  :op2 (t2 / taste-02
                        :ARG1 e))
            :ARG3 (m / more)
            :ARG4 (r / restaurant
                  :mod (c / country
                        :name (n / name
                              :op1 "China"))
                  :mod (o / other)
                  :location (a4 / area
                        :mod (c2 / city
                              :name (n2 / name
                                    :op1 "San"
                                    :op2 "Antonio")))
                  :ARG4-of (g2 / go-02
                        :ARG0 w)))
      :op2 (t3 / trust-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (g3 / go-02
                  :ARG0 w
                  :ARG1 (l / lot
                        :ARG3-of (ii / include-91
                              :ARG2 r)))
            :ARG2 (ii2 / i)))

# ::snt They have the best Egg Drop Soup I have ever tasted .
(h / have-03
      :ARG0 (t / they)
      :ARG1 (s / soup
            :ARG1-of (d / drop-01
                  :ARG3 (e / egg))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 s)
                  :ARG3 (m / most)
                  :ARG5 (t2 / thing
                        :ARG1-of (t3 / taste-01
                              :ARG0 (ii / i)
                              :time (e2 / ever))))))

# ::snt And every entree we have ordered is perfect .
(a / and
      :op2 (p / perfect-02
            :ARG1 (e / every
                  :ARG1-of (o / order-02
                        :ARG0 (w / we))
                  :ARG1-of (e2 / eat-01
                        :ARG0 w))))

# ::snt Their prices are extremely reasonable for the amount of food you receive .
(r / reasonable-02
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG0 (t2 / they)))
      :ARG2 (a / amount
            :quant-of (f / food
                  :ARG1-of (r2 / receive-01
                        :ARG0 (y / you))))
      :degree (e / extreme))

# ::snt So I figure if they don't want to take the time to fix the fence that they installed then I'll take the time to let everyone I can know about how they treat customers once they have your money!! !
(c / cause-01
      :ARG1 (f / figure-01
            :ARG0 (ii / i)
            :ARG1 (t / take-01
                  :ARG0 ii
                  :ARG1 (t2 / time)
                  :purpose (l / let-know-07
                        :ARG0 ii
                        :ARG1 (e / everyone
                              :ARG1-of (k / know-01
                                    :ARG0 ii
                                    :ARG1-of (p / possible-01)))
                        :ARG2 (t3 / thing
                              :ARG2-of (t4 / treat-01
                                    :ARG0 (t5 / they)
                                    :ARG1 (c2 / customer)
                                    :time (o / once
                                          :op1 (h / have-03
                                                :ARG0 t5
                                                :ARG1 (m / money
                                                      :poss (y / you)))))))
                  :condition (w / want-01
                        :polarity -
                        :ARG0 t5
                        :ARG1 (t6 / take-01
                              :ARG0 t5
                              :ARG1 (t7 / time)
                              :purpose (f2 / fix-02
                                    :ARG0 t5
                                    :ARG1 (f3 / fence
                                          :ARG1-of (ii2 / install-01
                                                :ARG0 t5))))))))

# ::snt The salatim salads are the smallest plates I've ever seen placed in front of me (you would most likely think they were condiments if it weren't explained to you) .
(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG1 (p / plate
                  :ARG1-of (s / see-01
                        :ARG0 (ii / i)
                        :time (e / ever))
                  :domain (s2 / salad
                        :mod (s3 / salatim))
                  :ARG1-of (p2 / place-01
                        :ARG2 (ii2 / in-front-of
                              :op1 ii)))
            :ARG2 (s4 / small)
            :ARG3 (m2 / most))
      :snt2 (l / likely-01
            :ARG1 (t / think-01
                  :ARG0 (y / you)
                  :ARG1 (c / condiment
                        :domain s2)
                  :condition (e2 / explain-01
                        :polarity -
                        :ARG1 (ii3 / it)
                        :ARG2 y))
            :ARG2-of (h2 / have-degree-91
                  :ARG1 t
                  :ARG3 (m3 / most))))

# ::snt The duck was a 65% glob of chewy fat with no resemblance to the juicy, crispy delicacy it usually represents at other establishments .
(g / glob
      :consist-of (f / fat
            :ARG1-of (c / chewy-03))
      :domain (d / duck)
      :mod (p / percentage-entity
            :value 65)
      :ARG1-of (r / resemble-01
            :polarity -
            :ARG2 (d2 / delicacy
                  :mod (j / juicy)
                  :mod (c2 / crispy)
                  :ARG1-of (r2 / represent-01
                        :ARG0 d
                        :location (e / establishment
                              :mod (o / other))
                        :mod (u / usual)))))

# ::snt Somehow, since she supposedly doesn't know any names of designers/dresses, after I told her the designer and dress name of the one I was comparing, she knew "exactly which dress" I was referring to and disagreed with my observation; she said that the bodice did come as low as the one I had on .
(a / and
      :op1 (c / cause-01
            :ARG0 (k / know-01
                  :polarity -
                  :ARG0 (s / she)
                  :ARG1 (t / thing
                        :ARG2-of (n / name-01
                              :ARG1 (s2 / slash
                                    :op1 (p / person
                                          :ARG0-of (d / design-01))
                                    :op2 (d2 / dress))))
                  :ARG1-of (s3 / suppose-01))
            :ARG1 (a2 / and
                  :op1 (k2 / know-01
                        :ARG0 s
                        :ARG1 (d3 / dress
                              :ARG1-of (r / refer-03
                                    :ARG0 (ii / i))
                              :mod (e / exact)))
                  :op2 (d4 / disagree-01
                        :ARG0 s
                        :ARG1 ii
                        :ARG2 (t2 / thing
                              :ARG1-of (o / observe-01
                                    :ARG0 ii)))
                  :time (a3 / after
                        :op1 (t3 / tell-01
                              :ARG0 ii
                              :ARG1 (a4 / and
                                    :op1 (t4 / thing
                                          :ARG2-of (n2 / name-01
                                                :ARG1 p
                                                :ARG0-of (d5 / design-01))))
                              :op2 (t5 / thing
                                    :ARG2-of (n3 / name-01
                                          :ARG1 (d6 / dress
                                                :ARG1-of (c2 / compare-01
                                                      :ARG0 ii)))))
                        :ARG2 s))
            :mod (s4 / somehow))
      :op2 (s5 / say-01
            :ARG0 s
            :ARG1 (c3 / come-04
                  :ARG1 (b / bodice)
                  :ARG2 (l / low-04
                        :ARG1 b
                        :ARG2-of (h / have-degree-91
                              :ARG1 b
                              :ARG3 (e2 / equal)
                              :ARG4 (b2 / bodice
                                    :ARG1-of (w / wear-01
                                          :ARG0 ii)))))))

# ::snt Unless you want to take the "tell the customer how wrong she is and try and force her into a dress she's obviously not loving" approach which will likely get you... uh... nowhere .
(h / have-condition-91
      :ARG2 (w / want-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (a / approach-02
                  :ARG0 y
                  :ARG1 (a2 / and
                        :op1 (t / tell-01
                              :ARG0 y
                              :ARG1 (w2 / wrong-04
                                    :ARG1 (c / customer)
                                    :degree (s / so))
                              :ARG2 c)
                        :op2 (t2 / try-01
                              :ARG0 y
                              :ARG1 (f / force-01
                                    :ARG0 y
                                    :ARG1 c
                                    :ARG2 (d / dress
                                          :ARG1-of (l / love-01
                                                :polarity -
                                                :ARG0 c
                                                :ARG1-of (o / obvious-01))))))
                  :ARG0-of (g / get-05
                        :ARG1 y
                        :ARG2 (n / nowhere)
                        :ARG1-of (l2 / likely-01)))))

# ::snt I felt very much like Wedding Gallery was being dishonest and I wouldn't trust them to lace me up in another gown let alone trust them with the gown I will wear on the most important day of my life .
(f / feel-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (h / honest-01
                  :polarity -
                  :ARG0 (c / company
                        :name (n / name
                              :op1 "Wedding"
                              :op2 "Gallery")))
            :op2 (t / trust-02
                  :polarity -
                  :ARG0 ii
                  :ARG1 (l / lace-up-02
                        :ARG0 c
                        :ARG1 ii
                        :ARG2 (g / gown
                              :mod (a2 / another)))
                  :ARG2 c
                  :concession (t2 / trust-02
                        :ARG0 ii
                        :ARG1 (g2 / gown
                              :ARG1-of (w / wear-01
                                    :ARG0 ii
                                    :time (d / day
                                          :ARG1-of (h2 / have-degree-91
                                                :ARG2 (ii2 / important-01
                                                      :ARG1 d)
                                                :ARG3 (m / most)
                                                :ARG5 (l2 / life
                                                      :poss ii)))))
                        :ARG2 c
                        :mod (l3 / let-alone))))
      :mod (m2 / much
            :degree (v / very)))

# ::snt I would not have gone back, but I couldn't find the particular tire they'd used in stock anywhere else .
(c / contrast-01
      :ARG1 (g / go-back-19
            :polarity -
            :ARG1 (ii / i))
      :ARG2 (p / possible-01
            :polarity -
            :ARG1 (f / find-01
                  :ARG0 ii
                  :ARG1 (t / tire
                        :mod (p2 / particular)
                        :ARG1-of (u / use-01
                              :ARG0 (t2 / they))
                        :ARG1-of (s / stock-01
                              :ARG0 t2
                              :location (a / anywhere
                                    :mod (e / else)))))))

# ::snt I will never return there again (and now have some serious doubts about the quality of work they actually performed on my car) .
(a / and
      :op1 (r / return-01
            :polarity -
            :ARG1 (ii / i)
            :ARG4 (t / there)
            :time (e / ever)
            :mod (a2 / again))
      :op2 (d / doubt-01
            :ARG0 ii
            :ARG1 (q / quality
                  :poss (w / work-01
                        :ARG0 (t2 / they)
                        :ARG1 (c / car
                              :poss ii)
                        :ARG1-of (a3 / actual-02)))
            :ARG1-of (s / serious-02)
            :time (n / now)
            :quant (s2 / some)))

